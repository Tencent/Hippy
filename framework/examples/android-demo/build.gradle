apply plugin: 'com.android.application'

Properties gradleProperties = new Properties()
def propFileDir = "$projectDir.absolutePath/../../android/gradle.properties"
def propFile = new File(propFileDir)
def verifyReleaseAar = false
def include_abi_armeabi_v7a = true
def include_abi_arm64_v8a = true
def include_abi_x86 = true
def include_abi_x86_64 = true
if (propFile.exists()) {
    gradleProperties.load(propFile.newDataInputStream())
    include_abi_armeabi_v7a = gradleProperties.getProperty('INCLUDE_ABI_ARMEABI_V7A')
    include_abi_arm64_v8a = gradleProperties.getProperty('INCLUDE_ABI_ARM64_V8A')
    include_abi_x86 = gradleProperties.getProperty('INCLUDE_ABI_X86')
    include_abi_x86_64 = gradleProperties.getProperty('INCLUDE_ABI_X86_64')
}

android {
    compileSdkVersion COMPILE_VERSION as int
    defaultConfig {
        applicationId "com.tencent.mtt.hippy.example"
        minSdkVersion MIN_VERSION as int
        // noinspection ExpiredTargetSdkVersion
        //noinspection OldTargetApi
        targetSdkVersion TARGET_VERSION as int
        ndk  {
            if (include_abi_armeabi_v7a.toBoolean()) {
                abiFilters 'armeabi-v7a'
            }
            if (include_abi_arm64_v8a.toBoolean()) {
                abiFilters 'arm64-v8a'
            }
            if (include_abi_x86.toBoolean()) {
                abiFilters 'x86'
            }
            if (include_abi_x86_64.toBoolean()) {
                abiFilters 'x86_64'
            }

        }
    }

    signingConfigs {
        release {
            keyAlias 'key0'
            keyPassword 'hippydemokeypass!'
            storeFile file('./hippydemo.jks')
            storePassword 'hippydemostorepass!'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
        }
    }
}

dependencies {
    if (verifyReleaseAar) {
        // options for maven packages or local libs integration
        // api 'com.tencent.hippy:hippy-common:2.11.2'
        // api 'com.tencent.hippy:hippy-debug:2.11.2'
        api fileTree(dir: 'libs', include: ['*.aar'])
    } else {
        api project(path: ':hippy-framework')
        compileOnly project(path: ':hippy-support')
        compileOnly project(path: ':renderer-native')
    }
    // noinspection GradleDependency
    api deps.annotation
    api 'androidx.legacy:legacy-support-v4:1.0.0'
    api 'androidx.appcompat:appcompat:1.3.1'
    api 'androidx.recyclerview:recyclerview:1.1.0'
    api 'androidx.viewpager:viewpager:1.0.0'
}

project.afterEvaluate {
    delete 'src/main/assets'
    copy{
        from "res"
        into "src/main/assets"
    }
}
