
include 'connector-support'
project(':connector-support').projectDir = new File('framework/android/connector/support')

include 'connector-dom'
project(':connector-dom').projectDir = new File('framework/android/connector/dom')

include 'renderer-native'
project(':renderer-native').projectDir = new File('renderer/native/android')

include 'hippy-support'
project(':hippy-support').projectDir = new File('modules/android/hippy_support')

include 'hippy-framework'
project(':hippy-framework').projectDir = new File('framework/android')

include 'serialization'
project(':serialization').projectDir = new File('modules/android/serialization')

include 'vfs'
project(':vfs').projectDir = new File('modules/vfs/android')

include 'devtools-integration'
project(':devtools-integration').projectDir = new File('devtools/devtools-integration/android')

include 'example'
project(':example').projectDir = new File('framework/examples/android-demo')

def modules = MODULES.substring(1, MODULES.length() - 1).split(',')
for (String module : modules) {
    if (module.matches("^[a-zA-Z]:/.*") || module.matches("^/.*")) {
        ArrayList<String> paths = module.split('/')
        paths.remove(0)
        def subProjectName = paths.join('-')
        include "$subProjectName"
        project(":$subProjectName").projectDir = new File(module)
    } else {
        def subProjectName = 'connector-' + module.replace("/", "-")
        def projectPath = 'framework/android/connector/' + module
        include "$subProjectName"
        project(":$subProjectName").projectDir = new File(projectPath)
    }
}

