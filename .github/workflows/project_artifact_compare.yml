name: "[project] artifact compare"

on:
  workflow_dispatch:
    inputs:
      git_ref_a:
        description: 'Git Ref A'
        type: string
        required: true
      git_ref_b:
        description: 'Git Ref B'
        type: string
        required: true
      is_compare_for_android:
        description: 'Compare for Android artifact'
        type: boolean
        default: true
        required: true
      is_compare_for_ios:
        description: 'Compare for iOS artifact'
        type: boolean
        default: false
        required: true

jobs:
  android:
    if: ${{ github.event.inputs.is_compare_for_android == 'true' }}
    runs-on: ${{ github.repository == 'Tencent/Hippy' && fromJson('[''self-hosted'', ''linux'']') || 'ubuntu-latest' }}
    container:
      image: ghcr.io/tencent/android-release:latest # repository name must be lowercase(${{ github.repository_owner }})
    strategy:
      matrix:
        ref: ${{ fromJSON(format('[''{0}'', ''{1}'']', github.event.inputs.git_ref_a, github.event.inputs.git_ref_b)) }}
        include:
          - ref: ${{ github.event.inputs.git_ref_a }}
            source: ref_a
          - ref: ${{ github.event.inputs.git_ref_b }}
            source: ref_b
    outputs:
      ref_a: ${{ steps.get_size.outputs.ref_a }}
      ref_b: ${{ steps.get_size.outputs.ref_b }}
      artifact: Android(android-sdk.aar)
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ matrix.ref }}
        lfs: true
    - name: Build
      run: |
        ./gradlew assembleRelease -PINCLUDE_ABI_X86=true -PINCLUDE_ABI_X86_64=true
    - name: Size
      id: get_size
      run: |
        echo "${{ matrix.source }}=$(ls -l ./android/sdk/build/outputs/aar/android-sdk.aar | awk '{print $5}')" >> $GITHUB_OUTPUT

  ios:
    if: ${{ github.event.inputs.is_compare_for_ios == 'true' }}
    runs-on: macos-latest
    strategy:
      matrix:
        ref: ${{ fromJSON(format('[''{0}'', ''{1}'']', github.event.inputs.git_ref_a, github.event.inputs.git_ref_b)) }}
        include:
          - ref: ${{ github.event.inputs.git_ref_a }}
            source: ref_a
          - ref: ${{ github.event.inputs.git_ref_b }}
            source: ref_b
    outputs:
      ref_a: ${{ steps.get_size.outputs.ref_a }}
      ref_b: ${{ steps.get_size.outputs.ref_b }}
      artifact: iOS(libhippy.a)
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ matrix.ref }}
        lfs: true
    - name: Build
      run: |
        echo "Stub"
    - name: Size
      id: get_size
      run: |
        echo "${{ matrix.source }}=1" >> $GITHUB_OUTPUT

  collector:
    needs: [ android, ios ]
    if: ${{ always() && contains(needs.*.result, 'success') && !(contains(needs.*.result, 'failure')) }}
    runs-on: ubuntu-latest
    steps:
    - name: Summary
      shell: python
      run: |
        from os import getenv
        from json import loads

        def sizeof_fmt(num):
          if num == 0:
            return "0"
          for unit in ["", "K", "M", "G", "T", "P", "E", "Z"]:
              if abs(num) < 1024.0:
                  return f"{num:3.2f}{unit}"
              num /= 1024.0
          return f"{num:.1f}Yi"

        def delta(a, b):
          num = a - b
          return "$$\color{%s}{%s%s (%s)}$$" % ("red" if num > 0 else "green", "+" if num > 0 else "", sizeof_fmt(num), "%.2f\\\\%%" % abs(num / a * 100))

        json = loads("""${{ toJSON(needs.*.outputs) }}""")
        with open(getenv("GITHUB_STEP_SUMMARY"), 'w', encoding='utf-8') as file:
          for result in json:
            if "artifact" in result:
              ref_a = int(result["ref_a"])
              ref_b = int(result["ref_b"])
              file.write("## %s Artifact Compare\n" % result["artifact"])
              file.write("| Ref  | Size | Delta |\n")
              file.write("|------|------|-------|\n")
              file.write("| %s   | %s   | %s    |\n" % ("${{ github.event.inputs.git_ref_a }}", sizeof_fmt(ref_a), delta(ref_a, ref_b)))
              file.write("| %s   | %s   | %s    |\n" % ("${{ github.event.inputs.git_ref_b }}", sizeof_fmt(ref_b), delta(ref_b, ref_a)))
              file.write("\n")
