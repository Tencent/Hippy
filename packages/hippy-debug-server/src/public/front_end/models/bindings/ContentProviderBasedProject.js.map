{"version":3,"file":"ContentProviderBasedProject.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/ContentProviderBasedProject.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js'; // eslint-disable-line no-unused-vars\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as TextUtils from '../text_utils/text_utils.js'; // eslint-disable-line no-unused-vars\nimport * as Workspace from '../workspace/workspace.js';\n\nconst UIStrings = {\n  /**\n  * @description Error message that is displayed in the Sources panel when can't be loaded.\n  */\n  unknownErrorLoadingFile: 'Unknown error loading file',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/ContentProviderBasedProject.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\ninterface UISourceCodeData {\n  mimeType: string;\n  metadata: Workspace.UISourceCode.UISourceCodeMetadata|null;\n}\n\nexport class ContentProviderBasedProject extends Workspace.Workspace.ProjectStore implements\n    Workspace.Workspace.Project {\n  _contentProviders: Map<string, TextUtils.ContentProvider.ContentProvider>;\n  _isServiceProject: boolean;\n  _uiSourceCodeToData: WeakMap<Workspace.UISourceCode.UISourceCode, UISourceCodeData>;\n  constructor(\n      workspace: Workspace.Workspace.WorkspaceImpl, id: string, type: Workspace.Workspace.projectTypes,\n      displayName: string, isServiceProject: boolean) {\n    super(workspace, id, type, displayName);\n    this._contentProviders = new Map();\n    this._isServiceProject = isServiceProject;\n    this._uiSourceCodeToData = new WeakMap();\n    workspace.addProject(this);\n  }\n\n  async requestFileContent(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<TextUtils.ContentProvider.DeferredContent> {\n    const contentProvider =\n        (this._contentProviders.get(uiSourceCode.url()) as TextUtils.ContentProvider.ContentProvider);\n    try {\n      const [content, isEncoded] =\n          await Promise.all([contentProvider.requestContent(), contentProvider.contentEncoded()]);\n      return {content: content.content, isEncoded, error: 'error' in content && content.error || ''};\n    } catch (err) {\n      // TODO(rob.paveza): CRBug 1013683 - Consider propagating exceptions full-stack\n      return {\n        content: null,\n        isEncoded: false,\n        error: err ? String(err) : i18nString(UIStrings.unknownErrorLoadingFile),\n      };\n    }\n  }\n\n  isServiceProject(): boolean {\n    return this._isServiceProject;\n  }\n\n  async requestMetadata(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<Workspace.UISourceCode.UISourceCodeMetadata|null> {\n    const {metadata} = (this._uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData);\n    return metadata;\n  }\n\n  canSetFileContent(): boolean {\n    return false;\n  }\n\n  async setFileContent(_uiSourceCode: Workspace.UISourceCode.UISourceCode, _newContent: string, _isBase64: boolean):\n      Promise<void> {\n  }\n\n  fullDisplayName(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    let parentPath = uiSourceCode.parentURL().replace(/^(?:https?|file)\\:\\/\\//, '');\n    try {\n      parentPath = decodeURI(parentPath);\n    } catch (e) {\n    }\n    return parentPath + '/' + uiSourceCode.displayName(true);\n  }\n\n  mimeType(uiSourceCode: Workspace.UISourceCode.UISourceCode): string {\n    const {mimeType} = (this._uiSourceCodeToData.get(uiSourceCode) as UISourceCodeData);\n    return mimeType;\n  }\n\n  canRename(): boolean {\n    return false;\n  }\n\n  rename(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, newName: string,\n      callback:\n          (arg0: boolean, arg1?: string|undefined, arg2?: string|undefined,\n           arg3?: Common.ResourceType.ResourceType|undefined) => void): void {\n    const path = uiSourceCode.url();\n    this.performRename(path, newName, innerCallback.bind(this));\n\n    function innerCallback(this: ContentProviderBasedProject, success: boolean, newName?: string): void {\n      if (success && newName) {\n        const copyOfPath = path.split('/');\n        copyOfPath[copyOfPath.length - 1] = newName;\n        const newPath = copyOfPath.join('/');\n        const contentProvider = (this._contentProviders.get(path) as TextUtils.ContentProvider.ContentProvider);\n        this._contentProviders.set(newPath, contentProvider);\n        this._contentProviders.delete(path);\n        this.renameUISourceCode(uiSourceCode, newName);\n      }\n      callback(success, newName);\n    }\n  }\n\n  excludeFolder(_path: string): void {\n  }\n\n  canExcludeFolder(_path: string): boolean {\n    return false;\n  }\n\n  async createFile(_path: string, _name: string|null, _content: string, _isBase64?: boolean):\n      Promise<Workspace.UISourceCode.UISourceCode|null> {\n    return null;\n  }\n\n  canCreateFile(): boolean {\n    return false;\n  }\n\n  deleteFile(_uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n  }\n\n  remove(): void {\n  }\n\n  performRename(path: string, newName: string, callback: (arg0: boolean, arg1?: string|undefined) => void): void {\n    callback(false);\n  }\n\n  searchInFileContent(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, query: string, caseSensitive: boolean,\n      isRegex: boolean): Promise<TextUtils.ContentProvider.SearchMatch[]> {\n    const contentProvider =\n        (this._contentProviders.get(uiSourceCode.url()) as TextUtils.ContentProvider.ContentProvider);\n    return contentProvider.searchInContent(query, caseSensitive, isRegex);\n  }\n\n  async findFilesMatchingSearchRequest(\n      searchConfig: Workspace.Workspace.ProjectSearchConfig, filesMathingFileQuery: string[],\n      progress: Common.Progress.Progress): Promise<string[]> {\n    const result: string[] = [];\n    progress.setTotalWork(filesMathingFileQuery.length);\n    await Promise.all(filesMathingFileQuery.map(searchInContent.bind(this)));\n    progress.done();\n    return result;\n\n    async function searchInContent(this: ContentProviderBasedProject, path: string): Promise<void> {\n      const contentProvider = (this._contentProviders.get(path) as TextUtils.ContentProvider.ContentProvider);\n      let allMatchesFound = true;\n      for (const query of searchConfig.queries().slice()) {\n        const searchMatches =\n            await contentProvider.searchInContent(query, !searchConfig.ignoreCase(), searchConfig.isRegex());\n        if (!searchMatches.length) {\n          allMatchesFound = false;\n          break;\n        }\n      }\n      if (allMatchesFound) {\n        result.push(path);\n      }\n      progress.worked(1);\n    }\n  }\n\n  indexContent(progress: Common.Progress.Progress): void {\n    Promise.resolve().then(progress.done.bind(progress));\n  }\n\n  addUISourceCodeWithProvider(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, contentProvider: TextUtils.ContentProvider.ContentProvider,\n      metadata: Workspace.UISourceCode.UISourceCodeMetadata|null, mimeType: string): void {\n    this._contentProviders.set(uiSourceCode.url(), contentProvider);\n    this._uiSourceCodeToData.set(uiSourceCode, {mimeType, metadata});\n    this.addUISourceCode(uiSourceCode);\n  }\n\n  addContentProvider(url: string, contentProvider: TextUtils.ContentProvider.ContentProvider, mimeType: string):\n      Workspace.UISourceCode.UISourceCode {\n    const uiSourceCode = this.createUISourceCode(url, contentProvider.contentType());\n    this.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n    return uiSourceCode;\n  }\n\n  removeFile(path: string): void {\n    this._contentProviders.delete(path);\n    this.removeUISourceCode(path);\n  }\n\n  reset(): void {\n    this._contentProviders.clear();\n    this.removeProject();\n    this.workspace().addProject(this);\n  }\n\n  dispose(): void {\n    this._contentProviders.clear();\n    this.removeProject();\n  }\n}\n"]}