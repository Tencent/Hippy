{"version":3,"file":"IgnoreListManager.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/IgnoreListManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport type {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js'; // eslint-disable-line no-unused-vars\n\nlet ignoreListManagerInstance: IgnoreListManager;\n\nexport class IgnoreListManager implements SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  _debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  _listeners: Set<() => void>;\n  _isIgnoreListedURLCache: Map<string, boolean>;\n\n  private constructor(debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this._debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.GlobalObjectCleared,\n        this._clearCacheIfNeeded.bind(this), this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('skipStackFramesPattern')\n        .addChangeListener(this._patternChanged.bind(this));\n    Common.Settings.Settings.instance()\n        .moduleSetting('skipContentScripts')\n        .addChangeListener(this._patternChanged.bind(this));\n\n    this._listeners = new Set();\n\n    this._isIgnoreListedURLCache = new Map();\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.DebuggerModel.DebuggerModel, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    debuggerWorkspaceBinding: DebuggerWorkspaceBinding|null,\n  } = {forceNew: null, debuggerWorkspaceBinding: null}): IgnoreListManager {\n    const {forceNew, debuggerWorkspaceBinding} = opts;\n    if (!ignoreListManagerInstance || forceNew) {\n      if (!debuggerWorkspaceBinding) {\n        throw new Error(\n            `Unable to create settings: targetManager, workspace, and debuggerWorkspaceBinding must be provided: ${\n                new Error().stack}`);\n      }\n\n      ignoreListManagerInstance = new IgnoreListManager(debuggerWorkspaceBinding);\n    }\n\n    return ignoreListManagerInstance;\n  }\n\n  addChangeListener(listener: () => void): void {\n    this._listeners.add(listener);\n  }\n\n  removeChangeListener(listener: () => void): void {\n    this._listeners.delete(listener);\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    this._setIgnoreListPatterns(debuggerModel);\n    const sourceMapManager = debuggerModel.sourceMapManager();\n    sourceMapManager.addEventListener(SDK.SourceMapManager.Events.SourceMapAttached, this._sourceMapAttached, this);\n    sourceMapManager.addEventListener(SDK.SourceMapManager.Events.SourceMapDetached, this._sourceMapDetached, this);\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    this._clearCacheIfNeeded();\n    const sourceMapManager = debuggerModel.sourceMapManager();\n    sourceMapManager.removeEventListener(SDK.SourceMapManager.Events.SourceMapAttached, this._sourceMapAttached, this);\n    sourceMapManager.removeEventListener(SDK.SourceMapManager.Events.SourceMapDetached, this._sourceMapDetached, this);\n  }\n\n  _clearCacheIfNeeded(): void {\n    if (this._isIgnoreListedURLCache.size > 1024) {\n      this._isIgnoreListedURLCache.clear();\n    }\n  }\n\n  _getSkipStackFramesPatternSetting(): Common.Settings.RegExpSetting {\n    return /** @type {!Common.Settings.RegExpSetting} */ Common.Settings.Settings.instance().moduleSetting(\n               'skipStackFramesPattern') as Common.Settings.RegExpSetting;\n  }\n\n  _setIgnoreListPatterns(debuggerModel: SDK.DebuggerModel.DebuggerModel): Promise<boolean> {\n    const regexPatterns = this._getSkipStackFramesPatternSetting().getAsArray();\n    const patterns = ([] as string[]);\n    for (const item of regexPatterns) {\n      if (!item.disabled && item.pattern) {\n        patterns.push(item.pattern);\n      }\n    }\n    return debuggerModel.setBlackboxPatterns(patterns);\n  }\n\n  isIgnoreListedUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    const projectType = uiSourceCode.project().type();\n    const isContentScript = projectType === Workspace.Workspace.projectTypes.ContentScripts;\n    if (isContentScript && Common.Settings.Settings.instance().moduleSetting('skipContentScripts').get()) {\n      return true;\n    }\n    const url = this._uiSourceCodeURL(uiSourceCode);\n    return url ? this.isIgnoreListedURL(url) : false;\n  }\n\n  isIgnoreListedURL(url: string, isContentScript?: boolean): boolean {\n    if (this._isIgnoreListedURLCache.has(url)) {\n      return Boolean(this._isIgnoreListedURLCache.get(url));\n    }\n    if (isContentScript && Common.Settings.Settings.instance().moduleSetting('skipContentScripts').get()) {\n      return true;\n    }\n    const regex = this._getSkipStackFramesPatternSetting().asRegExp();\n    const isIgnoreListed = (regex && regex.test(url)) || false;\n    this._isIgnoreListedURLCache.set(url, isIgnoreListed);\n    return isIgnoreListed;\n  }\n\n  _sourceMapAttached(event: Common.EventTarget.EventTargetEvent): void {\n    const script = (event.data.client as SDK.Script.Script);\n    const sourceMap = (event.data.sourceMap as SDK.SourceMap.SourceMap);\n    this._updateScriptRanges(script, sourceMap);\n  }\n\n  _sourceMapDetached(event: Common.EventTarget.EventTargetEvent): void {\n    const script = (event.data.client as SDK.Script.Script);\n    this._updateScriptRanges(script, null);\n  }\n\n  async _updateScriptRanges(script: SDK.Script.Script, sourceMap: SDK.SourceMap.SourceMap|null): Promise<void> {\n    let hasIgnoreListedMappings = false;\n    if (!IgnoreListManager.instance().isIgnoreListedURL(script.sourceURL, script.isContentScript())) {\n      hasIgnoreListedMappings = sourceMap ? sourceMap.sourceURLs().some(url => this.isIgnoreListedURL(url)) : false;\n    }\n    if (!hasIgnoreListedMappings) {\n      if (scriptToRange.get(script) && await script.setBlackboxedRanges([])) {\n        scriptToRange.delete(script);\n      }\n      await this._debuggerWorkspaceBinding.updateLocations(script);\n      return;\n    }\n\n    if (!sourceMap) {\n      return;\n    }\n\n    const mappings = sourceMap.mappings();\n    const newRanges: SourceRange[] = [];\n    if (mappings.length > 0) {\n      let currentIgnoreListed = false;\n      if (mappings[0].lineNumber !== 0 || mappings[0].columnNumber !== 0) {\n        newRanges.push({lineNumber: 0, columnNumber: 0});\n        currentIgnoreListed = true;\n      }\n      for (const mapping of mappings) {\n        if (mapping.sourceURL && currentIgnoreListed !== this.isIgnoreListedURL(mapping.sourceURL)) {\n          newRanges.push({lineNumber: mapping.lineNumber, columnNumber: mapping.columnNumber});\n          currentIgnoreListed = !currentIgnoreListed;\n        }\n      }\n    }\n\n    const oldRanges = scriptToRange.get(script) || [];\n    if (!isEqual(oldRanges, newRanges) && await script.setBlackboxedRanges(newRanges)) {\n      scriptToRange.set(script, newRanges);\n    }\n    this._debuggerWorkspaceBinding.updateLocations(script);\n\n    function isEqual(rangesA: SourceRange[], rangesB: SourceRange[]): boolean {\n      if (rangesA.length !== rangesB.length) {\n        return false;\n      }\n      for (let i = 0; i < rangesA.length; ++i) {\n        if (rangesA[i].lineNumber !== rangesB[i].lineNumber || rangesA[i].columnNumber !== rangesB[i].columnNumber) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  _uiSourceCodeURL(uiSourceCode: Workspace.UISourceCode.UISourceCode): string|null {\n    return uiSourceCode.project().type() === Workspace.Workspace.projectTypes.Debugger ? null : uiSourceCode.url();\n  }\n\n  canIgnoreListUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    const url = this._uiSourceCodeURL(uiSourceCode);\n    return url ? Boolean(this._urlToRegExpString(url)) : false;\n  }\n\n  ignoreListUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const url = this._uiSourceCodeURL(uiSourceCode);\n    if (url) {\n      this._ignoreListURL(url);\n    }\n  }\n\n  unIgnoreListUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const url = this._uiSourceCodeURL(uiSourceCode);\n    if (url) {\n      this._unIgnoreListURL(url);\n    }\n  }\n\n  ignoreListContentScripts(): void {\n    Common.Settings.Settings.instance().moduleSetting('skipContentScripts').set(true);\n  }\n\n  unIgnoreListContentScripts(): void {\n    Common.Settings.Settings.instance().moduleSetting('skipContentScripts').set(false);\n  }\n\n  _ignoreListURL(url: string): void {\n    const regexPatterns = this._getSkipStackFramesPatternSetting().getAsArray();\n    const regexValue = this._urlToRegExpString(url);\n    if (!regexValue) {\n      return;\n    }\n    let found = false;\n    for (let i = 0; i < regexPatterns.length; ++i) {\n      const item = regexPatterns[i];\n      if (item.pattern === regexValue) {\n        item.disabled = false;\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      regexPatterns.push({pattern: regexValue, disabled: undefined});\n    }\n    this._getSkipStackFramesPatternSetting().setAsArray(regexPatterns);\n  }\n\n  _unIgnoreListURL(url: string): void {\n    let regexPatterns = this._getSkipStackFramesPatternSetting().getAsArray();\n    const regexValue = IgnoreListManager.instance()._urlToRegExpString(url);\n    if (!regexValue) {\n      return;\n    }\n    regexPatterns = regexPatterns.filter(function(item) {\n      return item.pattern !== regexValue;\n    });\n    for (let i = 0; i < regexPatterns.length; ++i) {\n      const item = regexPatterns[i];\n      if (item.disabled) {\n        continue;\n      }\n      try {\n        const regex = new RegExp(item.pattern);\n        if (regex.test(url)) {\n          item.disabled = true;\n        }\n      } catch (e) {\n      }\n    }\n    this._getSkipStackFramesPatternSetting().setAsArray(regexPatterns);\n  }\n\n  async _patternChanged(): Promise<void> {\n    this._isIgnoreListedURLCache.clear();\n\n    const promises: Promise<unknown>[] = [];\n    for (const debuggerModel of SDK.TargetManager.TargetManager.instance().models(SDK.DebuggerModel.DebuggerModel)) {\n      promises.push(this._setIgnoreListPatterns(debuggerModel));\n      const sourceMapManager = debuggerModel.sourceMapManager();\n      for (const script of debuggerModel.scripts()) {\n        promises.push(this._updateScriptRanges(script, sourceMapManager.sourceMapForClient(script)));\n      }\n    }\n    await Promise.all(promises);\n    const listeners = Array.from(this._listeners);\n    for (const listener of listeners) {\n      listener();\n    }\n    this._patternChangeFinishedForTests();\n  }\n\n  _patternChangeFinishedForTests(): void {\n    // This method is sniffed in tests.\n  }\n\n  _urlToRegExpString(url: string): string {\n    const parsedURL = new Common.ParsedURL.ParsedURL(url);\n    if (parsedURL.isAboutBlank() || parsedURL.isDataURL()) {\n      return '';\n    }\n    if (!parsedURL.isValid) {\n      return '^' + Platform.StringUtilities.escapeForRegExp(url) + '$';\n    }\n    let name: string = parsedURL.lastPathComponent;\n    if (name) {\n      name = '/' + name;\n    } else if (parsedURL.folderPathComponents) {\n      name = parsedURL.folderPathComponents + '/';\n    }\n    if (!name) {\n      name = parsedURL.host;\n    }\n    if (!name) {\n      return '';\n    }\n    const scheme = parsedURL.scheme;\n    let prefix = '';\n    if (scheme && scheme !== 'http' && scheme !== 'https') {\n      prefix = '^' + scheme + '://';\n      if (scheme === 'chrome-extension') {\n        prefix += parsedURL.host + '\\\\b';\n      }\n      prefix += '.*';\n    }\n    return prefix + Platform.StringUtilities.escapeForRegExp(name) + (url.endsWith(name) ? '$' : '\\\\b');\n  }\n}\nexport interface SourceRange {\n  lineNumber: number;\n  columnNumber: number;\n}\n\nconst scriptToRange = new WeakMap<SDK.Script.Script, SourceRange[]>();\n"]}