{"version":3,"file":"NetworkProject.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/NetworkProject.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,uDAAuD;AAEvD,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAG7C,MAAM,4BAA4B,GAAG,IAAI,OAAO,EAGM,CAAC;AACvD,MAAM,kBAAkB,GAAG,IAAI,OAAO,EAAkD,CAAC;AAEzF,IAAI,6BAAoD,CAAC;AAEzD,MAAM,OAAO,qBAAsB,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAa;IAC3E;QACE,KAAK,EAAE,CAAC;IACV,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,EAAC,QAAQ,KAErB,EAAC,QAAQ,EAAE,KAAK,EAAC;QACnB,IAAI,CAAC,6BAA6B,IAAI,QAAQ,EAAE;YAC9C,6BAA6B,GAAG,IAAI,qBAAqB,EAAE,CAAC;SAC7D;QAED,OAAO,6BAA6B,CAAC;IACvC,CAAC;CACF;AAED,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,qBAAqB,EAAE,MAAM,CAAC,uBAAuB,CAAC;IACtD,uBAAuB,EAAE,MAAM,CAAC,yBAAyB,CAAC;CAC3D,CAAC;AAEF,MAAM,OAAO,cAAc;IACzB,MAAM,CAAC,aAAa,CAAC,YAAiD,EAAE,OAAe;QAErF,MAAM,MAAM,GAAG,cAAc,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAClE,MAAM,iBAAiB,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAC1F,OAAO,iBAAiB,CAAC,CAAC,CAAC,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IAC1E,CAAC;IAED,MAAM,CAAC,0BAA0B,CAAC,YAAiD,EAAE,OAAe;QAClG,MAAM,KAAK,GAAG,cAAc,CAAC,aAAa,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QACD,MAAM,WAAW,GAAG,IAAI,GAAG,EAGvB,CAAC;QACL,WAAW,CAAC,GAAG,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC,CAAC;QACnD,4BAA4B,CAAC,GAAG,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;IAC9D,CAAC;IAED,MAAM,CAAC,4BAA4B,CAC/B,gBAAqD,EACrD,cAAmD;QACrD,MAAM,eAAe,GAAG,4BAA4B,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC3E,IAAI,CAAC,eAAe,EAAE;YACpB,OAAO;SACR;QACD,MAAM,aAAa,GAAG,IAAI,GAAG,EAGzB,CAAC;QACL,KAAK,MAAM,OAAO,IAAI,eAAe,CAAC,IAAI,EAAE,EAAE;YAC5C,MAAM,KAAK,GAAG,eAAe,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAChC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,EAAC,KAAK,EAAE,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,EAAC,CAAC,CAAC;aACtE;SACF;QACD,4BAA4B,CAAC,GAAG,CAAC,cAAc,EAAE,aAAa,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,YAAiD,EAAE,OAAe;QAC3F,MAAM,KAAK,GAAG,cAAc,CAAC,aAAa,CAAC,YAAY,EAAE,OAAO,CAAC,CAAC;QAClE,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QACD,MAAM,gBAAgB,GAAG,4BAA4B,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACxE,IAAI,CAAC,gBAAgB,EAAE;YACrB,OAAO;SACR;QACD,MAAM,eAAe,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAC,CAAC;QAClF,eAAe,CAAC,KAAK,IAAI,CAAC,CAAC;QAC3B,gBAAgB,CAAC,GAAG,CAAC,OAAO,EAAE,eAAe,CAAC,CAAC;QAC/C,IAAI,eAAe,CAAC,KAAK,KAAK,CAAC,EAAE;YAC/B,OAAO;SACR;QAED,MAAM,IAAI,GAAG,EAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC;QACxD,qBAAqB,CAAC,QAAQ,EAAE,CAAC,wBAAwB,CAAC,MAAM,CAAC,qBAAqB,EAAE,IAAI,CAAC,CAAC;IAChG,CAAC;IAED,MAAM,CAAC,sBAAsB,CAAC,YAAiD,EAAE,OAAe;QAC9F,MAAM,gBAAgB,GAAG,4BAA4B,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACxE,IAAI,CAAC,gBAAgB,EAAE;YACrB,OAAO;SACR;QACD,MAAM,eAAe,GAAG,gBAAgB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtD,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,8CAA8C,GAAG,YAAY,CAAC,GAAG,EAAE,CAAC,CAAC;QAC9G,IAAI,CAAC,eAAe,EAAE;YACpB,OAAO;SACR;QACD,eAAe,CAAC,KAAK,IAAI,CAAC,CAAC;QAC3B,IAAI,eAAe,CAAC,KAAK,GAAG,CAAC,EAAE;YAC7B,OAAO;SACR;QACD,gBAAgB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QACjC,MAAM,IAAI,GAAG,EAAC,YAAY,EAAE,YAAY,EAAE,KAAK,EAAE,eAAe,CAAC,KAAK,EAAC,CAAC;QACxE,qBAAqB,CAAC,QAAQ,EAAE,CAAC,wBAAwB,CAAC,MAAM,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;IAClG,CAAC;IAED,MAAM,CAAC,qBAAqB,CAAC,YAAiD;QAC5E,OAAO,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC,IAAI,IAAI,CAAC;IAChE,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,OAAoC,EAAE,MAAyB;QACxF,kBAAkB,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IAC1C,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,OAAoC;QAC7D,OAAO,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,qBAAqB,CAAC,YAAiD;QAE5E,MAAM,MAAM,GAAG,cAAc,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;QAClE,MAAM,iBAAiB,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAC1F,MAAM,WAAW,GAAG,4BAA4B,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACnE,IAAI,CAAC,iBAAiB,IAAI,CAAC,WAAW,EAAE;YACtC,OAAO,EAAE,CAAC;SACX;QACD,MAAM,MAAM,GAAG,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,iBAAiB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QACpG,OAAO,+DAA+D,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,CAC/D,CAAC;IAChD,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as Workspace from '../workspace/workspace.js'; // eslint-disable-line no-unused-vars\n\nconst uiSourceCodeToAttributionMap = new WeakMap<Workspace.UISourceCode.UISourceCode, Map<string, {\n                                                   frame: SDK.ResourceTreeModel.ResourceTreeFrame,\n                                                   count: number,\n                                                 }>>();\nconst projectToTargetMap = new WeakMap<Workspace.Workspace.Project, SDK.Target.Target>();\n\nlet networkProjectManagerInstance: NetworkProjectManager;\n\nexport class NetworkProjectManager extends Common.ObjectWrapper.ObjectWrapper {\n  private constructor() {\n    super();\n  }\n\n  static instance({forceNew}: {\n    forceNew: boolean,\n  } = {forceNew: false}): NetworkProjectManager {\n    if (!networkProjectManagerInstance || forceNew) {\n      networkProjectManagerInstance = new NetworkProjectManager();\n    }\n\n    return networkProjectManagerInstance;\n  }\n}\n\nexport const Events = {\n  FrameAttributionAdded: Symbol('FrameAttributionAdded'),\n  FrameAttributionRemoved: Symbol('FrameAttributionRemoved'),\n};\n\nexport class NetworkProject {\n  static _resolveFrame(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: string):\n      SDK.ResourceTreeModel.ResourceTreeFrame|null {\n    const target = NetworkProject.targetForUISourceCode(uiSourceCode);\n    const resourceTreeModel = target && target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    return resourceTreeModel ? resourceTreeModel.frameForId(frameId) : null;\n  }\n\n  static setInitialFrameAttribution(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: string): void {\n    const frame = NetworkProject._resolveFrame(uiSourceCode, frameId);\n    if (!frame) {\n      return;\n    }\n    const attribution = new Map<string, {\n      frame: SDK.ResourceTreeModel.ResourceTreeFrame,\n      count: number,\n    }>();\n    attribution.set(frameId, {frame: frame, count: 1});\n    uiSourceCodeToAttributionMap.set(uiSourceCode, attribution);\n  }\n\n  static cloneInitialFrameAttribution(\n      fromUISourceCode: Workspace.UISourceCode.UISourceCode,\n      toUISourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const fromAttribution = uiSourceCodeToAttributionMap.get(fromUISourceCode);\n    if (!fromAttribution) {\n      return;\n    }\n    const toAttribution = new Map<string, {\n      frame: SDK.ResourceTreeModel.ResourceTreeFrame,\n      count: number,\n    }>();\n    for (const frameId of fromAttribution.keys()) {\n      const value = fromAttribution.get(frameId);\n      if (typeof value !== 'undefined') {\n        toAttribution.set(frameId, {frame: value.frame, count: value.count});\n      }\n    }\n    uiSourceCodeToAttributionMap.set(toUISourceCode, toAttribution);\n  }\n\n  static addFrameAttribution(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: string): void {\n    const frame = NetworkProject._resolveFrame(uiSourceCode, frameId);\n    if (!frame) {\n      return;\n    }\n    const frameAttribution = uiSourceCodeToAttributionMap.get(uiSourceCode);\n    if (!frameAttribution) {\n      return;\n    }\n    const attributionInfo = frameAttribution.get(frameId) || {frame: frame, count: 0};\n    attributionInfo.count += 1;\n    frameAttribution.set(frameId, attributionInfo);\n    if (attributionInfo.count !== 1) {\n      return;\n    }\n\n    const data = {uiSourceCode: uiSourceCode, frame: frame};\n    NetworkProjectManager.instance().dispatchEventToListeners(Events.FrameAttributionAdded, data);\n  }\n\n  static removeFrameAttribution(uiSourceCode: Workspace.UISourceCode.UISourceCode, frameId: string): void {\n    const frameAttribution = uiSourceCodeToAttributionMap.get(uiSourceCode);\n    if (!frameAttribution) {\n      return;\n    }\n    const attributionInfo = frameAttribution.get(frameId);\n    console.assert(Boolean(attributionInfo), 'Failed to remove frame attribution for url: ' + uiSourceCode.url());\n    if (!attributionInfo) {\n      return;\n    }\n    attributionInfo.count -= 1;\n    if (attributionInfo.count > 0) {\n      return;\n    }\n    frameAttribution.delete(frameId);\n    const data = {uiSourceCode: uiSourceCode, frame: attributionInfo.frame};\n    NetworkProjectManager.instance().dispatchEventToListeners(Events.FrameAttributionRemoved, data);\n  }\n\n  static targetForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Target.Target|null {\n    return projectToTargetMap.get(uiSourceCode.project()) || null;\n  }\n\n  static setTargetForProject(project: Workspace.Workspace.Project, target: SDK.Target.Target): void {\n    projectToTargetMap.set(project, target);\n  }\n\n  static getTargetForProject(project: Workspace.Workspace.Project): SDK.Target.Target|null {\n    return projectToTargetMap.get(project) || null;\n  }\n\n  static framesForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      SDK.ResourceTreeModel.ResourceTreeFrame[] {\n    const target = NetworkProject.targetForUISourceCode(uiSourceCode);\n    const resourceTreeModel = target && target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    const attribution = uiSourceCodeToAttributionMap.get(uiSourceCode);\n    if (!resourceTreeModel || !attribution) {\n      return [];\n    }\n    const frames = Array.from(attribution.keys()).map(frameId => resourceTreeModel.frameForId(frameId));\n    return /** @type {!Array<!SDK.ResourceTreeModel.ResourceTreeFrame>} */ frames.filter(frame => Boolean(frame)) as\n        SDK.ResourceTreeModel.ResourceTreeFrame[];\n  }\n}\n"]}