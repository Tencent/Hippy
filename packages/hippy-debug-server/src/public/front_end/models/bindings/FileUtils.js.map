{"version":3,"file":"FileUtils.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/FileUtils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAKH,OAAO,KAAK,SAAS,MAAM,2BAA2B,CAAC;AAwBvD,MAAM,OAAO,iBAAiB;IAC5B,KAAK,CAAY;IACjB,SAAS,CAAS;IAClB,WAAW,CAAS;IACpB,aAAa,CAAwC;IACrD,UAAU,CAAS;IACnB,yBAAyB,CAA4C;IACrE,QAAQ,CAAc;IACtB,WAAW,CAAU;IACrB,MAAM,CAAgB;IACtB,iBAAiB,CAA2B;IAC5C,OAAO,CAA0C;IACjD,OAAO,CAAmB;IAE1B,YAAY,IAAU,EAAE,SAAiB,EAAE,wBAA0D;QACnG,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;QACrB,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,yBAAyB,GAAG,wBAAwB,CAAC;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,WAAW,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,MAA8C;QACvD,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,IAAI,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACrC,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;YAC3D,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,OAAO,GAAG,IAAI,UAAU,EAAE,CAAC;YAChC,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrD,IAAI,CAAC,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACjD;QAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,iBAAiB,GAAG,OAAO,CAAC;QACnC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAC1B,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,QAAQ;QACN,OAAO,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO,EAAE,CAAC;SACX;QACD,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;IACzB,CAAC;IAED,KAAK;QACH,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,yEAAyE;IACzE,iBAAiB,CAAC,MAAsB;QACtC,MAAM,EAAE,GAAG,IAAI,mBAAmB,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,mBAAmB,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QACnD,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAED,cAAc,CAAC,KAAY;QACzB,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO;SACR;QAED,MAAM,WAAW,GAAI,KAAK,CAAC,MAAqB,CAAC;QACjD,IAAI,WAAW,CAAC,UAAU,KAAK,UAAU,CAAC,IAAI,EAAE;YAC9C,OAAO;SACR;QAED,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QAED,MAAM,MAAM,GAAI,IAAI,CAAC,OAAO,CAAC,MAAsB,CAAC;QACpD,IAAI,CAAC,WAAW,IAAI,MAAM,CAAC,UAAU,CAAC;QACtC,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,SAAS,CAAC;QACtD,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IAC7C,CAAC;IAED,KAAK,CAAC,kBAAkB,CAAC,MAAmB,EAAE,SAAkB;QAC9D,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,EAAC,MAAM,EAAE,CAAC,SAAS,EAAC,CAAC,CAAC;QACzE,MAAM,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QACxC,IAAI,IAAI,CAAC,WAAW,EAAE;YACpB,OAAO;SACR;QACD,IAAI,IAAI,CAAC,yBAAyB,EAAE;YAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;SACtC;QAED,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,WAAW,EAAE,CAAC;YACnB,OAAO;SACR;QACD,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,CAAC;IAED,KAAK,CAAC,UAAU;QACd,IAAI,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YAChC,OAAO;SACR;QACD,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,MAAM,EAAC,KAAK,EAAE,IAAI,EAAC,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;YACtD,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBAClB,OAAO,IAAI,CAAC,WAAW,EAAE,CAAC;aAC3B;YACD,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;SAC9C;QACD,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,MAAM,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC;YACpC,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YACxE,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACxD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,QAAQ,CAAC,CAAC;SAC1C;IACH,CAAC;IAED,QAAQ,CAAC,KAAY;QACnB,MAAM,WAAW,GAAI,KAAK,CAAC,MAAqB,CAAC;QACjD,IAAI,CAAC,MAAM,GAAI,WAAW,CAAC,KAAkB,CAAC;QAC9C,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;IAChC,CAAC;CACF;AAED,MAAM,OAAO,gBAAgB;IAC3B,eAAe,CAAiB;IAChC,SAAS,CAAU;IACnB,OAAO,CAAW;IAClB;QACE,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;IAC5B,CAAC;IAED,KAAK,CAAC,IAAI,CAAC,QAAgB;QACzB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,sCAAsC;QACtC,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,MAAM,YAAY,GAAG,MAAM,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC;QACvG,IAAI,YAAY,EAAE;YAChB,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACzD,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;SAC3E;QACD,OAAO,OAAO,CAAC,YAAY,CAAC,CAAC;IAC/B,CAAC;IAED,KAAK,CAAC,IAAY;QAChB,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QAC5E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,KAAK;QACT,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YAC/B,OAAO;SACR;QACD,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAC5D,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC1E,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;IAED,aAAa,CAAC,KAA0C;QACtD,IAAI,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,EAAE;YACjC,OAAO;SACR;QACD,MAAM,aAAa,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;QACnD,IAAI,aAAa,EAAE;YACjB,aAAa,EAAE,CAAC;SACjB;QACD,IAAI,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YAC/B,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;YACjB,OAAO;SACR;QACD,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAC5D,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QAC1E,SAAS,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACrE,CAAC;CACF","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js'; // eslint-disable-line no-unused-vars\nimport * as Workspace from '../workspace/workspace.js';\n\n/**\n * @interface\n */\nexport interface ChunkedReader {\n  fileSize(): number;\n\n  loadedSize(): number;\n\n  fileName(): string;\n\n  cancel(): void;\n\n  error(): DOMError|null;\n}\ninterface DecompressionStream extends GenericTransformStream {\n  readonly format: string;\n}\ndeclare const DecompressionStream: {\n  prototype: DecompressionStream,\n  new (format: string): DecompressionStream,\n};\n\nexport class ChunkedFileReader implements ChunkedReader {\n  _file: File|null;\n  _fileSize: number;\n  _loadedSize: number;\n  _streamReader: ReadableStreamReader<Uint8Array>|null;\n  _chunkSize: number;\n  _chunkTransferredCallback: ((arg0: ChunkedReader) => void)|undefined;\n  _decoder: TextDecoder;\n  _isCanceled: boolean;\n  _error: DOMError|null;\n  _transferFinished!: (arg0: boolean) => void;\n  _output?: Common.StringOutputStream.OutputStream;\n  _reader?: FileReader|null;\n\n  constructor(file: File, chunkSize: number, chunkTransferredCallback?: ((arg0: ChunkedReader) => void)) {\n    this._file = file;\n    this._fileSize = file.size;\n    this._loadedSize = 0;\n    this._chunkSize = chunkSize;\n    this._chunkTransferredCallback = chunkTransferredCallback;\n    this._decoder = new TextDecoder();\n    this._isCanceled = false;\n    this._error = null;\n    this._streamReader = null;\n  }\n\n  async read(output: Common.StringOutputStream.OutputStream): Promise<boolean> {\n    if (this._chunkTransferredCallback) {\n      this._chunkTransferredCallback(this);\n    }\n\n    if (this._file?.type.endsWith('gzip')) {\n      const stream = this._decompressStream(this._file.stream());\n      this._streamReader = stream.getReader();\n    } else {\n      this._reader = new FileReader();\n      this._reader.onload = this._onChunkLoaded.bind(this);\n      this._reader.onerror = this._onError.bind(this);\n    }\n\n    this._output = output;\n    this._loadChunk();\n\n    return new Promise(resolve => {\n      this._transferFinished = resolve;\n    });\n  }\n\n  cancel(): void {\n    this._isCanceled = true;\n  }\n\n  loadedSize(): number {\n    return this._loadedSize;\n  }\n\n  fileSize(): number {\n    return this._fileSize;\n  }\n\n  fileName(): string {\n    if (!this._file) {\n      return '';\n    }\n    return this._file.name;\n  }\n\n  error(): DOMError|null {\n    return this._error;\n  }\n\n  // Decompress gzip natively thanks to https://wicg.github.io/compression/\n  _decompressStream(stream: ReadableStream): ReadableStream {\n    const ds = new DecompressionStream('gzip');\n    const decompressionStream = stream.pipeThrough(ds);\n    return decompressionStream;\n  }\n\n  _onChunkLoaded(event: Event): void {\n    if (this._isCanceled) {\n      return;\n    }\n\n    const eventTarget = (event.target as FileReader);\n    if (eventTarget.readyState !== FileReader.DONE) {\n      return;\n    }\n\n    if (!this._reader) {\n      return;\n    }\n\n    const buffer = (this._reader.result as ArrayBuffer);\n    this._loadedSize += buffer.byteLength;\n    const endOfFile = this._loadedSize === this._fileSize;\n    this._decodeChunkBuffer(buffer, endOfFile);\n  }\n\n  async _decodeChunkBuffer(buffer: ArrayBuffer, endOfFile: boolean): Promise<void> {\n    if (!this._output) {\n      return;\n    }\n    const decodedString = this._decoder.decode(buffer, {stream: !endOfFile});\n    await this._output.write(decodedString);\n    if (this._isCanceled) {\n      return;\n    }\n    if (this._chunkTransferredCallback) {\n      this._chunkTransferredCallback(this);\n    }\n\n    if (endOfFile) {\n      this._finishRead();\n      return;\n    }\n    this._loadChunk();\n  }\n\n  _finishRead(): void {\n    if (!this._output) {\n      return;\n    }\n    this._file = null;\n    this._reader = null;\n    this._output.close();\n    this._transferFinished(!this._error);\n  }\n\n  async _loadChunk(): Promise<void> {\n    if (!this._output || !this._file) {\n      return;\n    }\n    if (this._streamReader) {\n      const {value, done} = await this._streamReader.read();\n      if (done || !value) {\n        return this._finishRead();\n      }\n      this._decodeChunkBuffer(value.buffer, false);\n    }\n    if (this._reader) {\n      const chunkStart = this._loadedSize;\n      const chunkEnd = Math.min(this._fileSize, chunkStart + this._chunkSize);\n      const nextPart = this._file.slice(chunkStart, chunkEnd);\n      this._reader.readAsArrayBuffer(nextPart);\n    }\n  }\n\n  _onError(event: Event): void {\n    const eventTarget = (event.target as FileReader);\n    this._error = (eventTarget.error as DOMError);\n    this._transferFinished(false);\n  }\n}\n\nexport class FileOutputStream implements Common.StringOutputStream.OutputStream {\n  _writeCallbacks: (() => void)[];\n  _fileName!: string;\n  _closed?: boolean;\n  constructor() {\n    this._writeCallbacks = [];\n  }\n\n  async open(fileName: string): Promise<boolean> {\n    this._closed = false;\n    /** @type {!Array<function():void>} */\n    this._writeCallbacks = [];\n    this._fileName = fileName;\n    const saveResponse = await Workspace.FileManager.FileManager.instance().save(this._fileName, '', true);\n    if (saveResponse) {\n      Workspace.FileManager.FileManager.instance().addEventListener(\n          Workspace.FileManager.Events.AppendedToURL, this._onAppendDone, this);\n    }\n    return Boolean(saveResponse);\n  }\n\n  write(data: string): Promise<void> {\n    return new Promise(resolve => {\n      this._writeCallbacks.push(resolve);\n      Workspace.FileManager.FileManager.instance().append(this._fileName, data);\n    });\n  }\n\n  async close(): Promise<void> {\n    this._closed = true;\n    if (this._writeCallbacks.length) {\n      return;\n    }\n    Workspace.FileManager.FileManager.instance().removeEventListener(\n        Workspace.FileManager.Events.AppendedToURL, this._onAppendDone, this);\n    Workspace.FileManager.FileManager.instance().close(this._fileName);\n  }\n\n  _onAppendDone(event: Common.EventTarget.EventTargetEvent): void {\n    if (event.data !== this._fileName) {\n      return;\n    }\n    const writeCallback = this._writeCallbacks.shift();\n    if (writeCallback) {\n      writeCallback();\n    }\n    if (this._writeCallbacks.length) {\n      return;\n    }\n    if (!this._closed) {\n      return;\n    }\n    Workspace.FileManager.FileManager.instance().removeEventListener(\n        Workspace.FileManager.Events.AppendedToURL, this._onAppendDone, this);\n    Workspace.FileManager.FileManager.instance().close(this._fileName);\n  }\n}\n"]}