{"version":3,"file":"DebuggerLanguagePlugins.js","sourceRoot":"","sources":["../../../../../../front_end/models/bindings/DebuggerLanguagePlugins.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {ContentProviderBasedProject} from './ContentProviderBasedProject.js';\n\nimport type {DebuggerWorkspaceBinding} from './DebuggerWorkspaceBinding.js'; // eslint-disable-line no-unused-vars\nimport {NetworkProject} from './NetworkProject.js';\n\nconst UIStrings = {\n  /**\n  *@description Error message that is displayed in the Console when language plugins report errors\n  *@example {File not found} PH1\n  */\n  errorInDebuggerLanguagePlugin: 'Error in debugger language plugin: {PH1}',\n  /**\n  *@description Status message that is shown in the Console when debugging information is being\n  *loaded. The 2nd and 3rd placeholders are URLs.\n  *@example {C/C++ DevTools Support (DWARF)} PH1\n  *@example {http://web.dev/file.wasm} PH2\n  *@example {http://web.dev/file.wasm.debug.wasm} PH3\n  */\n  loadingDebugSymbolsForVia: '[{PH1}] Loading debug symbols for {PH2} (via {PH3})...',\n  /**\n  *@description Status message that is shown in the Console when debugging information is being loaded\n  *@example {C/C++ DevTools Support (DWARF)} PH1\n  *@example {http://web.dev/file.wasm} PH2\n  */\n  loadingDebugSymbolsFor: '[{PH1}] Loading debug symbols for {PH2}...',\n  /**\n  *@description Warning message that is displayed in the Console when debugging information was loaded, but no source files were found\n  *@example {C/C++ DevTools Support (DWARF)} PH1\n  *@example {http://web.dev/file.wasm} PH2\n  */\n  loadedDebugSymbolsForButDidnt: '[{PH1}] Loaded debug symbols for {PH2}, but didn\\'t find any source files',\n  /**\n  *@description Status message that is shown in the Console when debugging information is successfully loaded\n  *@example {C/C++ DevTools Support (DWARF)} PH1\n  *@example {http://web.dev/file.wasm} PH2\n  *@example {42} PH3\n  */\n  loadedDebugSymbolsForFound: '[{PH1}] Loaded debug symbols for {PH2}, found {PH3} source file(s)',\n  /**\n  *@description Error message that is displayed in the Console when debugging information cannot be loaded\n  *@example {C/C++ DevTools Support (DWARF)} PH1\n  *@example {http://web.dev/file.wasm} PH2\n  *@example {File not found} PH3\n  */\n  failedToLoadDebugSymbolsFor: '[{PH1}] Failed to load debug symbols for {PH2} ({PH3})',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/bindings/DebuggerLanguagePlugins.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass SourceType {\n  typeInfo: TypeInfo;\n  members: SourceType[];\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeMap: Map<any, SourceType>;\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(typeInfo: TypeInfo, members: SourceType[], typeMap: Map<any, SourceType>) {\n    this.typeInfo = typeInfo;\n    this.members = members;\n    this.typeMap = typeMap;\n  }\n\n  /**\n   * Create a type graph\n   */\n  static create(typeInfos: TypeInfo[]): SourceType|null {\n    if (typeInfos.length === 0) {\n      return null;\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const typeMap = new Map<any, SourceType>();\n    for (const typeInfo of typeInfos) {\n      typeMap.set(typeInfo.typeId, new SourceType(typeInfo, [], typeMap));\n    }\n\n    for (const sourceType of typeMap.values()) {\n      sourceType.members = sourceType.typeInfo.members.map(({typeId}) => {\n        const memberType = typeMap.get(typeId);\n        if (!memberType) {\n          throw new Error(`Incomplete type information for type ${typeInfos[0].typeNames[0] || '<anonymous>'}`);\n        }\n        return memberType;\n      });\n    }\n\n    return typeMap.get(typeInfos[0].typeId) || null;\n  }\n}\n\n/**\n * Generates the raw module ID for a script, which is used\n * to uniquely identify the debugging data for a script on\n * the responsible language plugin.\n *\n * @param script the unique raw module ID for the script.\n */\nfunction rawModuleIdForScript(script: SDK.Script.Script): string {\n  return `${script.sourceURL}@${script.hash}`;\n}\n\nfunction getRawLocation(callFrame: SDK.DebuggerModel.CallFrame): RawLocation {\n  const {script} = callFrame;\n  return {\n    rawModuleId: rawModuleIdForScript(script),\n    codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n    inlineFrameIndex: callFrame.inlineFrameIndex,\n  };\n}\n\nasync function resolveRemoteObject(\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callFrame: SDK.DebuggerModel.CallFrame, object: SDK.RemoteObject.RemoteObject): Promise<any> {\n  if (typeof object.value !== 'undefined') {\n    return object.value;\n  }\n\n  const response = await callFrame.debuggerModel.target().runtimeAgent().invoke_callFunctionOn(\n      {functionDeclaration: 'function() { return this; }', objectId: object.objectId, returnByValue: true});\n  const {result} = response;\n  if (!result) {\n    return undefined;\n  }\n  return result.value;\n}\n\nexport class ValueNode extends SDK.RemoteObject.RemoteObjectImpl {\n  inspectableAddress?: number;\n  callFrame: SDK.DebuggerModel.CallFrame;\n\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, objectId: string|undefined, type: string, subtype: string|undefined,\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      value: any, inspectableAddress?: number, unserializableValue?: string, description?: string,\n      preview?: Protocol.Runtime.ObjectPreview, customPreview?: Protocol.Runtime.CustomPreview, className?: string) {\n    super(\n        callFrame.debuggerModel.runtimeModel(), objectId, type, subtype, value, unserializableValue, description,\n        preview, customPreview, className);\n\n    this.inspectableAddress = inspectableAddress;\n    this.callFrame = callFrame;\n  }\n}\n\n// Debugger language plugins present source-language values as trees with mixed dynamic and static structural\n// information. The static structure is defined by the variable's static type in the source language. Formatters are\n// able to present source-language values in an arbitrary user-friendly way, which contributes the dynamic structural\n// information. The classes StaticallyTypedValue and FormatedValueNode respectively implement the static and dynamic\n// parts in the RemoteObject tree that defines the presentation of the source-language value in the debugger UI.\n//\n// struct S {\n//   int i;\n//   struct A {\n//     int j;\n//   } a[3];\n// } s\n//\n// The RemoteObject tree representing the C struct above could look like the graph below with a formatter for the type\n// struct A[3], interleaving static and dynamic representations:\n//\n// StaticallyTypedValueNode   -->  s: struct S\n//                                 \\\n//                                 |\\\n// StaticallyTypedValueNode   -->  | i: int\n//                                 \\\n//                                  \\\n// StaticallyTypedValueNode   -->    a: struct A[3]\n//                                   \\\n//                                   |\\\n// FormattedValueNode         -->    | 0: struct A\n//                                   | \\\n//                                   |  \\\n// StaticallyTypedValueNode   -->    |   j: int\n//                                   .\n//                                   .\n//                                   .\n\n/** Create a new value tree from an expression.\n */\nasync function getValueTreeForExpression(\n    callFrame: SDK.DebuggerModel.CallFrame, plugin: DebuggerLanguagePlugin, expression: string,\n    evalOptions: SDK.RuntimeModel.EvaluationOptions): Promise<SDK.RemoteObject.RemoteObject> {\n  const location = getRawLocation(callFrame);\n\n  let typeInfo;\n  try {\n    typeInfo = await plugin.getTypeInfo(expression, location);\n  } catch (e) {\n    FormattingError.throwLocal(callFrame, e.message);\n  }\n  // If there's no type information we cannot represent this expression.\n  if (!typeInfo) {\n    return new SDK.RemoteObject.LocalJSONObject(undefined);\n  }\n  const {base, typeInfos} = typeInfo;\n  const sourceType = SourceType.create(typeInfos);\n  if (!sourceType) {\n    return new SDK.RemoteObject.LocalJSONObject(undefined);\n  }\n  if (sourceType.typeInfo.hasValue && !sourceType.typeInfo.canExpand && base) {\n    // Need to run the formatter for the expression result.\n    return formatSourceValue(callFrame, plugin, sourceType, base, [], evalOptions);\n  }\n\n  // Create a new value tree with static information for the root.\n  const address = await StaticallyTypedValueNode.getInspectableAddress(callFrame, plugin, base, [], evalOptions);\n  return new StaticallyTypedValueNode(callFrame, plugin, sourceType, base, [], evalOptions, address);\n}\n\n/** Run the formatter for the value defined by the pair of base and fieldChain.\n */\nasync function formatSourceValue(\n    callFrame: SDK.DebuggerModel.CallFrame, plugin: DebuggerLanguagePlugin, sourceType: SourceType, base: EvalBase,\n    field: FieldInfo[], evalOptions: SDK.RuntimeModel.EvaluationOptions): Promise<FormattedValueNode> {\n  const location = getRawLocation(callFrame);\n\n  let evalCode: {\n    js: string,\n  }|({\n    js: string,\n  } | null) = await plugin.getFormatter({base, field}, location);\n  if (!evalCode) {\n    evalCode = {js: ''};\n  }\n  const response = await callFrame.debuggerModel.target().debuggerAgent().invoke_evaluateOnCallFrame({\n    callFrameId: callFrame.id,\n    expression: evalCode.js,\n    objectGroup: evalOptions.objectGroup,\n    includeCommandLineAPI: evalOptions.includeCommandLineAPI,\n    silent: evalOptions.silent,\n    returnByValue: evalOptions.returnByValue,\n    generatePreview: evalOptions.generatePreview,\n    throwOnSideEffect: evalOptions.throwOnSideEffect,\n    timeout: evalOptions.timeout,\n  });\n  const error = response.getError();\n  if (error) {\n    throw new Error(error);\n  }\n\n  const {result, exceptionDetails} = response;\n  if (exceptionDetails) {\n    throw new FormattingError(callFrame.debuggerModel.runtimeModel().createRemoteObject(result), exceptionDetails);\n  }\n  // Wrap the formatted result into a FormattedValueNode.\n  const object = new FormattedValueNode(callFrame, sourceType, plugin, result, null, evalOptions, undefined);\n  // Check whether the formatter returned a plain object or and object alongisde a formatter tag.\n  const unpackedResultObject = await unpackResultObject(object);\n  const node = unpackedResultObject || object;\n\n  if (typeof node.value === 'undefined' && node.type !== 'undefined') {\n    node.description = sourceType.typeInfo.typeNames[0];\n  }\n\n  return node;\n\n  async function unpackResultObject(object: FormattedValueNode): Promise<FormattedValueNode|null> {\n    const {tag, value, inspectableAddress} = await object.findProperties('tag', 'value', 'inspectableAddress');\n    if (!tag || !value) {\n      return null;\n    }\n    const {className, symbol} = await tag.findProperties('className', 'symbol');\n    if (!className || !symbol) {\n      return null;\n    }\n    const resolvedClassName = className.value;\n    if (typeof resolvedClassName !== 'string' || typeof symbol.objectId === 'undefined') {\n      return null;\n    }\n\n    value.formatterTag = {symbol: symbol.objectId, className: resolvedClassName};\n    value.inspectableAddress = inspectableAddress ? inspectableAddress.value : undefined;\n    return value;\n  }\n}\n\n// Formatters produce proper JavaScript objects, which are mirrored as RemoteObjects. To implement interleaving of\n// formatted and statically typed values, formatters may insert markers in the JavaScript objects. The markers contain\n// the static type information (`EvalBase`)to create a new StaticallyTypedValueNode tree root. Markers are identified by\n// their className and the presence of a special Symbol property. Both the class name and the symbol are defined by the\n// `formatterTag` property.\n//\n// A FormattedValueNode is a RemoteObject whose properties can be either FormattedValueNodes or\n// StaticallyTypedValueNodes. The class hooks into the creation of RemoteObjects for properties to check whether a\n// property is a marker.\nclass FormattedValueNode extends ValueNode {\n  _plugin: DebuggerLanguagePlugin;\n  _sourceType: SourceType;\n  formatterTag: {\n    className: string,\n    symbol: string,\n  }|null;\n  _evalOptions: SDK.RuntimeModel.EvaluationOptions;\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, sourceType: SourceType, plugin: DebuggerLanguagePlugin,\n      object: Protocol.Runtime.RemoteObject, formatterTag: {\n        className: string,\n        symbol: string,\n      }|null,\n      evalOptions: SDK.RuntimeModel.EvaluationOptions, inspectableAddress: number|undefined) {\n    super(\n        callFrame, object.objectId, object.type, object.subtype, object.value, inspectableAddress,\n        object.unserializableValue, object.description, object.preview, object.customPreview, object.className);\n\n    this._plugin = plugin;\n    this._sourceType = sourceType;\n\n    // The tag describes how to identify a marker by its className and its identifier symbol's object id.\n    this.formatterTag = formatterTag;\n\n    this._evalOptions = evalOptions;\n  }\n\n  async findProperties(...properties: string[]): Promise<{\n    [x: string]: FormattedValueNode | undefined,\n  }> {\n    const result: {\n      [x: string]: FormattedValueNode|undefined,\n    } = {};\n    for (const prop of (await this.getOwnProperties(false)).properties || []) {\n      if (properties.indexOf(prop.name) >= 0) {\n        if (prop.value) {\n          result[prop.name] = (prop.value as FormattedValueNode | undefined);\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Hook into RemoteObject creation for properties to check whether a property is a marker.\n   */\n  async _createRemoteObject(newObject: Protocol.Runtime.RemoteObject):\n      Promise<FormattedValueNode|StaticallyTypedValueNode> {\n    // Check if the property RemoteObject is a marker\n    const base = await this._getEvalBaseFromObject(newObject);\n    if (!base) {\n      return new FormattedValueNode(\n          this.callFrame, this._sourceType, this._plugin, newObject, this.formatterTag, this._evalOptions, undefined);\n    }\n\n    // Property is a marker, check if it's just static type information or if we need to run formatters for the value.\n    const newSourceType = this._sourceType.typeMap.get(base.rootType.typeId);\n    if (!newSourceType) {\n      throw new Error('Unknown typeId in eval base');\n    }\n    // The marker refers to a value that needs to be formatted, so run the formatter.\n    if (base.rootType.hasValue && !base.rootType.canExpand && base) {\n      return formatSourceValue(this.callFrame, this._plugin, newSourceType, base, [], this._evalOptions);\n    }\n\n    // The marker is just static information, so start a new subtree with a static type info root.\n    const address =\n        await StaticallyTypedValueNode.getInspectableAddress(this.callFrame, this._plugin, base, [], this._evalOptions);\n    return new StaticallyTypedValueNode(\n        this.callFrame, this._plugin, newSourceType, base, [], this._evalOptions, address);\n  }\n\n  /**\n   * Check whether an object is a marker and if so return the EvalBase it contains.\n   */\n  async _getEvalBaseFromObject(object: Protocol.Runtime.RemoteObject): Promise<EvalBase|null> {\n    const {objectId} = object;\n    if (!object || !this.formatterTag) {\n      return null;\n    }\n\n    // A marker is definitively identified by the symbol property. To avoid checking the properties of all objects,\n    // check the className first for an early exit.\n    const {className, symbol} = this.formatterTag;\n    if (className !== object.className) {\n      return null;\n    }\n\n    const response = await this.debuggerModel().target().runtimeAgent().invoke_callFunctionOn(\n        {functionDeclaration: 'function(sym) { return this[sym]; }', objectId, arguments: [{objectId: symbol}]});\n    const {result} = response;\n    if (!result || result.type === 'undefined') {\n      return null;\n    }\n\n    // The object is a marker, so pull the static type information from its symbol property. The symbol property is not\n    // a formatted value per se, but we wrap it as one to be able to call `findProperties`.\n    const baseObject = new FormattedValueNode(\n        this.callFrame, this._sourceType, this._plugin, result, null, this._evalOptions, undefined);\n    const {payload, rootType} = await baseObject.findProperties('payload', 'rootType');\n    if (typeof payload === 'undefined' || typeof rootType === 'undefined') {\n      return null;\n    }\n    const value = await resolveRemoteObject(this.callFrame, payload);\n    const {typeId} = await rootType.findProperties('typeId');\n    if (typeof value === 'undefined' || typeof typeId === 'undefined') {\n      return null;\n    }\n\n    const newSourceType = this._sourceType.typeMap.get(typeId.value);\n    if (!newSourceType) {\n      return null;\n    }\n\n    return {payload: value, rootType: newSourceType.typeInfo};\n  }\n}\n\nclass FormattingError extends Error {\n  exception: SDK.RemoteObject.RemoteObject;\n  exceptionDetails: Protocol.Runtime.ExceptionDetails;\n  constructor(exception: SDK.RemoteObject.RemoteObject, exceptionDetails: Protocol.Runtime.ExceptionDetails) {\n    const {description} = exceptionDetails.exception || {};\n    super(description || exceptionDetails.text);\n    this.exception = exception;\n    this.exceptionDetails = exceptionDetails;\n  }\n\n  static throwLocal(callFrame: SDK.DebuggerModel.CallFrame, message: string): void {\n    const exception: Protocol.Runtime.RemoteObject = {\n      type: Protocol.Runtime.RemoteObjectType.Object,\n      subtype: Protocol.Runtime.RemoteObjectSubtype.Error,\n      description: message,\n    };\n    const exceptionDetails: Protocol.Runtime\n        .ExceptionDetails = {text: 'Uncaught', exceptionId: -1, columnNumber: 0, lineNumber: 0, exception};\n    const errorObject = callFrame.debuggerModel.runtimeModel().createRemoteObject(exception);\n    throw new FormattingError(errorObject, exceptionDetails);\n  }\n}\n\n// This class implements a `RemoteObject` for source language value whose immediate properties are defined purely by\n// static type information. Static type information is expressed by an `EvalBase` together with a `fieldChain`. The\n// latter is necessary to express navigating through type members. We don't know how to make sense of an `EvalBase`'s\n// payload here, which is why member navigation is relayed to the formatter via the `fieldChain`.\nclass StaticallyTypedValueNode extends ValueNode {\n  _variableType: string;\n  _plugin: DebuggerLanguagePlugin;\n  _sourceType: SourceType;\n  _base: EvalBase|null;\n  _fieldChain: FieldInfo[];\n  _hasChildren: boolean;\n  _evalOptions: SDK.RuntimeModel.EvaluationOptions;\n\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, plugin: DebuggerLanguagePlugin, sourceType: SourceType,\n      base: EvalBase|null, fieldChain: FieldInfo[], evalOptions: SDK.RuntimeModel.EvaluationOptions,\n      inspectableAddress: number|undefined) {\n    const typeName = sourceType.typeInfo.typeNames[0] || '<anonymous>';\n    const variableType = 'object';\n    super(\n        callFrame,\n        /* objectId=*/ undefined,\n        /* type=*/ variableType,\n        /* subtype=*/ undefined, /* value=*/ null, inspectableAddress, /* unserializableValue=*/ undefined,\n        /* description=*/ typeName, /* preview=*/ undefined, /* customPreview=*/ undefined, /* className=*/ typeName);\n    this._variableType = variableType;\n    this._plugin = plugin;\n    this._sourceType = sourceType;\n    this._base = base;\n    this._fieldChain = fieldChain;\n    this._hasChildren = true;\n    this._evalOptions = evalOptions;\n  }\n\n  get type(): string {\n    return this._variableType;\n  }\n\n  async _expandMember(sourceType: SourceType, fieldInfo: FieldInfo): Promise<SDK.RemoteObject.RemoteObject> {\n    const fieldChain = this._fieldChain.concat(fieldInfo);\n    if (sourceType.typeInfo.hasValue && !sourceType.typeInfo.canExpand && this._base) {\n      return formatSourceValue(this.callFrame, this._plugin, sourceType, this._base, fieldChain, this._evalOptions);\n    }\n\n    const address = this.inspectableAddress !== undefined ? this.inspectableAddress + fieldInfo.offset : undefined;\n    return new StaticallyTypedValueNode(\n        this.callFrame, this._plugin, sourceType, this._base, fieldChain, this._evalOptions, address);\n  }\n\n  static async getInspectableAddress(\n      callFrame: SDK.DebuggerModel.CallFrame, plugin: DebuggerLanguagePlugin, base: EvalBase|null, field: FieldInfo[],\n      evalOptions: SDK.RuntimeModel.EvaluationOptions): Promise<number|undefined> {\n    if (!base) {\n      return undefined;\n    }\n\n    const addressCode = await plugin.getInspectableAddress({base, field});\n    if (!addressCode.js) {\n      return undefined;\n    }\n    const response = await callFrame.debuggerModel.target().debuggerAgent().invoke_evaluateOnCallFrame({\n      callFrameId: callFrame.id,\n      expression: addressCode.js,\n      objectGroup: evalOptions.objectGroup,\n      includeCommandLineAPI: evalOptions.includeCommandLineAPI,\n      silent: evalOptions.silent,\n      returnByValue: true,\n      generatePreview: evalOptions.generatePreview,\n      throwOnSideEffect: evalOptions.throwOnSideEffect,\n      timeout: evalOptions.timeout,\n    });\n\n    const error = response.getError();\n    if (error) {\n      throw new Error(error);\n    }\n\n    const {result, exceptionDetails} = response;\n    if (exceptionDetails) {\n      throw new FormattingError(callFrame.debuggerModel.runtimeModel().createRemoteObject(result), exceptionDetails);\n    }\n\n    const address = result.value;\n    if (!Number.isSafeInteger(address) || address < 0) {\n      console.error(`Inspectable address is not a positive, safe integer: ${address}`);\n      return undefined;\n    }\n\n    return address;\n  }\n\n  async doGetProperties(_ownProperties: boolean, accessorPropertiesOnly: boolean, _generatePreview: boolean):\n      Promise<SDK.RemoteObject.GetPropertiesResult> {\n    const {typeInfo} = this._sourceType;\n    if (accessorPropertiesOnly || !typeInfo.canExpand) {\n      return {properties: [], internalProperties: []} as SDK.RemoteObject.GetPropertiesResult;\n    }\n\n    if (typeInfo.members.length > 0) {\n      // This value doesn't have a formatter, but we can eagerly expand arrays in the frontend if the size is known.\n      if (typeInfo.arraySize > 0) {\n        const {typeId} = this._sourceType.typeInfo.members[0];\n        const properties: SDK.RemoteObject.RemoteObjectProperty[] = [];\n        const elementTypeInfo = this._sourceType.members[0];\n        for (let i = 0; i < typeInfo.arraySize; ++i) {\n          const name = `${i}`;\n          const elementField = {name, typeId, offset: elementTypeInfo.typeInfo.size * i};\n          properties.push(new SDK.RemoteObject.RemoteObjectProperty(\n              name, await this._expandMember(elementTypeInfo, elementField), /* enumerable=*/ false,\n              /* writable=*/ false,\n              /* isOwn=*/ true,\n              /* wasThrown=*/ false));\n        }\n        return {properties, internalProperties: []} as SDK.RemoteObject.GetPropertiesResult;\n      }\n\n      // The node is expanded, just make remote objects for its members\n      const members = Promise.all(this._sourceType.members.map(async (memberTypeInfo, idx) => {\n        const fieldInfo = this._sourceType.typeInfo.members[idx];\n        const propertyObject = await this._expandMember(memberTypeInfo, fieldInfo);\n        const name = fieldInfo.name || '';\n        return new SDK.RemoteObject.RemoteObjectProperty(\n            name, propertyObject, /* enumerable=*/ false, /* writable=*/ false, /* isOwn=*/ true,\n            /* wasThrown=*/ false);\n      }));\n      return {properties: await members, internalProperties: []} as SDK.RemoteObject.GetPropertiesResult;\n    }\n\n    return {properties: [], internalProperties: []} as SDK.RemoteObject.GetPropertiesResult;\n  }\n}\n\nclass NamespaceObject extends SDK.RemoteObject.LocalJSONObject {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(value: any) {\n    super(value);\n  }\n\n  get description(): string {\n    return this.type;\n  }\n\n  get type(): string {\n    return 'namespace';\n  }\n}\n\nclass SourceScopeRemoteObject extends SDK.RemoteObject.RemoteObjectImpl {\n  variables: Variable[];\n  _callFrame: SDK.DebuggerModel.CallFrame;\n  _plugin: DebuggerLanguagePlugin;\n  _location: RawLocation;\n\n  constructor(callFrame: SDK.DebuggerModel.CallFrame, plugin: DebuggerLanguagePlugin, location: RawLocation) {\n    super(callFrame.debuggerModel.runtimeModel(), undefined, 'object', undefined, null);\n    this.variables = [];\n    this._callFrame = callFrame;\n    this._plugin = plugin;\n    this._location = location;\n  }\n\n  async doGetProperties(ownProperties: boolean, accessorPropertiesOnly: boolean, _generatePreview: boolean):\n      Promise<SDK.RemoteObject.GetPropertiesResult> {\n    if (accessorPropertiesOnly) {\n      return {properties: [], internalProperties: []} as SDK.RemoteObject.GetPropertiesResult;\n    }\n\n    const properties = [];\n    const namespaces: {\n      [x: string]: SDK.RemoteObject.RemoteObject,\n    } = {};\n\n    function makeProperty(name: string, obj: SDK.RemoteObject.RemoteObject): SDK.RemoteObject.RemoteObjectProperty {\n      return new SDK.RemoteObject.RemoteObjectProperty(\n          name, obj,\n          /* enumerable=*/ false, /* writable=*/ false, /* isOwn=*/ true, /* wasThrown=*/ false);\n    }\n\n    for (const variable of this.variables) {\n      let sourceVar;\n      try {\n        sourceVar = await getValueTreeForExpression(this._callFrame, this._plugin, variable.name, ({\n                                                      generatePreview: false,\n                                                      includeCommandLineAPI: true,\n                                                      objectGroup: 'backtrace',\n                                                      returnByValue: false,\n                                                      silent: false,\n                                                    } as SDK.RuntimeModel.EvaluationOptions));\n      } catch (e) {\n        console.warn(e);\n        sourceVar = new SDK.RemoteObject.LocalJSONObject(undefined);\n      }\n      if (variable.nestedName && variable.nestedName.length > 1) {\n        let parent: {\n          [x: string]: SDK.RemoteObject.RemoteObject,\n        } = namespaces;\n        for (let index = 0; index < variable.nestedName.length - 1; index++) {\n          const nestedName = variable.nestedName[index];\n          let child: NamespaceObject|SDK.RemoteObject.RemoteObject = parent[nestedName];\n          if (!child) {\n            child = new NamespaceObject({});\n            parent[nestedName] = child;\n          }\n          parent = child.value;\n        }\n        const name = variable.nestedName[variable.nestedName.length - 1];\n        parent[name] = sourceVar;\n      } else {\n        properties.push(makeProperty(variable.name, sourceVar));\n      }\n    }\n\n    for (const namespace in namespaces) {\n      properties.push(makeProperty(namespace, (namespaces[namespace] as SDK.RemoteObject.RemoteObject)));\n    }\n\n    return /** @type {!SDK.RemoteObject.GetPropertiesResult} */ {properties: properties, internalProperties: []} as\n        SDK.RemoteObject.GetPropertiesResult;\n  }\n}\n\nexport class SourceScope implements SDK.DebuggerModel.ScopeChainEntry {\n  _callFrame: SDK.DebuggerModel.CallFrame;\n  _type: string;\n  _typeName: string;\n  _icon: string|undefined;\n  _object: SourceScopeRemoteObject;\n  _name: string;\n  _startLocation: SDK.DebuggerModel.Location|null;\n  _endLocation: SDK.DebuggerModel.Location|null;\n  constructor(\n      callFrame: SDK.DebuggerModel.CallFrame, type: string, typeName: string, icon: string|undefined,\n      plugin: DebuggerLanguagePlugin, location: RawLocation) {\n    this._callFrame = callFrame;\n    this._type = type;\n    this._typeName = typeName;\n    this._icon = icon;\n    this._object = new SourceScopeRemoteObject(callFrame, plugin, location);\n    this._name = type;\n    this._startLocation = null;\n    this._endLocation = null;\n  }\n\n  async getVariableValue(name: string): Promise<SDK.RemoteObject.RemoteObject|null> {\n    for (let v = 0; v < this._object.variables.length; ++v) {\n      if (this._object.variables[v].name !== name) {\n        continue;\n      }\n      const properties = await this._object.getAllProperties(false, false);\n      if (!properties.properties) {\n        continue;\n      }\n      const {value} = properties.properties[v];\n      if (value) {\n        return value;\n      }\n    }\n    return null;\n  }\n\n  callFrame(): SDK.DebuggerModel.CallFrame {\n    return this._callFrame;\n  }\n\n  type(): string {\n    return this._type;\n  }\n\n  typeName(): string {\n    return this._typeName;\n  }\n\n  name(): string|undefined {\n    return undefined;\n  }\n\n  startLocation(): SDK.DebuggerModel.Location|null {\n    return this._startLocation;\n  }\n\n  endLocation(): SDK.DebuggerModel.Location|null {\n    return this._endLocation;\n  }\n\n  object(): SourceScopeRemoteObject {\n    return this._object;\n  }\n\n  description(): string {\n    return '';\n  }\n\n  icon(): string|undefined {\n    return this._icon;\n  }\n}\n\nexport class DebuggerLanguagePluginManager implements\n    SDK.TargetManager.SDKModelObserver<SDK.DebuggerModel.DebuggerModel> {\n  _workspace: Workspace.Workspace.WorkspaceImpl;\n  _debuggerWorkspaceBinding: DebuggerWorkspaceBinding;\n  _plugins: DebuggerLanguagePlugin[];\n  _debuggerModelToData: Map<SDK.DebuggerModel.DebuggerModel, ModelData>;\n  _rawModuleHandles: Map<string, {\n    rawModuleId: string,\n    plugin: DebuggerLanguagePlugin,\n    scripts: Array<SDK.Script.Script>,\n    addRawModulePromise: Promise<Array<string>>,\n  }>;\n\n  constructor(\n      targetManager: SDK.TargetManager.TargetManager, workspace: Workspace.Workspace.WorkspaceImpl,\n      debuggerWorkspaceBinding: DebuggerWorkspaceBinding) {\n    this._workspace = workspace;\n    this._debuggerWorkspaceBinding = debuggerWorkspaceBinding;\n\n    this._plugins = [];\n\n    this._debuggerModelToData = new Map();\n    targetManager.observeModels(SDK.DebuggerModel.DebuggerModel, this);\n\n    this._rawModuleHandles = new Map();\n  }\n\n  async _evaluateOnCallFrame(callFrame: SDK.DebuggerModel.CallFrame, options: SDK.RuntimeModel.EvaluationOptions):\n      Promise<{\n        object: SDK.RemoteObject.RemoteObject,\n        exceptionDetails: Protocol.Runtime.ExceptionDetails|undefined,\n      }|{\n        error: string,\n      }|null> {\n    const {script} = callFrame;\n    const {expression} = options;\n    const {plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n    const location = getRawLocation(callFrame);\n    const sourceLocations = await plugin.rawLocationToSourceLocation(location);\n    if (sourceLocations.length === 0) {\n      return null;\n    }\n\n    try {\n      const object = await getValueTreeForExpression(callFrame, plugin, expression, options);\n      return {object, exceptionDetails: undefined};\n    } catch (error) {\n      if (error instanceof FormattingError) {\n        const {exception: object, exceptionDetails} = error;\n        return {object, exceptionDetails};\n      }\n      return {error: error.message};\n    }\n  }\n\n  _expandCallFrames(callFrames: SDK.DebuggerModel.CallFrame[]): Promise<SDK.DebuggerModel.CallFrame[]> {\n    return Promise\n        .all(callFrames.map(async callFrame => {\n          const {frames} = await this.getFunctionInfo(callFrame.script, callFrame.location());\n          if (frames.length) {\n            return frames.map(({name}, index) => callFrame.createVirtualCallFrame(index, name));\n          }\n          return callFrame;\n        }))\n        .then(callFrames => callFrames.flat());\n  }\n\n  modelAdded(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    this._debuggerModelToData.set(debuggerModel, new ModelData(debuggerModel, this._workspace));\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this._globalObjectCleared, this);\n    debuggerModel.addEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this._parsedScriptSource, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(this._evaluateOnCallFrame.bind(this));\n    debuggerModel.setExpandCallFramesCallback(this._expandCallFrames.bind(this));\n  }\n\n  modelRemoved(debuggerModel: SDK.DebuggerModel.DebuggerModel): void {\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.GlobalObjectCleared, this._globalObjectCleared, this);\n    debuggerModel.removeEventListener(SDK.DebuggerModel.Events.ParsedScriptSource, this._parsedScriptSource, this);\n    debuggerModel.setEvaluateOnCallFrameCallback(null);\n    debuggerModel.setExpandCallFramesCallback(null);\n    const modelData = this._debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      modelData._dispose();\n      this._debuggerModelToData.delete(debuggerModel);\n    }\n    this._rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      const scripts = rawModuleHandle.scripts.filter(script => script.debuggerModel !== debuggerModel);\n      if (scripts.length === 0) {\n        rawModuleHandle.plugin.removeRawModule(rawModuleId).catch(error => {\n          Common.Console.Console.instance().error(\n              i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n        });\n        this._rawModuleHandles.delete(rawModuleId);\n      } else {\n        rawModuleHandle.scripts = scripts;\n      }\n    });\n  }\n\n  _globalObjectCleared(event: Common.EventTarget.EventTargetEvent): void {\n    const debuggerModel = (event.data as SDK.DebuggerModel.DebuggerModel);\n    this.modelRemoved(debuggerModel);\n    this.modelAdded(debuggerModel);\n  }\n\n  addPlugin(plugin: DebuggerLanguagePlugin): void {\n    this._plugins.push(plugin);\n    for (const debuggerModel of this._debuggerModelToData.keys()) {\n      for (const script of debuggerModel.scripts()) {\n        if (this.hasPluginForScript(script)) {\n          continue;\n        }\n        this._parsedScriptSource({data: script});\n      }\n    }\n  }\n\n  removePlugin(plugin: DebuggerLanguagePlugin): void {\n    this._plugins = this._plugins.filter(p => p !== plugin);\n    const scripts = new Set<SDK.Script.Script>();\n    this._rawModuleHandles.forEach((rawModuleHandle, rawModuleId) => {\n      if (rawModuleHandle.plugin !== plugin) {\n        return;\n      }\n      rawModuleHandle.scripts.forEach(script => scripts.add(script));\n      this._rawModuleHandles.delete(rawModuleId);\n    });\n    for (const script of scripts) {\n      const modelData = (this._debuggerModelToData.get(script.debuggerModel) as ModelData);\n      modelData._removeScript(script);\n\n      // Let's see if we have another plugin that's happy to\n      // take this orphaned script now. This is important to\n      // get right, since the same plugin might race during\n      // unregister/register and we might already have the\n      // new instance of the plugin added before we remove\n      // the previous instance.\n      this._parsedScriptSource({data: script});\n    }\n  }\n\n  hasPluginForScript(script: SDK.Script.Script): boolean {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n    return rawModuleHandle !== undefined && rawModuleHandle.scripts.includes(script);\n  }\n\n  /**\n   * Returns the responsible language plugin and the raw module ID for a script.\n   *\n   * This ensures that the `addRawModule` call finishes first such that the\n   * caller can immediately issue calls to the returned plugin without the\n   * risk of racing with the `addRawModule` call. The returned plugin will be\n   * set to undefined to indicate that there's no plugin for the script.\n   */\n  async _rawModuleIdAndPluginForScript(script: SDK.Script.Script): Promise<{\n    rawModuleId: string,\n    plugin: DebuggerLanguagePlugin|null,\n  }> {\n    const rawModuleId = rawModuleIdForScript(script);\n    const rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n    if (rawModuleHandle) {\n      await rawModuleHandle.addRawModulePromise;\n      if (rawModuleHandle === this._rawModuleHandles.get(rawModuleId)) {\n        return {rawModuleId, plugin: rawModuleHandle.plugin};\n      }\n    }\n    return {rawModuleId, plugin: null};\n  }\n\n  uiSourceCodeForURL(debuggerModel: SDK.DebuggerModel.DebuggerModel, url: string): Workspace.UISourceCode.UISourceCode\n      |null {\n    const modelData = this._debuggerModelToData.get(debuggerModel);\n    if (modelData) {\n      return modelData._project.uiSourceCodeForURL(url);\n    }\n    return null;\n  }\n\n  async rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location):\n      Promise<Workspace.UISourceCode.UILocation|null> {\n    const script = rawLocation.script();\n    if (!script) {\n      return null;\n    }\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: rawLocation.inlineFrameIndex,\n    };\n\n    try {\n      const sourceLocations = await plugin.rawLocationToSourceLocation(pluginLocation);\n      for (const sourceLocation of sourceLocations) {\n        const uiSourceCode = this.uiSourceCodeForURL(script.debuggerModel, sourceLocation.sourceFileURL);\n        if (!uiSourceCode) {\n          continue;\n        }\n        // Absence of column information is indicated by the value `-1` in talking to language plugins.\n        return uiSourceCode.uiLocation(\n            sourceLocation.lineNumber, sourceLocation.columnNumber >= 0 ? sourceLocation.columnNumber : undefined);\n      }\n    } catch (error) {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n    }\n    return null;\n  }\n\n  uiLocationToRawLocationRanges(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber: number|undefined = -1): Promise<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }[]|null> {\n    const locationPromises: Promise<{\n      start: SDK.DebuggerModel.Location,\n      end: SDK.DebuggerModel.Location,\n    }[]>[] = [];\n    this.scriptsForUISourceCode(uiSourceCode).forEach(script => {\n      const rawModuleId = rawModuleIdForScript(script);\n      const rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        return;\n      }\n      const {plugin} = rawModuleHandle;\n      locationPromises.push(getLocations(rawModuleId, plugin, script));\n    });\n    if (locationPromises.length === 0) {\n      return Promise.resolve(null);\n    }\n\n    return Promise.all(locationPromises).then(locations => locations.flat()).catch(error => {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return null;\n    });\n\n    async function getLocations(\n        rawModuleId: string, plugin: DebuggerLanguagePlugin, script: SDK.Script.Script): Promise<{\n      start: SDK.DebuggerModel.Location,\n      end: SDK.DebuggerModel.Location,\n    }[]> {\n      const pluginLocation = {rawModuleId, sourceFileURL: uiSourceCode.url(), lineNumber, columnNumber};\n\n      const rawLocations = await plugin.sourceLocationToRawLocation(pluginLocation);\n      if (!rawLocations) {\n        return [];\n      }\n      return rawLocations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    }\n  }\n\n  async uiLocationToRawLocations(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number,\n      columnNumber?: number): Promise<SDK.DebuggerModel.Location[]|null> {\n    const locationRanges = await this.uiLocationToRawLocationRanges(uiSourceCode, lineNumber, columnNumber);\n    if (!locationRanges) {\n      return null;\n    }\n    return locationRanges.map(({start}) => start);\n  }\n\n  scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    for (const modelData of this._debuggerModelToData.values()) {\n      const scripts = modelData._uiSourceCodeToScripts.get(uiSourceCode);\n      if (scripts) {\n        return scripts;\n      }\n    }\n    return [];\n  }\n\n  _parsedScriptSource(event: Common.EventTarget.EventTargetEvent): void {\n    const script = (event.data as SDK.Script.Script);\n    if (!script.sourceURL) {\n      return;\n    }\n\n    for (const plugin of this._plugins) {\n      if (!plugin.handleScript(script)) {\n        return;\n      }\n      const rawModuleId = rawModuleIdForScript(script);\n      let rawModuleHandle = this._rawModuleHandles.get(rawModuleId);\n      if (!rawModuleHandle) {\n        const sourceFileURLsPromise = (async(): Promise<string[]> => {\n          const console = Common.Console.Console.instance();\n          const url = script.sourceURL;\n          const symbolsUrl = (script.debugSymbols && script.debugSymbols.externalURL) || '';\n          if (symbolsUrl) {\n            console.log(i18nString(UIStrings.loadingDebugSymbolsForVia, {PH1: plugin.name, PH2: url, PH3: symbolsUrl}));\n          } else {\n            console.log(i18nString(UIStrings.loadingDebugSymbolsFor, {PH1: plugin.name, PH2: url}));\n          }\n          try {\n            const code = (!symbolsUrl && url.startsWith('wasm://')) ? await script.getWasmBytecode() : undefined;\n            const sourceFileURLs = await plugin.addRawModule(rawModuleId, symbolsUrl, {url, code});\n            // Check that the handle isn't stale by now. This works because the code that assigns to\n            // `rawModuleHandle` below will run before this code because of the `await` in the preceding\n            // line. This is primarily to avoid logging the message below, which would give the developer\n            // the misleading information that we're done, while in reality it was a stale call that finished.\n            if (rawModuleHandle !== this._rawModuleHandles.get(rawModuleId)) {\n              return [];\n            }\n            if (sourceFileURLs.length === 0) {\n              console.warn(i18nString(UIStrings.loadedDebugSymbolsForButDidnt, {PH1: plugin.name, PH2: url}));\n            } else {\n              console.log(i18nString(\n                  UIStrings.loadedDebugSymbolsForFound, {PH1: plugin.name, PH2: url, PH3: sourceFileURLs.length}));\n            }\n            return sourceFileURLs;\n          } catch (error) {\n            console.error(\n                i18nString(UIStrings.failedToLoadDebugSymbolsFor, {PH1: plugin.name, PH2: url, PH3: error.message}));\n            this._rawModuleHandles.delete(rawModuleId);\n            return [];\n          }\n        })();\n        rawModuleHandle = {rawModuleId, plugin, scripts: [script], addRawModulePromise: sourceFileURLsPromise};\n        this._rawModuleHandles.set(rawModuleId, rawModuleHandle);\n      } else {\n        rawModuleHandle.scripts.push(script);\n      }\n\n      // Wait for the addRawModule call to finish and\n      // update the project. It's important to check\n      // for the DebuggerModel again, which may disappear\n      // in the meantime...\n      rawModuleHandle.addRawModulePromise.then(sourceFileURLs => {\n        // The script might have disappeared meanwhile...\n        if (script.debuggerModel.scriptForId(script.scriptId) === script) {\n          const modelData = this._debuggerModelToData.get(script.debuggerModel);\n          if (modelData) {  // The DebuggerModel could have disappeared meanwhile...\n            modelData._addSourceFiles(script, sourceFileURLs);\n            this._debuggerWorkspaceBinding.updateLocations(script);\n          }\n        }\n      });\n      return;\n    }\n  }\n\n  async resolveScopeChain(callFrame: SDK.DebuggerModel.CallFrame): Promise<SourceScope[]|null> {\n    const script = callFrame.script;\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return null;\n    }\n\n    const location = {\n      rawModuleId,\n      codeOffset: callFrame.location().columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: callFrame.inlineFrameIndex,\n    };\n\n    try {\n      const sourceMapping = await plugin.rawLocationToSourceLocation(location);\n      if (sourceMapping.length === 0) {\n        return null;\n      }\n      const scopes = new Map<string, SourceScope>();\n      const variables = await plugin.listVariablesInScope(location);\n      for (const variable of variables || []) {\n        let scope = scopes.get(variable.scope);\n        if (!scope) {\n          const {type, typeName, icon} = await plugin.getScopeInfo(variable.scope);\n          scope = new SourceScope(callFrame, type, typeName, icon, plugin, location);\n          scopes.set(variable.scope, scope);\n        }\n        scope.object().variables.push(variable);\n      }\n      return Array.from(scopes.values());\n    } catch (error) {\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return null;\n    }\n  }\n\n  async getFunctionInfo(script: SDK.Script.Script, location: SDK.DebuggerModel.Location): Promise<{\n    frames: Array<FunctionInfo>,\n  }> {\n    const noDwarfInfo = {frames: []};\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return noDwarfInfo;\n    }\n\n    const rawLocation: RawLocation = {\n      rawModuleId,\n      codeOffset: location.columnNumber - (script.codeOffset() || 0),\n      inlineFrameIndex: 0,\n    };\n\n    try {\n      return await plugin.getFunctionInfo(rawLocation);\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return noDwarfInfo;\n    }\n  }\n\n  async getInlinedFunctionRanges(rawLocation: SDK.DebuggerModel.Location): Promise<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }[]> {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-ignore\n      const locations = await plugin.getInlinedFunctionRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return [];\n    }\n  }\n\n  async getInlinedCalleesRanges(rawLocation: SDK.DebuggerModel.Location): Promise<{\n    start: SDK.DebuggerModel.Location,\n    end: SDK.DebuggerModel.Location,\n  }[]> {\n    const script = rawLocation.script();\n    if (!script) {\n      return [];\n    }\n    const {rawModuleId, plugin} = await this._rawModuleIdAndPluginForScript(script);\n    if (!plugin) {\n      return [];\n    }\n\n    const pluginLocation = {\n      rawModuleId,\n      // RawLocation.columnNumber is the byte offset in the full raw wasm module. Plugins expect the offset in the code\n      // section, so subtract the offset of the code section in the module here.\n      codeOffset: rawLocation.columnNumber - (script.codeOffset() || 0),\n    };\n\n    try {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-ignore\n      const locations = await plugin.getInlinedCalleesRanges(pluginLocation);\n      return locations.map(\n          m => ({\n            start: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.startOffset) + (script.codeOffset() || 0)),\n            end: new SDK.DebuggerModel.Location(\n                script.debuggerModel, script.scriptId, 0, Number(m.endOffset) + (script.codeOffset() || 0)),\n          }));\n    } catch (error) {\n      Common.Console.Console.instance().warn(i18nString(UIStrings.errorInDebuggerLanguagePlugin, {PH1: error.message}));\n      return [];\n    }\n  }\n\n  async getMappedLines(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Set<number>|undefined> {\n    const rawModuleIds =\n        await Promise.all(this.scriptsForUISourceCode(uiSourceCode).map(s => this._rawModuleIdAndPluginForScript(s)));\n\n    let mappedLines: Set<number>|undefined;\n    for (const {rawModuleId, plugin} of rawModuleIds) {\n      if (!plugin) {\n        continue;\n      }\n      const lines = await plugin.getMappedLines(rawModuleId, uiSourceCode.url());\n\n      if (lines === undefined) {\n        continue;\n      }\n      if (mappedLines === undefined) {\n        mappedLines = new Set(lines);\n      } else {\n        /**\n         * @param {number} l\n         */\n        lines.forEach(l => (mappedLines as Set<number>).add(l));\n      }\n    }\n    return mappedLines;\n  }\n}\n\nclass ModelData {\n  _debuggerModel: SDK.DebuggerModel.DebuggerModel;\n  _project: ContentProviderBasedProject;\n  _uiSourceCodeToScripts: Map<Workspace.UISourceCode.UISourceCode, SDK.Script.Script[]>;\n  constructor(debuggerModel: SDK.DebuggerModel.DebuggerModel, workspace: Workspace.Workspace.WorkspaceImpl) {\n    this._debuggerModel = debuggerModel;\n    this._project = new ContentProviderBasedProject(\n        workspace, 'language_plugins::' + debuggerModel.target().id(), Workspace.Workspace.projectTypes.Network, '',\n        false /* isServiceProject */);\n    NetworkProject.setTargetForProject(this._project, debuggerModel.target());\n\n    this._uiSourceCodeToScripts = new Map();\n  }\n\n  _addSourceFiles(script: SDK.Script.Script, urls: string[]): void {\n    const initiator = script.createPageResourceLoadInitiator();\n    for (const url of urls) {\n      let uiSourceCode = this._project.uiSourceCodeForURL(url);\n      if (!uiSourceCode) {\n        uiSourceCode = this._project.createUISourceCode(url, Common.ResourceType.resourceTypes.SourceMapScript);\n        NetworkProject.setInitialFrameAttribution(uiSourceCode, script.frameId);\n\n        // Bind the uiSourceCode to the script first before we add the\n        // uiSourceCode to the project and thereby notify the rest of\n        // the system about the new source file.\n        // https://crbug.com/1150295 is an example where the breakpoint\n        // resolution logic kicks in right after adding the uiSourceCode\n        // and at that point we already need to have the mapping in place\n        // otherwise we will not get the breakpoint right.\n        this._uiSourceCodeToScripts.set(uiSourceCode, [script]);\n\n        const contentProvider = new SDK.CompilerSourceMappingContentProvider.CompilerSourceMappingContentProvider(\n            url, Common.ResourceType.resourceTypes.SourceMapScript, initiator);\n        const mimeType = Common.ResourceType.ResourceType.mimeFromURL(url) || 'text/javascript';\n        this._project.addUISourceCodeWithProvider(uiSourceCode, contentProvider, null, mimeType);\n      } else {\n        // The same uiSourceCode can be provided by different scripts,\n        // but we don't expect that to happen frequently.\n        const scripts = (this._uiSourceCodeToScripts.get(uiSourceCode) as SDK.Script.Script[]);\n        if (!scripts.includes(script)) {\n          scripts.push(script);\n        }\n      }\n    }\n  }\n\n  _removeScript(script: SDK.Script.Script): void {\n    this._uiSourceCodeToScripts.forEach((scripts, uiSourceCode) => {\n      scripts = scripts.filter(s => s !== script);\n      if (scripts.length === 0) {\n        this._uiSourceCodeToScripts.delete(uiSourceCode);\n        this._project.removeUISourceCode(uiSourceCode.url());\n      } else {\n        this._uiSourceCodeToScripts.set(uiSourceCode, scripts);\n      }\n    });\n  }\n\n  _dispose(): void {\n    this._project.dispose();\n  }\n}\nexport interface RawModule {\n  url: string;\n  code?: ArrayBuffer;\n}\nexport interface RawLocationRange {\n  rawModuleId: string;\n  startOffset: number;\n  endOffset: number;\n}\nexport interface RawLocation {\n  rawModuleId: string;\n  codeOffset: number;\n  inlineFrameIndex: number;\n}\nexport interface SourceLocation {\n  rawModuleId: string;\n  sourceFileURL: string;\n  lineNumber: number;\n  columnNumber: number;\n}\nexport interface Variable {\n  scope: string;\n  name: string;\n  type: string;\n  nestedName: string[]|null;\n}\nexport interface VariableValue {\n  value: string|VariableValue[];\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  js_type: string;\n  type: string;\n  name: string;\n}\nexport interface EvaluatorModule {\n  code?: ArrayBuffer;\n  constantValue?: VariableValue;\n}\nexport interface ScopeInfo {\n  type: string;\n  typeName: string;\n  icon?: string;\n}\nexport interface FunctionInfo {\n  name: string;\n}\nexport interface FieldInfo {\n  name?: string;\n  offset: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeId: any;\n}\nexport interface TypeInfo {\n  typeNames: string[];\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  typeId: any;\n  members: FieldInfo[];\n  alignment: number;\n  arraySize: number;\n  size: number;\n  canExpand: boolean;\n  hasValue: boolean;\n}\nexport interface EvalBase {\n  rootType: TypeInfo;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  payload: any;\n}\n\nexport class DebuggerLanguagePlugin {\n  name: string;\n  constructor(name: string) {\n    this.name = name;\n  }\n\n  handleScript(_script: SDK.Script.Script): boolean {\n    throw new Error('Not implemented yet');\n  }\n\n  dispose(): void {\n  }\n\n  /** Notify the plugin about a new script\n    */\n  async addRawModule(_rawModuleId: string, _symbolsURL: string, _rawModule: RawModule): Promise<string[]> {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Find locations in raw modules from a location in a source file\n    */\n  async sourceLocationToRawLocation(_sourceLocation: SourceLocation): Promise<RawLocationRange[]> {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Find locations in source files from a location in a raw module\n    */\n  async rawLocationToSourceLocation(_rawLocation: RawLocation): Promise<SourceLocation[]> {\n    throw new Error('Not implemented yet');\n  }\n\n  /** Return detailed information about a scope\n     */\n  async getScopeInfo(_type: string): Promise<ScopeInfo> {\n    throw new Error('Not implemented yet');\n  }\n\n  /** List all variables in lexical scope at a given location in a raw module\n    */\n  async listVariablesInScope(_rawLocation: RawLocation): Promise<Variable[]> {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * Notifies the plugin that a script is removed.\n   */\n  removeRawModule(_rawModuleId: string): Promise<void> {\n    throw new Error('Not implemented yet');\n  }\n\n  getTypeInfo(_expression: string, _context: RawLocation): Promise<{\n    typeInfos: Array<TypeInfo>,\n    base: EvalBase,\n  }|null> {\n    throw new Error('Not implemented yet');\n  }\n\n  getFormatter(\n      _expressionOrField: string|{\n        base: EvalBase,\n        field: Array<FieldInfo>,\n      },\n      _context: RawLocation): Promise<{\n    js: string,\n  }|null> {\n    throw new Error('Not implemented yet');\n  }\n\n  getInspectableAddress(_field: {\n    base: EvalBase,\n    field: Array<FieldInfo>,\n  }): Promise<{\n    js: string,\n  }> {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * Find locations in source files from a location in a raw module\n   */\n  async getFunctionInfo(_rawLocation: RawLocation): Promise<{\n    frames: Array<FunctionInfo>,\n  }> {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * Find locations in raw modules corresponding to the inline function\n   * that rawLocation is in. Used for stepping out of an inline function.\n   */\n  async getInlinedFunctionRanges(_rawLocation: RawLocation): Promise<RawLocationRange[]> {\n    throw new Error('Not implemented yet');\n  }\n\n  /**\n   * Find locations in raw modules corresponding to inline functions\n   * called by the function or inline frame that rawLocation is in.\n   * Used for stepping over inline functions.\n   */\n  async getInlinedCalleesRanges(_rawLocation: RawLocation): Promise<RawLocationRange[]> {\n    throw new Error('Not implemented yet');\n  }\n\n  async getMappedLines(_rawModuleId: string, _sourceFileURL: string): Promise<number[]|undefined> {\n    throw new Error('Not implemented yet');\n  }\n}\n"]}