{"version":3,"file":"WorkspaceImpl.js","sourceRoot":"","sources":["../../../../../../front_end/models/workspace/WorkspaceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as TextUtils from '../text_utils/text_utils.js';\n\nimport type {UISourceCodeMetadata} from './UISourceCode.js';\nimport {UISourceCode} from './UISourceCode.js';\n\nexport interface ProjectSearchConfig {\n  query(): string;\n  ignoreCase(): boolean;\n  isRegex(): boolean;\n  queries(): string[];\n  filePathMatchesFileQuery(filePath: string): boolean;\n}\n\nexport abstract class Project {\n  abstract workspace(): WorkspaceImpl;\n  abstract id(): string;\n  abstract type(): string;\n  abstract isServiceProject(): boolean;\n  abstract displayName(): string;\n  abstract requestMetadata(uiSourceCode: UISourceCode): Promise<UISourceCodeMetadata|null>;\n  abstract requestFileContent(uiSourceCode: UISourceCode): Promise<TextUtils.ContentProvider.DeferredContent>;\n  abstract canSetFileContent(): boolean;\n  abstract setFileContent(uiSourceCode: UISourceCode, newContent: string, isBase64: boolean): Promise<void>;\n  abstract fullDisplayName(uiSourceCode: UISourceCode): string;\n  abstract mimeType(uiSourceCode: UISourceCode): string;\n  abstract canRename(): boolean;\n  rename(\n      _uiSourceCode: UISourceCode, _newName: string,\n      _callback: (arg0: boolean, arg1?: string, arg2?: string, arg3?: Common.ResourceType.ResourceType) => void): void {\n  }\n  excludeFolder(_path: string): void {\n  }\n  abstract canExcludeFolder(path: string): boolean;\n  abstract createFile(path: string, name: string|null, content: string, isBase64?: boolean): Promise<UISourceCode|null>;\n  abstract canCreateFile(): boolean;\n  deleteFile(_uiSourceCode: UISourceCode): void {\n  }\n  remove(): void {\n  }\n  abstract searchInFileContent(uiSourceCode: UISourceCode, query: string, caseSensitive: boolean, isRegex: boolean):\n      Promise<TextUtils.ContentProvider.SearchMatch[]>;\n  abstract findFilesMatchingSearchRequest(\n      searchConfig: ProjectSearchConfig, filesMathingFileQuery: string[],\n      progress: Common.Progress.Progress): Promise<string[]>;\n  indexContent(_progress: Common.Progress.Progress): void {\n  }\n  abstract uiSourceCodeForURL(url: string): UISourceCode|null;\n  abstract uiSourceCodes(): UISourceCode[];\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum, @typescript-eslint/naming-convention\nexport enum projectTypes {\n  Debugger = 'debugger',\n  Formatter = 'formatter',\n  Network = 'network',\n  FileSystem = 'filesystem',\n  ContentScripts = 'contentscripts',\n  Service = 'service',\n}\n\nexport class ProjectStore {\n  _workspace: WorkspaceImpl;\n  _id: string;\n  _type: projectTypes;\n  _displayName: string;\n  _uiSourceCodesMap: Map<string, {\n    uiSourceCode: UISourceCode,\n    index: number,\n  }>;\n  _uiSourceCodesList: UISourceCode[];\n  _project: Project;\n\n  constructor(workspace: WorkspaceImpl, id: string, type: projectTypes, displayName: string) {\n    this._workspace = workspace;\n    this._id = id;\n    this._type = type;\n    this._displayName = displayName;\n\n    this._uiSourceCodesMap = new Map();\n    this._uiSourceCodesList = [];\n    this._project = (this as unknown as Project);\n  }\n\n  id(): string {\n    return this._id;\n  }\n\n  type(): string {\n    return this._type;\n  }\n\n  displayName(): string {\n    return this._displayName;\n  }\n\n  workspace(): WorkspaceImpl {\n    return this._workspace;\n  }\n\n  createUISourceCode(url: string, contentType: Common.ResourceType.ResourceType): UISourceCode {\n    return new UISourceCode(this._project, url, contentType);\n  }\n\n  addUISourceCode(uiSourceCode: UISourceCode): boolean {\n    const url = uiSourceCode.url();\n    if (this.uiSourceCodeForURL(url)) {\n      return false;\n    }\n    this._uiSourceCodesMap.set(url, {uiSourceCode: uiSourceCode, index: this._uiSourceCodesList.length});\n    this._uiSourceCodesList.push(uiSourceCode);\n    this._workspace.dispatchEventToListeners(Events.UISourceCodeAdded, uiSourceCode);\n    return true;\n  }\n\n  removeUISourceCode(url: string): void {\n    const uiSourceCode = this.uiSourceCodeForURL(url);\n    if (!uiSourceCode) {\n      return;\n    }\n\n    const entry = this._uiSourceCodesMap.get(url);\n    if (!entry) {\n      return;\n    }\n    const movedUISourceCode = this._uiSourceCodesList[this._uiSourceCodesList.length - 1];\n    this._uiSourceCodesList[entry.index] = movedUISourceCode;\n    const movedEntry = this._uiSourceCodesMap.get(movedUISourceCode.url());\n    if (movedEntry) {\n      movedEntry.index = entry.index;\n    }\n    this._uiSourceCodesList.splice(this._uiSourceCodesList.length - 1, 1);\n    this._uiSourceCodesMap.delete(url);\n    this._workspace.dispatchEventToListeners(Events.UISourceCodeRemoved, entry.uiSourceCode);\n  }\n\n  removeProject(): void {\n    this._workspace._removeProject(this._project);\n    this._uiSourceCodesMap = new Map();\n    this._uiSourceCodesList = [];\n  }\n\n  uiSourceCodeForURL(url: string): UISourceCode|null {\n    const entry = this._uiSourceCodesMap.get(url);\n    return entry ? entry.uiSourceCode : null;\n  }\n\n  uiSourceCodes(): UISourceCode[] {\n    return this._uiSourceCodesList;\n  }\n\n  renameUISourceCode(uiSourceCode: UISourceCode, newName: string): void {\n    const oldPath = uiSourceCode.url();\n    const newPath = uiSourceCode.parentURL() ? uiSourceCode.parentURL() + '/' + newName : newName;\n    const value = this._uiSourceCodesMap.get(oldPath) as {\n      uiSourceCode: UISourceCode,\n      index: number,\n    };\n    this._uiSourceCodesMap.set(newPath, value);\n    this._uiSourceCodesMap.delete(oldPath);\n  }\n}\n\nlet workspaceInstance: WorkspaceImpl;\n\nexport class WorkspaceImpl extends Common.ObjectWrapper.ObjectWrapper {\n  _projects: Map<string, Project>;\n  _hasResourceContentTrackingExtensions: boolean;\n\n  private constructor() {\n    super();\n    this._projects = new Map();\n    this._hasResourceContentTrackingExtensions = false;\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): WorkspaceImpl {\n    const {forceNew} = opts;\n    if (!workspaceInstance || forceNew) {\n      workspaceInstance = new WorkspaceImpl();\n    }\n\n    return workspaceInstance;\n  }\n\n  uiSourceCode(projectId: string, url: string): UISourceCode|null {\n    const project = this._projects.get(projectId);\n    return project ? project.uiSourceCodeForURL(url) : null;\n  }\n\n  uiSourceCodeForURL(url: string): UISourceCode|null {\n    for (const project of this._projects.values()) {\n      const uiSourceCode = project.uiSourceCodeForURL(url);\n      if (uiSourceCode) {\n        return uiSourceCode;\n      }\n    }\n    return null;\n  }\n\n  uiSourceCodesForProjectType(type: string): UISourceCode[] {\n    const result: UISourceCode[] = [];\n    for (const project of this._projects.values()) {\n      if (project.type() === type) {\n        result.push(...project.uiSourceCodes());\n      }\n    }\n    return result;\n  }\n\n  addProject(project: Project): void {\n    console.assert(!this._projects.has(project.id()), `A project with id ${project.id()} already exists!`);\n    this._projects.set(project.id(), project);\n    this.dispatchEventToListeners(Events.ProjectAdded, project);\n  }\n\n  _removeProject(project: Project): void {\n    this._projects.delete(project.id());\n    this.dispatchEventToListeners(Events.ProjectRemoved, project);\n  }\n\n  project(projectId: string): Project|null {\n    return this._projects.get(projectId) || null;\n  }\n\n  projects(): Project[] {\n    return [...this._projects.values()];\n  }\n\n  projectsForType(type: string): Project[] {\n    function filterByType(project: Project): boolean {\n      return project.type() === type;\n    }\n    return this.projects().filter(filterByType);\n  }\n\n  uiSourceCodes(): UISourceCode[] {\n    const result: UISourceCode[] = [];\n    for (const project of this._projects.values()) {\n      result.push(...project.uiSourceCodes());\n    }\n    return result;\n  }\n\n  setHasResourceContentTrackingExtensions(hasExtensions: boolean): void {\n    this._hasResourceContentTrackingExtensions = hasExtensions;\n  }\n\n  hasResourceContentTrackingExtensions(): boolean {\n    return this._hasResourceContentTrackingExtensions;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  UISourceCodeAdded = 'UISourceCodeAdded',\n  UISourceCodeRemoved = 'UISourceCodeRemoved',\n  UISourceCodeRenamed = 'UISourceCodeRenamed',\n  WorkingCopyChanged = 'WorkingCopyChanged',\n  WorkingCopyCommitted = 'WorkingCopyCommitted',\n  WorkingCopyCommittedByUser = 'WorkingCopyCommittedByUser',\n  ProjectAdded = 'ProjectAdded',\n  ProjectRemoved = 'ProjectRemoved',\n}\n"]}