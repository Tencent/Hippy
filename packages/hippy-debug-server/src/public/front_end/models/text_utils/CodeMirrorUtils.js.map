{"version":3,"file":"CodeMirrorUtils.js","sourceRoot":"","sources":["../../../../../../front_end/models/text_utils/CodeMirrorUtils.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport type * as CodeMirrorModule from '../../third_party/codemirror/codemirror-legacy.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nimport * as TextRange from './TextRange.js';\nimport type * as TextUtils from './TextUtils.js';\n\nexport function toPos(range: TextRange.TextRange): {\n  start: any,\n  end: any,\n} {\n  return {\n    start: new CodeMirror.Pos(range.startLine, range.startColumn),\n    end: new CodeMirror.Pos(range.endLine, range.endColumn),\n  };\n}\n\nexport function toRange(start: any, end: any): TextRange.TextRange {\n  return new TextRange.TextRange(start.line, start.ch, end.line, end.ch);\n}\n\nexport function changeObjectToEditOperation(changeObject: any): {\n  oldRange: TextRange.TextRange,\n  newRange: TextRange.TextRange,\n} {\n  const oldRange = toRange(changeObject.from, changeObject.to);\n  const newRange = oldRange.clone();\n  const linesAdded = changeObject.text.length;\n  if (linesAdded === 0) {\n    newRange.endLine = newRange.startLine;\n    newRange.endColumn = newRange.startColumn;\n  } else if (linesAdded === 1) {\n    newRange.endLine = newRange.startLine;\n    newRange.endColumn = newRange.startColumn + changeObject.text[0].length;\n  } else {\n    newRange.endLine = newRange.startLine + linesAdded - 1;\n    newRange.endColumn = changeObject.text[linesAdded - 1].length;\n  }\n  return {oldRange: oldRange, newRange: newRange};\n}\n\nexport function pullLines(codeMirror: typeof CodeMirror, linesCount: number): string[] {\n  const lines: string[] = [];\n  // @ts-expect-error CodeMirror types do not specify eachLine.\n  codeMirror.eachLine(0, linesCount, onLineHandle);\n  return lines;\n\n  function onLineHandle(lineHandle: {\n    text: string,\n  }): void {\n    lines.push(lineHandle.text);\n  }\n}\n\nlet tokenizerFactoryInstance: TokenizerFactory;\n\nexport type Tokenizer =\n    (line: string, callback: (value: string, style: string|null, start: number, end: number) => void) => void;\n\nexport class TokenizerFactory implements TextUtils.TokenizerFactory {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): TokenizerFactory {\n    const {forceNew} = opts;\n    if (!tokenizerFactoryInstance || forceNew) {\n      tokenizerFactoryInstance = new TokenizerFactory();\n    }\n\n    return tokenizerFactoryInstance;\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Mode\n  getMode(mimeType: string): any {\n    return CodeMirror.getMode({indentUnit: 2}, mimeType);\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Mode\n  createTokenizer(mimeType: string, mode?: any): Tokenizer {\n    const cmMode = mode || CodeMirror.getMode({indentUnit: 2}, mimeType);\n    const state = CodeMirror.startState(cmMode);\n\n    function tokenize(\n        line: string, callback: (value: string, style: string|null, start: number, end: number) => void): void {\n      const stream = new CodeMirror.StringStream(line);\n      while (!stream.eol()) {\n        const style = cmMode.token(stream, state);\n        const value = stream.current();\n        callback(value, style, stream.start, stream.start + value.length);\n        stream.start = stream.pos;\n      }\n    }\n    return tokenize;\n  }\n}\n"]}