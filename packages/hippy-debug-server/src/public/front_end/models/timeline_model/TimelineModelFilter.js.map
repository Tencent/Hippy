{"version":3,"file":"TimelineModelFilter.js","sourceRoot":"","sources":["../../../../../../front_end/models/timeline_model/TimelineModelFilter.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAM7B,OAAO,EAAC,UAAU,EAAE,iBAAiB,EAAC,MAAM,oBAAoB,CAAC;AAEjE,MAAM,OAAO,mBAAmB;IAC9B,MAAM,CAAC,MAA8B;QACnC,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAED,MAAM,OAAO,2BAA4B,SAAQ,mBAAmB;IAClE,aAAa,CAAc;IAC3B,YAAY,YAAsB;QAChC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,CAAC,KAA6B;QAClC,OAAO,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,2BAA2B,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAC/E,CAAC;IAED,MAAM,CAAC,UAAU,CAAC,KAA6B;QAC7C,IAAI,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE;YACzD,OAAO,UAAU,CAAC,WAAW,CAAC;SAC/B;QACD,IAAI,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC5D,OAAO,UAAU,CAAC,UAAU,CAAC;SAC9B;QACD,IAAI,KAAK,CAAC,WAAW,CAAC,iBAAiB,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC7D,OAAO,UAAU,CAAC,WAAW,CAAC;SAC/B;QACD,OAAO,KAAK,CAAC,IAAkB,CAAC;IAClC,CAAC;CACF;AAED,MAAM,OAAO,6BAA8B,SAAQ,mBAAmB;IACpE,eAAe,CAAc;IAC7B,YAAY,cAAwB;QAClC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,eAAe,GAAG,IAAI,GAAG,CAAC,cAAc,CAAC,CAAC;IACjD,CAAC;IAED,MAAM,CAAC,KAA6B;QAClC,OAAO,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,2BAA2B,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;IAClF,CAAC;CACF;AAED,MAAM,OAAO,mBAAoB,SAAQ,mBAAmB;IAC1D,aAAa,CAAc;IAC3B,YAAY,YAAsB;QAChC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,CAAC,YAAY,CAAC,CAAC;IAC7C,CAAC;IAED,MAAM,CAAC,KAA6B;QAClC,OAAO,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as SDK from '../../core/sdk/sdk.js';\n\nimport {RecordType, TimelineModelImpl} from './TimelineModel.js';\n\nexport class TimelineModelFilter {\n  accept(_event: SDK.TracingModel.Event): boolean {\n    return true;\n  }\n}\n\nexport class TimelineVisibleEventsFilter extends TimelineModelFilter {\n  _visibleTypes: Set<string>;\n  constructor(visibleTypes: string[]) {\n    super();\n    this._visibleTypes = new Set(visibleTypes);\n  }\n\n  accept(event: SDK.TracingModel.Event): boolean {\n    return this._visibleTypes.has(TimelineVisibleEventsFilter._eventType(event));\n  }\n\n  static _eventType(event: SDK.TracingModel.Event): RecordType {\n    if (event.hasCategory(TimelineModelImpl.Category.Console)) {\n      return RecordType.ConsoleTime;\n    }\n    if (event.hasCategory(TimelineModelImpl.Category.UserTiming)) {\n      return RecordType.UserTiming;\n    }\n    if (event.hasCategory(TimelineModelImpl.Category.LatencyInfo)) {\n      return RecordType.LatencyInfo;\n    }\n    return event.name as RecordType;\n  }\n}\n\nexport class TimelineInvisibleEventsFilter extends TimelineModelFilter {\n  _invisibleTypes: Set<string>;\n  constructor(invisibleTypes: string[]) {\n    super();\n    this._invisibleTypes = new Set(invisibleTypes);\n  }\n\n  accept(event: SDK.TracingModel.Event): boolean {\n    return !this._invisibleTypes.has(TimelineVisibleEventsFilter._eventType(event));\n  }\n}\n\nexport class ExclusiveNameFilter extends TimelineModelFilter {\n  _excludeNames: Set<string>;\n  constructor(excludeNames: string[]) {\n    super();\n    this._excludeNames = new Set(excludeNames);\n  }\n\n  accept(event: SDK.TracingModel.Event): boolean {\n    return !this._excludeNames.has(event.name);\n  }\n}\n"]}