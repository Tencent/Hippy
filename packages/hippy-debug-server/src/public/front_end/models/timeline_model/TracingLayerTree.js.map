{"version":3,"file":"TracingLayerTree.js","sourceRoot":"","sources":["../../../../../../front_end/models/timeline_model/TracingLayerTree.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n/* eslint-disable @typescript-eslint/naming-convention */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport type {LayerPaintEvent} from './TimelineFrameModel.js';\n\n\nexport class TracingLayerTree extends SDK.LayerTreeBase.LayerTreeBase {\n  _tileById: Map<string, TracingLayerTile>;\n  _paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null;\n\n  constructor(target: SDK.Target.Target|null) {\n    super(target);\n    this._tileById = new Map();\n    this._paintProfilerModel = target && target.model(SDK.PaintProfiler.PaintProfilerModel);\n  }\n\n  async setLayers(root: TracingLayerPayload|null, layers: TracingLayerPayload[]|null, paints: LayerPaintEvent[]):\n      Promise<void> {\n    const idsToResolve = new Set<number>();\n    if (root) {\n      // This is a legacy code path for compatibility, as cc is removing\n      // layer tree hierarchy, this code will eventually be removed.\n      this._extractNodeIdsToResolve(idsToResolve, {}, root);\n    } else if (layers) {\n      for (let i = 0; i < layers.length; ++i) {\n        this._extractNodeIdsToResolve(idsToResolve, {}, layers[i]);\n      }\n    }\n\n    await this.resolveBackendNodeIds(idsToResolve);\n\n    const oldLayersById = this.layersById;\n    this.layersById = new Map();\n    this.setContentRoot(null);\n    if (root) {\n      const convertedLayers = this._innerSetLayers(oldLayersById, root);\n      this.setRoot(convertedLayers);\n    } else if (layers) {\n      const processedLayers = layers.map(this._innerSetLayers.bind(this, oldLayersById));\n      const contentRoot = this.contentRoot();\n      if (!contentRoot) {\n        throw new Error('Content root is not set.');\n      }\n      this.setRoot(contentRoot);\n      for (let i = 0; i < processedLayers.length; ++i) {\n        if (processedLayers[i].id() !== contentRoot.id()) {\n          contentRoot.addChild(processedLayers[i]);\n        }\n      }\n    }\n    this._setPaints(paints);\n  }\n\n  setTiles(tiles: TracingLayerTile[]): void {\n    this._tileById = new Map();\n    for (const tile of tiles) {\n      this._tileById.set(tile.id, tile);\n    }\n  }\n\n  pictureForRasterTile(tileId: string): Promise<SDK.PaintProfiler.SnapshotWithRect|null> {\n    const tile = this._tileById.get('cc::Tile/' + tileId);\n    if (!tile) {\n      Common.Console.Console.instance().error(`Tile ${tileId} is missing`);\n      return Promise.resolve(null) as Promise<SDK.PaintProfiler.SnapshotWithRect|null>;\n    }\n    const layer = (this.layerById(tile.layer_id) as TracingLayer | null);\n    if (!layer) {\n      Common.Console.Console.instance().error(`Layer ${tile.layer_id} for tile ${tileId} is not found`);\n      return Promise.resolve(null) as Promise<SDK.PaintProfiler.SnapshotWithRect|null>;\n    }\n    return layer._pictureForRect(tile.content_rect);\n  }\n\n  _setPaints(paints: LayerPaintEvent[]): void {\n    for (let i = 0; i < paints.length; ++i) {\n      const layer = (this.layersById.get(paints[i].layerId()) as TracingLayer | null);\n      if (layer) {\n        layer._addPaintEvent(paints[i]);\n      }\n    }\n  }\n\n  _innerSetLayers(oldLayersById: Map<string|number, SDK.LayerTreeBase.Layer>, payload: TracingLayerPayload):\n      TracingLayer {\n    let layer = (oldLayersById.get(payload.layer_id) as TracingLayer | null);\n    if (layer) {\n      layer._reset(payload);\n    } else {\n      layer = new TracingLayer(this._paintProfilerModel, payload);\n    }\n    this.layersById.set(payload.layer_id, layer);\n    if (payload.owner_node) {\n      layer._setNode(this.backendNodeIdToNode().get(payload.owner_node) || null);\n    }\n    if (!this.contentRoot() && layer.drawsContent()) {\n      this.setContentRoot(layer);\n    }\n    for (let i = 0; payload.children && i < payload.children.length; ++i) {\n      layer.addChild(this._innerSetLayers(oldLayersById, payload.children[i]));\n    }\n    return layer;\n  }\n\n  _extractNodeIdsToResolve(nodeIdsToResolve: Set<number>, seenNodeIds: Object, payload: TracingLayerPayload): void {\n    const backendNodeId = payload.owner_node;\n    if (backendNodeId && !this.backendNodeIdToNode().has(backendNodeId)) {\n      nodeIdsToResolve.add(backendNodeId);\n    }\n    for (let i = 0; payload.children && i < payload.children.length; ++i) {\n      this._extractNodeIdsToResolve(nodeIdsToResolve, seenNodeIds, payload.children[i]);\n    }\n  }\n}\n\nexport class TracingLayer implements SDK.LayerTreeBase.Layer {\n  _parentLayerId: string|null;\n  _parent: SDK.LayerTreeBase.Layer|null;\n  _layerId: string;\n  _node: SDK.DOMModel.DOMNode|null;\n  _offsetX: number;\n  _offsetY: number;\n  _width: number;\n  _height: number;\n  _children: SDK.LayerTreeBase.Layer[];\n  _quad: number[];\n  _scrollRects: Protocol.LayerTree.ScrollRect[];\n  _gpuMemoryUsage: number;\n  _paints: LayerPaintEvent[];\n  _compositingReasonIds: string[];\n  _drawsContent: boolean;\n  _paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null;\n  constructor(paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null, payload: TracingLayerPayload) {\n    this._parentLayerId = null;\n    this._parent = null;\n    this._layerId = '';\n    this._node = null;\n    this._offsetX = -1;\n    this._offsetY = -1;\n    this._width = -1;\n    this._height = -1;\n    this._children = [];\n    this._quad = [];\n    this._scrollRects = [];\n    this._gpuMemoryUsage = -1;\n    this._paints = [];\n    this._compositingReasonIds = [];\n    this._drawsContent = false;\n\n    this._paintProfilerModel = paintProfilerModel;\n    this._reset(payload);\n  }\n\n  _reset(payload: TracingLayerPayload): void {\n    this._node = null;\n    this._layerId = String(payload.layer_id);\n    this._offsetX = payload.position[0];\n    this._offsetY = payload.position[1];\n    this._width = payload.bounds.width;\n    this._height = payload.bounds.height;\n    this._children = [];\n    this._parentLayerId = null;\n    this._parent = null;\n    this._quad = payload.layer_quad || [];\n    this._createScrollRects(payload);\n\n    // Keep payload.compositing_reasons as a default\n    // but use the newer payload.debug_info.compositing_reasons\n    // if the first one is not set.\n    this._compositingReasonIds =\n        payload.compositing_reason_ids || (payload.debug_info && payload.debug_info.compositing_reason_ids) || [];\n    this._drawsContent = Boolean(payload.draws_content);\n    this._gpuMemoryUsage = payload.gpu_memory_usage;\n    /** @type {!Array<!LayerPaintEvent>} */\n    this._paints = [];\n  }\n\n  id(): string {\n    return this._layerId;\n  }\n\n  parentId(): string|null {\n    return this._parentLayerId;\n  }\n\n  parent(): SDK.LayerTreeBase.Layer|null {\n    return this._parent;\n  }\n\n  isRoot(): boolean {\n    return !this.parentId();\n  }\n\n  children(): SDK.LayerTreeBase.Layer[] {\n    return this._children;\n  }\n\n  addChild(childParam: SDK.LayerTreeBase.Layer): void {\n    const child = (childParam as TracingLayer);\n    if (child._parent) {\n      console.assert(false, 'Child already has a parent');\n    }\n    this._children.push(child);\n    child._parent = this;\n    child._parentLayerId = this._layerId;\n  }\n\n  _setNode(node: SDK.DOMModel.DOMNode|null): void {\n    this._node = node;\n  }\n\n  node(): SDK.DOMModel.DOMNode|null {\n    return this._node;\n  }\n\n  nodeForSelfOrAncestor(): SDK.DOMModel.DOMNode|null {\n    let layer: (SDK.LayerTreeBase.Layer|null)|this = this;\n    for (; layer; layer = layer.parent()) {\n      if (layer.node()) {\n        return layer.node();\n      }\n    }\n    return null;\n  }\n\n  offsetX(): number {\n    return this._offsetX;\n  }\n\n  offsetY(): number {\n    return this._offsetY;\n  }\n\n  width(): number {\n    return this._width;\n  }\n\n  height(): number {\n    return this._height;\n  }\n\n  transform(): number[]|null {\n    return null;\n  }\n\n  quad(): number[] {\n    return this._quad;\n  }\n\n  anchorPoint(): number[] {\n    return [0.5, 0.5, 0];\n  }\n\n  invisible(): boolean {\n    return false;\n  }\n\n  paintCount(): number {\n    return 0;\n  }\n\n  lastPaintRect(): Protocol.DOM.Rect|null {\n    return null;\n  }\n\n  scrollRects(): Protocol.LayerTree.ScrollRect[] {\n    return this._scrollRects;\n  }\n\n  stickyPositionConstraint(): SDK.LayerTreeBase.StickyPositionConstraint|null {\n    // TODO(smcgruer): Provide sticky layer information in traces.\n    return null;\n  }\n\n  gpuMemoryUsage(): number {\n    return this._gpuMemoryUsage;\n  }\n\n  snapshots(): Promise<SDK.PaintProfiler.SnapshotWithRect|null>[] {\n    return this._paints.map(paint => paint.snapshotPromise().then(snapshot => {\n      if (!snapshot) {\n        return null;\n      }\n      const rect = {x: snapshot.rect[0], y: snapshot.rect[1], width: snapshot.rect[2], height: snapshot.rect[3]};\n      return {rect: rect, snapshot: snapshot.snapshot};\n    }));\n  }\n\n  _pictureForRect(targetRect: number[]): Promise<SDK.PaintProfiler.SnapshotWithRect|null> {\n    return Promise.all(this._paints.map(paint => paint.picturePromise())).then(pictures => {\n      const filteredPictures = (pictures.filter(picture => picture && rectsOverlap(picture.rect, targetRect)) as {\n        rect: Array<number>,\n        serializedPicture: string,\n      }[]);\n\n      const fragments = filteredPictures.map(\n          picture => ({x: picture.rect[0], y: picture.rect[1], picture: picture.serializedPicture}));\n\n      if (!fragments.length || !this._paintProfilerModel) {\n        return null;\n      }\n      const x0 = fragments.reduce((min, item) => Math.min(min, item.x), Infinity);\n      const y0 = fragments.reduce((min, item) => Math.min(min, item.y), Infinity);\n      // Rect is in layer content coordinates, make it relative to picture by offsetting to the top left corner.\n      const rect = {x: targetRect[0] - x0, y: targetRect[1] - y0, width: targetRect[2], height: targetRect[3]};\n      return this._paintProfilerModel.loadSnapshotFromFragments(fragments).then(\n          snapshot => snapshot ? {rect: rect, snapshot: snapshot} : null);\n    });\n\n    function segmentsOverlap(a1: number, a2: number, b1: number, b2: number): boolean {\n      console.assert(a1 <= a2 && b1 <= b2, 'segments should be specified as ordered pairs');\n      return a2 > b1 && a1 < b2;\n    }\n\n    function rectsOverlap(a: number[], b: number[]): boolean {\n      return segmentsOverlap(a[0], a[0] + a[2], b[0], b[0] + b[2]) &&\n          segmentsOverlap(a[1], a[1] + a[3], b[1], b[1] + b[3]);\n    }\n  }\n\n  _scrollRectsFromParams(params: number[], type: Protocol.LayerTree.ScrollRectType): Protocol.LayerTree.ScrollRect {\n    return {rect: {x: params[0], y: params[1], width: params[2], height: params[3]}, type: type};\n  }\n\n  _createScrollRects(payload: TracingLayerPayload): void {\n    const nonPayloadScrollRects: Protocol.LayerTree.ScrollRect[] = [];\n    if (payload.non_fast_scrollable_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.non_fast_scrollable_region, 'NonFastScrollable' as Protocol.LayerTree.ScrollRectType));\n    }\n    if (payload.touch_event_handler_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.touch_event_handler_region, Protocol.LayerTree.ScrollRectType.TouchEventHandler));\n    }\n    if (payload.wheel_event_handler_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.wheel_event_handler_region, Protocol.LayerTree.ScrollRectType.WheelEventHandler));\n    }\n    if (payload.scroll_event_handler_region) {\n      nonPayloadScrollRects.push(this._scrollRectsFromParams(\n          payload.scroll_event_handler_region, Protocol.LayerTree.ScrollRectType.RepaintsOnScroll));\n    }\n\n    // SDK.LayerBaseTree.Layer.ScrollRectType and Protocol.LayerTree.ScrollRectType are the\n    // same type, but we need to use the indirection of the nonPayloadScrollRects since\n    // the ScrollRectType is defined as a string in SDK.LayerBaseTree.Layer.ScrollRectType.\n    this._scrollRects = nonPayloadScrollRects;\n  }\n\n  _addPaintEvent(paint: LayerPaintEvent): void {\n    this._paints.push(paint);\n  }\n\n  requestCompositingReasonIds(): Promise<string[]> {\n    return Promise.resolve(this._compositingReasonIds);\n  }\n\n  drawsContent(): boolean {\n    return this._drawsContent;\n  }\n}\n\nexport interface TracingLayerPayload {\n  bounds: {height: number, width: number};\n  children: TracingLayerPayload[];\n  layer_id: number;\n  position: number[];\n  scroll_offset: number[];\n  layer_quad: number[];\n  draws_content: number;\n  gpu_memory_usage: number;\n  transform: number[];\n  owner_node: number;\n  reasons: string[];\n  compositing_reason: string[];\n  compositing_reason_ids: string[];\n  debug_info: {compositing_reason_ids: string[]};\n  non_fast_scrollable_region: number[];\n  touch_event_handler_region: number[];\n  wheel_event_handler_region: number[];\n  scroll_event_handler_region: number[];\n}\n\nexport interface TracingLayerTile {\n  id: string;\n  layer_id: string;\n  gpu_memory_usage: number;\n  content_rect: number[];\n}\n"]}