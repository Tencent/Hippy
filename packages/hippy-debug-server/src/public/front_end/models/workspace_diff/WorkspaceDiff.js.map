{"version":3,"file":"WorkspaceDiff.js","sourceRoot":"","sources":["../../../../../../front_end/models/workspace_diff/WorkspaceDiff.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as Diff from '../../third_party/diff/diff.js';\nimport * as Persistence from '../persistence/persistence.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nexport class WorkspaceDiffImpl extends Common.ObjectWrapper.ObjectWrapper {\n  _uiSourceCodeDiffs: WeakMap<Workspace.UISourceCode.UISourceCode, UISourceCodeDiff>;\n  _loadingUISourceCodes: Map<Workspace.UISourceCode.UISourceCode, Promise<[string | null, string|null]>>;\n  _modifiedUISourceCodes: Set<Workspace.UISourceCode.UISourceCode>;\n\n  constructor(workspace: Workspace.Workspace.WorkspaceImpl) {\n    super();\n    this._uiSourceCodeDiffs = new WeakMap();\n\n    this._loadingUISourceCodes = new Map();\n\n    this._modifiedUISourceCodes = new Set();\n    workspace.addEventListener(Workspace.Workspace.Events.WorkingCopyChanged, this._uiSourceCodeChanged, this);\n    workspace.addEventListener(Workspace.Workspace.Events.WorkingCopyCommitted, this._uiSourceCodeChanged, this);\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeAdded, this._uiSourceCodeAdded, this);\n    workspace.addEventListener(Workspace.Workspace.Events.UISourceCodeRemoved, this._uiSourceCodeRemoved, this);\n    workspace.addEventListener(Workspace.Workspace.Events.ProjectRemoved, this._projectRemoved, this);\n    workspace.uiSourceCodes().forEach(this._updateModifiedState.bind(this));\n  }\n\n  requestDiff(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<Diff.Diff.DiffArray|null> {\n    return this._uiSourceCodeDiff(uiSourceCode).requestDiff();\n  }\n\n  subscribeToDiffChange(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, callback: (arg0: Common.EventTarget.EventTargetEvent) => void,\n      thisObj?: Object): void {\n    this._uiSourceCodeDiff(uiSourceCode).addEventListener(Events.DiffChanged, callback, thisObj);\n  }\n\n  unsubscribeFromDiffChange(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, callback: (arg0: Common.EventTarget.EventTargetEvent) => void,\n      thisObj?: Object): void {\n    this._uiSourceCodeDiff(uiSourceCode).removeEventListener(Events.DiffChanged, callback, thisObj);\n  }\n\n  modifiedUISourceCodes(): Workspace.UISourceCode.UISourceCode[] {\n    return Array.from(this._modifiedUISourceCodes);\n  }\n\n  isUISourceCodeModified(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this._modifiedUISourceCodes.has(uiSourceCode) || this._loadingUISourceCodes.has(uiSourceCode);\n  }\n\n  _uiSourceCodeDiff(uiSourceCode: Workspace.UISourceCode.UISourceCode): UISourceCodeDiff {\n    let diff = this._uiSourceCodeDiffs.get(uiSourceCode);\n    if (!diff) {\n      diff = new UISourceCodeDiff(uiSourceCode);\n      this._uiSourceCodeDiffs.set(uiSourceCode, diff);\n    }\n    return diff;\n  }\n\n  _uiSourceCodeChanged(event: Common.EventTarget.EventTargetEvent): void {\n    const uiSourceCode = (event.data.uiSourceCode as Workspace.UISourceCode.UISourceCode);\n    this._updateModifiedState(uiSourceCode);\n  }\n\n  _uiSourceCodeAdded(event: Common.EventTarget.EventTargetEvent): void {\n    const uiSourceCode = (event.data as Workspace.UISourceCode.UISourceCode);\n    this._updateModifiedState(uiSourceCode);\n  }\n\n  _uiSourceCodeRemoved(event: Common.EventTarget.EventTargetEvent): void {\n    const uiSourceCode = (event.data as Workspace.UISourceCode.UISourceCode);\n    this._removeUISourceCode(uiSourceCode);\n  }\n\n  _projectRemoved(event: Common.EventTarget.EventTargetEvent): void {\n    const project = (event.data as Workspace.Workspace.Project);\n    for (const uiSourceCode of project.uiSourceCodes()) {\n      this._removeUISourceCode(uiSourceCode);\n    }\n  }\n\n  _removeUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this._loadingUISourceCodes.delete(uiSourceCode);\n    const uiSourceCodeDiff = this._uiSourceCodeDiffs.get(uiSourceCode);\n    if (uiSourceCodeDiff) {\n      uiSourceCodeDiff._dispose = true;\n    }\n    this._markAsUnmodified(uiSourceCode);\n  }\n\n  _markAsUnmodified(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this._uiSourceCodeProcessedForTest();\n    if (this._modifiedUISourceCodes.delete(uiSourceCode)) {\n      this.dispatchEventToListeners(Events.ModifiedStatusChanged, {uiSourceCode, isModified: false});\n    }\n  }\n\n  _markAsModified(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    this._uiSourceCodeProcessedForTest();\n    if (this._modifiedUISourceCodes.has(uiSourceCode)) {\n      return;\n    }\n    this._modifiedUISourceCodes.add(uiSourceCode);\n    this.dispatchEventToListeners(Events.ModifiedStatusChanged, {uiSourceCode, isModified: true});\n  }\n\n  _uiSourceCodeProcessedForTest(): void {\n  }\n\n  async _updateModifiedState(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    this._loadingUISourceCodes.delete(uiSourceCode);\n\n    if (uiSourceCode.project().type() !== Workspace.Workspace.projectTypes.Network) {\n      this._markAsUnmodified(uiSourceCode);\n      return;\n    }\n    if (uiSourceCode.isDirty()) {\n      this._markAsModified(uiSourceCode);\n      return;\n    }\n    if (!uiSourceCode.hasCommits()) {\n      this._markAsUnmodified(uiSourceCode);\n      return;\n    }\n\n    const contentsPromise = Promise.all([\n      this.requestOriginalContentForUISourceCode(uiSourceCode),\n      uiSourceCode.requestContent().then(deferredContent => deferredContent.content),\n    ]);\n\n    this._loadingUISourceCodes.set(uiSourceCode, contentsPromise);\n    const contents = await contentsPromise;\n    if (this._loadingUISourceCodes.get(uiSourceCode) !== contentsPromise) {\n      return;\n    }\n    this._loadingUISourceCodes.delete(uiSourceCode);\n\n    if (contents[0] !== null && contents[1] !== null && contents[0] !== contents[1]) {\n      this._markAsModified(uiSourceCode);\n    } else {\n      this._markAsUnmodified(uiSourceCode);\n    }\n  }\n\n  requestOriginalContentForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<string|null> {\n    return this._uiSourceCodeDiff(uiSourceCode)._originalContent();\n  }\n\n  revertToOriginal(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<void> {\n    function callback(content: string|null): void {\n      if (typeof content !== 'string') {\n        return;\n      }\n\n      uiSourceCode.addRevision(content);\n    }\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.RevisionApplied);\n    return this.requestOriginalContentForUISourceCode(uiSourceCode).then(callback);\n  }\n}\n\nexport class UISourceCodeDiff extends Common.ObjectWrapper.ObjectWrapper {\n  _uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  _requestDiffPromise: Promise<Diff.Diff.DiffArray|null>|null;\n  _pendingChanges: number|null;\n  _dispose: boolean;\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this._uiSourceCode = uiSourceCode;\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyChanged, this._uiSourceCodeChanged, this);\n    uiSourceCode.addEventListener(Workspace.UISourceCode.Events.WorkingCopyCommitted, this._uiSourceCodeChanged, this);\n    this._requestDiffPromise = null;\n    this._pendingChanges = null;\n    this._dispose = false;\n  }\n\n  _uiSourceCodeChanged(): void {\n    if (this._pendingChanges) {\n      clearTimeout(this._pendingChanges);\n      this._pendingChanges = null;\n    }\n    this._requestDiffPromise = null;\n\n    const content = this._uiSourceCode.content();\n    const delay = (!content || content.length < 65536) ? 0 : UpdateTimeout;\n    this._pendingChanges = setTimeout(emitDiffChanged.bind(this), delay);\n\n    function emitDiffChanged(this: UISourceCodeDiff): void {\n      if (this._dispose) {\n        return;\n      }\n      this.dispatchEventToListeners(Events.DiffChanged);\n      this._pendingChanges = null;\n    }\n  }\n\n  requestDiff(): Promise<Diff.Diff.DiffArray|null> {\n    if (!this._requestDiffPromise) {\n      this._requestDiffPromise = this._innerRequestDiff();\n    }\n    return this._requestDiffPromise;\n  }\n\n  async _originalContent(): Promise<string|null> {\n    const originalNetworkContent =\n        Persistence.NetworkPersistenceManager.NetworkPersistenceManager.instance().originalContentForUISourceCode(\n            this._uiSourceCode);\n    if (originalNetworkContent) {\n      return originalNetworkContent;\n    }\n\n    const content = await this._uiSourceCode.project().requestFileContent(this._uiSourceCode);\n    return content.content || ('error' in content && content.error) || '';\n  }\n\n  async _innerRequestDiff(): Promise<Diff.Diff.DiffArray|null> {\n    if (this._dispose) {\n      return null;\n    }\n\n    const baseline = await this._originalContent();\n    if (baseline === null) {\n      return null;\n    }\n    if (baseline.length > 1024 * 1024) {\n      return null;\n    }\n    // ------------ ASYNC ------------\n    if (this._dispose) {\n      return null;\n    }\n\n    let current = this._uiSourceCode.workingCopy();\n    if (!current && !this._uiSourceCode.contentLoaded()) {\n      current = ((await this._uiSourceCode.requestContent()).content as string);\n    }\n\n    if (current.length > 1024 * 1024) {\n      return null;\n    }\n\n    if (this._dispose) {\n      return null;\n    }\n\n    if (current === null || baseline === null) {\n      return null;\n    }\n    return Diff.Diff.DiffWrapper.lineDiff(baseline.split(/\\r\\n|\\n|\\r/), current.split(/\\r\\n|\\n|\\r/));\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  DiffChanged = 'DiffChanged',\n  ModifiedStatusChanged = 'ModifiedStatusChanged',\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _instance: WorkspaceDiffImpl|null = null;\n\nexport function workspaceDiff(): WorkspaceDiffImpl {\n  if (!_instance) {\n    _instance = new WorkspaceDiffImpl(Workspace.Workspace.WorkspaceImpl.instance());\n  }\n  return _instance;\n}\n\nexport class DiffUILocation {\n  uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  constructor(uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    this.uiSourceCode = uiSourceCode;\n  }\n}\n\nexport const UpdateTimeout = 200;\n"]}