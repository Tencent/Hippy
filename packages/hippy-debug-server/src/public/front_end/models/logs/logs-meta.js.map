{"version":3,"file":"logs-meta.js","sourceRoot":"","sources":["../../../../../../front_end/models/logs/logs-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAGhD,MAAM,SAAS,GAAG;IAChB;;KAEC;IACD,WAAW,EAAE,cAAc;IAC3B;;;;MAIE;IACF,QAAQ,EAAE,UAAU;IACpB;;;;MAIE;IACF,KAAK,EAAE,OAAO;IACd;;;;MAIE;IACF,KAAK,EAAE,OAAO;IACd;;KAEC;IACD,uBAAuB,EAAE,0CAA0C;IACnE;;KAEC;IACD,4BAA4B,EAAE,iDAAiD;IAC/E;;KAEC;IACD,gBAAgB,EAAE,oBAAoB;CACvC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC;AAChF,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,MAAM,CAAC,QAAQ,CAAC,wBAAwB,CAAC;IACvC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO;IACjD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;IAC5C,WAAW,EAAE,0BAA0B;IACvC,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO;IAChD,YAAY,EAAE,KAAK;IACnB,IAAI,EAAE;QACJ,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;QAC/B,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;KAChC;IACD,OAAO,EAAE;QACP;YACE,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,uBAAuB,CAAC;SACzD;QACD;YACE,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,4BAA4B,CAAC;SAC9D;KACF;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,wBAAwB,CAAC;IACvC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO;IACjD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,gBAAgB,CAAC;IACjD,WAAW,EAAE,wBAAwB;IACrC,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO;IAChD,YAAY,EAAE,IAAI;IAClB,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,kBAAkB,CAAC,OAAO;CACxD,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\n\n\nconst UIStrings = {\n  /**\n *@description Text to preserve the log after refreshing\n */\n  preserveLog: 'Preserve log',\n  /**\n  * @description A term that can be used to search in the command menu, and will find the search\n  * result 'Preserve log on page reload / navigation'. This is an additional search term to help\n  * user find the setting even when they don't know the exact name of it.\n  */\n  preserve: 'preserve',\n  /**\n  * @description A term that can be used to search in the command menu, and will find the search\n  * result 'Preserve log on page reload / navigation'. This is an additional search term to help\n  * user find the setting even when they don't know the exact name of it.\n  */\n  clear: 'clear',\n  /**\n  * @description A term that can be used to search in the command menu, and will find the search\n  * result 'Preserve log on page reload / navigation'. This is an additional search term to help\n  * user find the setting even when they don't know the exact name of it.\n  */\n  reset: 'reset',\n  /**\n *@description Title of a setting under the Network category that can be invoked through the Command Menu\n */\n  preserveLogOnPageReload: 'Preserve log on page reload / navigation',\n  /**\n *@description Title of a setting under the Network category that can be invoked through the Command Menu\n */\n  doNotPreserveLogOnPageReload: 'Do not preserve log on page reload / navigation',\n  /**\n *@description Title of an action in the network tool to toggle recording\n */\n  recordNetworkLog: 'Record network log',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/logs/logs-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  title: i18nLazyString(UIStrings.preserveLog),\n  settingName: 'network_log.preserve-log',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.preserve),\n    i18nLazyString(UIStrings.clear),\n    i18nLazyString(UIStrings.reset),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.preserveLogOnPageReload),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.doNotPreserveLogOnPageReload),\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.NETWORK,\n  title: i18nLazyString(UIStrings.recordNetworkLog),\n  settingName: 'network_log.record-log',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: true,\n  storageType: Common.Settings.SettingStorageType.Session,\n});\n"]}