{"version":3,"file":"ContrastCheckTrigger.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/ContrastCheckTrigger.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nlet contrastCheckTriggerInstance: ContrastCheckTrigger|null = null;\n\nexport class ContrastCheckTrigger extends Common.ObjectWrapper.ObjectWrapper {\n  private pageLoadListeners: WeakMap<SDK.ResourceTreeModel.ResourceTreeModel, Common.EventTarget.EventDescriptor> =\n      new WeakMap();\n  private frameAddedListeners: WeakMap<SDK.ResourceTreeModel.ResourceTreeModel, Common.EventTarget.EventDescriptor> =\n      new WeakMap();\n\n  constructor() {\n    super();\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ResourceTreeModel.ResourceTreeModel, this);\n  }\n\n  static instance({forceNew}: {forceNew: boolean} = {forceNew: false}): ContrastCheckTrigger {\n    if (!contrastCheckTriggerInstance || forceNew) {\n      contrastCheckTriggerInstance = new ContrastCheckTrigger();\n    }\n\n    return contrastCheckTriggerInstance;\n  }\n\n  async modelAdded(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): Promise<void> {\n    this.pageLoadListeners.set(\n        resourceTreeModel,\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.Load, this.pageLoaded, this));\n    this.frameAddedListeners.set(\n        resourceTreeModel,\n        resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameAdded, this.frameAdded, this));\n  }\n\n  modelRemoved(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    const pageLoadListener = this.pageLoadListeners.get(resourceTreeModel);\n    if (pageLoadListener) {\n      Common.EventTarget.EventTarget.removeEventListeners([pageLoadListener]);\n    }\n    const frameAddedListeners = this.frameAddedListeners.get(resourceTreeModel);\n    if (frameAddedListeners) {\n      Common.EventTarget.EventTarget.removeEventListeners([frameAddedListeners]);\n    }\n  }\n\n  private checkContrast(resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel): void {\n    if (!Root.Runtime.experiments.isEnabled('contrastIssues')) {\n      return;\n    }\n    resourceTreeModel.target().auditsAgent().invoke_checkContrast({});\n  }\n\n  private pageLoaded(event: Common.EventTarget.EventTargetEvent): void {\n    const {resourceTreeModel} = event.data as {resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel};\n    this.checkContrast(resourceTreeModel);\n  }\n\n  private async frameAdded(event: Common.EventTarget.EventTargetEvent): Promise<void> {\n    if (!Root.Runtime.experiments.isEnabled('contrastIssues')) {\n      return;\n    }\n    const frame = event.data as SDK.ResourceTreeModel.ResourceTreeFrame;\n    if (!frame.isMainFrame()) {\n      return;\n    }\n    // If the target document finished loading, check the contrast immediately.\n    // Otherwise, it should be triggered when the page load event fires.\n    const response = await frame.resourceTreeModel().target().runtimeAgent().invoke_evaluate(\n        {expression: 'document.readyState', returnByValue: true});\n    if (response.result && response.result.value === 'complete') {\n      this.checkContrast(frame.resourceTreeModel());\n    }\n  }\n}\n"]}