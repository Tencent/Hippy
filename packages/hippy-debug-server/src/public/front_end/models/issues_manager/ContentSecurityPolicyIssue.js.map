{"version":3,"file":"ContentSecurityPolicyIssue.js","sourceRoot":"","sources":["../../../../../../front_end/models/issues_manager/ContentSecurityPolicyIssue.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {Issue, IssueCategory, IssueKind} from './Issue.js';\nimport type {LazyMarkdownIssueDescription, MarkdownIssueDescription} from './MarkdownIssueDescription.js';\nimport {resolveLazyDescription} from './MarkdownIssueDescription.js';\n\n\nconst UIStrings = {\n  /**\n  *@description Title for CSP url link\n  */\n  contentSecurityPolicySource: 'Content Security Policy - Source Allowlists',\n  /**\n  *@description Title for CSP inline issue link\n  */\n  contentSecurityPolicyInlineCode: 'Content Security Policy - Inline Code',\n  /**\n  *@description Title for the CSP eval link\n  */\n  contentSecurityPolicyEval: 'Content Security Policy - Eval',\n  /**\n  *@description Title for Trusted Types policy violation issue link. https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API\n  */\n  trustedTypesFixViolations: 'Trusted Types - Fix violations',\n  /**\n  *@description Title for Trusted Types policy violation issue link. https://developer.mozilla.org/en-US/docs/Web/API/Trusted_Types_API\n  */\n  trustedTypesPolicyViolation: 'Trusted Types - Policy violation',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/issues_manager/ContentSecurityPolicyIssue.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class ContentSecurityPolicyIssue extends Issue {\n  private issueDetails: Protocol.Audits.ContentSecurityPolicyIssueDetails;\n\n  constructor(\n      issueDetails: Protocol.Audits.ContentSecurityPolicyIssueDetails, issuesModel: SDK.IssuesModel.IssuesModel) {\n    const issueCode = [\n      Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n      issueDetails.contentSecurityPolicyViolationType,\n    ].join('::');\n    super(issueCode, issuesModel);\n    this.issueDetails = issueDetails;\n  }\n\n  getCategory(): IssueCategory {\n    return IssueCategory.ContentSecurityPolicy;\n  }\n\n  primaryKey(): string {\n    return JSON.stringify(this.issueDetails, [\n      'blockedURL',\n      'contentSecurityPolicyViolationType',\n      'violatedDirective',\n      'isReportOnly',\n      'sourceCodeLocation',\n      'url',\n      'lineNumber',\n      'columnNumber',\n      'violatingNodeId',\n    ]);\n  }\n\n  getDescription(): MarkdownIssueDescription|null {\n    const description = issueDescriptions.get(this.issueDetails.contentSecurityPolicyViolationType);\n    if (!description) {\n      return null;\n    }\n    return resolveLazyDescription(description);\n  }\n\n  details(): Protocol.Audits.ContentSecurityPolicyIssueDetails {\n    return this.issueDetails;\n  }\n\n  getKind(): IssueKind {\n    if (this.issueDetails.isReportOnly) {\n      return IssueKind.Improvement;\n    }\n    return IssueKind.PageError;\n  }\n\n  static fromInspectorIssue(issuesModel: SDK.IssuesModel.IssuesModel, inspectorIssue: Protocol.Audits.InspectorIssue):\n      ContentSecurityPolicyIssue[] {\n    const cspDetails = inspectorIssue.details.contentSecurityPolicyIssueDetails;\n    if (!cspDetails) {\n      console.warn('Content security policy issue without details received.');\n      return [];\n    }\n    return [new ContentSecurityPolicyIssue(cspDetails, issuesModel)];\n  }\n}\n\nconst cspURLViolation = {\n  file: 'cspURLViolation.md',\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#source_allowlists',\n    linkTitle: i18nLazyString(UIStrings.contentSecurityPolicySource),\n  }],\n};\n\nconst cspInlineViolation = {\n  file: 'cspInlineViolation.md',\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#inline_code_is_considered_harmful',\n    linkTitle: i18nLazyString(UIStrings.contentSecurityPolicyInlineCode),\n  }],\n};\n\nconst cspEvalViolation = {\n  file: 'cspEvalViolation.md',\n  links: [{\n    link: 'https://developers.google.com/web/fundamentals/security/csp#eval_too',\n    linkTitle: i18nLazyString(UIStrings.contentSecurityPolicyEval),\n  }],\n};\n\nconst cspTrustedTypesSinkViolation = {\n  file: 'cspTrustedTypesSinkViolation.md',\n  links: [{\n    link: 'https://web.dev/trusted-types/#fix-the-violations',\n    linkTitle: i18nLazyString(UIStrings.trustedTypesFixViolations),\n  }],\n};\n\nconst cspTrustedTypesPolicyViolation = {\n  file: 'cspTrustedTypesPolicyViolation.md',\n  links: [{link: 'https://web.dev/trusted-types/', linkTitle: i18nLazyString(UIStrings.trustedTypesPolicyViolation)}],\n};\n\nexport const urlViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KURLViolation,\n].join('::');\n\nexport const inlineViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KInlineViolation,\n].join('::');\n\nexport const evalViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KEvalViolation,\n].join('::');\n\nexport const trustedTypesSinkViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesSinkViolation,\n].join('::');\n\nexport const trustedTypesPolicyViolationCode = [\n  Protocol.Audits.InspectorIssueCode.ContentSecurityPolicyIssue,\n  Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesPolicyViolation,\n].join('::');\n\nconst issueDescriptions: Map<Protocol.Audits.ContentSecurityPolicyViolationType, LazyMarkdownIssueDescription> =\n    new Map([\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KURLViolation, cspURLViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KInlineViolation, cspInlineViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KEvalViolation, cspEvalViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesSinkViolation, cspTrustedTypesSinkViolation],\n      [Protocol.Audits.ContentSecurityPolicyViolationType.KTrustedTypesPolicyViolation, cspTrustedTypesPolicyViolation],\n    ]);\n"]}