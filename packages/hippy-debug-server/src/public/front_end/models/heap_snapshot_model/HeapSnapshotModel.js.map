{"version":3,"file":"HeapSnapshotModel.js","sourceRoot":"","sources":["../../../../../../front_end/models/heap_snapshot_model/HeapSnapshotModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nexport const HeapSnapshotProgressEvent = {\n  Update: 'ProgressUpdate',\n  BrokenSnapshot: 'BrokenSnapshot',\n};\n\nexport const baseSystemDistance = 100000000;\n\nexport class AllocationNodeCallers {\n  nodesWithSingleCaller: SerializedAllocationNode[];\n  branchingCallers: SerializedAllocationNode[];\n  constructor(nodesWithSingleCaller: SerializedAllocationNode[], branchingCallers: SerializedAllocationNode[]) {\n    this.nodesWithSingleCaller = nodesWithSingleCaller;\n    this.branchingCallers = branchingCallers;\n  }\n}\n\nexport class SerializedAllocationNode {\n  id: number;\n  name: string;\n  scriptName: string;\n  scriptId: number;\n  line: number;\n  column: number;\n  count: number;\n  size: number;\n  liveCount: number;\n  liveSize: number;\n  hasChildren: boolean;\n  constructor(\n      nodeId: number, functionName: string, scriptName: string, scriptId: number, line: number, column: number,\n      count: number, size: number, liveCount: number, liveSize: number, hasChildren: boolean) {\n    this.id = nodeId;\n    this.name = functionName;\n    this.scriptName = scriptName;\n    this.scriptId = scriptId;\n    this.line = line;\n    this.column = column;\n    this.count = count;\n    this.size = size;\n    this.liveCount = liveCount;\n    this.liveSize = liveSize;\n    this.hasChildren = hasChildren;\n  }\n}\n\nexport class AllocationStackFrame {\n  functionName: string;\n  scriptName: string;\n  scriptId: number;\n  line: number;\n  column: number;\n  constructor(functionName: string, scriptName: string, scriptId: number, line: number, column: number) {\n    this.functionName = functionName;\n    this.scriptName = scriptName;\n    this.scriptId = scriptId;\n    this.line = line;\n    this.column = column;\n  }\n}\n\nexport class Node {\n  id: number;\n  name: string;\n  distance: number;\n  nodeIndex: number;\n  retainedSize: number;\n  selfSize: number;\n  type: string;\n  canBeQueried: boolean;\n  detachedDOMTreeNode: boolean;\n  isAddedNotRemoved: boolean|null;\n  constructor(\n      id: number, name: string, distance: number, nodeIndex: number, retainedSize: number, selfSize: number,\n      type: string) {\n    this.id = id;\n    this.name = name;\n    this.distance = distance;\n    this.nodeIndex = nodeIndex;\n    this.retainedSize = retainedSize;\n    this.selfSize = selfSize;\n    this.type = type;\n\n    this.canBeQueried = false;\n    this.detachedDOMTreeNode = false;\n    this.isAddedNotRemoved = null;\n  }\n}\n\nexport class Edge {\n  name: string;\n  node: Node;\n  type: string;\n  edgeIndex: number;\n  isAddedNotRemoved: boolean|null;\n  constructor(name: string, node: Node, type: string, edgeIndex: number) {\n    this.name = name;\n    this.node = node;\n    this.type = type;\n    this.edgeIndex = edgeIndex;\n    this.isAddedNotRemoved = null;\n  }\n}\n\nexport class Aggregate {\n  count!: number;\n  distance!: number;\n  self!: number;\n  maxRet!: number;\n  type!: number;\n  name!: string;\n  idxs!: number[];\n  constructor() {\n  }\n}\n\nexport class AggregateForDiff {\n  indexes: number[];\n  ids: number[];\n  selfSizes: number[];\n  constructor() {\n    this.indexes = [];\n    this.ids = [];\n    this.selfSizes = [];\n  }\n}\n\nexport class Diff {\n  addedCount: number;\n  removedCount: number;\n  addedSize: number;\n  removedSize: number;\n  deletedIndexes: number[];\n  addedIndexes: number[];\n  countDelta!: number;\n  sizeDelta!: number;\n  constructor() {\n    this.addedCount = 0;\n    this.removedCount = 0;\n    this.addedSize = 0;\n    this.removedSize = 0;\n    this.deletedIndexes = [];\n    this.addedIndexes = [];\n  }\n}\n\nexport class DiffForClass {\n  addedCount!: number;\n  removedCount!: number;\n  addedSize!: number;\n  removedSize!: number;\n  deletedIndexes!: number[];\n  addedIndexes!: number[];\n  countDelta!: number;\n  sizeDelta!: number;\n  constructor() {\n  }\n}\n\nexport class ComparatorConfig {\n  fieldName1: string;\n  ascending1: boolean;\n  fieldName2: string;\n  ascending2: boolean;\n  constructor(fieldName1: string, ascending1: boolean, fieldName2: string, ascending2: boolean) {\n    this.fieldName1 = fieldName1;\n    this.ascending1 = ascending1;\n    this.fieldName2 = fieldName2;\n    this.ascending2 = ascending2;\n  }\n}\n\nexport class WorkerCommand {\n  callId!: number;\n  disposition!: string;\n  objectId!: number;\n  newObjectId!: number;\n  methodName!: string;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  methodArguments!: any[];\n  source!: string;\n  constructor() {\n  }\n}\n\nexport class ItemsRange {\n  startPosition: number;\n  endPosition: number;\n  totalLength: number;\n  items: (Node|Edge)[];\n  constructor(startPosition: number, endPosition: number, totalLength: number, items: (Node|Edge)[]) {\n    this.startPosition = startPosition;\n    this.endPosition = endPosition;\n    this.totalLength = totalLength;\n    this.items = items;\n  }\n}\n\nexport class StaticData {\n  nodeCount: number;\n  rootNodeIndex: number;\n  totalSize: number;\n  maxJSObjectId: number;\n  constructor(nodeCount: number, rootNodeIndex: number, totalSize: number, maxJSObjectId: number) {\n    this.nodeCount = nodeCount;\n    this.rootNodeIndex = rootNodeIndex;\n    this.totalSize = totalSize;\n    this.maxJSObjectId = maxJSObjectId;\n  }\n}\n\nexport class Statistics {\n  total!: number;\n  v8heap!: number;\n  native!: number;\n  code!: number;\n  jsArrays!: number;\n  strings!: number;\n  system!: number;\n  constructor() {\n  }\n}\n\nexport class NodeFilter {\n  minNodeId: number|undefined;\n  maxNodeId: number|undefined;\n  allocationNodeId!: number|undefined;\n  constructor(minNodeId?: number, maxNodeId?: number) {\n    this.minNodeId = minNodeId;\n    this.maxNodeId = maxNodeId;\n  }\n\n  equals(o: NodeFilter): boolean {\n    return this.minNodeId === o.minNodeId && this.maxNodeId === o.maxNodeId &&\n        this.allocationNodeId === o.allocationNodeId;\n  }\n}\n\nexport class SearchConfig {\n  query: string;\n  caseSensitive: boolean;\n  isRegex: boolean;\n  shouldJump: boolean;\n  jumpBackward: boolean;\n  constructor(query: string, caseSensitive: boolean, isRegex: boolean, shouldJump: boolean, jumpBackward: boolean) {\n    this.query = query;\n    this.caseSensitive = caseSensitive;\n    this.isRegex = isRegex;\n    this.shouldJump = shouldJump;\n    this.jumpBackward = jumpBackward;\n  }\n\n  toSearchRegex(_global?: boolean): RegExp {\n    throw new Error('Unsupported operation on search config');\n  }\n}\n\nexport class Samples {\n  timestamps: number[];\n  lastAssignedIds: number[];\n  sizes: number[];\n  constructor(timestamps: number[], lastAssignedIds: number[], sizes: number[]) {\n    this.timestamps = timestamps;\n    this.lastAssignedIds = lastAssignedIds;\n    this.sizes = sizes;\n  }\n}\n\nexport class Location {\n  scriptId: number;\n  lineNumber: number;\n  columnNumber: number;\n  constructor(scriptId: number, lineNumber: number, columnNumber: number) {\n    this.scriptId = scriptId;\n    this.lineNumber = lineNumber;\n    this.columnNumber = columnNumber;\n  }\n}\n"]}