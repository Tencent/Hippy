{"version":3,"file":"RecordingScriptWriter.js","sourceRoot":"","sources":["../../../../../../front_end/models/recorder/RecordingScriptWriter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport type {Step, ClickStep, StepWithFrameContext, ChangeStep, SubmitStep, UserFlow, EmulateNetworkConditionsStep, KeyDownStep, KeyUpStep, CloseStep, ViewportStep} from './Steps.js';\nimport {assertAllStepTypesAreHandled} from './Steps.js';\n\nexport class RecordingScriptWriter {\n  private indentation: string;\n  private script: string[] = [];\n  private currentIndentation = 0;\n\n  constructor(indentation: string) {\n    this.indentation = indentation;\n  }\n\n  appendLineToScript(line: string): void {\n    this.script.push(line ? this.indentation.repeat(this.currentIndentation) + line.trimRight() : '');\n  }\n\n  appendTarget(target: string): void {\n    if (target === 'main') {\n      this.appendLineToScript('const targetPage = page;');\n    } else {\n      this.appendLineToScript(`const target = await browser.waitForTarget(t => t.url === ${JSON.stringify(target)});`);\n      this.appendLineToScript('const targetPage = await target.page();');\n    }\n  }\n\n  appendFrame(path: number[]): void {\n    this.appendLineToScript('let frame = targetPage.mainFrame();');\n    for (const index of path) {\n      this.appendLineToScript(`frame = frame.childFrames()[${index}];`);\n    }\n  }\n\n  appendContext(step: StepWithFrameContext): void {\n    this.appendTarget(step.context.target);\n    this.appendFrame(step.context.path);\n  }\n\n  appendClickStep(step: ClickStep): void {\n    this.appendLineToScript(`const element = await frame.waitForSelector(${JSON.stringify(step.selector)});`);\n    this.appendLineToScript('await element.click();');\n  }\n\n  appendChangeStep(step: ChangeStep): void {\n    this.appendLineToScript(`const element = await frame.waitForSelector(${JSON.stringify(step.selector)});`);\n    this.appendLineToScript(`await element.type(${JSON.stringify(step.value)});`);\n  }\n\n  appendSubmitStep(step: SubmitStep): void {\n    this.appendLineToScript(`const element = await frame.waitForSelector(${JSON.stringify(step.selector)});`);\n    this.appendLineToScript('await element.evaluate(form => form.submit());');\n  }\n\n  appendEmulateNetworkConditionsStep(step: EmulateNetworkConditionsStep): void {\n    this.appendLineToScript('await page.emulateNetworkConditions({');\n    this.appendLineToScript(`  offline: ${!step.conditions.download && !step.conditions.upload},`);\n    this.appendLineToScript(`  downloadThroughput: ${step.conditions.download},`);\n    this.appendLineToScript(`  uploadThroughput: ${step.conditions.upload},`);\n    this.appendLineToScript(`  latency: ${step.conditions.latency},`);\n    this.appendLineToScript('});');\n  }\n\n  appendKeyDownStep(step: KeyDownStep): void {\n    this.appendLineToScript(`await targetPage.keyboard.down(${JSON.stringify(step.key)});`);\n  }\n\n  appendKeyUpStep(step: KeyUpStep): void {\n    this.appendLineToScript(`await targetPage.keyboard.up(${JSON.stringify(step.key)});`);\n  }\n\n  appendCloseStep(_step: CloseStep): void {\n    this.appendLineToScript('await targetPage.close()');\n  }\n\n  appendViewportStep(step: ViewportStep): void {\n    this.appendLineToScript(\n        `await targetPage.setViewport(${JSON.stringify({width: step.width, height: step.height})}})`);\n  }\n\n  appendStepType(step: Step): void {\n    switch (step.type) {\n      case 'click':\n        return this.appendClickStep(step);\n      case 'change':\n        return this.appendChangeStep(step);\n      case 'submit':\n        return this.appendSubmitStep(step);\n      case 'emulateNetworkConditions':\n        return this.appendEmulateNetworkConditionsStep(step);\n      case 'keydown':\n        return this.appendKeyDownStep(step);\n      case 'keyup':\n        return this.appendKeyUpStep(step);\n      case 'close':\n        return this.appendCloseStep(step);\n      case 'viewport':\n        return this.appendViewportStep(step);\n      default:\n        return assertAllStepTypesAreHandled(step);\n    }\n  }\n\n\n  appendStep(step: Step): void {\n    this.appendLineToScript('{');\n    this.currentIndentation += 1;\n\n    if ('condition' in step && step.condition && step.condition.type === 'waitForNavigation') {\n      this.appendLineToScript('const promise = targetPage.waitForNavigation();');\n    }\n\n    if ('context' in step) {\n      this.appendContext(step);\n    }\n\n    this.appendStepType(step);\n\n    if ('condition' in step) {\n      this.appendLineToScript('await promise;');\n    }\n\n    this.currentIndentation -= 1;\n    this.appendLineToScript('}');\n  }\n\n  getCurrentScript(): string {\n    // Scripts should end with a final blank line.\n    return this.script.join('\\n') + '\\n';\n  }\n\n  getScript(recording: UserFlow): string {\n    this.script = [];\n    this.appendLineToScript('const puppeteer = require(\\'puppeteer\\');');\n    this.appendLineToScript('');\n    this.appendLineToScript('(async () => {');\n    this.currentIndentation += 1;\n    this.appendLineToScript('const browser = await puppeteer.launch();');\n    this.appendLineToScript('const page = await browser.newPage();');\n    this.appendLineToScript('');\n\n    for (const section of recording.sections) {\n      for (const step of section.steps) {\n        this.appendStep(step);\n      }\n    }\n\n    this.appendLineToScript('');\n    this.appendLineToScript('await browser.close();');\n    this.currentIndentation -= 1;\n    this.appendLineToScript('})();');\n\n    // Scripts should end with a final blank line.\n    return this.getCurrentScript();\n  }\n}\n"]}