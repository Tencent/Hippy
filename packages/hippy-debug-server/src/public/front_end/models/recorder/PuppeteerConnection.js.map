{"version":3,"file":"PuppeteerConnection.js","sourceRoot":"","sources":["../../../../../../front_end/models/recorder/PuppeteerConnection.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as puppeteer from '../../third_party/puppeteer/puppeteer.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class Transport implements puppeteer.ConnectionTransport {\n  private connection: SDK.Connections.ParallelConnection;\n  private knownIds = new Set<number>();\n  private knownTargets = new Set<string>();\n\n  constructor(connection: SDK.Connections.ParallelConnection) {\n    this.connection = connection;\n  }\n\n  send(data: string): void {\n    const message = JSON.parse(data);\n    this.knownIds.add(message.id);\n    this.connection.sendRawMessage(data);\n  }\n\n  close(): void {\n    this.connection.disconnect();\n  }\n\n  set onmessage(cb: (message: string) => void) {\n    this.connection.setOnMessage((message: Object) => {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const data = (message) as {id: number, method: string, params: any, sessionId?: string};\n      if (data.id && !this.knownIds.has(data.id)) {\n        return;\n      }\n      this.knownIds.delete(data.id);\n\n      if (data.method === 'Target.targetCreated') {\n        this.knownTargets.add(data.params.targetInfo.targetId);\n      } else if (data.method === 'Target.targetInfoChanged') {\n        if (!this.knownTargets.has(data.params.targetId)) {\n          // This target is not known to puppeteer - skip passing information\n          return;\n        }\n      } else if (data.method === 'Target.targetDestroyed') {\n        if (!this.knownTargets.has(data.params.targetId)) {\n          // This target is not known to puppeteer - skip passing information\n          return;\n        }\n        this.knownTargets.delete(data.params.targetId);\n      }\n      if (!data.sessionId) {\n        return;\n      }\n      if (data.sessionId === this.connection._sessionId) {\n        delete data.sessionId;\n      }\n      cb(JSON.stringify(data));\n    });\n  }\n\n  set onclose(cb: () => void) {\n    const prev = this.connection._onDisconnect;\n    this.connection.setOnDisconnect(reason => {\n      if (prev) {\n        prev(reason);\n      }\n      if (cb) {\n        cb();\n      }\n    });\n  }\n}\n\n\nexport async function getPuppeteerConnection():\n    Promise<{page: puppeteer.Page | null, connection: SDK.Connections.ParallelConnection, browser: puppeteer.Browser}> {\n  const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n  if (!mainTarget) {\n    throw new Error('Could not find main target');\n  }\n  const childTargetManager = mainTarget.model(SDK.ChildTargetManager.ChildTargetManager);\n  if (!childTargetManager) {\n    throw new Error('Could not get childTargetManager');\n  }\n  // Pass an empty message handler because it will be overwritten by puppeteer anyways.\n  const rawConnection =\n      await childTargetManager.createParallelConnection(() => {}) as SDK.Connections.ParallelConnection;\n\n  const transport = new Transport(rawConnection);\n\n  // url is an empty string in this case parallel to:\n  // https://github.com/puppeteer/puppeteer/blob/f63a123ecef86693e6457b07437a96f108f3e3c5/src/common/BrowserConnector.ts#L72\n  const connection = new puppeteer.Connection('', transport);\n  const mainTargetId = await childTargetManager._getParentTargetId();\n  const browser = await puppeteer.Browser.create(\n      connection, [], false, undefined, undefined, undefined, (targetInfo: Protocol.Target.TargetInfo) => {\n        return targetInfo.targetId === mainTargetId;\n      });\n\n  const resourceTreeModel = mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n  if (!resourceTreeModel) {\n    throw new Error('Could not get resource tree model');\n  }\n  const mainFrame = resourceTreeModel.mainFrame;\n\n  if (!mainFrame) {\n    throw new Error('Could not find main frame');\n  }\n\n  const page = await browser.pages().then(pages => pages.find(p => p.mainFrame()._id === mainFrame.id) || null);\n\n  return {page, connection: rawConnection, browser};\n}\n"]}