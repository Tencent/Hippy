{"version":3,"file":"Importer.js","sourceRoot":"","sources":["../../../../../../front_end/models/har/Importer.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport type {HAREntry, HARLog, HARPage, HARTimings} from './HARFormat.js'; // eslint-disable-line no-unused-vars\n\nexport class Importer {\n  static requestsFromHARLog(log: HARLog): SDK.NetworkRequest.NetworkRequest[] {\n    const pages = new Map<string, HARPage>();\n    for (const page of log.pages) {\n      pages.set(page.id, page);\n    }\n\n    log.entries.sort((a, b) => a.startedDateTime.valueOf() - b.startedDateTime.valueOf());\n\n    const pageLoads = new Map<string, SDK.PageLoad.PageLoad>();\n    const requests: SDK.NetworkRequest.NetworkRequest[] = [];\n    for (const entry of log.entries) {\n      const pageref = entry.pageref;\n      let pageLoad: SDK.PageLoad.PageLoad|(SDK.PageLoad.PageLoad | undefined) =\n          pageref ? pageLoads.get(pageref) : undefined;\n      const documentURL = pageLoad ? pageLoad.mainRequest.url() : entry.request.url;\n\n      let initiator: {\n        type: Protocol.Network.InitiatorType,\n        url: string|undefined,\n        lineNumber: number|undefined,\n      }|null = null;\n      const initiatorEntry = entry.customInitiator();\n      if (initiatorEntry) {\n        initiator = {\n          type: (initiatorEntry.type as Protocol.Network.InitiatorType),\n          url: initiatorEntry.url,\n          lineNumber: initiatorEntry.lineNumber,\n        };\n      }\n\n      const request = new SDK.NetworkRequest.NetworkRequest(\n          'har-' + requests.length, entry.request.url, documentURL, '', '', initiator);\n      const page = pageref ? pages.get(pageref) : undefined;\n      if (!pageLoad && pageref && page) {\n        pageLoad = Importer._buildPageLoad(page, request);\n        pageLoads.set(pageref, pageLoad);\n      }\n      Importer._fillRequestFromHAREntry(request, entry, pageLoad);\n      if (pageLoad) {\n        pageLoad.bindRequest(request);\n      }\n      requests.push(request);\n    }\n    return requests;\n  }\n\n  static _buildPageLoad(page: HARPage, mainRequest: SDK.NetworkRequest.NetworkRequest): SDK.PageLoad.PageLoad {\n    const pageLoad = new SDK.PageLoad.PageLoad(mainRequest);\n    pageLoad.startTime = page.startedDateTime.valueOf();\n    pageLoad.contentLoadTime = Number(page.pageTimings.onContentLoad) * 1000;\n    pageLoad.loadTime = Number(page.pageTimings.onLoad) * 1000;\n    return pageLoad;\n  }\n\n  static _fillRequestFromHAREntry(\n      request: SDK.NetworkRequest.NetworkRequest, entry: HAREntry, pageLoad: SDK.PageLoad.PageLoad|undefined): void {\n    // Request data.\n    if (entry.request.postData) {\n      request.setRequestFormData(true, entry.request.postData.text);\n    } else {\n      request.setRequestFormData(false, null);\n    }\n    request.connectionId = entry.connection || '';\n    request.requestMethod = entry.request.method;\n    request.setRequestHeaders(entry.request.headers);\n\n    // Response data.\n    if (entry.response.content.mimeType && entry.response.content.mimeType !== 'x-unknown') {\n      request.mimeType = (entry.response.content.mimeType as SDK.NetworkRequest.MIME_TYPE);\n    }\n    request.responseHeaders = entry.response.headers;\n    request.statusCode = entry.response.status;\n    request.statusText = entry.response.statusText;\n    let protocol = entry.response.httpVersion.toLowerCase();\n    if (protocol === 'http/2.0') {\n      protocol = 'h2';\n    }\n    request.protocol = protocol.replace(/^http\\/2\\.0?\\+quic/, 'http/2+quic');\n\n    // Timing data.\n    const issueTime = entry.startedDateTime.getTime() / 1000;\n    request.setIssueTime(issueTime, issueTime);\n\n    // Content data.\n    const contentSize = entry.response.content.size > 0 ? entry.response.content.size : 0;\n    const headersSize = entry.response.headersSize > 0 ? entry.response.headersSize : 0;\n    const bodySize = entry.response.bodySize > 0 ? entry.response.bodySize : 0;\n    request.resourceSize = contentSize || (headersSize + bodySize);\n    let transferSize = entry.response.customAsNumber('transferSize');\n    if (transferSize === undefined) {\n      transferSize = entry.response.headersSize + entry.response.bodySize;\n    }\n    request.setTransferSize(transferSize >= 0 ? transferSize : 0);\n\n    const fromCache = entry.customAsString('fromCache');\n    if (fromCache === 'memory') {\n      request.setFromMemoryCache();\n    } else if (fromCache === 'disk') {\n      request.setFromDiskCache();\n    }\n\n    const contentText = entry.response.content.text;\n    const contentData = {\n      error: null,\n      content: contentText ? contentText : null,\n      encoded: entry.response.content.encoding === 'base64',\n    };\n    request.setContentDataProvider(async () => contentData);\n\n    // Timing data.\n    Importer._setupTiming(request, issueTime, entry.time, entry.timings);\n\n    // Meta data.\n    request.setRemoteAddress(entry.serverIPAddress || '', 80);  // Har does not support port numbers.\n    request.setResourceType(Importer._getResourceType(request, entry, pageLoad));\n\n    const priority = entry.customAsString('priority');\n    if (priority && Protocol.Network.ResourcePriority.hasOwnProperty(priority)) {\n      request.setPriority((priority as Protocol.Network.ResourcePriority));\n    }\n\n    const messages = entry.customAsArray('webSocketMessages');\n    if (messages) {\n      for (const message of messages) {\n        if (message.time === undefined) {\n          continue;\n        }\n        if (!Object.values(SDK.NetworkRequest.WebSocketFrameType).includes(message.type)) {\n          continue;\n        }\n        if (message.opcode === undefined) {\n          continue;\n        }\n        if (message.data === undefined) {\n          continue;\n        }\n\n        const mask = message.type === SDK.NetworkRequest.WebSocketFrameType.Send;\n        request.addFrame(\n            {time: message.time, text: message.data, opCode: message.opcode, mask: mask, type: message.type});\n      }\n    }\n\n    request.finished = true;\n  }\n\n  static _getResourceType(\n      request: SDK.NetworkRequest.NetworkRequest, entry: HAREntry,\n      pageLoad: SDK.PageLoad.PageLoad|undefined): Common.ResourceType.ResourceType {\n    const customResourceTypeName = entry.customAsString('resourceType');\n    if (customResourceTypeName) {\n      const customResourceType = Common.ResourceType.ResourceType.fromName(customResourceTypeName);\n      if (customResourceType) {\n        return customResourceType;\n      }\n    }\n\n    if (pageLoad && pageLoad.mainRequest === request) {\n      return Common.ResourceType.resourceTypes.Document;\n    }\n\n    const resourceTypeFromMime = Common.ResourceType.ResourceType.fromMimeType(entry.response.content.mimeType);\n    if (resourceTypeFromMime !== Common.ResourceType.resourceTypes.Other) {\n      return resourceTypeFromMime;\n    }\n\n    const resourceTypeFromUrl = Common.ResourceType.ResourceType.fromURL(entry.request.url);\n    if (resourceTypeFromUrl) {\n      return resourceTypeFromUrl;\n    }\n\n    return Common.ResourceType.resourceTypes.Other;\n  }\n\n  static _setupTiming(\n      request: SDK.NetworkRequest.NetworkRequest, issueTime: number, entryTotalDuration: number,\n      timings: HARTimings): void {\n    function accumulateTime(timing: number|undefined): number {\n      if (timing === undefined || timing < 0) {\n        return -1;\n      }\n      lastEntry += timing;\n      return lastEntry;\n    }\n    let lastEntry = timings.blocked && (timings.blocked >= 0) ? timings.blocked : 0;\n\n    const proxy = timings.customAsNumber('blocked_proxy') || -1;\n    const queueing = timings.customAsNumber('blocked_queueing') || -1;\n\n    // SSL is part of connect for both HAR and Chrome's format so subtract it here.\n    const ssl = timings.ssl && (timings.ssl >= 0) ? timings.ssl : 0;\n    if (timings.connect && (timings.connect > 0)) {\n      timings.connect -= ssl;\n    }\n    const timing = {\n      proxyStart: proxy > 0 ? lastEntry - proxy : -1,\n      proxyEnd: proxy > 0 ? lastEntry : -1,\n      requestTime: issueTime + (queueing > 0 ? queueing : 0) / 1000,\n      dnsStart: timings.dns && (timings.dns >= 0) ? lastEntry : -1,\n      dnsEnd: accumulateTime(timings.dns),\n\n      // Add ssl to end time without modifying lastEntry (see comment above).\n      connectStart: timings.connect && (timings.connect >= 0) ? lastEntry : -1,\n      connectEnd: accumulateTime(timings.connect) + ssl,\n\n      // Now update lastEntry to add ssl timing back in (see comment above).\n      sslStart: timings.ssl && (timings.ssl >= 0) ? lastEntry : -1,\n      sslEnd: accumulateTime(timings.ssl),\n\n      workerStart: -1,\n      workerReady: -1,\n      workerFetchStart: -1,\n      workerRespondWithSettled: -1,\n      sendStart: timings.send >= 0 ? lastEntry : -1,\n      sendEnd: accumulateTime(timings.send),\n      pushStart: 0,\n      pushEnd: 0,\n      receiveHeadersEnd: accumulateTime(timings.wait),\n    };\n    accumulateTime(timings.receive);\n\n    request.timing = timing;\n    request.endTime = issueTime + Math.max(entryTotalDuration, lastEntry) / 1000;\n  }\n}\n"]}