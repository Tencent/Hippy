{"version":3,"file":"SourceFormatter.js","sourceRoot":"","sources":["../../../../../../front_end/models/formatter/SourceFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as TextUtils from '../text_utils/text_utils.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport type {FormatterSourceMapping} from './ScriptFormatter.js';\nimport {FormatterInterface} from './ScriptFormatter.js';  // eslint-disable-line no-unused-vars\n\nconst objectToFormattingResult = new WeakMap<Object, SourceFormatData>();\n\nexport class SourceFormatData {\n  originalSourceCode: Workspace.UISourceCode.UISourceCode;\n  formattedSourceCode: Workspace.UISourceCode.UISourceCode;\n  mapping: FormatterSourceMapping;\n\n  constructor(\n      originalSourceCode: Workspace.UISourceCode.UISourceCode, formattedSourceCode: Workspace.UISourceCode.UISourceCode,\n      mapping: FormatterSourceMapping) {\n    this.originalSourceCode = originalSourceCode;\n    this.formattedSourceCode = formattedSourceCode;\n    this.mapping = mapping;\n  }\n\n  originalPath(): string {\n    return this.originalSourceCode.project().id() + ':' + this.originalSourceCode.url();\n  }\n\n  static _for(object: Object): SourceFormatData|null {\n    return objectToFormattingResult.get(object) || null;\n  }\n}\n\nlet sourceFormatterInstance: SourceFormatter|null = null;\n\nexport class SourceFormatter {\n  _projectId: string;\n  _project: Bindings.ContentProviderBasedProject.ContentProviderBasedProject;\n  _formattedSourceCodes: Map<Workspace.UISourceCode.UISourceCode, {\n    promise: Promise<SourceFormatData>,\n    formatData: SourceFormatData|null,\n  }>;\n  _scriptMapping: ScriptMapping;\n  _styleMapping: StyleMapping;\n\n  constructor() {\n    this._projectId = 'formatter:';\n    this._project = new Bindings.ContentProviderBasedProject.ContentProviderBasedProject(\n        Workspace.Workspace.WorkspaceImpl.instance(), this._projectId, Workspace.Workspace.projectTypes.Formatter,\n        'formatter', true /* isServiceProject */);\n\n    this._formattedSourceCodes = new Map();\n    this._scriptMapping = new ScriptMapping();\n    this._styleMapping = new StyleMapping();\n    Workspace.Workspace.WorkspaceImpl.instance().addEventListener(\n        Workspace.Workspace.Events.UISourceCodeRemoved, event => {\n          this._onUISourceCodeRemoved(event);\n        }, this);\n  }\n\n  static instance(): SourceFormatter {\n    if (!sourceFormatterInstance) {\n      sourceFormatterInstance = new SourceFormatter();\n    }\n    return sourceFormatterInstance;\n  }\n\n  async _onUISourceCodeRemoved(event: Common.EventTarget.EventTargetEvent): Promise<void> {\n    const uiSourceCode = (event.data as Workspace.UISourceCode.UISourceCode);\n    const cacheEntry = this._formattedSourceCodes.get(uiSourceCode);\n    if (cacheEntry && cacheEntry.formatData) {\n      await this._discardFormatData(cacheEntry.formatData);\n    }\n    this._formattedSourceCodes.delete(uiSourceCode);\n  }\n\n  async discardFormattedUISourceCode(formattedUISourceCode: Workspace.UISourceCode.UISourceCode):\n      Promise<Workspace.UISourceCode.UISourceCode|null> {\n    const formatData = SourceFormatData._for(formattedUISourceCode);\n    if (!formatData) {\n      return null;\n    }\n    await this._discardFormatData(formatData);\n    this._formattedSourceCodes.delete(formatData.originalSourceCode);\n    return formatData.originalSourceCode;\n  }\n\n  async _discardFormatData(formatData: SourceFormatData): Promise<void> {\n    objectToFormattingResult.delete(formatData.formattedSourceCode);\n    await this._scriptMapping._setSourceMappingEnabled(formatData, false);\n    this._styleMapping._setSourceMappingEnabled(formatData, false);\n    this._project.removeFile(formatData.formattedSourceCode.url());\n  }\n\n  hasFormatted(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return this._formattedSourceCodes.has(uiSourceCode);\n  }\n\n  getOriginalUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): Workspace.UISourceCode.UISourceCode {\n    const formatData = objectToFormattingResult.get(uiSourceCode);\n    if (!formatData) {\n      return uiSourceCode;\n    }\n    return formatData.originalSourceCode;\n  }\n\n  async format(uiSourceCode: Workspace.UISourceCode.UISourceCode): Promise<SourceFormatData> {\n    const cacheEntry = this._formattedSourceCodes.get(uiSourceCode);\n    if (cacheEntry) {\n      return cacheEntry.promise;\n    }\n\n    const resultPromise = new Promise<SourceFormatData>(async resolve => {\n      const {content} = await uiSourceCode.requestContent();\n\n      FormatterInterface.format(\n          uiSourceCode.contentType(), uiSourceCode.mimeType(), content || '',\n          async (formattedContent, formatterMapping) => {\n            const cacheEntry = this._formattedSourceCodes.get(uiSourceCode);\n            if (!cacheEntry || cacheEntry.promise !== resultPromise) {\n              return;\n            }\n            let formattedURL;\n            let count = 0;\n            let suffix = '';\n            do {\n              formattedURL = `${uiSourceCode.url()}:formatted${suffix}`;\n              suffix = `:${count++}`;\n            } while (this._project.uiSourceCodeForURL(formattedURL));\n            const contentProvider = TextUtils.StaticContentProvider.StaticContentProvider.fromString(\n                formattedURL, uiSourceCode.contentType(), formattedContent);\n            const formattedUISourceCode = this._project.createUISourceCode(formattedURL, contentProvider.contentType());\n            const formatData = new SourceFormatData(uiSourceCode, formattedUISourceCode, formatterMapping);\n            objectToFormattingResult.set(formattedUISourceCode, formatData);\n            this._project.addUISourceCodeWithProvider(\n                formattedUISourceCode, contentProvider, /* metadata */ null, uiSourceCode.mimeType());\n            await this._scriptMapping._setSourceMappingEnabled(formatData, true);\n            await this._styleMapping._setSourceMappingEnabled(formatData, true);\n            cacheEntry.formatData = formatData;\n\n            for (const decoration of uiSourceCode.allDecorations()) {\n              const range = decoration.range();\n              const startLocation = formatterMapping.originalToFormatted(range.startLine, range.startColumn);\n              const endLocation = formatterMapping.originalToFormatted(range.endLine, range.endColumn);\n              formattedUISourceCode.addDecoration(\n                  new TextUtils.TextRange.TextRange(startLocation[0], startLocation[1], endLocation[0], endLocation[1]),\n                  (decoration.type() as string), decoration.data());\n            }\n\n            resolve(formatData);\n          });\n    });\n\n    this._formattedSourceCodes.set(uiSourceCode, {promise: resultPromise, formatData: null});\n\n    return resultPromise;\n  }\n}\n\nclass ScriptMapping implements Bindings.DebuggerWorkspaceBinding.DebuggerSourceMapping {\n  constructor() {\n    Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().addSourceMapping(this);\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.DebuggerModel.Location): Workspace.UISourceCode.UILocation|null {\n    const script = rawLocation.script();\n    const formatData = script && SourceFormatData._for(script);\n    if (!formatData || !script) {\n      return null;\n    }\n    if (script.isInlineScriptWithSourceURL()) {\n      // Inline scripts with #sourceURL= have lineEndings wrt. the inline script (and not wrt. the containing document),\n      // but `rawLocation` will always use locations wrt. the containing document, because that is what the back-end is\n      // sending. This is a hack, because what we are really doing here is deciding the location based on /how/ the\n      // script is displayed, which is really something this layer cannot and should not have to decide: The\n      // SourceFormatter should not have to know whether a script is displayed inline (in its containing document) or\n      // stand-alone.\n      const [relativeLineNumber, relativeColumnNumber] = script.toRelativeLocation(rawLocation);\n      const [formattedLineNumber, formattedColumnNumber] =\n          formatData.mapping.originalToFormatted(relativeLineNumber, relativeColumnNumber);\n      return formatData.formattedSourceCode.uiLocation(formattedLineNumber, formattedColumnNumber);\n    }\n    // Here we either have an inline script without a #sourceURL= or a stand-alone script. For stand-alone scripts, no\n    // translation must be applied. For inline scripts, also no translation must be applied, because the line-endings\n    // tables in the mapping are the same as in the containing document.\n    const [lineNumber, columnNumber] =\n        formatData.mapping.originalToFormatted(rawLocation.lineNumber, rawLocation.columnNumber || 0);\n    return formatData.formattedSourceCode.uiLocation(lineNumber, columnNumber);\n  }\n\n  uiLocationToRawLocations(uiSourceCode: Workspace.UISourceCode.UISourceCode, lineNumber: number, columnNumber: number):\n      SDK.DebuggerModel.Location[] {\n    const formatData = SourceFormatData._for(uiSourceCode);\n    if (!formatData) {\n      return [];\n    }\n    const [originalLine, originalColumn] = formatData.mapping.formattedToOriginal(lineNumber, columnNumber);\n    if (formatData.originalSourceCode.contentType().isScript()) {\n      // Here we have a script that is displayed on its own (i.e. it has a dedicated uiSourceCode). This means it is\n      // either a stand-alone script or an inline script with a #sourceURL= and in both cases we can just forward the\n      // question to the original (unformatted) source code.\n      const rawLocations = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance()\n                               .uiLocationToRawLocationsForUnformattedJavaScript(\n                                   formatData.originalSourceCode, originalLine, originalColumn);\n      console.assert(rawLocations.every(l => l && Boolean(l.script())));\n      return rawLocations;\n    }\n    if (formatData.originalSourceCode.contentType() === Common.ResourceType.resourceTypes.Document) {\n      const target = Bindings.NetworkProject.NetworkProject.targetForUISourceCode(formatData.originalSourceCode);\n      const debuggerModel = target && target.model(SDK.DebuggerModel.DebuggerModel);\n      if (debuggerModel) {\n        const scripts = debuggerModel.scriptsForSourceURL(formatData.originalSourceCode.url())\n                            .filter(script => script.isInlineScript() && !script.hasSourceURL);\n        // Here we have an inline script, which was formatted together with the containing document, so we must not\n        // translate locations as they are relative to the start of the document.\n        const locations =\n            (scripts.map(script => script.rawLocation(originalLine, originalColumn)).filter(l => Boolean(l)) as\n             SDK.DebuggerModel.Location[]);\n        console.assert(locations.every(l => l && Boolean(l.script())));\n        return locations;\n      }\n    }\n    return [];\n  }\n\n  async _setSourceMappingEnabled(formatData: SourceFormatData, enabled: boolean): Promise<void> {\n    const scripts = this._scriptsForUISourceCode(formatData.originalSourceCode);\n    if (!scripts.length) {\n      return;\n    }\n    if (enabled) {\n      for (const script of scripts) {\n        objectToFormattingResult.set(script, formatData);\n      }\n    } else {\n      for (const script of scripts) {\n        objectToFormattingResult.delete(script);\n      }\n    }\n    const updatePromises = scripts.map(\n        script => Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance().updateLocations(script));\n    await Promise.all(updatePromises);\n  }\n\n  _scriptsForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode): SDK.Script.Script[] {\n    if (uiSourceCode.contentType() === Common.ResourceType.resourceTypes.Document) {\n      const target = Bindings.NetworkProject.NetworkProject.targetForUISourceCode(uiSourceCode);\n      const debuggerModel = target && target.model(SDK.DebuggerModel.DebuggerModel);\n      if (debuggerModel) {\n        const scripts = debuggerModel.scriptsForSourceURL(uiSourceCode.url())\n                            .filter(script => script.isInlineScript() && !script.hasSourceURL);\n        return scripts;\n      }\n    }\n    if (uiSourceCode.contentType().isScript()) {\n      console.assert(!objectToFormattingResult.has(uiSourceCode));\n      const rawLocations = Bindings.DebuggerWorkspaceBinding.DebuggerWorkspaceBinding.instance()\n                               .uiLocationToRawLocationsForUnformattedJavaScript(uiSourceCode, 0, 0);\n      return rawLocations.map(location => location.script()).filter(script => Boolean(script)) as SDK.Script.Script[];\n    }\n    return [];\n  }\n}\n\nconst sourceCodeToHeaders =\n    new WeakMap<Workspace.UISourceCode.UISourceCode, SDK.CSSStyleSheetHeader.CSSStyleSheetHeader[]>();\n\nclass StyleMapping implements Bindings.CSSWorkspaceBinding.SourceMapping {\n  _headersSymbol: symbol;\n  constructor() {\n    Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().addSourceMapping(this);\n    this._headersSymbol = Symbol('Formatter.SourceFormatter.StyleMapping._headersSymbol');\n  }\n\n  rawLocationToUILocation(rawLocation: SDK.CSSModel.CSSLocation): Workspace.UISourceCode.UILocation|null {\n    const styleHeader = rawLocation.header();\n    const formatData = styleHeader && SourceFormatData._for(styleHeader);\n    if (!formatData) {\n      return null;\n    }\n    const formattedLocation =\n        formatData.mapping.originalToFormatted(rawLocation.lineNumber, rawLocation.columnNumber || 0);\n    return formatData.formattedSourceCode.uiLocation(formattedLocation[0], formattedLocation[1]);\n  }\n\n  uiLocationToRawLocations(uiLocation: Workspace.UISourceCode.UILocation): SDK.CSSModel.CSSLocation[] {\n    const formatData = SourceFormatData._for(uiLocation.uiSourceCode);\n    if (!formatData) {\n      return [];\n    }\n    const [originalLine, originalColumn] =\n        formatData.mapping.formattedToOriginal(uiLocation.lineNumber, uiLocation.columnNumber);\n    const allHeaders = sourceCodeToHeaders.get(formatData.originalSourceCode);\n\n    if (!allHeaders) {\n      return [];\n    }\n\n    const headers = allHeaders.filter(header => header.containsLocation(originalLine, originalColumn));\n    return headers.map(header => new SDK.CSSModel.CSSLocation(header, originalLine, originalColumn));\n  }\n\n  async _setSourceMappingEnabled(formatData: SourceFormatData, enable: boolean): Promise<void> {\n    const original = formatData.originalSourceCode;\n    const headers = this._headersForUISourceCode(original);\n    if (enable) {\n      sourceCodeToHeaders.set(original, headers);\n      headers.forEach(header => {\n        objectToFormattingResult.set(header, formatData);\n      });\n    } else {\n      sourceCodeToHeaders.delete(original);\n      headers.forEach(header => {\n        objectToFormattingResult.delete(header);\n      });\n    }\n    const updatePromises =\n        headers.map(header => Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().updateLocations(header));\n    await Promise.all(updatePromises);\n  }\n\n  _headersForUISourceCode(uiSourceCode: Workspace.UISourceCode.UISourceCode):\n      SDK.CSSStyleSheetHeader.CSSStyleSheetHeader[] {\n    if (uiSourceCode.contentType() === Common.ResourceType.resourceTypes.Document) {\n      const target = Bindings.NetworkProject.NetworkProject.targetForUISourceCode(uiSourceCode);\n      const cssModel = target && target.model(SDK.CSSModel.CSSModel);\n      if (cssModel) {\n        return cssModel.headersForSourceURL(uiSourceCode.url())\n            .filter(header => header.isInline && !header.hasSourceURL);\n      }\n    } else if (uiSourceCode.contentType().isStyleSheet()) {\n      const rawLocations = Bindings.CSSWorkspaceBinding.CSSWorkspaceBinding.instance().uiLocationToRawLocations(\n          uiSourceCode.uiLocation(0, 0));\n      return rawLocations.map(rawLocation => rawLocation.header()).filter(header => Boolean(header)) as\n          SDK.CSSStyleSheetHeader.CSSStyleSheetHeader[];\n    }\n    return [];\n  }\n}\n"]}