{"version":3,"file":"FormatterWorkerPool.js","sourceRoot":"","sources":["../../../../../../front_end/models/formatter/FormatterWorkerPool.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as FormatterActions from '../../entrypoints/formatter_worker/FormatterActions.js';  // eslint-disable-line rulesdir/es_modules_import\n\nconst MAX_WORKERS = Math.min(2, navigator.hardwareConcurrency - 1);\n\nlet formatterWorkerPoolInstance: FormatterWorkerPool;\n\nexport class FormatterWorkerPool {\n  _taskQueue: Task[];\n  _workerTasks: Map<Common.Worker.WorkerWrapper, Task|null>;\n\n  constructor() {\n    this._taskQueue = [];\n    this._workerTasks = new Map();\n  }\n\n  static instance(): FormatterWorkerPool {\n    if (!formatterWorkerPoolInstance) {\n      formatterWorkerPoolInstance = new FormatterWorkerPool();\n    }\n\n    return formatterWorkerPoolInstance;\n  }\n\n  _createWorker(): Common.Worker.WorkerWrapper {\n    const worker = Common.Worker.WorkerWrapper.fromURL(\n        new URL('../../entrypoints/formatter_worker/formatter_worker-entrypoint.js', import.meta.url));\n    worker.onmessage = this._onWorkerMessage.bind(this, worker);\n    worker.onerror = this._onWorkerError.bind(this, worker);\n    return worker;\n  }\n\n  _processNextTask(): void {\n    if (!this._taskQueue.length) {\n      return;\n    }\n\n    let freeWorker = [...this._workerTasks.keys()].find(worker => !this._workerTasks.get(worker));\n    if (!freeWorker && this._workerTasks.size < MAX_WORKERS) {\n      freeWorker = this._createWorker();\n    }\n    if (!freeWorker) {\n      return;\n    }\n\n    const task = this._taskQueue.shift();\n    if (task) {\n      this._workerTasks.set(freeWorker, task);\n      freeWorker.postMessage({method: task.method, params: task.params});\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _onWorkerMessage(worker: Common.Worker.WorkerWrapper, event: MessageEvent<any>): void {\n    const task = this._workerTasks.get(worker);\n    if (!task) {\n      return;\n    }\n    if (task.isChunked && event.data && !event.data['isLastChunk']) {\n      task.callback(event.data);\n      return;\n    }\n\n    this._workerTasks.set(worker, null);\n    this._processNextTask();\n    task.callback(event.data ? event.data : null);\n  }\n\n  _onWorkerError(worker: Common.Worker.WorkerWrapper, event: Event): void {\n    console.error(event);\n    const task = this._workerTasks.get(worker);\n    worker.terminate();\n    this._workerTasks.delete(worker);\n\n    const newWorker = this._createWorker();\n    this._workerTasks.set(newWorker, null);\n    this._processNextTask();\n    if (task) {\n      task.callback(null);\n    }\n  }\n\n  _runChunkedTask(\n      methodName: string, params: {\n        [x: string]: string,\n      },\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      callback: (arg0: boolean, arg1: any) => void): void {\n    const task = new Task(methodName, params, onData, true);\n    this._taskQueue.push(task);\n    this._processNextTask();\n\n    function onData(data: Object|null): void {\n      if (!data) {\n        callback(true, null);\n        return;\n      }\n      const isLastChunk = 'isLastChunk' in data && Boolean(data['isLastChunk']);\n      const chunk = 'chunk' in data && data['chunk'];\n      callback(isLastChunk, chunk);\n    }\n  }\n\n  _runTask(methodName: FormatterActions.FormatterActions, params: {\n    [x: string]: string,\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  }): Promise<any> {\n    return new Promise(resolve => {\n      const task = new Task(methodName, params, resolve, false);\n      this._taskQueue.push(task);\n      this._processNextTask();\n    });\n  }\n\n  format(mimeType: string, content: string, indentString: string): Promise<FormatResult> {\n    const parameters = {mimeType: mimeType, content: content, indentString: indentString};\n    return /** @type {!Promise<!FormatResult>} */ this._runTask(FormatterActions.FormatterActions.FORMAT, parameters) as\n        Promise<FormatResult>;\n  }\n\n  javaScriptIdentifiers(content: string): Promise<{\n    name: string,\n    offset: number,\n  }[]> {\n    return this._runTask(FormatterActions.FormatterActions.JAVASCRIPT_IDENTIFIERS, {content: content})\n        .then(ids => ids || []);\n  }\n\n  evaluatableJavaScriptSubstring(content: string): Promise<string> {\n    return this._runTask(FormatterActions.FormatterActions.EVALUATE_JAVASCRIPT_SUBSTRING, {content: content})\n        .then(text => text || '');\n  }\n\n  parseCSS(content: string, callback: (arg0: boolean, arg1: Array<CSSRule>) => void): void {\n    this._runChunkedTask(FormatterActions.FormatterActions.PARSE_CSS, {content: content}, onDataChunk);\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function onDataChunk(isLastChunk: boolean, data: any): void {\n      const rules = (data || [] as CSSRule[]);\n      callback(isLastChunk, rules);\n    }\n  }\n\n  outlineForMimetype(content: string, mimeType: string, callback: (arg0: boolean, arg1: Array<OutlineItem>) => void):\n      boolean {\n    switch (mimeType) {\n      case 'text/html':\n        this._runChunkedTask(FormatterActions.FormatterActions.HTML_OUTLINE, {content: content}, callback);\n        return true;\n      case 'text/javascript':\n        this._runChunkedTask(FormatterActions.FormatterActions.JAVASCRIPT_OUTLINE, {content: content}, callback);\n        return true;\n      case 'text/css':\n        this.parseCSS(content, cssCallback);\n        return true;\n    }\n    return false;\n\n    function cssCallback(isLastChunk: boolean, rules: CSSRule[]): void {\n      callback(isLastChunk, rules.map(rule => {\n        const title = 'selectorText' in rule ? rule.selectorText : rule.atRule;\n        return {line: rule.lineNumber, subtitle: undefined, column: rule.columnNumber, title};\n      }));\n    }\n  }\n\n  findLastExpression(content: string): Promise<string|null> {\n    return this._runTask(FormatterActions.FormatterActions.FIND_LAST_EXPRESSION, {content}) as Promise<string|null>;\n  }\n\n  findLastFunctionCall(content: string): Promise<{\n    baseExpression: string,\n    receiver: string,\n    argumentIndex: number,\n    functionName: string,\n  }|null> {\n    return this._runTask(FormatterActions.FormatterActions.FIND_LAST_FUNCTION_CALL, {content}) as Promise<{\n             baseExpression: string,\n             receiver: string,\n             argumentIndex: number,\n             functionName: string,\n           }|null>;\n  }\n\n  argumentsList(content: string): Promise<string[]> {\n    return this._runTask(FormatterActions.FormatterActions.ARGUMENTS_LIST, {content}) as Promise<string[]>;\n  }\n}\n\nclass Task {\n  method: string;\n  params: {\n    [x: string]: string,\n  };\n  callback: (arg0: MessageEvent|null) => void;\n  isChunked: boolean|undefined;\n  constructor(\n      method: string, params: {\n        [x: string]: string,\n      },\n      callback: (arg0: MessageEvent|null) => void, isChunked?: boolean) {\n    this.method = method;\n    this.params = params;\n    this.callback = callback;\n    this.isChunked = isChunked;\n  }\n}\n\nexport interface FormatResult {\n  content: string;\n  mapping: FormatMapping;\n}\n\ninterface CSSProperty {\n  name: string;\n  nameRange: TextRange;\n  value: string;\n  valueRange: TextRange;\n  range: TextRange;\n  disabled?: boolean;\n}\n\nexport function formatterWorkerPool(): FormatterWorkerPool {\n  return FormatterWorkerPool.instance();\n}\n\nexport interface OutlineItem {\n  line: number;\n  column: number;\n  title: string;\n  subtitle?: string;\n}\n\nexport interface FormatMapping {\n  original: number[];\n  formatted: number[];\n}\n\nexport interface CSSStyleRule {\n  selectorText: string;\n  styleRange: TextRange;\n  lineNumber: number;\n  columnNumber: number;\n  properties: CSSProperty[];\n}\n\nexport interface CSSAtRule {\n  atRule: string;\n  lineNumber: number;\n  columnNumber: number;\n}\n\nexport type CSSRule = CSSStyleRule|CSSAtRule;\n\nexport interface TextRange {\n  startLine: number;\n  startColumn: number;\n  endLine: number;\n  endColumn: number;\n}\n"]}