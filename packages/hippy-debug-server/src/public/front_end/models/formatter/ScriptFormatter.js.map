{"version":3,"file":"ScriptFormatter.js","sourceRoot":"","sources":["../../../../../../front_end/models/formatter/ScriptFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';  // eslint-disable-line no-unused-vars\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type {FormatMapping, FormatResult} from './FormatterWorkerPool.js';\nimport {formatterWorkerPool} from './FormatterWorkerPool.js';  // eslint-disable-line no-unused-vars\n\nexport class FormatterInterface {\n  static format(\n      contentType: Common.ResourceType.ResourceType, mimeType: string, content: string,\n      callback: (arg0: string, arg1: FormatterSourceMapping) => Promise<void>): void {\n    if (contentType.isDocumentOrScriptOrStyleSheet()) {\n      new ScriptFormatter(mimeType, content, callback);\n    } else {\n      new ScriptIdentityFormatter(mimeType, content, callback);\n    }\n  }\n  static locationToPosition(lineEndings: number[], lineNumber: number, columnNumber: number): number {\n    const position = lineNumber ? lineEndings[lineNumber - 1] + 1 : 0;\n    return position + columnNumber;\n  }\n  static positionToLocation(lineEndings: number[], position: number): number[] {\n    const lineNumber =\n        Platform.ArrayUtilities.upperBound(lineEndings, position - 1, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    let columnNumber;\n    if (!lineNumber) {\n      columnNumber = position;\n    } else {\n      columnNumber = position - lineEndings[lineNumber - 1] - 1;\n    }\n    return [lineNumber, columnNumber];\n  }\n}\n\nexport class ScriptFormatter extends FormatterInterface {\n  _mimeType: string;\n  _originalContent: string;\n  _callback: (arg0: string, arg1: FormatterSourceMapping) => Promise<void>;\n\n  constructor(\n      mimeType: string, content: string, callback: (arg0: string, arg1: FormatterSourceMapping) => Promise<void>) {\n    super();\n\n    this._mimeType = mimeType;\n    this._originalContent = content.replace(/\\r\\n?|[\\n\\u2028\\u2029]/g, '\\n').replace(/^\\uFEFF/, '');\n    this._callback = callback;\n\n    this._initialize();\n  }\n\n  async _initialize(): Promise<void> {\n    const pool = formatterWorkerPool();\n    const indent = Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n\n    const formatResult = await pool.format(this._mimeType, this._originalContent, indent);\n    if (!formatResult) {\n      this._callback(this._originalContent, new IdentityFormatterSourceMapping());\n    } else {\n      this._didFormatContent(formatResult);\n    }\n  }\n\n  _didFormatContent(formatResult: FormatResult): void {\n    const originalContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(this._originalContent);\n    const formattedContentLineEndings = Platform.StringUtilities.findLineEndingIndexes(formatResult.content);\n\n    const sourceMapping =\n        new FormatterSourceMappingImpl(originalContentLineEndings, formattedContentLineEndings, formatResult.mapping);\n    this._callback(formatResult.content, sourceMapping);\n  }\n}\n\nclass ScriptIdentityFormatter extends FormatterInterface {\n  constructor(\n      mimeType: string, content: string, callback: (arg0: string, arg1: FormatterSourceMapping) => Promise<void>) {\n    super();\n\n    callback(content, new IdentityFormatterSourceMapping());\n  }\n}\n\nexport abstract class FormatterSourceMapping {\n  abstract originalToFormatted(lineNumber: number, columnNumber?: number): number[];\n  abstract formattedToOriginal(lineNumber: number, columnNumber?: number): number[];\n}\n\nclass IdentityFormatterSourceMapping extends FormatterSourceMapping {\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[] {\n    return [lineNumber, columnNumber || 0];\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[] {\n    return [lineNumber, columnNumber || 0];\n  }\n}\n\nclass FormatterSourceMappingImpl extends FormatterSourceMapping {\n  _originalLineEndings: number[];\n  _formattedLineEndings: number[];\n  _mapping: FormatMapping;\n\n  constructor(originalLineEndings: number[], formattedLineEndings: number[], mapping: FormatMapping) {\n    super();\n\n    this._originalLineEndings = originalLineEndings;\n    this._formattedLineEndings = formattedLineEndings;\n    this._mapping = mapping;\n  }\n\n  originalToFormatted(lineNumber: number, columnNumber?: number): number[] {\n    const originalPosition =\n        FormatterInterface.locationToPosition(this._originalLineEndings, lineNumber, columnNumber || 0);\n    const formattedPosition =\n        this._convertPosition(this._mapping.original, this._mapping.formatted, originalPosition || 0);\n    return FormatterInterface.positionToLocation(this._formattedLineEndings, formattedPosition);\n  }\n\n  formattedToOriginal(lineNumber: number, columnNumber?: number): number[] {\n    const formattedPosition =\n        FormatterInterface.locationToPosition(this._formattedLineEndings, lineNumber, columnNumber || 0);\n    const originalPosition = this._convertPosition(this._mapping.formatted, this._mapping.original, formattedPosition);\n    return FormatterInterface.positionToLocation(this._originalLineEndings, originalPosition || 0);\n  }\n\n  _convertPosition(positions1: number[], positions2: number[], position: number): number {\n    const index =\n        Platform.ArrayUtilities.upperBound(positions1, position, Platform.ArrayUtilities.DEFAULT_COMPARATOR) - 1;\n    let convertedPosition: number = positions2[index] + position - positions1[index];\n    if (index < positions2.length - 1 && convertedPosition > positions2[index + 1]) {\n      convertedPosition = positions2[index + 1];\n    }\n    return convertedPosition;\n  }\n}\n"]}