{"version":3,"file":"PersistenceImpl.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/PersistenceImpl.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as Bindings from '../bindings/bindings.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport type {AutomappingStatus} from './Automapping.js';\nimport {Automapping} from './Automapping.js';\nimport {LinkDecorator} from './PersistenceUtils.js';\n\nlet persistenceInstance: PersistenceImpl;\n\nexport class PersistenceImpl extends Common.ObjectWrapper.ObjectWrapper {\n  _workspace: Workspace.Workspace.WorkspaceImpl;\n  _breakpointManager: Bindings.BreakpointManager.BreakpointManager;\n  _filePathPrefixesToBindingCount: Map<string, number>;\n  _subscribedBindingEventListeners: Platform.MapUtilities.Multimap<Workspace.UISourceCode.UISourceCode, () => void>;\n  _mapping: Automapping;\n\n  constructor(\n      workspace: Workspace.Workspace.WorkspaceImpl, breakpointManager: Bindings.BreakpointManager.BreakpointManager) {\n    super();\n    this._workspace = workspace;\n    this._breakpointManager = breakpointManager;\n    this._filePathPrefixesToBindingCount = new Map();\n\n    this._subscribedBindingEventListeners = new Platform.MapUtilities.Multimap();\n\n    const linkDecorator = new LinkDecorator(this);\n    Components.Linkifier.Linkifier.setLinkDecorator(linkDecorator);\n\n    this._mapping = new Automapping(this._workspace, this._onStatusAdded.bind(this), this._onStatusRemoved.bind(this));\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    workspace: Workspace.Workspace.WorkspaceImpl|null,\n    breakpointManager: Bindings.BreakpointManager.BreakpointManager|null,\n  } = {forceNew: null, workspace: null, breakpointManager: null}): PersistenceImpl {\n    const {forceNew, workspace, breakpointManager} = opts;\n    if (!persistenceInstance || forceNew) {\n      if (!workspace || !breakpointManager) {\n        throw new Error('Missing arguments for workspace');\n      }\n      persistenceInstance = new PersistenceImpl(workspace, breakpointManager);\n    }\n\n    return persistenceInstance;\n  }\n\n  addNetworkInterceptor(interceptor: (arg0: Workspace.UISourceCode.UISourceCode) => boolean): void {\n    this._mapping.addNetworkInterceptor(interceptor);\n  }\n\n  refreshAutomapping(): void {\n    this._mapping.scheduleRemap();\n  }\n\n  async addBinding(binding: PersistenceBinding): Promise<void> {\n    await this._innerAddBinding(binding);\n  }\n\n  async addBindingForTest(binding: PersistenceBinding): Promise<void> {\n    await this._innerAddBinding(binding);\n  }\n\n  async removeBinding(binding: PersistenceBinding): Promise<void> {\n    await this._innerRemoveBinding(binding);\n  }\n\n  async removeBindingForTest(binding: PersistenceBinding): Promise<void> {\n    await this._innerRemoveBinding(binding);\n  }\n\n  async _innerAddBinding(binding: PersistenceBinding): Promise<void> {\n    bindings.set(binding.network, binding);\n    bindings.set(binding.fileSystem, binding);\n\n    binding.fileSystem.forceLoadOnCheckContent();\n\n    binding.network.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this._onWorkingCopyCommitted, this);\n    binding.fileSystem.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this._onWorkingCopyCommitted, this);\n    binding.network.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this._onWorkingCopyChanged, this);\n    binding.fileSystem.addEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this._onWorkingCopyChanged, this);\n\n    this._addFilePathBindingPrefixes(binding.fileSystem.url());\n\n    await this._moveBreakpoints(binding.fileSystem, binding.network);\n\n    console.assert(!binding.fileSystem.isDirty() || !binding.network.isDirty());\n    if (binding.fileSystem.isDirty()) {\n      this._syncWorkingCopy(binding.fileSystem);\n    } else if (binding.network.isDirty()) {\n      this._syncWorkingCopy(binding.network);\n    } else if (binding.network.hasCommits() && binding.network.content() !== binding.fileSystem.content()) {\n      binding.network.setWorkingCopy(binding.network.content());\n      this._syncWorkingCopy(binding.network);\n    }\n\n    this._notifyBindingEvent(binding.network);\n    this._notifyBindingEvent(binding.fileSystem);\n    this.dispatchEventToListeners(Events.BindingCreated, binding);\n  }\n\n  async _innerRemoveBinding(binding: PersistenceBinding): Promise<void> {\n    if (bindings.get(binding.network) !== binding) {\n      return;\n    }\n    console.assert(\n        bindings.get(binding.network) === bindings.get(binding.fileSystem),\n        'ERROR: inconsistent binding for networkURL ' + binding.network.url());\n\n    bindings.delete(binding.network);\n    bindings.delete(binding.fileSystem);\n\n    binding.network.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this._onWorkingCopyCommitted, this);\n    binding.fileSystem.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyCommitted, this._onWorkingCopyCommitted, this);\n    binding.network.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this._onWorkingCopyChanged, this);\n    binding.fileSystem.removeEventListener(\n        Workspace.UISourceCode.Events.WorkingCopyChanged, this._onWorkingCopyChanged, this);\n\n    this._removeFilePathBindingPrefixes(binding.fileSystem.url());\n    await this._breakpointManager.copyBreakpoints(binding.network.url(), binding.fileSystem);\n\n    this._notifyBindingEvent(binding.network);\n    this._notifyBindingEvent(binding.fileSystem);\n    this.dispatchEventToListeners(Events.BindingRemoved, binding);\n  }\n\n  async _onStatusAdded(status: AutomappingStatus): Promise<void> {\n    const binding = new PersistenceBinding(status.network, status.fileSystem);\n    statusBindings.set(status, binding);\n    await this._innerAddBinding(binding);\n  }\n\n  async _onStatusRemoved(status: AutomappingStatus): Promise<void> {\n    const binding = statusBindings.get(status) as PersistenceBinding;\n    await this._innerRemoveBinding(binding);\n  }\n\n  _onWorkingCopyChanged(event: Common.EventTarget.EventTargetEvent): void {\n    const uiSourceCode = event.data as Workspace.UISourceCode.UISourceCode;\n    this._syncWorkingCopy(uiSourceCode);\n  }\n\n  _syncWorkingCopy(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    const binding = bindings.get(uiSourceCode);\n    if (!binding || mutedWorkingCopies.has(binding)) {\n      return;\n    }\n    const other = binding.network === uiSourceCode ? binding.fileSystem : binding.network;\n    if (!uiSourceCode.isDirty()) {\n      mutedWorkingCopies.add(binding);\n      other.resetWorkingCopy();\n      mutedWorkingCopies.delete(binding);\n      this._contentSyncedForTest();\n      return;\n    }\n\n    const target = Bindings.NetworkProject.NetworkProject.targetForUISourceCode(binding.network);\n    if (target && target.type() === SDK.Target.Type.Node) {\n      const newContent = uiSourceCode.workingCopy();\n      other.requestContent().then(() => {\n        const nodeJSContent = PersistenceImpl.rewrapNodeJSContent(other, other.workingCopy(), newContent);\n        setWorkingCopy.call(this, () => nodeJSContent);\n      });\n      return;\n    }\n\n    setWorkingCopy.call(this, () => uiSourceCode.workingCopy());\n\n    function setWorkingCopy(this: PersistenceImpl, workingCopyGetter: () => string): void {\n      if (binding) {\n        mutedWorkingCopies.add(binding);\n      }\n      other.setWorkingCopyGetter(workingCopyGetter);\n      if (binding) {\n        mutedWorkingCopies.delete(binding);\n      }\n      this._contentSyncedForTest();\n    }\n  }\n\n  _onWorkingCopyCommitted(event: Common.EventTarget.EventTargetEvent): void {\n    const uiSourceCode = event.data.uiSourceCode as Workspace.UISourceCode.UISourceCode;\n    const newContent = event.data.content as string;\n    this.syncContent(uiSourceCode, newContent, event.data.encoded);\n  }\n\n  syncContent(uiSourceCode: Workspace.UISourceCode.UISourceCode, newContent: string, encoded: boolean): void {\n    const binding = bindings.get(uiSourceCode);\n    if (!binding || mutedCommits.has(binding)) {\n      return;\n    }\n    const other = binding.network === uiSourceCode ? binding.fileSystem : binding.network;\n    const target = Bindings.NetworkProject.NetworkProject.targetForUISourceCode(binding.network);\n    if (target && target.type() === SDK.Target.Type.Node) {\n      other.requestContent().then(currentContent => {\n        const nodeJSContent = PersistenceImpl.rewrapNodeJSContent(other, currentContent.content || '', newContent);\n        setContent.call(this, nodeJSContent);\n      });\n      return;\n    }\n    setContent.call(this, newContent);\n\n    function setContent(this: PersistenceImpl, newContent: string): void {\n      if (binding) {\n        mutedCommits.add(binding);\n      }\n      other.setContent(newContent, encoded);\n      if (binding) {\n        mutedCommits.delete(binding);\n      }\n      this._contentSyncedForTest();\n    }\n  }\n\n  static rewrapNodeJSContent(\n      uiSourceCode: Workspace.UISourceCode.UISourceCode, currentContent: string, newContent: string): string {\n    if (uiSourceCode.project().type() === Workspace.Workspace.projectTypes.FileSystem) {\n      if (newContent.startsWith(NodePrefix) && newContent.endsWith(NodeSuffix)) {\n        newContent = newContent.substring(NodePrefix.length, newContent.length - NodeSuffix.length);\n      }\n      if (currentContent.startsWith(NodeShebang)) {\n        newContent = NodeShebang + newContent;\n      }\n    } else {\n      if (newContent.startsWith(NodeShebang)) {\n        newContent = newContent.substring(NodeShebang.length);\n      }\n      if (currentContent.startsWith(NodePrefix) && currentContent.endsWith(NodeSuffix)) {\n        newContent = NodePrefix + newContent + NodeSuffix;\n      }\n    }\n    return newContent;\n  }\n\n  _contentSyncedForTest(): void {\n  }\n\n  async _moveBreakpoints(from: Workspace.UISourceCode.UISourceCode, to: Workspace.UISourceCode.UISourceCode):\n      Promise<void> {\n    const breakpoints = this._breakpointManager.breakpointLocationsForUISourceCode(from).map(\n        breakpointLocation => breakpointLocation.breakpoint);\n    await Promise.all(breakpoints.map(breakpoint => {\n      breakpoint.remove(false /* keepInStorage */);\n      return this._breakpointManager.setBreakpoint(\n          to, breakpoint.lineNumber(), breakpoint.columnNumber(), breakpoint.condition(), breakpoint.enabled());\n    }));\n  }\n\n  hasUnsavedCommittedChanges(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    if (this._workspace.hasResourceContentTrackingExtensions()) {\n      return false;\n    }\n    if (uiSourceCode.project().canSetFileContent()) {\n      return false;\n    }\n    if (bindings.has(uiSourceCode)) {\n      return false;\n    }\n    return Boolean(uiSourceCode.hasCommits());\n  }\n\n  binding(uiSourceCode: Workspace.UISourceCode.UISourceCode): PersistenceBinding|null {\n    return bindings.get(uiSourceCode) || null;\n  }\n\n  subscribeForBindingEvent(uiSourceCode: Workspace.UISourceCode.UISourceCode, listener: () => void): void {\n    this._subscribedBindingEventListeners.set(uiSourceCode, listener);\n  }\n\n  unsubscribeFromBindingEvent(uiSourceCode: Workspace.UISourceCode.UISourceCode, listener: () => void): void {\n    this._subscribedBindingEventListeners.delete(uiSourceCode, listener);\n  }\n\n  _notifyBindingEvent(uiSourceCode: Workspace.UISourceCode.UISourceCode): void {\n    if (!this._subscribedBindingEventListeners.has(uiSourceCode)) {\n      return;\n    }\n    const listeners = Array.from(this._subscribedBindingEventListeners.get(uiSourceCode));\n    for (const listener of listeners) {\n      listener.call(null);\n    }\n  }\n\n  fileSystem(uiSourceCode: Workspace.UISourceCode.UISourceCode): Workspace.UISourceCode.UISourceCode|null {\n    const binding = this.binding(uiSourceCode);\n    return binding ? binding.fileSystem : null;\n  }\n\n  network(uiSourceCode: Workspace.UISourceCode.UISourceCode): Workspace.UISourceCode.UISourceCode|null {\n    const binding = this.binding(uiSourceCode);\n    return binding ? binding.network : null;\n  }\n\n  _addFilePathBindingPrefixes(filePath: string): void {\n    let relative = '';\n    for (const token of filePath.split('/')) {\n      relative += token + '/';\n      const count = this._filePathPrefixesToBindingCount.get(relative) || 0;\n      this._filePathPrefixesToBindingCount.set(relative, count + 1);\n    }\n  }\n\n  _removeFilePathBindingPrefixes(filePath: string): void {\n    let relative = '';\n    for (const token of filePath.split('/')) {\n      relative += token + '/';\n      const count = this._filePathPrefixesToBindingCount.get(relative);\n      if (count === 1) {\n        this._filePathPrefixesToBindingCount.delete(relative);\n      } else if (count !== undefined) {\n        this._filePathPrefixesToBindingCount.set(relative, count - 1);\n      }\n    }\n  }\n\n  filePathHasBindings(filePath: string): boolean {\n    if (!filePath.endsWith('/')) {\n      filePath += '/';\n    }\n    return this._filePathPrefixesToBindingCount.has(filePath);\n  }\n}\n\nconst bindings = new WeakMap<Workspace.UISourceCode.UISourceCode, PersistenceBinding>();\nconst statusBindings = new WeakMap<AutomappingStatus, PersistenceBinding>();\n\nconst mutedCommits = new WeakSet<PersistenceBinding>();\n\nconst mutedWorkingCopies = new WeakSet<PersistenceBinding>();\n\nexport const NodePrefix = '(function (exports, require, module, __filename, __dirname) { ';\nexport const NodeSuffix = '\\n});';\nexport const NodeShebang = '#!/usr/bin/env node';\n\nexport const Events = {\n  BindingCreated: Symbol('BindingCreated'),\n  BindingRemoved: Symbol('BindingRemoved'),\n};\n\nexport class PathEncoder {\n  _encoder: Common.CharacterIdMap.CharacterIdMap<string>;\n  constructor() {\n    this._encoder = new Common.CharacterIdMap.CharacterIdMap();\n  }\n\n  encode(path: string): string {\n    return path.split('/').map(token => this._encoder.toChar(token)).join('');\n  }\n\n  decode(path: string): string {\n    return path.split('').map(token => this._encoder.fromChar(token)).join('/');\n  }\n}\n\nexport class PersistenceBinding {\n  network: Workspace.UISourceCode.UISourceCode;\n  fileSystem: Workspace.UISourceCode.UISourceCode;\n  constructor(network: Workspace.UISourceCode.UISourceCode, fileSystem: Workspace.UISourceCode.UISourceCode) {\n    this.network = network;\n    this.fileSystem = fileSystem;\n  }\n}\n"]}