{"version":3,"file":"IsolatedFileSystem.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/IsolatedFileSystem.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\n\nimport type * as TextUtils from '../text_utils/text_utils.js';\n\nimport type {IsolatedFileSystemManager} from './IsolatedFileSystemManager.js';\nimport {Events} from './IsolatedFileSystemManager.js';\nimport {PlatformFileSystem} from './PlatformFileSystem.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Isolated File System of the Workspace settings in Settings\n  *@example {folder does not exist} PH1\n  */\n  fileSystemErrorS: 'File system error: {PH1}',\n  /**\n  *@description Error message when reading a remote blob\n  */\n  blobCouldNotBeLoaded: 'Blob could not be loaded.',\n  /**\n  *@description Error message when reading a file.\n  *@example {c:\\dir\\file.js} PH1\n  *@example {Underlying error} PH2\n  */\n  cantReadFileSS: 'Can\\'t read file: {PH1}: {PH2}',\n  /**\n  *@description Error message when failing to load a file\n  *@example {c:\\dir\\file.js} PH1\n  */\n  unknownErrorReadingFileS: 'Unknown error reading file: {PH1}',\n  /**\n  *@description Text to show something is linked to another\n  *@example {example.url} PH1\n  */\n  linkedToS: 'Linked to {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/IsolatedFileSystem.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class IsolatedFileSystem extends PlatformFileSystem {\n  _manager: IsolatedFileSystemManager;\n  _embedderPath: string;\n  _domFileSystem: FileSystem;\n  _excludedFoldersSetting: Common.Settings.Setting<{[path: string]: string[]}>;\n  _excludedFolders: Set<string>;\n  _excludedEmbedderFolders: string[];\n  _initialFilePaths: Set<string>;\n  _initialGitFolders: Set<string>;\n  _fileLocks: Map<string, Promise<void>>;\n\n  constructor(\n      manager: IsolatedFileSystemManager, path: string, embedderPath: string, domFileSystem: FileSystem, type: string) {\n    super(path, type);\n    this._manager = manager;\n    this._embedderPath = embedderPath;\n    this._domFileSystem = domFileSystem;\n    this._excludedFoldersSetting =\n        Common.Settings.Settings.instance().createLocalSetting('workspaceExcludedFolders', {});\n    this._excludedFolders = new Set(this._excludedFoldersSetting.get()[path] || []);\n    this._excludedEmbedderFolders = [];\n\n    this._initialFilePaths = new Set();\n    this._initialGitFolders = new Set();\n    this._fileLocks = new Map();\n  }\n\n  static create(\n      manager: IsolatedFileSystemManager, path: string, embedderPath: string, type: string, name: string,\n      rootURL: string): Promise<IsolatedFileSystem|null> {\n    const domFileSystem = Host.InspectorFrontendHost.InspectorFrontendHostInstance.isolatedFileSystem(name, rootURL);\n    if (!domFileSystem) {\n      return Promise.resolve(null as IsolatedFileSystem | null);\n    }\n\n    const fileSystem = new IsolatedFileSystem(manager, path, embedderPath, domFileSystem, type);\n    return fileSystem._initializeFilePaths().then(() => fileSystem).catch(error => {\n      console.error(error);\n      return null;\n    });\n  }\n\n  static errorMessage(error: DOMError): string {\n    // @ts-ignore TODO(crbug.com/1172300) Properly type this after jsdoc to ts migration\n    return i18nString(UIStrings.fileSystemErrorS, {PH1: error.message});\n  }\n\n  _serializedFileOperation<T>(path: string, operation: () => Promise<T>): Promise<T> {\n    const promise = Promise.resolve(this._fileLocks.get(path)).then(() => operation.call(null));\n    this._fileLocks.set(path, promise as unknown as Promise<void>);\n    return promise;\n  }\n\n  getMetadata(path: string): Promise<Metadata|null> {\n    let fulfill: (arg0: Metadata|null) => void;\n    const promise = new Promise<Metadata|null>(f => {\n      fulfill = f;\n    });\n    this._domFileSystem.root.getFile(path, undefined, fileEntryLoaded, errorHandler);\n    return promise;\n\n    function fileEntryLoaded(entry: FileEntry): void {\n      entry.getMetadata(fulfill, errorHandler);\n    }\n\n    function errorHandler(error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when getting file metadata \\'' + path);\n      fulfill(null);\n    }\n  }\n\n  initialFilePaths(): string[] {\n    return [...this._initialFilePaths];\n  }\n\n  initialGitFolders(): string[] {\n    return [...this._initialGitFolders];\n  }\n\n  embedderPath(): string {\n    return this._embedderPath;\n  }\n\n  _initializeFilePaths(): Promise<void> {\n    return new Promise(fulfill => {\n      let pendingRequests = 1;\n      const boundInnerCallback = innerCallback.bind(this);\n      this._requestEntries('', boundInnerCallback);\n\n      function innerCallback(this: IsolatedFileSystem, entries: FileEntry[]): void {\n        for (let i = 0; i < entries.length; ++i) {\n          const entry = entries[i];\n          if (!entry.isDirectory) {\n            if (this.isFileExcluded(entry.fullPath)) {\n              continue;\n            }\n            this._initialFilePaths.add(entry.fullPath.substr(1));\n          } else {\n            if (entry.fullPath.endsWith('/.git')) {\n              const lastSlash = entry.fullPath.lastIndexOf('/');\n              const parentFolder = entry.fullPath.substring(1, lastSlash);\n              this._initialGitFolders.add(parentFolder);\n            }\n            if (this.isFileExcluded(entry.fullPath + '/')) {\n              this._excludedEmbedderFolders.push(\n                  Common.ParsedURL.ParsedURL.urlToPlatformPath(this.path() + entry.fullPath, Host.Platform.isWin()));\n              continue;\n            }\n            ++pendingRequests;\n            this._requestEntries(entry.fullPath, boundInnerCallback);\n          }\n        }\n        if ((--pendingRequests === 0)) {\n          fulfill();\n        }\n      }\n    });\n  }\n\n  async _createFoldersIfNotExist(folderPath: string): Promise<DirectoryEntry|null> {\n    // Fast-path. If parent directory already exists we return it immidiatly.\n    let dirEntry = await new Promise<DirectoryEntry|null>(\n        resolve => this._domFileSystem.root.getDirectory(folderPath, undefined, resolve, () => resolve(null)));\n    if (dirEntry) {\n      return dirEntry;\n    }\n    const paths = folderPath.split('/');\n    let activePath = '';\n    for (const path of paths) {\n      activePath = activePath + '/' + path;\n      dirEntry = await this._innerCreateFolderIfNeeded(activePath);\n      if (!dirEntry) {\n        return null;\n      }\n    }\n    return dirEntry;\n  }\n\n  _innerCreateFolderIfNeeded(path: string): Promise<DirectoryEntry|null> {\n    return new Promise(resolve => {\n      this._domFileSystem.root.getDirectory(path, {create: true}, dirEntry => resolve(dirEntry), error => {\n        const errorMessage = IsolatedFileSystem.errorMessage(error);\n        console.error(errorMessage + ' trying to create directory \\'' + path + '\\'');\n        resolve(null);\n      });\n    });\n  }\n\n  async createFile(path: string, name: string|null): Promise<string|null> {\n    const dirEntry = await this._createFoldersIfNotExist(path);\n    if (!dirEntry) {\n      return null;\n    }\n    const fileEntry =\n        await this._serializedFileOperation(path, createFileCandidate.bind(this, name || 'NewFile')) as FileEntry |\n        null;\n    if (!fileEntry) {\n      return null;\n    }\n    return fileEntry.fullPath.substr(1);\n\n    function createFileCandidate(\n        this: IsolatedFileSystem, name: string, newFileIndex?: number): Promise<FileEntry|null> {\n      return new Promise(resolve => {\n        const nameCandidate = name + (newFileIndex || '');\n        (dirEntry as DirectoryEntry).getFile(nameCandidate, {create: true, exclusive: true}, resolve, error => {\n          if (error.name === 'InvalidModificationError') {\n            resolve(createFileCandidate.call(this, name, (newFileIndex ? newFileIndex + 1 : 1)));\n            return;\n          }\n          const errorMessage = IsolatedFileSystem.errorMessage(error);\n          console.error(\n              errorMessage + ' when testing if file exists \\'' + (this.path() + '/' + path + '/' + nameCandidate) +\n              '\\'');\n          resolve(null);\n        });\n      });\n    }\n  }\n\n  deleteFile(path: string): Promise<boolean> {\n    let resolveCallback: (arg0: boolean) => void;\n    const promise = new Promise<boolean>(resolve => {\n      resolveCallback = resolve;\n    });\n    this._domFileSystem.root.getFile(path, undefined, fileEntryLoaded.bind(this), errorHandler.bind(this));\n    return promise;\n\n    function fileEntryLoaded(this: IsolatedFileSystem, fileEntry: FileEntry): void {\n      fileEntry.remove(fileEntryRemoved, errorHandler.bind(this));\n    }\n\n    function fileEntryRemoved(): void {\n      resolveCallback(true);\n    }\n\n    /**\n     * TODO(jsbell): Update externs replacing DOMError with DOMException. https://crbug.com/496901\n     */\n    function errorHandler(this: IsolatedFileSystem, error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when deleting file \\'' + (this.path() + '/' + path) + '\\'');\n      resolveCallback(false);\n    }\n  }\n\n  requestFileBlob(path: string): Promise<Blob|null> {\n    return new Promise(resolve => {\n      this._domFileSystem.root.getFile(path, undefined, entry => {\n        entry.file(resolve, errorHandler.bind(this));\n      }, errorHandler.bind(this));\n\n      function errorHandler(this: IsolatedFileSystem, error: DOMError): void {\n        if (error.name === 'NotFoundError') {\n          resolve(null);\n          return;\n        }\n\n        const errorMessage = IsolatedFileSystem.errorMessage(error);\n        console.error(errorMessage + ' when getting content for file \\'' + (this.path() + '/' + path) + '\\'');\n        resolve(null);\n      }\n    });\n  }\n\n  requestFileContent(path: string): Promise<TextUtils.ContentProvider.DeferredContent> {\n    return this._serializedFileOperation(path, () => this._innerRequestFileContent(path));\n  }\n\n  async _innerRequestFileContent(path: string): Promise<TextUtils.ContentProvider.DeferredContent> {\n    const blob = await this.requestFileBlob(path);\n    if (!blob) {\n      return {content: null, error: i18nString(UIStrings.blobCouldNotBeLoaded), isEncoded: false};\n    }\n\n    const reader = new FileReader();\n    const extension = Common.ParsedURL.ParsedURL.extractExtension(path);\n    const encoded = BinaryExtensions.has(extension);\n    const readPromise = new Promise(x => {\n      reader.onloadend = x;\n    });\n    if (encoded) {\n      reader.readAsBinaryString(blob);\n    } else {\n      reader.readAsText(blob);\n    }\n    await readPromise;\n    if (reader.error) {\n      const error = i18nString(UIStrings.cantReadFileSS, {PH1: path, PH2: reader.error});\n      console.error(error);\n      return {content: null, isEncoded: false, error};\n    }\n    let result: string|null = null;\n    let error: Common.UIString.LocalizedString|null = null;\n    try {\n      result = reader.result as string;\n    } catch (e) {\n      result = null;\n      error = i18nString(UIStrings.cantReadFileSS, {PH1: path, PH2: e.message});\n    }\n    if (result === undefined || result === null) {\n      error = error || i18nString(UIStrings.unknownErrorReadingFileS, {PH1: path});\n      console.error(error);\n      return {content: null, isEncoded: false, error};\n    }\n    return {isEncoded: encoded, content: encoded ? btoa(result) : result};\n  }\n\n  async setFileContent(path: string, content: string, isBase64: boolean): Promise<void> {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.FileSavedInWorkspace);\n    let callback: (event?: ProgressEvent<EventTarget>) => void;\n    const innerSetFileContent = (): Promise<ProgressEvent<EventTarget>> => {\n      const promise = new Promise<ProgressEvent<EventTarget>>(x => {\n        // @ts-ignore TODO(crbug.com/1172300) Properly type this after jsdoc to ts migration\n        callback = x;\n      });\n      this._domFileSystem.root.getFile(path, {create: true}, fileEntryLoaded.bind(this), errorHandler.bind(this));\n      return promise;\n    };\n\n    this._serializedFileOperation(path, innerSetFileContent);\n\n    function fileEntryLoaded(this: IsolatedFileSystem, entry: FileEntry): void {\n      entry.createWriter(fileWriterCreated.bind(this), errorHandler.bind(this));\n    }\n\n    async function fileWriterCreated(this: IsolatedFileSystem, fileWriter: FileWriter): Promise<void> {\n      fileWriter.onerror = errorHandler.bind(this);\n      fileWriter.onwriteend = fileWritten;\n      let blob: Blob;\n      if (isBase64) {\n        blob = await (await fetch(`data:application/octet-stream;base64,${content}`)).blob();\n      } else {\n        blob = new Blob([content], {type: 'text/plain'});\n      }\n      fileWriter.write(blob);\n\n      function fileWritten(): void {\n        fileWriter.onwriteend = callback;\n        fileWriter.truncate(blob.size);\n      }\n    }\n\n    function errorHandler(this: IsolatedFileSystem, error: DOMError|ProgressEvent<EventTarget>): void {\n      // @ts-ignore TODO(crbug.com/1172300) Properly type this after jsdoc to ts migration\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when setting content for file \\'' + (this.path() + '/' + path) + '\\'');\n      callback(undefined);\n    }\n  }\n\n  renameFile(path: string, newName: string, callback: (arg0: boolean, arg1?: string|undefined) => void): void {\n    newName = newName ? newName.trim() : newName;\n    if (!newName || newName.indexOf('/') !== -1) {\n      callback(false);\n      return;\n    }\n    let fileEntry: FileEntry;\n    let dirEntry: DirectoryEntry;\n\n    this._domFileSystem.root.getFile(path, undefined, fileEntryLoaded.bind(this), errorHandler.bind(this));\n\n    function fileEntryLoaded(this: IsolatedFileSystem, entry: FileEntry): void {\n      if (entry.name === newName) {\n        callback(false);\n        return;\n      }\n\n      fileEntry = entry;\n      fileEntry.getParent(dirEntryLoaded.bind(this), errorHandler.bind(this));\n    }\n\n    function dirEntryLoaded(this: IsolatedFileSystem, entry: Entry): void {\n      dirEntry = entry as DirectoryEntry;\n      dirEntry.getFile(newName, undefined, newFileEntryLoaded, newFileEntryLoadErrorHandler.bind(this));\n    }\n\n    function newFileEntryLoaded(_entry: FileEntry): void {\n      callback(false);\n    }\n\n    function newFileEntryLoadErrorHandler(this: IsolatedFileSystem, error: DOMError): void {\n      if (error.name !== 'NotFoundError') {\n        callback(false);\n        return;\n      }\n      fileEntry.moveTo(dirEntry, newName, fileRenamed, errorHandler.bind(this));\n    }\n\n    function fileRenamed(entry: Entry): void {\n      callback(true, entry.name);\n    }\n\n    function errorHandler(this: IsolatedFileSystem, error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when renaming file \\'' + (this.path() + '/' + path) + '\\' to \\'' + newName + '\\'');\n      callback(false);\n    }\n  }\n\n  _readDirectory(dirEntry: DirectoryEntry, callback: (arg0: Array<FileEntry>) => void): void {\n    const dirReader = dirEntry.createReader();\n    let entries: FileEntry[] = [];\n\n    function innerCallback(results: Entry[]): void {\n      if (!results.length) {\n        callback(entries.sort());\n      } else {\n        entries = entries.concat(toArray(results));\n        dirReader.readEntries(innerCallback, errorHandler);\n      }\n    }\n\n    function toArray(list: Entry[]): FileEntry[] {\n      return Array.prototype.slice.call(list || [], 0);\n    }\n\n    dirReader.readEntries(innerCallback, errorHandler);\n\n    function errorHandler(error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when reading directory \\'' + dirEntry.fullPath + '\\'');\n      callback([]);\n    }\n  }\n\n  _requestEntries(path: string, callback: (arg0: Array<FileEntry>) => void): void {\n    this._domFileSystem.root.getDirectory(path, undefined, innerCallback.bind(this), errorHandler);\n\n    function innerCallback(this: IsolatedFileSystem, dirEntry: DirectoryEntry): void {\n      this._readDirectory(dirEntry, callback);\n    }\n\n    function errorHandler(error: DOMError): void {\n      const errorMessage = IsolatedFileSystem.errorMessage(error);\n      console.error(errorMessage + ' when requesting entry \\'' + path + '\\'');\n      callback([]);\n    }\n  }\n\n  _saveExcludedFolders(): void {\n    const settingValue = this._excludedFoldersSetting.get();\n    settingValue[this.path()] = [...this._excludedFolders];\n    this._excludedFoldersSetting.set(settingValue);\n  }\n\n  addExcludedFolder(path: string): void {\n    this._excludedFolders.add(path);\n    this._saveExcludedFolders();\n    this._manager.dispatchEventToListeners(Events.ExcludedFolderAdded, path);\n  }\n\n  removeExcludedFolder(path: string): void {\n    this._excludedFolders.delete(path);\n    this._saveExcludedFolders();\n    this._manager.dispatchEventToListeners(Events.ExcludedFolderRemoved, path);\n  }\n\n  fileSystemRemoved(): void {\n    const settingValue = this._excludedFoldersSetting.get();\n    delete settingValue[this.path()];\n    this._excludedFoldersSetting.set(settingValue);\n  }\n\n  isFileExcluded(folderPath: string): boolean {\n    if (this._excludedFolders.has(folderPath)) {\n      return true;\n    }\n    const regex = (this._manager.workspaceFolderExcludePatternSetting() as Common.Settings.RegExpSetting).asRegExp();\n    return Boolean(regex && regex.test(folderPath));\n  }\n\n  excludedFolders(): Set<string> {\n    return this._excludedFolders;\n  }\n\n  searchInPath(query: string, progress: Common.Progress.Progress): Promise<string[]> {\n    return new Promise(resolve => {\n      const requestId = this._manager.registerCallback(innerCallback);\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.searchInPath(requestId, this._embedderPath, query);\n\n      function innerCallback(files: string[]): void {\n        resolve(files.map(path => Common.ParsedURL.ParsedURL.platformPathToURL(path)));\n        progress.worked(1);\n      }\n    });\n  }\n\n  indexContent(progress: Common.Progress.Progress): void {\n    progress.setTotalWork(1);\n    const requestId = this._manager.registerProgress(progress);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.indexPath(\n        requestId, this._embedderPath, JSON.stringify(this._excludedEmbedderFolders));\n  }\n\n  mimeFromPath(path: string): string {\n    return Common.ResourceType.ResourceType.mimeFromURL(path) || 'text/plain';\n  }\n\n  canExcludeFolder(path: string): boolean {\n    return Boolean(path) && this.type() !== 'overrides';\n  }\n\n  contentType(path: string): Common.ResourceType.ResourceType {\n    const extension = Common.ParsedURL.ParsedURL.extractExtension(path);\n    if (STYLE_SHEET_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Stylesheet;\n    }\n    if (DOCUMENT_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Document;\n    }\n    if (IMAGE_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Image;\n    }\n    if (SCRIPT_EXTENSIONS.has(extension)) {\n      return Common.ResourceType.resourceTypes.Script;\n    }\n    return BinaryExtensions.has(extension) ? Common.ResourceType.resourceTypes.Other :\n                                             Common.ResourceType.resourceTypes.Document;\n  }\n\n  tooltipForURL(url: string): string {\n    const path = Platform.StringUtilities.trimMiddle(\n        Common.ParsedURL.ParsedURL.urlToPlatformPath(url, Host.Platform.isWin()), 150);\n    return i18nString(UIStrings.linkedToS, {PH1: path});\n  }\n\n  supportsAutomapping(): boolean {\n    return this.type() !== 'overrides';\n  }\n}\n\nconst STYLE_SHEET_EXTENSIONS = new Set<string>(['css', 'scss', 'sass', 'less']);\nconst DOCUMENT_EXTENSIONS = new Set<string>(['htm', 'html', 'asp', 'aspx', 'phtml', 'jsp']);\n\nconst SCRIPT_EXTENSIONS = new Set<string>([\n  'asp', 'aspx', 'c', 'cc', 'cljs', 'coffee', 'cpp', 'cs', 'dart', 'java', 'js',\n  'jsp', 'jsx',  'h', 'm',  'mjs',  'mm',     'py',  'sh', 'ts',   'tsx',  'ls',\n]);\n\nconst IMAGE_EXTENSIONS = new Set<string>(['jpeg', 'jpg', 'svg', 'gif', 'webp', 'png', 'ico', 'tiff', 'tif', 'bmp']);\n\nexport const BinaryExtensions = new Set<string>([\n  // Executable extensions, roughly taken from https://en.wikipedia.org/wiki/Comparison_of_executable_file_formats\n  'cmd',\n  'com',\n  'exe',\n  // Archive extensions, roughly taken from https://en.wikipedia.org/wiki/List_of_archive_formats\n  'a',\n  'ar',\n  'iso',\n  'tar',\n  'bz2',\n  'gz',\n  'lz',\n  'lzma',\n  'z',\n  '7z',\n  'apk',\n  'arc',\n  'cab',\n  'dmg',\n  'jar',\n  'pak',\n  'rar',\n  'zip',\n  // Audio file extensions, roughly taken from https://en.wikipedia.org/wiki/Audio_file_format#List_of_formats\n  '3gp',\n  'aac',\n  'aiff',\n  'flac',\n  'm4a',\n  'mmf',\n  'mp3',\n  'ogg',\n  'oga',\n  'raw',\n  'sln',\n  'wav',\n  'wma',\n  'webm',\n  // Video file extensions, roughly taken from https://en.wikipedia.org/wiki/Video_file_format\n  'mkv',\n  'flv',\n  'vob',\n  'ogv',\n  'gifv',\n  'avi',\n  'mov',\n  'qt',\n  'mp4',\n  'm4p',\n  'm4v',\n  'mpg',\n  'mpeg',\n  // Image file extensions\n  'jpeg',\n  'jpg',\n  'gif',\n  'webp',\n  'png',\n  'ico',\n  'tiff',\n  'tif',\n  'bmp',\n]);\n"]}