{"version":3,"file":"persistence-meta.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/persistence-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Workspace from '../workspace/workspace.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Persistence from './persistence.js';\n\nconst UIStrings = {\n  /**\n  *@description Text of a DOM element in Workspace Settings Tab of the Workspace settings in Settings\n  */\n  workspace: 'Workspace',\n  /**\n  *@description Command for showing the Workspace tool in Settings\n  */\n  showWorkspace: 'Show Workspace',\n  /**\n  *@description Title of a setting under the Persistence category in Settings\n  */\n  enableLocalOverrides: 'Enable Local Overrides',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu\n  */\n  interception: 'interception',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu\n  */\n  override: 'override',\n  /**\n   *@description A tag of Group Network by frame setting that can be searched in the command menu\n  */\n  network: 'network',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu\n  */\n  rewrite: 'rewrite',\n  /**\n   *@description A tag of Enable Local Overrides setting that can be searched in the command menu.\n   *Noun for network request.\n  */\n  request: 'request',\n  /**\n   *@description Title of a setting under the Persistence category that can be invoked through the Command Menu\n  */\n  enableOverrideNetworkRequests: 'Enable override network requests',\n  /**\n   *@description Title of a setting under the Persistence category that can be invoked through the Command Menu\n  */\n  disableOverrideNetworkRequests: 'Disable override network requests',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/persistence-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedPersistenceModule: (typeof Persistence|undefined);\n\nasync function loadPersistenceModule(): Promise<typeof Persistence> {\n  if (!loadedPersistenceModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('persistence');\n    loadedPersistenceModule = await import('./persistence.js');\n  }\n  return loadedPersistenceModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.SETTINGS_VIEW,\n  id: 'workspace',\n  title: i18nLazyString(UIStrings.workspace),\n  commandPrompt: i18nLazyString(UIStrings.showWorkspace),\n  order: 1,\n  async loadView() {\n    const Persistence = await loadPersistenceModule();\n    return Persistence.WorkspaceSettingsTab.WorkspaceSettingsTab.instance();\n  },\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERSISTENCE,\n  title: i18nLazyString(UIStrings.enableLocalOverrides),\n  settingName: 'persistenceNetworkOverridesEnabled',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: false,\n  tags: [\n    i18nLazyString(UIStrings.interception),\n    i18nLazyString(UIStrings.override),\n    i18nLazyString(UIStrings.network),\n    i18nLazyString(UIStrings.rewrite),\n    i18nLazyString(UIStrings.request),\n  ],\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.enableOverrideNetworkRequests),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.disableOverrideNetworkRequests),\n    },\n  ],\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      Workspace.UISourceCode.UISourceCode,\n      SDK.Resource.Resource,\n      SDK.NetworkRequest.NetworkRequest,\n    ];\n  },\n  async loadProvider() {\n    const Persistence = await loadPersistenceModule();\n    return Persistence.PersistenceActions.ContextMenuProvider.instance();\n  },\n  experiment: undefined,\n});\n"]}