{"version":3,"file":"PersistenceActions.js","sourceRoot":"","sources":["../../../../../../front_end/models/persistence/PersistenceActions.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nimport type * as TextUtils from '../text_utils/text_utils.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\nimport * as Workspace from '../workspace/workspace.js';\n\nimport {NetworkPersistenceManager} from './NetworkPersistenceManager.js';\nimport {PersistenceImpl} from './PersistenceImpl.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to save content as a specific file type\n  */\n  saveAs: 'Save as...',\n  /**\n  *@description Context menu item for saving an image\n  */\n  saveImage: 'Save image',\n  /**\n  *@description A context menu item in the Persistence Actions of the Workspace settings in Settings\n  */\n  saveForOverrides: 'Save for overrides',\n  /**\n  *@description A context menu item in the Persistence Actions of the Workspace settings in Settings\n  */\n  openInContainingFolder: 'Open in containing folder',\n};\nconst str_ = i18n.i18n.registerUIStrings('models/persistence/PersistenceActions.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet contextMenuProviderInstance: ContextMenuProvider;\n\nexport class ContextMenuProvider implements UI.ContextMenu.Provider {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ContextMenuProvider {\n    const {forceNew} = opts;\n    if (!contextMenuProviderInstance || forceNew) {\n      contextMenuProviderInstance = new ContextMenuProvider();\n    }\n\n    return contextMenuProviderInstance;\n  }\n\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    const contentProvider = target as TextUtils.ContentProvider.ContentProvider;\n\n    async function saveAs(): Promise<void> {\n      if (contentProvider instanceof Workspace.UISourceCode.UISourceCode) {\n        (contentProvider as Workspace.UISourceCode.UISourceCode).commitWorkingCopy();\n      }\n      let content: string = (await contentProvider.requestContent()).content || '';\n      if (await contentProvider.contentEncoded()) {\n        content = window.atob(content);\n      }\n      const url = contentProvider.contentURL();\n      Workspace.FileManager.FileManager.instance().save(url, content as string, true);\n      Workspace.FileManager.FileManager.instance().close(url);\n    }\n\n    async function saveImage(): Promise<void> {\n      const targetObject = contentProvider as SDK.Resource.Resource;\n      const content = (await targetObject.requestContent()).content || '';\n      const link = document.createElement('a');\n      link.download = targetObject.displayName;\n      link.href = 'data:' + targetObject.mimeType + ';base64,' + content;\n      link.click();\n    }\n\n    if (contentProvider.contentType().isDocumentOrScriptOrStyleSheet()) {\n      contextMenu.saveSection().appendItem(i18nString(UIStrings.saveAs), saveAs);\n    } else if (contentProvider instanceof SDK.Resource.Resource && contentProvider.contentType().isImage()) {\n      contextMenu.saveSection().appendItem(i18nString(UIStrings.saveImage), saveImage);\n    }\n\n    // Retrieve uiSourceCode by URL to pick network resources everywhere.\n    const uiSourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(contentProvider.contentURL());\n    if (uiSourceCode && NetworkPersistenceManager.instance().canSaveUISourceCodeForOverrides(uiSourceCode)) {\n      contextMenu.saveSection().appendItem(i18nString(UIStrings.saveForOverrides), () => {\n        uiSourceCode.commitWorkingCopy();\n        NetworkPersistenceManager.instance().saveUISourceCodeForOverrides(\n            uiSourceCode as Workspace.UISourceCode.UISourceCode);\n        Common.Revealer.reveal(uiSourceCode);\n      });\n    }\n\n    const binding = uiSourceCode && PersistenceImpl.instance().binding(uiSourceCode);\n    const fileURL = binding ? binding.fileSystem.contentURL() : contentProvider.contentURL();\n    if (fileURL.startsWith('file://')) {\n      const path = Common.ParsedURL.ParsedURL.urlToPlatformPath(fileURL, Host.Platform.isWin());\n      contextMenu.revealSection().appendItem(\n          i18nString(UIStrings.openInContainingFolder),\n          () => Host.InspectorFrontendHost.InspectorFrontendHostInstance.showItemInFolder(path));\n    }\n  }\n}\n"]}