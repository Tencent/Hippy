{"version":3,"file":"test_runner.js","sourceRoot":"","sources":["../../../../../../front_end/legacy_test_runner/test_runner/test_runner.js"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// @ts-nocheck This file is not checked by TypeScript as it has a lot of legacy code.\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TestRunner from './TestRunner.js';\n\nexport {\n  TestRunner,\n};\n\nself.Platform = self.Platform || {};\nself.Platform.StringUtilities = Platform.StringUtilities;\n\n/**\n * @param {!SDK.Target} target\n */\nfunction _setupTestHelpers(target) {\n  self.TestRunner.BrowserAgent = target.browserAgent();\n  self.TestRunner.CSSAgent = target.cssAgent();\n  self.TestRunner.DeviceOrientationAgent = target.deviceOrientationAgent();\n  self.TestRunner.DOMAgent = target.domAgent();\n  self.TestRunner.DOMDebuggerAgent = target.domdebuggerAgent();\n  self.TestRunner.DebuggerAgent = target.debuggerAgent();\n  self.TestRunner.EmulationAgent = target.emulationAgent();\n  self.TestRunner.HeapProfilerAgent = target.heapProfilerAgent();\n  self.TestRunner.InputAgent = target.inputAgent();\n  self.TestRunner.InspectorAgent = target.inspectorAgent();\n  self.TestRunner.NetworkAgent = target.networkAgent();\n  self.TestRunner.OverlayAgent = target.overlayAgent();\n  self.TestRunner.PageAgent = target.pageAgent();\n  self.TestRunner.ProfilerAgent = target.profilerAgent();\n  self.TestRunner.RuntimeAgent = target.runtimeAgent();\n  self.TestRunner.TargetAgent = target.targetAgent();\n\n  self.TestRunner.networkManager = target.model(SDK.NetworkManager);\n  self.TestRunner.securityOriginManager = target.model(SDK.SecurityOriginManager);\n  self.TestRunner.resourceTreeModel = target.model(SDK.ResourceTreeModel);\n  self.TestRunner.debuggerModel = target.model(SDK.DebuggerModel);\n  self.TestRunner.runtimeModel = target.model(SDK.RuntimeModel);\n  self.TestRunner.domModel = target.model(SDK.DOMModel);\n  self.TestRunner.domDebuggerModel = target.model(SDK.DOMDebuggerModel);\n  self.TestRunner.cssModel = target.model(SDK.CSSModel);\n  self.TestRunner.cpuProfilerModel = target.model(SDK.CPUProfilerModel);\n  self.TestRunner.overlayModel = target.model(SDK.OverlayModel);\n  self.TestRunner.serviceWorkerManager = target.model(SDK.ServiceWorkerManager);\n  self.TestRunner.tracingManager = target.model(SDK.TracingManager);\n  self.TestRunner.mainTarget = target;\n}\n\nexport async function _executeTestScript() {\n  const testScriptURL = /** @type {string} */ (Root.Runtime.queryParam('test'));\n  if (TestRunner.isDebugTest()) {\n    /* eslint-disable no-console */\n    TestRunner.setInnerResult(console.log);\n    TestRunner.setInnerCompleteTest(() => console.log('Test completed'));\n    /* eslint-enable no-console */\n\n    // Auto-start unit tests\n    self.test = async function() {\n      // TODO(crbug.com/1011811): Remove eval when we use TypeScript which does support dynamic imports\n      await eval(`import(\"${testScriptURL}\")`);\n    };\n    return;\n  }\n\n  try {\n    // TODO(crbug.com/1011811): Remove eval when we use TypeScript which does support dynamic imports\n    await eval(`import(\"${testScriptURL}\")`);\n  } catch (err) {\n    TestRunner.addResult('TEST ENDED EARLY DUE TO UNCAUGHT ERROR:');\n    TestRunner.addResult(err && err.stack || err);\n    TestRunner.addResult('=== DO NOT COMMIT THIS INTO -expected.txt ===');\n    TestRunner.completeTest();\n  }\n}\n\n/** @type {boolean} */\nlet _startedTest = false;\n\n/**\n * @implements {SDK.TargetManager.Observer}\n */\nexport class _TestObserver {\n  /**\n   * @param {!SDK.Target} target\n   * @override\n   */\n  targetAdded(target) {\n    if (target.id() === 'main') {\n      _setupTestHelpers(target);\n    }\n    if (_startedTest) {\n      return;\n    }\n    _startedTest = true;\n    TestRunner\n        .loadHTML(`\n      <head>\n        <base href=\"${TestRunner.url()}\">\n      </head>\n      <body>\n      </body>\n    `).then(() => _executeTestScript());\n  }\n\n  /**\n   * @param {!SDK.Target} target\n   * @override\n   */\n  targetRemoved(target) {\n  }\n}\n\nSDK.targetManager.observeTargets(new _TestObserver());\n"]}