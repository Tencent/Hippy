{"version":3,"file":"FrameworkIgnoreListSettingsTab.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/FrameworkIgnoreListSettingsTab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Header text content in Framework Ignore List Settings Tab of the Settings\n  */\n  frameworkIgnoreList: 'Framework Ignore List',\n  /**\n  *@description Text in Framework Ignore List Settings Tab of the Settings\n  */\n  debuggerWillSkipThroughThe: 'Debugger will skip through the scripts and will not stop on exceptions thrown by them.',\n  /**\n  *@description Text in Framework Ignore List Settings Tab of the Settings\n  */\n  ignoreListContentScripts: 'Add content scripts to ignore list',\n  /**\n  *@description Ignore List content scripts title in Framework Ignore List Settings Tab of the Settings\n  */\n  ignoreListContentScriptsExtension: 'Add content scripts to ignore list (extension scripts in the page)',\n  /**\n  *@description Ignore List label in Framework Ignore List Settings Tab of the Settings\n  */\n  ignoreList: 'Ignore List',\n  /**\n  *@description Text to indicate something is not enabled\n  */\n  disabled: 'Disabled',\n  /**\n  *@description Placeholder text content in Framework Ignore List Settings Tab of the Settings\n  */\n  noIgnoreListPatterns: 'No ignore list patterns',\n  /**\n  *@description Text of the add pattern button in Framework Ignore List Settings Tab of the Settings\n  */\n  addPattern: 'Add pattern...',\n  /**\n  *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings\n  */\n  addFilenamePattern: 'Add filename pattern',\n  /**\n  *@description Pattern title in Framework Ignore List Settings Tab of the Settings\n  *@example {ad.*?} PH1\n  */\n  ignoreScriptsWhoseNamesMatchS: 'Ignore scripts whose names match \\'{PH1}\\'',\n  /**\n  *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings. It labels the input\n  * field used to add new or edit existing regular expressions that match file names to ignore in the debugger.\n  */\n  pattern: 'Pattern',\n  /**\n  *@description Aria accessible name in Framework Ignore List Settings Tab of the Settings\n  */\n  behavior: 'Behavior',\n  /**\n  *@description Error message in Framework Ignore List settings pane that declares pattern must not be empty\n  */\n  patternCannotBeEmpty: 'Pattern cannot be empty',\n  /**\n  *@description Error message in Framework Ignore List settings pane that declares pattern already exits\n  */\n  patternAlreadyExists: 'Pattern already exists',\n  /**\n  *@description Error message in Framework Ignore List settings pane that declares pattern must be a valid regular expression\n  */\n  patternMustBeAValidRegular: 'Pattern must be a valid regular expression',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/FrameworkIgnoreListSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet frameworkIgnoreListSettingsTabInstance: FrameworkIgnoreListSettingsTab;\nexport class FrameworkIgnoreListSettingsTab extends UI.Widget.VBox implements\n    UI.ListWidget.Delegate<Common.Settings.RegExpSettingItem> {\n  _ignoreListLabel: Common.UIString.LocalizedString;\n  _disabledLabel: Common.UIString.LocalizedString;\n  _list: UI.ListWidget.ListWidget<Common.Settings.RegExpSettingItem>;\n  _setting: Common.Settings.RegExpSetting;\n  _editor?: UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/settings/frameworkIgnoreListSettingsTab.css', {enableLegacyPatching: false});\n\n    const header = this.contentElement.createChild('div', 'header');\n    header.textContent = i18nString(UIStrings.frameworkIgnoreList);\n    UI.ARIAUtils.markAsHeading(header, 1);\n    this.contentElement.createChild('div', 'intro').textContent = i18nString(UIStrings.debuggerWillSkipThroughThe);\n\n    const ignoreListContentScripts = this.contentElement.createChild('div', 'ignore-list-content-scripts');\n    ignoreListContentScripts.appendChild(UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.ignoreListContentScripts),\n        Common.Settings.Settings.instance().moduleSetting('skipContentScripts'), true));\n    UI.Tooltip.Tooltip.install(ignoreListContentScripts, i18nString(UIStrings.ignoreListContentScriptsExtension));\n\n    this._ignoreListLabel = i18nString(UIStrings.ignoreList);\n    this._disabledLabel = i18nString(UIStrings.disabled);\n\n    this._list = new UI.ListWidget.ListWidget(this);\n    this._list.element.classList.add('ignore-list');\n    this._list.registerRequiredCSS('panels/settings/frameworkIgnoreListSettingsTab.css', {enableLegacyPatching: false});\n\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('ignore-list-empty');\n    placeholder.textContent = i18nString(UIStrings.noIgnoreListPatterns);\n    this._list.setEmptyPlaceholder(placeholder);\n    this._list.show(this.contentElement);\n    const addPatternButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.addPattern), this._addButtonClicked.bind(this), 'add-button');\n    UI.ARIAUtils.setAccessibleName(addPatternButton, i18nString(UIStrings.addFilenamePattern));\n    this.contentElement.appendChild(addPatternButton);\n    this._setting =\n        Common.Settings.Settings.instance().moduleSetting('skipStackFramesPattern') as Common.Settings.RegExpSetting;\n    this._setting.addChangeListener(this._settingUpdated, this);\n\n    this.setDefaultFocusedElement(addPatternButton);\n  }\n\n  static instance(opts = {forceNew: null}): FrameworkIgnoreListSettingsTab {\n    const {forceNew} = opts;\n    if (!frameworkIgnoreListSettingsTabInstance || forceNew) {\n      frameworkIgnoreListSettingsTabInstance = new FrameworkIgnoreListSettingsTab();\n    }\n\n    return frameworkIgnoreListSettingsTabInstance;\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this._settingUpdated();\n  }\n\n  _settingUpdated(): void {\n    this._list.clear();\n    const patterns = this._setting.getAsArray();\n    for (let i = 0; i < patterns.length; ++i) {\n      this._list.appendItem(patterns[i], true);\n    }\n  }\n\n  _addButtonClicked(): void {\n    this._list.addNewItem(this._setting.getAsArray().length, {pattern: '', disabled: false});\n  }\n\n  renderItem(item: Common.Settings.RegExpSettingItem, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('ignore-list-item');\n    const pattern = element.createChild('div', 'ignore-list-pattern');\n    pattern.textContent = item.pattern;\n    UI.Tooltip.Tooltip.install(pattern, i18nString(UIStrings.ignoreScriptsWhoseNamesMatchS, {PH1: item.pattern}));\n    element.createChild('div', 'ignore-list-separator');\n    element.createChild('div', 'ignore-list-behavior').textContent =\n        item.disabled ? this._disabledLabel : this._ignoreListLabel;\n    if (item.disabled) {\n      element.classList.add('ignore-list-disabled');\n    }\n    return element;\n  }\n\n  removeItemRequested(item: Common.Settings.RegExpSettingItem, index: number): void {\n    const patterns = this._setting.getAsArray();\n    patterns.splice(index, 1);\n    this._setting.setAsArray(patterns);\n  }\n\n  commitEdit(\n      item: Common.Settings.RegExpSettingItem, editor: UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>,\n      isNew: boolean): void {\n    item.pattern = editor.control('pattern').value.trim();\n    item.disabled = editor.control('behavior').value === this._disabledLabel;\n\n    const list = this._setting.getAsArray();\n    if (isNew) {\n      list.push(item);\n    }\n    this._setting.setAsArray(list);\n  }\n\n  beginEdit(item: Common.Settings.RegExpSettingItem): UI.ListWidget.Editor<Common.Settings.RegExpSettingItem> {\n    const editor = this._createEditor();\n    editor.control('pattern').value = item.pattern;\n    editor.control('behavior').value = item.disabled ? this._disabledLabel : this._ignoreListLabel;\n    return editor;\n  }\n\n  _createEditor(): UI.ListWidget.Editor<Common.Settings.RegExpSettingItem> {\n    if (this._editor) {\n      return this._editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<Common.Settings.RegExpSettingItem>();\n    this._editor = editor;\n    const content = editor.contentElement();\n\n    const titles = content.createChild('div', 'ignore-list-edit-row');\n    titles.createChild('div', 'ignore-list-pattern').textContent = i18nString(UIStrings.pattern);\n    titles.createChild('div', 'ignore-list-separator ignore-list-separator-invisible');\n    titles.createChild('div', 'ignore-list-behavior').textContent = i18nString(UIStrings.behavior);\n\n    const fields = content.createChild('div', 'ignore-list-edit-row');\n    const pattern = editor.createInput('pattern', 'text', '/framework\\\\.js$', patternValidator.bind(this));\n    UI.ARIAUtils.setAccessibleName(pattern, i18nString(UIStrings.pattern));\n    fields.createChild('div', 'ignore-list-pattern').appendChild(pattern);\n    fields.createChild('div', 'ignore-list-separator ignore-list-separator-invisible');\n    const behavior = editor.createSelect('behavior', [this._ignoreListLabel, this._disabledLabel], behaviorValidator);\n    UI.ARIAUtils.setAccessibleName(behavior, i18nString(UIStrings.behavior));\n    fields.createChild('div', 'ignore-list-behavior').appendChild(behavior);\n\n    return editor;\n\n    function patternValidator(\n        this: FrameworkIgnoreListSettingsTab, item: Common.Settings.RegExpSettingItem, index: number,\n        input: HTMLInputElement|HTMLSelectElement): UI.ListWidget.ValidatorResult {\n      const pattern = input.value.trim();\n      const patterns = this._setting.getAsArray();\n\n      if (!pattern.length) {\n        return {valid: false, errorMessage: i18nString(UIStrings.patternCannotBeEmpty)};\n      }\n\n      for (let i = 0; i < patterns.length; ++i) {\n        if (i !== index && patterns[i].pattern === pattern) {\n          return {valid: false, errorMessage: i18nString(UIStrings.patternAlreadyExists)};\n        }\n      }\n\n      let regex;\n      try {\n        regex = new RegExp(pattern);\n      } catch (e) {\n      }\n      if (!regex) {\n        return {valid: false, errorMessage: i18nString(UIStrings.patternMustBeAValidRegular)};\n      }\n      return {valid: true, errorMessage: undefined};\n    }\n\n    function behaviorValidator(\n        _item: Common.Settings.RegExpSettingItem, _index: number,\n        _input: HTMLInputElement|HTMLSelectElement): UI.ListWidget.ValidatorResult {\n      return {valid: true, errorMessage: undefined};\n    }\n  }\n}\n"]}