{"version":3,"file":"KeybindsSettingsTab.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/KeybindsSettingsTab.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for keyboard shortcuts\n  */\n  shortcuts: 'Shortcuts',\n  /**\n  *@description Text appearing before a select control offering users their choice of keyboard shortcut presets.\n  */\n  matchShortcutsFromPreset: 'Match shortcuts from preset',\n  /**\n  *@description Screen reader label for list of keyboard shortcuts in settings\n  */\n  keyboardShortcutsList: 'Keyboard shortcuts list',\n  /**\n  *@description Screen reader label for an icon denoting a shortcut that has been changed from its default\n  */\n  shortcutModified: 'Shortcut modified',\n  /**\n  *@description Screen reader label for an empty shortcut cell in custom shortcuts settings tab\n  */\n  noShortcutForAction: 'No shortcut for action',\n  /**\n  *@description Link text in the settings pane to add another shortcut for an action\n  */\n  addAShortcut: 'Add a shortcut',\n  /**\n  *@description Label for a button in the settings pane that confirms changes to a keyboard shortcut\n  */\n  confirmChanges: 'Confirm changes',\n  /**\n  *@description Label for a button in the settings pane that discards changes to the shortcut being edited\n  */\n  discardChanges: 'Discard changes',\n  /**\n  *@description Label for a button in the settings pane that removes a keyboard shortcut.\n  */\n  removeShortcut: 'Remove shortcut',\n  /**\n  *@description Label for a button in the settings pane that edits a keyboard shortcut\n  */\n  editShortcut: 'Edit shortcut',\n  /**\n  *@description Message shown in settings when the user inputs a modifier-only shortcut such as Ctrl+Shift.\n  */\n  shortcutsCannotContainOnly: 'Shortcuts cannot contain only modifier keys.',\n  /**\n  *@description Messages shown in shortcuts settings when the user inputs a shortcut that is already in use.\n  *@example {Performance} PH1\n  *@example {Start/stop recording} PH2\n  */\n  thisShortcutIsInUseByS: 'This shortcut is in use by {PH1}: {PH2}.',\n  /**\n  *@description Message shown in settings when to restore default shortcuts.\n  */\n  RestoreDefaultShortcuts: 'Restore default shortcuts',\n  /**\n  *@description Message shown in settings to show the full list of keyboard shortcuts.\n  */\n  FullListOfDevtoolsKeyboard: 'Full list of DevTools keyboard shortcuts and gestures',\n  /**\n   *@description Label for a button in the shortcut editor that resets all shortcuts for the current action.\n  */\n  ResetShortcutsForAction: 'Reset shortcuts for action',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/KeybindsSettingsTab.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet keybindsSettingsTabInstance: KeybindsSettingsTab;\nexport class KeybindsSettingsTab extends UI.Widget.VBox implements UI.ListControl.ListDelegate<KeybindsItem> {\n  _items: UI.ListModel.ListModel<KeybindsItem>;\n  _list: UI.ListControl.ListControl<string|UI.ActionRegistration.Action>;\n  _editingItem: UI.ActionRegistration.Action|null;\n  _editingRow: ShortcutListItem|null;\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/settings/keybindsSettingsTab.css', {enableLegacyPatching: false});\n\n    const header = this.contentElement.createChild('header');\n    header.createChild('h1').textContent = i18nString(UIStrings.shortcuts);\n    const keybindsSetSetting = Common.Settings.Settings.instance().moduleSetting('activeKeybindSet');\n    const userShortcutsSetting = Common.Settings.Settings.instance().moduleSetting('userShortcuts');\n    userShortcutsSetting.addChangeListener(this.update, this);\n    keybindsSetSetting.addChangeListener(this.update, this);\n    const keybindsSetSelect =\n        UI.SettingsUI.createControlForSetting(keybindsSetSetting, i18nString(UIStrings.matchShortcutsFromPreset));\n    if (keybindsSetSelect) {\n      keybindsSetSelect.classList.add('keybinds-set-select');\n      this.contentElement.appendChild(keybindsSetSelect);\n    }\n\n    this._items = new UI.ListModel.ListModel();\n    this._list = new UI.ListControl.ListControl(this._items, this, UI.ListControl.ListMode.NonViewport);\n    this._items.replaceAll(this._createListItems());\n    UI.ARIAUtils.markAsList(this._list.element);\n    this.registerRequiredCSS('panels/settings/keybindsSettingsTab.css', {enableLegacyPatching: false});\n    this.contentElement.appendChild(this._list.element);\n    UI.ARIAUtils.setAccessibleName(this._list.element, i18nString(UIStrings.keyboardShortcutsList));\n    const footer = this.contentElement.createChild('div');\n    footer.classList.add('keybinds-footer');\n    const docsLink = UI.XLink.XLink.create(\n        'https://developer.chrome.com/docs/devtools/shortcuts/', i18nString(UIStrings.FullListOfDevtoolsKeyboard));\n    docsLink.classList.add('docs-link');\n    footer.appendChild(docsLink);\n    footer.appendChild(UI.UIUtils.createTextButton(i18nString(UIStrings.RestoreDefaultShortcuts), () => {\n      userShortcutsSetting.set([]);\n      keybindsSetSetting.set(UI.ShortcutRegistry.DefaultShortcutSetting);\n    }));\n    this._editingItem = null;\n    this._editingRow = null;\n\n    this.update();\n  }\n\n  static instance(opts = {forceNew: null}): KeybindsSettingsTab {\n    const {forceNew} = opts;\n    if (!keybindsSettingsTabInstance || forceNew) {\n      keybindsSettingsTabInstance = new KeybindsSettingsTab();\n    }\n\n    return keybindsSettingsTabInstance;\n  }\n\n\n  createElementForItem(item: KeybindsItem): Element {\n    let itemElement = document.createElement('div');\n\n    if (typeof item === 'string') {\n      UI.ARIAUtils.setLevel(itemElement, 1);\n      itemElement.classList.add('keybinds-category-header');\n      itemElement.textContent = item;\n    } else {\n      const listItem = new ShortcutListItem(item, this, item === this._editingItem);\n      itemElement = listItem.element;\n      UI.ARIAUtils.setLevel(itemElement, 2);\n      if (item === this._editingItem) {\n        this._editingRow = listItem;\n      }\n    }\n\n    itemElement.classList.add('keybinds-list-item');\n    UI.ARIAUtils.markAsListitem(itemElement);\n    itemElement.tabIndex = item === this._list.selectedItem() && item !== this._editingItem ? 0 : -1;\n    return itemElement;\n  }\n\n  commitChanges(\n      item: UI.ActionRegistration.Action,\n      editedShortcuts: Map<UI.KeyboardShortcut.KeyboardShortcut, UI.KeyboardShortcut.Descriptor[]|null>): void {\n    for (const [originalShortcut, newDescriptors] of editedShortcuts) {\n      if (originalShortcut.type !== UI.KeyboardShortcut.Type.UnsetShortcut) {\n        UI.ShortcutRegistry.ShortcutRegistry.instance().removeShortcut(originalShortcut);\n        if (!newDescriptors) {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ShortcutRemoved);\n        }\n      }\n      if (newDescriptors) {\n        UI.ShortcutRegistry.ShortcutRegistry.instance().registerUserShortcut(\n            originalShortcut.changeKeys(newDescriptors as UI.KeyboardShortcut.Descriptor[])\n                .changeType(UI.KeyboardShortcut.Type.UserShortcut));\n        if (originalShortcut.type === UI.KeyboardShortcut.Type.UnsetShortcut) {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.UserShortcutAdded);\n        } else {\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ShortcutModified);\n        }\n      }\n    }\n    this.stopEditing(item);\n  }\n\n  /**\n   * This method will never be called.\n   */\n  heightForItem(_item: KeybindsItem): number {\n    return 0;\n  }\n\n  isItemSelectable(_item: KeybindsItem): boolean {\n    return true;\n  }\n\n  selectedItemChanged(\n      from: KeybindsItem|null, to: KeybindsItem|null, fromElement: HTMLElement|null,\n      toElement: HTMLElement|null): void {\n    if (fromElement) {\n      fromElement.tabIndex = -1;\n    }\n    if (toElement) {\n      if (to === this._editingItem && this._editingRow) {\n        this._editingRow.focus();\n      } else {\n        toElement.tabIndex = 0;\n        if (this._list.element.hasFocus()) {\n          toElement.focus();\n        }\n      }\n      this.setDefaultFocusedElement(toElement);\n    }\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return true;\n  }\n\n  startEditing(action: UI.ActionRegistration.Action): void {\n    if (this._editingItem) {\n      this.stopEditing(this._editingItem);\n    }\n    UI.UIUtils.markBeingEdited(this._list.element, true);\n    this._editingItem = action;\n    this._list.refreshItem(action);\n  }\n\n  stopEditing(action: UI.ActionRegistration.Action): void {\n    UI.UIUtils.markBeingEdited(this._list.element, false);\n    this._editingItem = null;\n    this._editingRow = null;\n    this._list.refreshItem(action);\n    this.focus();\n  }\n\n  _createListItems(): KeybindsItem[] {\n    const actions = UI.ActionRegistry.ActionRegistry.instance().actions().sort((actionA, actionB) => {\n      if (actionA.category() < actionB.category()) {\n        return -1;\n      }\n      if (actionA.category() > actionB.category()) {\n        return 1;\n      }\n      if (actionA.id() < actionB.id()) {\n        return -1;\n      }\n      if (actionA.id() > actionB.id()) {\n        return 1;\n      }\n      return 0;\n    });\n\n    const items: KeybindsItem[] = [];\n\n    let currentCategory: string;\n    actions.forEach(action => {\n      if (currentCategory !== action.category()) {\n        items.push(action.category());\n      }\n      items.push(action);\n      currentCategory = action.category();\n    });\n    return items;\n  }\n\n  onEscapeKeyPressed(event: Event): void {\n    const deepActiveElement = document.deepActiveElement();\n    if (this._editingRow && deepActiveElement && deepActiveElement.nodeName === 'INPUT') {\n      this._editingRow.onEscapeKeyPressed(event);\n    }\n  }\n\n  update(): void {\n    if (this._editingItem) {\n      this.stopEditing(this._editingItem);\n    }\n    this._list.refreshAllItems();\n    if (!this._list.selectedItem()) {\n      this._list.selectItem(this._items.at(0));\n    }\n  }\n\n  willHide(): void {\n    if (this._editingItem) {\n      this.stopEditing(this._editingItem);\n    }\n  }\n}\n\nexport class ShortcutListItem {\n  _isEditing: boolean;\n  _settingsTab: KeybindsSettingsTab;\n  _item: UI.ActionRegistration.Action;\n  element: HTMLDivElement;\n  _editedShortcuts: Map<UI.KeyboardShortcut.KeyboardShortcut, UI.KeyboardShortcut.Descriptor[]|null>;\n  _shortcutInputs: Map<UI.KeyboardShortcut.KeyboardShortcut, Element>;\n  _shortcuts: UI.KeyboardShortcut.KeyboardShortcut[];\n  _elementToFocus: HTMLElement|null;\n  _confirmButton: HTMLButtonElement|null;\n  _addShortcutLinkContainer: Element|null;\n  _errorMessageElement: Element|null;\n  _secondKeyTimeout: number|null;\n  constructor(item: UI.ActionRegistration.Action, settingsTab: KeybindsSettingsTab, isEditing?: boolean) {\n    this._isEditing = Boolean(isEditing);\n    this._settingsTab = settingsTab;\n    this._item = item;\n    this.element = document.createElement('div');\n    this._editedShortcuts = new Map();\n    this._shortcutInputs = new Map();\n    this._shortcuts = UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction(item.id());\n    this._elementToFocus = null;\n    this._confirmButton = null;\n    this._addShortcutLinkContainer = null;\n    this._errorMessageElement = null;\n    this._secondKeyTimeout = null;\n\n    this._update();\n  }\n\n  focus(): void {\n    if (this._elementToFocus) {\n      this._elementToFocus.focus();\n    }\n  }\n\n  _update(): void {\n    this.element.removeChildren();\n    this._elementToFocus = null;\n    this._shortcutInputs.clear();\n\n    this.element.classList.toggle('keybinds-editing', this._isEditing);\n    this.element.createChild('div', 'keybinds-action-name keybinds-list-text').textContent = this._item.title();\n    this._shortcuts.forEach(this._createShortcutRow, this);\n    if (this._shortcuts.length === 0) {\n      this._createEmptyInfo();\n    }\n    if (this._isEditing) {\n      this._setupEditor();\n    }\n  }\n\n  _createEmptyInfo(): void {\n    if (UI.ShortcutRegistry.ShortcutRegistry.instance().actionHasDefaultShortcut(this._item.id())) {\n      const icon = UI.Icon.Icon.create('largeicon-shortcut-changed', 'keybinds-modified');\n      UI.ARIAUtils.setAccessibleName(icon, i18nString(UIStrings.shortcutModified));\n      this.element.appendChild(icon);\n    }\n    if (!this._isEditing) {\n      const emptyElement = this.element.createChild('div', 'keybinds-shortcut keybinds-list-text');\n      UI.ARIAUtils.setAccessibleName(emptyElement, i18nString(UIStrings.noShortcutForAction));\n      if (Root.Runtime.experiments.isEnabled('keyboardShortcutEditor')) {\n        this.element.appendChild(this._createEditButton());\n      }\n    }\n  }\n\n  _setupEditor(): void {\n    this._addShortcutLinkContainer = this.element.createChild('div', 'keybinds-shortcut devtools-link');\n    const addShortcutLink = this._addShortcutLinkContainer.createChild('span', 'devtools-link') as HTMLDivElement;\n    addShortcutLink.textContent = i18nString(UIStrings.addAShortcut);\n    addShortcutLink.tabIndex = 0;\n    UI.ARIAUtils.markAsLink(addShortcutLink);\n    self.onInvokeElement(addShortcutLink, this._addShortcut.bind(this));\n    if (!this._elementToFocus) {\n      this._elementToFocus = addShortcutLink;\n    }\n\n    this._errorMessageElement = this.element.createChild('div', 'keybinds-info keybinds-error hidden');\n    UI.ARIAUtils.markAsAlert(this._errorMessageElement);\n    this.element.appendChild(this._createIconButton(\n        i18nString(UIStrings.ResetShortcutsForAction), 'largeicon-undo', '',\n        this._resetShortcutsToDefaults.bind(this)));\n    this._confirmButton = this._createIconButton(\n        i18nString(UIStrings.confirmChanges), 'largeicon-checkmark', 'keybinds-confirm-button',\n        () => this._settingsTab.commitChanges(this._item, this._editedShortcuts));\n    this.element.appendChild(this._confirmButton);\n    this.element.appendChild(this._createIconButton(\n        i18nString(UIStrings.discardChanges), 'largeicon-delete', 'keybinds-cancel-button',\n        () => this._settingsTab.stopEditing(this._item)));\n    this.element.addEventListener('keydown', event => {\n      if (isEscKey(event)) {\n        this._settingsTab.stopEditing(this._item);\n        event.consume(true);\n      }\n    });\n  }\n\n  _addShortcut(): void {\n    const shortcut =\n        new UI.KeyboardShortcut.KeyboardShortcut([], this._item.id(), UI.KeyboardShortcut.Type.UnsetShortcut);\n    this._shortcuts.push(shortcut);\n    this._update();\n    const shortcutInput = this._shortcutInputs.get(shortcut) as HTMLElement;\n    if (shortcutInput) {\n      shortcutInput.focus();\n    }\n  }\n\n  _createShortcutRow(shortcut: UI.KeyboardShortcut.KeyboardShortcut, index?: number): void {\n    if (this._editedShortcuts.has(shortcut) && !this._editedShortcuts.get(shortcut)) {\n      return;\n    }\n    let icon: UI.Icon.Icon;\n    if (shortcut.type !== UI.KeyboardShortcut.Type.UnsetShortcut && !shortcut.isDefault()) {\n      icon = UI.Icon.Icon.create('largeicon-shortcut-changed', 'keybinds-modified');\n      UI.ARIAUtils.setAccessibleName(icon, i18nString(UIStrings.shortcutModified));\n      this.element.appendChild(icon);\n    }\n    const shortcutElement = this.element.createChild('div', 'keybinds-shortcut keybinds-list-text');\n    if (this._isEditing) {\n      const shortcutInput = shortcutElement.createChild('input', 'harmony-input') as HTMLInputElement;\n      shortcutInput.spellcheck = false;\n      shortcutInput.maxLength = 0;\n      this._shortcutInputs.set(shortcut, shortcutInput);\n      if (!this._elementToFocus) {\n        this._elementToFocus = shortcutInput;\n      }\n      shortcutInput.value = shortcut.title();\n      const userDescriptors = this._editedShortcuts.get(shortcut);\n      if (userDescriptors) {\n        shortcutInput.value = this._shortcutInputTextForDescriptors(userDescriptors);\n      }\n      shortcutInput.addEventListener('keydown', this._onShortcutInputKeyDown.bind(this, shortcut, shortcutInput));\n      shortcutInput.addEventListener('blur', () => {\n        if (this._secondKeyTimeout !== null) {\n          clearTimeout(this._secondKeyTimeout);\n          this._secondKeyTimeout = null;\n        }\n      });\n      shortcutElement.appendChild(this._createIconButton(\n          i18nString(UIStrings.removeShortcut), 'largeicon-trash-bin', 'keybinds-delete-button', () => {\n            const index = this._shortcuts.indexOf(shortcut);\n            if (!shortcut.isDefault()) {\n              this._shortcuts.splice(index, 1);\n            }\n            this._editedShortcuts.set(shortcut, null);\n            this._update();\n            this.focus();\n            this._validateInputs();\n          }));\n    } else {\n      const keys = shortcut.descriptors.flatMap(descriptor => descriptor.name.split(' + '));\n      keys.forEach(key => {\n        shortcutElement.createChild('span', 'keybinds-key').textContent = key;\n      });\n      if (Root.Runtime.experiments.isEnabled('keyboardShortcutEditor') && index === 0) {\n        this.element.appendChild(this._createEditButton());\n      }\n    }\n  }\n\n  _createEditButton(): Element {\n    return this._createIconButton(\n        i18nString(UIStrings.editShortcut), 'largeicon-edit', 'keybinds-edit-button',\n        () => this._settingsTab.startEditing(this._item));\n  }\n\n  _createIconButton(label: string, iconName: string, className: string, listener: () => void): HTMLButtonElement {\n    const button = document.createElement('button') as HTMLButtonElement;\n    button.appendChild(UI.Icon.Icon.create(iconName));\n    button.addEventListener('click', listener);\n    UI.ARIAUtils.setAccessibleName(button, label);\n    if (className) {\n      button.classList.add(className);\n    }\n    return button;\n  }\n\n  _onShortcutInputKeyDown(\n      shortcut: UI.KeyboardShortcut.KeyboardShortcut, shortcutInput: HTMLInputElement, event: Event): void {\n    if ((event as KeyboardEvent).key !== 'Tab') {\n      const eventDescriptor = this._descriptorForEvent(event as KeyboardEvent);\n      const userDescriptors = this._editedShortcuts.get(shortcut) || [];\n      this._editedShortcuts.set(shortcut, userDescriptors);\n      const isLastKeyOfShortcut =\n          userDescriptors.length === 2 && UI.KeyboardShortcut.KeyboardShortcut.isModifier(userDescriptors[1].key);\n      const shouldClearOldShortcut = userDescriptors.length === 2 && !isLastKeyOfShortcut;\n      if (shouldClearOldShortcut) {\n        userDescriptors.splice(0, 2);\n      }\n      if (this._secondKeyTimeout) {\n        clearTimeout(this._secondKeyTimeout);\n        this._secondKeyTimeout = null;\n        userDescriptors.push(eventDescriptor);\n      } else if (isLastKeyOfShortcut) {\n        userDescriptors[1] = eventDescriptor;\n      } else if (!UI.KeyboardShortcut.KeyboardShortcut.isModifier(eventDescriptor.key)) {\n        userDescriptors[0] = eventDescriptor;\n        this._secondKeyTimeout = window.setTimeout(() => {\n          this._secondKeyTimeout = null;\n        }, UI.ShortcutRegistry.KeyTimeout);\n      } else {\n        userDescriptors[0] = eventDescriptor;\n      }\n      shortcutInput.value = this._shortcutInputTextForDescriptors(userDescriptors);\n      this._validateInputs();\n      event.consume(true);\n    }\n  }\n\n  _descriptorForEvent(event: KeyboardEvent): UI.KeyboardShortcut.Descriptor {\n    const userKey = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent(event as KeyboardEvent);\n    const codeAndModifiers = UI.KeyboardShortcut.KeyboardShortcut.keyCodeAndModifiersFromKey(userKey);\n    let key: UI.KeyboardShortcut.Key|string =\n        UI.KeyboardShortcut.Keys[event.key] || UI.KeyboardShortcut.KeyBindings[event.key];\n\n    if (!key && !/^[a-z]$/i.test(event.key)) {\n      const keyCode = event.code;\n      // if we still don't have a key name, let's try the code before falling back to the raw key\n      key = UI.KeyboardShortcut.Keys[keyCode] || UI.KeyboardShortcut.KeyBindings[keyCode];\n      if (keyCode.startsWith('Digit')) {\n        key = keyCode.slice(5);\n      } else if (keyCode.startsWith('Key')) {\n        key = keyCode.slice(3);\n      }\n    }\n\n    return UI.KeyboardShortcut.KeyboardShortcut.makeDescriptor(key || event.key, codeAndModifiers.modifiers);\n  }\n\n  _shortcutInputTextForDescriptors(descriptors: UI.KeyboardShortcut.Descriptor[]): string {\n    return descriptors.map(descriptor => descriptor.name).join(' ');\n  }\n\n  _resetShortcutsToDefaults(): void {\n    this._editedShortcuts.clear();\n    for (const shortcut of this._shortcuts) {\n      if (shortcut.type === UI.KeyboardShortcut.Type.UnsetShortcut) {\n        const index = this._shortcuts.indexOf(shortcut);\n        this._shortcuts.splice(index, 1);\n      } else if (shortcut.type === UI.KeyboardShortcut.Type.UserShortcut) {\n        this._editedShortcuts.set(shortcut, null);\n      }\n    }\n    const disabledDefaults = UI.ShortcutRegistry.ShortcutRegistry.instance().disabledDefaultsForAction(this._item.id());\n    disabledDefaults.forEach(shortcut => {\n      this._shortcuts.push(shortcut);\n      this._editedShortcuts.set(shortcut, shortcut.descriptors);\n    });\n    this._update();\n    this.focus();\n  }\n\n  onEscapeKeyPressed(event: Event): void {\n    const activeElement = document.deepActiveElement();\n    for (const [shortcut, shortcutInput] of this._shortcutInputs.entries()) {\n      if (activeElement === shortcutInput) {\n        this._onShortcutInputKeyDown(\n            shortcut as UI.KeyboardShortcut.KeyboardShortcut, shortcutInput as HTMLInputElement,\n            event as KeyboardEvent);\n      }\n    }\n  }\n\n  _validateInputs(): void {\n    const confirmButton = this._confirmButton;\n    const errorMessageElement = this._errorMessageElement;\n    if (!confirmButton || !errorMessageElement) {\n      return;\n    }\n\n    confirmButton.disabled = false;\n    errorMessageElement.classList.add('hidden');\n    this._shortcutInputs.forEach((shortcutInput, shortcut) => {\n      const userDescriptors = this._editedShortcuts.get(shortcut);\n      if (!userDescriptors) {\n        return;\n      }\n      if (userDescriptors.some(descriptor => UI.KeyboardShortcut.KeyboardShortcut.isModifier(descriptor.key))) {\n        confirmButton.disabled = true;\n        shortcutInput.classList.add('error-input');\n        UI.ARIAUtils.setInvalid(shortcutInput, true);\n        errorMessageElement.classList.remove('hidden');\n        errorMessageElement.textContent = i18nString(UIStrings.shortcutsCannotContainOnly);\n        return;\n      }\n      const conflicts = UI.ShortcutRegistry.ShortcutRegistry.instance()\n                            .actionsForDescriptors(userDescriptors)\n                            .filter(actionId => actionId !== this._item.id());\n      if (conflicts.length) {\n        confirmButton.disabled = true;\n        shortcutInput.classList.add('error-input');\n        UI.ARIAUtils.setInvalid(shortcutInput, true);\n        errorMessageElement.classList.remove('hidden');\n        const action = UI.ActionRegistry.ActionRegistry.instance().action(conflicts[0]);\n        if (!action) {\n          return;\n        }\n        const actionTitle = action.title();\n        const actionCategory = action.category();\n        errorMessageElement.textContent =\n            i18nString(UIStrings.thisShortcutIsInUseByS, {PH1: actionCategory, PH2: actionTitle});\n        return;\n      }\n      shortcutInput.classList.remove('error-input');\n      UI.ARIAUtils.setInvalid(shortcutInput, false);\n    });\n  }\n}\n\nexport type KeybindsItem = string|UI.ActionRegistration.Action;\n"]}