{"version":3,"file":"SettingsScreen.js","sourceRoot":"","sources":["../../../../../../front_end/panels/settings/SettingsScreen.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {KeybindsSettingsTab} from './KeybindsSettingsTab.js';\n\nconst UIStrings = {\n  /**\n  *@description Name of the Settings view\n  */\n  settings: 'Settings',\n  /**\n  *@description Text for keyboard shortcuts\n  */\n  shortcuts: 'Shortcuts',\n  /**\n  *@description Text in Settings Screen of the Settings\n  */\n  preferences: 'Preferences',\n  /**\n  *@description Text of button in Settings Screen of the Settings\n  */\n  restoreDefaultsAndReload: 'Restore defaults and reload',\n  /**\n  *@description Text in Settings Screen of the Settings\n  */\n  experiments: 'Experiments',\n  /**\n  *@description Message shown in the experiments panel to warn users about any possible unstable features.\n  */\n  theseExperimentsCouldBeUnstable:\n      'These experiments could be unstable or unreliable and may require you to restart DevTools.',\n  /**\n  *@description Message text content in Settings Screen of the Settings\n  */\n  theseExperimentsAreParticularly: 'These experiments are particularly unstable. Enable at your own risk.',\n  /**\n  *@description Warning text content in Settings Screen of the Settings\n  */\n  warning: 'WARNING:',\n  /**\n  *@description Message to display if a setting change requires a reload of DevTools\n  */\n  oneOrMoreSettingsHaveChanged: 'One or more settings have changed which requires a reload to take effect.',\n  /**\n  * @description Label for a filter text input that controls which experiments are shown.\n  */\n  filterExperimentsLabel: 'Filter',\n  /**\n  * @description Warning text shown when the user has entered text to filter the\n  * list of experiments, but no experiments match the filter.\n  */\n  noResults: 'No experiments match the filter',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/settings/SettingsScreen.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet settingsScreenInstance: SettingsScreen;\n\nexport class SettingsScreen extends UI.Widget.VBox implements UI.View.ViewLocationResolver {\n  _tabbedLocation: UI.View.TabbedViewLocation;\n  _keybindsTab?: KeybindsSettingsTab;\n  _reportTabOnReveal: boolean;\n\n  private constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/settings/settingsScreen.css', {enableLegacyPatching: false});\n\n    this.contentElement.classList.add('settings-window-main');\n    this.contentElement.classList.add('vbox');\n\n    const settingsLabelElement = document.createElement('div');\n    const settingsTitleElement =\n        UI.Utils\n            .createShadowRootWithCoreStyles(\n                settingsLabelElement,\n                {cssFile: 'panels/settings/settingsScreen.css', enableLegacyPatching: false, delegatesFocus: undefined})\n            .createChild('div', 'settings-window-title');\n\n    UI.ARIAUtils.markAsHeading(settingsTitleElement, 1);\n    settingsTitleElement.textContent = i18nString(UIStrings.settings);\n\n    this._tabbedLocation = UI.ViewManager.ViewManager.instance().createTabbedLocation(\n        () => SettingsScreen._revealSettingsScreen(), 'settings-view');\n    const tabbedPane = this._tabbedLocation.tabbedPane();\n    tabbedPane.leftToolbar().appendToolbarItem(new UI.Toolbar.ToolbarItem(settingsLabelElement));\n    tabbedPane.setShrinkableTabs(false);\n    tabbedPane.makeVerticalTabLayout();\n    const keyBindsView = UI.ViewManager.ViewManager.instance().view('keybinds');\n    if (keyBindsView) {\n      keyBindsView.widget().then(widget => {\n        this._keybindsTab = widget as KeybindsSettingsTab;\n      });\n    }\n    tabbedPane.show(this.contentElement);\n    tabbedPane.selectTab('preferences');\n    tabbedPane.addEventListener(UI.TabbedPane.Events.TabInvoked, this._tabInvoked, this);\n    this._reportTabOnReveal = false;\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): SettingsScreen {\n    const {forceNew} = opts;\n    if (!settingsScreenInstance || forceNew) {\n      settingsScreenInstance = new SettingsScreen();\n    }\n\n    return settingsScreenInstance;\n  }\n\n  static _revealSettingsScreen(): SettingsScreen {\n    const settingsScreen = SettingsScreen.instance();\n    if (settingsScreen.isShowing()) {\n      return settingsScreen;\n    }\n\n    settingsScreen._reportTabOnReveal = true;\n    const dialog = new UI.Dialog.Dialog();\n    dialog.contentElement.tabIndex = -1;\n    dialog.addCloseButton();\n    dialog.setOutsideClickCallback(() => {});\n    dialog.setPointerEventsBehavior(UI.GlassPane.PointerEventsBehavior.PierceGlassPane);\n    dialog.setOutsideTabIndexBehavior(UI.Dialog.OutsideTabIndexBehavior.PreserveMainViewTabIndex);\n    settingsScreen.show(dialog.contentElement);\n    dialog.setEscapeKeyCallback(settingsScreen._onEscapeKeyPressed.bind(settingsScreen));\n\n    // UI.Dialog extends GlassPane and overrides the `show` method with a wider\n    // accepted type. However, TypeScript uses the supertype declaration to\n    // determine the full type, which requires a `!Document`.\n    // @ts-ignore\n    dialog.show();\n\n    return settingsScreen;\n  }\n\n  static async _showSettingsScreen(\n      options: ShowSettingsScreenOptions|undefined = {name: undefined, focusTabHeader: undefined}): Promise<void> {\n    const {name, focusTabHeader} = options;\n    const settingsScreen = SettingsScreen._revealSettingsScreen();\n\n    settingsScreen._selectTab(name || 'preferences');\n    const tabbedPane = settingsScreen._tabbedLocation.tabbedPane();\n    await tabbedPane.waitForTabElementUpdate();\n    if (focusTabHeader) {\n      tabbedPane.focusSelectedTabHeader();\n    } else {\n      tabbedPane.focus();\n    }\n  }\n\n  resolveLocation(_locationName: string): UI.View.ViewLocation|null {\n    return this._tabbedLocation;\n  }\n\n  _selectTab(name: string): void {\n    this._tabbedLocation.tabbedPane().selectTab(name, /* userGesture */ true);\n  }\n\n  _tabInvoked(event: Common.EventTarget.EventTargetEvent): void {\n    const eventData = event.data as UI.TabbedPane.EventData;\n    if (!eventData.isUserGesture) {\n      return;\n    }\n\n    const prevTabId = eventData.prevTabId;\n    const tabId = eventData.tabId;\n    if (!this._reportTabOnReveal && prevTabId && prevTabId === tabId) {\n      return;\n    }\n\n    this._reportTabOnReveal = false;\n    this._reportSettingsPanelShown(tabId);\n  }\n\n  _reportSettingsPanelShown(tabId: string): void {\n    if (tabId === i18nString(UIStrings.shortcuts)) {\n      Host.userMetrics.settingsPanelShown('shortcuts');\n      return;\n    }\n\n    Host.userMetrics.settingsPanelShown(tabId);\n  }\n\n  _onEscapeKeyPressed(event: Event): void {\n    if (this._tabbedLocation.tabbedPane().selectedTabId === 'keybinds' && this._keybindsTab) {\n      this._keybindsTab.onEscapeKeyPressed(event);\n    }\n  }\n}\n\nclass SettingsTab extends UI.Widget.VBox {\n  containerElement: HTMLElement;\n  constructor(name: string, id?: string) {\n    super();\n    this.element.classList.add('settings-tab-container');\n    if (id) {\n      this.element.id = id;\n    }\n    const header = this.element.createChild('header');\n    UI.UIUtils.createTextChild(header.createChild('h1'), name);\n    this.containerElement = this.element.createChild('div', 'settings-container-wrapper')\n                                .createChild('div', 'settings-tab settings-content settings-container');\n  }\n\n  _appendSection(name?: string): HTMLElement {\n    const block = this.containerElement.createChild('div', 'settings-block');\n    if (name) {\n      UI.ARIAUtils.markAsGroup(block);\n      const title = block.createChild('div', 'settings-section-title');\n      title.textContent = name;\n      UI.ARIAUtils.markAsHeading(title, 2);\n      UI.ARIAUtils.setAccessibleName(block, name);\n    }\n    return block;\n  }\n}\n\nlet genericSettingsTabInstance: GenericSettingsTab;\n\n\nexport class GenericSettingsTab extends SettingsTab {\n  private categoryToSection = new Map<Common.Settings.SettingCategory, Element>();\n\n  constructor() {\n    super(i18nString(UIStrings.preferences), 'preferences-tab-content');\n\n    // GRID, MOBILE, EMULATION, and RENDERING are intentionally excluded from this list.\n    const explicitSectionOrder: Common.Settings.SettingCategory[] = [\n      Common.Settings.SettingCategory.NONE,\n      Common.Settings.SettingCategory.APPEARANCE,\n      Common.Settings.SettingCategory.SOURCES,\n      Common.Settings.SettingCategory.ELEMENTS,\n      Common.Settings.SettingCategory.NETWORK,\n      Common.Settings.SettingCategory.PERFORMANCE,\n      Common.Settings.SettingCategory.MEMORY,\n      Common.Settings.SettingCategory.CONSOLE,\n      Common.Settings.SettingCategory.EXTENSIONS,\n      Common.Settings.SettingCategory.PERSISTENCE,\n      Common.Settings.SettingCategory.DEBUGGER,\n      Common.Settings.SettingCategory.GLOBAL,\n    ];\n\n    // Some settings define their initial ordering.\n    const preRegisteredSettings = Common.Settings.getRegisteredSettings().sort(\n        (firstSetting, secondSetting) => {\n          if (firstSetting.order && secondSetting.order) {\n            return (firstSetting.order - secondSetting.order);\n          }\n          if (firstSetting.order) {\n            return -1;\n          }\n          if (secondSetting.order) {\n            return 1;\n          }\n          return 0;\n        },\n    );\n\n    const visibleSections = explicitSectionOrder.filter(category => {\n      return preRegisteredSettings.some(setting => {\n        return setting.category === category && GenericSettingsTab.isSettingVisible(setting);\n      });\n    });\n\n    for (const sectionName of visibleSections) {\n      this._createSectionElement(sectionName);\n    }\n\n    for (const settingRegistration of preRegisteredSettings) {\n      if (!GenericSettingsTab.isSettingVisible(settingRegistration)) {\n        continue;\n      }\n      const extensionCategory = settingRegistration.category;\n      if (!extensionCategory) {\n        continue;\n      }\n      const sectionElement = this._sectionElement(extensionCategory);\n      if (!sectionElement) {\n        continue;\n      }\n      const setting = Common.Settings.Settings.instance().moduleSetting(settingRegistration.settingName);\n      const settingControl = UI.SettingsUI.createControlForSetting(setting);\n      if (settingControl) {\n        sectionElement.appendChild(settingControl);\n      }\n    }\n    this._addSettingUI();\n\n    this._appendSection().appendChild(\n        UI.UIUtils.createTextButton(i18nString(UIStrings.restoreDefaultsAndReload), restoreAndReload));\n\n    function restoreAndReload(): void {\n      Common.Settings.Settings.instance().clearAll();\n      Components.Reload.reload();\n    }\n  }\n\n  static instance(opts = {forceNew: null}): GenericSettingsTab {\n    const {forceNew} = opts;\n    if (!genericSettingsTabInstance || forceNew) {\n      genericSettingsTabInstance = new GenericSettingsTab();\n    }\n\n    return genericSettingsTabInstance;\n  }\n\n  static isSettingVisible(setting: Common.Settings.SettingRegistration): boolean {\n    const titleMac = setting.titleMac && setting.titleMac();\n    const defaultTitle = setting.title && setting.title();\n    const title = titleMac || defaultTitle;\n    return Boolean(title && setting.category);\n  }\n\n  _addSettingUI(): void {\n    const sectionName = Common.Settings.SettingCategory.EXTENSIONS;\n    const settingUI = Components.Linkifier.LinkHandlerSettingUI.instance() as UI.SettingsUI.SettingUI;\n    const element = settingUI.settingElement();\n    if (element) {\n      let sectionElement = this._sectionElement(sectionName);\n      if (!sectionElement) {\n        sectionElement = this._createSectionElement(sectionName);\n      }\n      sectionElement.appendChild(element);\n    }\n  }\n\n  _createSectionElement(category: Common.Settings.SettingCategory): Element {\n    const uiSectionName = Common.Settings.getLocalizedSettingsCategory(category);\n    const sectionElement = this._appendSection(uiSectionName);\n    this.categoryToSection.set(category, sectionElement);\n    return sectionElement;\n  }\n\n  _sectionElement(category: Common.Settings.SettingCategory): Element|null {\n    return this.categoryToSection.get(category) || null;\n  }\n}\n\n\nlet experimentsSettingsTabInstance: ExperimentsSettingsTab;\n\nexport class ExperimentsSettingsTab extends SettingsTab {\n  private experimentsSection: HTMLElement|undefined;\n  private unstableExperimentsSection: HTMLElement|undefined;\n\n  constructor() {\n    super(i18nString(UIStrings.experiments), 'experiments-tab-content');\n    const filterSection = this._appendSection();\n    filterSection.style.paddingTop = '1px';\n\n    const labelElement = filterSection.createChild('label');\n    labelElement.textContent = i18nString(UIStrings.filterExperimentsLabel);\n    const inputElement = UI.UIUtils.createInput('', 'text');\n    UI.ARIAUtils.bindLabelToControl(labelElement, inputElement);\n    filterSection.appendChild(inputElement);\n    inputElement.addEventListener('input', () => this.renderExperiments(inputElement.value.toLowerCase()), false);\n\n    this.renderExperiments('');\n  }\n\n  private renderExperiments(filterText: string): void {\n    if (this.experimentsSection) {\n      this.experimentsSection.remove();\n    }\n    if (this.unstableExperimentsSection) {\n      this.unstableExperimentsSection.remove();\n    }\n    const experiments = Root.Runtime.experiments.allConfigurableExperiments().sort();\n    const unstableExperiments = experiments.filter(e => e.unstable && e.title.toLowerCase().includes(filterText));\n    const stableExperiments = experiments.filter(e => !e.unstable && e.title.toLowerCase().includes(filterText));\n    if (stableExperiments.length) {\n      this.experimentsSection = this._appendSection();\n      const warningMessage = i18nString(UIStrings.theseExperimentsCouldBeUnstable);\n      this.experimentsSection.appendChild(this._createExperimentsWarningSubsection(warningMessage));\n      for (const experiment of stableExperiments) {\n        this.experimentsSection.appendChild(this._createExperimentCheckbox(experiment));\n      }\n    }\n    if (unstableExperiments.length) {\n      this.unstableExperimentsSection = this._appendSection();\n      const warningMessage = i18nString(UIStrings.theseExperimentsAreParticularly);\n      this.unstableExperimentsSection.appendChild(this._createExperimentsWarningSubsection(warningMessage));\n      for (const experiment of unstableExperiments) {\n        // TODO(crbug.com/1161439): remove experiment duplication\n        if (experiment.name !== 'blackboxJSFramesOnTimeline') {\n          this.unstableExperimentsSection.appendChild(this._createExperimentCheckbox(experiment));\n        }\n      }\n    }\n    if (!stableExperiments.length && !unstableExperiments.length) {\n      this.experimentsSection = this._appendSection();\n      const warning = this.experimentsSection.createChild('span');\n      warning.textContent = i18nString(UIStrings.noResults);\n    }\n  }\n\n  static instance(opts = {forceNew: null}): ExperimentsSettingsTab {\n    const {forceNew} = opts;\n    if (!experimentsSettingsTabInstance || forceNew) {\n      experimentsSettingsTabInstance = new ExperimentsSettingsTab();\n    }\n\n    return experimentsSettingsTabInstance;\n  }\n\n\n  _createExperimentsWarningSubsection(warningMessage: string): Element {\n    const subsection = document.createElement('div');\n    const warning = subsection.createChild('span', 'settings-experiments-warning-subsection-warning');\n    warning.textContent = i18nString(UIStrings.warning);\n    UI.UIUtils.createTextChild(subsection, ' ');\n    const message = subsection.createChild('span', 'settings-experiments-warning-subsection-message');\n    message.textContent = warningMessage;\n    return subsection;\n  }\n\n  _createExperimentCheckbox(experiment: Root.Runtime.Experiment): HTMLParagraphElement {\n    const label = UI.UIUtils.CheckboxLabel.create(i18nString(experiment.title), experiment.isEnabled());\n    const input = label.checkboxElement;\n    input.name = experiment.name;\n    function listener(): void {\n      experiment.setEnabled(input.checked);\n      // TODO(crbug.com/1161439): remove experiment duplication\n      if (experiment.name === 'ignoreListJSFramesOnTimeline') {\n        Root.Runtime.experiments.setEnabled('blackboxJSFramesOnTimeline', input.checked);\n      }\n      Host.userMetrics.experimentChanged(experiment.name, experiment.isEnabled());\n      UI.InspectorView.InspectorView.instance().displayReloadRequiredWarning(\n          i18nString(UIStrings.oneOrMoreSettingsHaveChanged));\n    }\n    input.addEventListener('click', listener, false);\n\n    const p = document.createElement('p');\n    p.className = experiment.unstable && !experiment.isEnabled() ? 'settings-experiment-unstable' : '';\n    p.appendChild(label);\n    return p;\n  }\n}\n\nlet actionDelegateInstance: ActionDelegate;\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n\n    return actionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'settings.show':\n        SettingsScreen._showSettingsScreen({focusTabHeader: true} as ShowSettingsScreenOptions);\n        return true;\n      case 'settings.documentation':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.openInNewTab(\n            UI.UIUtils.addReferrerToURL('https://developer.chrome.com/docs/devtools/'));\n        return true;\n      case 'settings.shortcuts':\n        SettingsScreen._showSettingsScreen({name: 'keybinds', focusTabHeader: true});\n        return true;\n    }\n    return false;\n  }\n}\nlet revealerInstance: Revealer;\nexport class Revealer implements Common.Revealer.Revealer {\n  static instance(opts: {forceNew: boolean} = {forceNew: false}): Revealer {\n    const {forceNew} = opts;\n    if (!revealerInstance || forceNew) {\n      revealerInstance = new Revealer();\n    }\n\n    return revealerInstance;\n  }\n\n  reveal(object: Object): Promise<void> {\n    console.assert(object instanceof Common.Settings.Setting);\n    const setting = object as Common.Settings.Setting<string>;\n    let success = false;\n\n    for (const settingRegistration of Common.Settings.getRegisteredSettings()) {\n      if (!GenericSettingsTab.isSettingVisible(settingRegistration)) {\n        continue;\n      }\n      if (settingRegistration.settingName === setting.name) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n        SettingsScreen._showSettingsScreen();\n        success = true;\n      }\n    }\n\n    // Reveal settings views\n    for (const view of UI.ViewManager.getRegisteredViewExtensions()) {\n      const id = view.viewId();\n      const location = view.location();\n      if (location !== UI.ViewManager.ViewLocationValues.SETTINGS_VIEW) {\n        continue;\n      }\n      const settings = view.settings();\n      if (settings && settings.indexOf(setting.name) !== -1) {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n        SettingsScreen._showSettingsScreen({name: id} as ShowSettingsScreenOptions);\n        success = true;\n      }\n    }\n\n    return success ? Promise.resolve() : Promise.reject();\n  }\n}\nexport interface ShowSettingsScreenOptions {\n  name?: string;\n  focusTabHeader?: boolean;\n}\n"]}