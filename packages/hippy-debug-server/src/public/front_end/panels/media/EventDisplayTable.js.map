{"version":3,"file":"EventDisplayTable.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/EventDisplayTable.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {PlayerEvent} from './MediaModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for timestamps of items\n  */\n  timestamp: 'Timestamp',\n  /**\n  *@description The column header for event names.\n  */\n  eventName: 'Event name',\n  /**\n  *@description Text for the value of something\n  */\n  value: 'Value',\n  /**\n  *@description The accessible name of a table that displays information about events that occurred\n  * while a video/media player was present on the page.\n  */\n  eventDisplay: 'Event display',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/media/EventDisplayTable.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface EventDisplayColumnConfig {\n  id: string;\n  title: string;\n  sortable: boolean;\n  weight?: number;\n}\n\nexport const enum MediaEventColumnKeys {\n  Timestamp = 'displayTimestamp',\n  Event = 'event',\n  Value = 'value',\n}\n\nexport class EventNode extends DataGrid.DataGrid.DataGridNode<EventNode> {\n  _expandableElement: SourceFrame.JSONView.JSONView|null;\n\n  constructor(event: PlayerEvent) {\n    super(event, false);\n    this._expandableElement = null;\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    const cellData = this.data[columnId] as string;\n    if (columnId === MediaEventColumnKeys.Value) {\n      const enclosed = cell.createChild('div', 'event-display-table-contents-json-wrapper');\n      this._expandableElement =\n          new SourceFrame.JSONView.JSONView(new SourceFrame.JSONView.ParsedJSON(cellData, '', ''), true);\n      this._expandableElement.markAsRoot();\n      this._expandableElement.show(enclosed);\n    } else {\n      cell.classList.add('event-display-table-basic-text-table-entry');\n      UI.UIUtils.createTextChild(cell, cellData);\n    }\n    return cell;\n  }\n}\n\nexport class PlayerEventsView extends UI.Widget.VBox {\n  _dataGrid: DataGrid.DataGrid.DataGridImpl<EventNode>;\n  _firstEventTime: number;\n\n  constructor() {\n    super();\n\n    // Set up element styles.\n    this.registerRequiredCSS('panels/media/eventDisplayTable.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('event-display-table-contents-table-container');\n\n    this._dataGrid = this._createDataGrid([\n      {\n        id: MediaEventColumnKeys.Timestamp,\n        title: i18nString(UIStrings.timestamp),\n        weight: 1,\n        sortable: false,\n      },\n      {id: MediaEventColumnKeys.Event, title: i18nString(UIStrings.eventName), weight: 2, sortable: false},\n      {\n        id: MediaEventColumnKeys.Value,\n        title: i18nString(UIStrings.value),\n        weight: 7,\n        sortable: false,\n      },\n    ]);\n\n    this._firstEventTime = 0;\n    this._dataGrid.setStriped(true);\n    this._dataGrid.asWidget().show(this.contentElement);\n  }\n\n  _createDataGrid(headers: EventDisplayColumnConfig[]): DataGrid.DataGrid.DataGridImpl<EventNode> {\n    const gridColumnDescs = [];\n    for (const headerDesc of headers) {\n      gridColumnDescs.push(PlayerEventsView._convertToGridDescriptor(headerDesc));\n    }\n\n    // TODO(tmathmeyer) SortableDataGrid doesn't play nice with nested JSON\n    // renderers, since they can change size, and this breaks the visible\n    // element computation in ViewportDataGrid.\n    const datagrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.eventDisplay),\n      columns: gridColumnDescs,\n      deleteCallback: undefined,\n      editCallback: undefined,\n      refreshCallback: undefined,\n    });\n    datagrid.asWidget().contentElement.classList.add('no-border-top-datagrid');\n    return datagrid;\n  }\n\n  onEvent(event: PlayerEvent): void {\n    if (this._firstEventTime === 0 && typeof event.timestamp === 'number') {\n      this._firstEventTime = event.timestamp;\n    }\n\n    event = this._subtractFirstEventTime(event);\n    const stringified = event.value as string;\n    try {\n      const json = JSON.parse(stringified);\n      event.event = json.event;\n      delete json['event'];\n      event.value = json;\n      const node = new EventNode(event);\n      const scroll = this._dataGrid.scrollContainer as HTMLElement;\n      const isAtBottom = scroll.scrollTop === (scroll.scrollHeight - scroll.offsetHeight);\n      this._dataGrid.rootNode().appendChild(node as DataGrid.DataGrid.DataGridNode<EventNode>);\n      if (isAtBottom) {\n        scroll.scrollTop = scroll.scrollHeight;\n      }\n    } catch (e) {\n      // If this is a legacy message event, ignore it for now until they\n      // are handled.\n    }\n  }\n\n  _subtractFirstEventTime(event: PlayerEvent): PlayerEvent {\n    if (typeof event.timestamp === 'number') {\n      event.displayTimestamp = (event.timestamp - this._firstEventTime).toFixed(3);\n    }\n    return event;\n  }\n\n  static _convertToGridDescriptor(columnConfig: EventDisplayColumnConfig): DataGrid.DataGrid.ColumnDescriptor {\n    return {\n      id: columnConfig.id,\n      title: columnConfig.title,\n      sortable: columnConfig.sortable,\n      weight: columnConfig.weight || 0,\n      sort: DataGrid.DataGrid.Order.Ascending,\n    } as DataGrid.DataGrid.ColumnDescriptor;\n  }\n}\n"]}