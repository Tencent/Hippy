{"version":3,"file":"TickingFlameChart.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/TickingFlameChart.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nimport {Bounds, formatMillisecondsToSeconds} from './TickingFlameChartHelpers.js';\n\nconst defaultFont = '11px ' + Host.Platform.fontFamily();\nconst defaultColor =\n    ThemeSupport.ThemeSupport.instance().patchColorText('#444', ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n\nconst DefaultStyle = {\n  height: 20,\n  padding: 2,\n  collapsible: false,\n  font: defaultFont,\n  color: defaultColor,\n  backgroundColor: 'rgba(100 0 0 / 10%)',\n  nestingLevel: 0,\n  itemsHeight: 20,\n  shareHeaderLine: false,\n  useFirstLineForOverview: false,\n  useDecoratorsForOverview: false,\n};\n\nexport const HotColorScheme = ['#ffba08', '#faa307', '#f48c06', '#e85d04', '#dc2f02', '#d00000', '#9d0208'];\nexport const ColdColorScheme = ['#7400b8', '#6930c3', '#5e60ce', '#5390d9', '#4ea8de', '#48bfe3', '#56cfe1', '#64dfdf'];\n\nfunction calculateFontColor(backgroundColor: string): string {\n  const parsedColor = Common.Color.Color.parse(backgroundColor);\n  // Dark background needs a light font.\n  if (parsedColor && parsedColor.hsla()[2] < 0.5) {\n    return '#eee';\n  }\n  return '#444';\n}\n\ninterface EventHandlers {\n  setLive: (arg0: number) => number;\n  setComplete: (arg0: number) => void;\n  updateMaxTime: (arg0: number) => void;\n}\n\nexport interface EventProperties {\n  level: number;\n  startTime: number;\n  duration?: number;\n  name: string;\n  color?: string;\n  hoverData?: Object|null;\n}\n\n/**\n * Wrapper class for each event displayed on the timeline.\n */\nexport class Event {\n  _timelineData: PerfUI.FlameChart.TimelineData;\n  _setLive: (arg0: number) => number;\n  _setComplete: (arg0: number) => void;\n  _updateMaxTime: (arg0: number) => void;\n  _selfIndex: number;\n  _live: boolean;\n  _title: string;\n  _color: string;\n  _fontColor: string;\n  _hoverData: Object;\n\n  constructor(\n      timelineData: PerfUI.FlameChart.TimelineData, eventHandlers: EventHandlers,\n      eventProperties: EventProperties|\n      undefined = {color: undefined, duration: undefined, hoverData: {}, level: 0, name: '', startTime: 0}) {\n    // These allow the event to privately change it's own data in the timeline.\n    this._timelineData = timelineData;\n    this._setLive = eventHandlers.setLive;\n    this._setComplete = eventHandlers.setComplete;\n    this._updateMaxTime = eventHandlers.updateMaxTime;\n\n    // This is the index in the timelineData arrays we should be writing to.\n    this._selfIndex = this._timelineData.entryLevels.length;\n    this._live = false;\n\n    // Can't use the dict||or||default syntax, since NaN is a valid expected duration.\n    const duration = eventProperties['duration'] === undefined ? 0 : eventProperties['duration'];\n\n    (this._timelineData.entryLevels as number[]).push(eventProperties['level'] || 0);\n    (this._timelineData.entryStartTimes as number[]).push(eventProperties['startTime'] || 0);\n    (this._timelineData.entryTotalTimes as number[]).push(duration);  // May initially push -1\n\n    // If -1 was pushed, we need to update it. The set end time method helps with this.\n    if (duration === -1) {\n      this.endTime = -1;\n    }\n\n    this._title = eventProperties['name'] || '';\n    this._color = eventProperties['color'] || HotColorScheme[0];\n    this._fontColor = calculateFontColor(this._color);\n    this._hoverData = eventProperties['hoverData'] || {};\n  }\n\n  /**\n   * Render hovertext into the |htmlElement|\n   */\n  decorate(htmlElement: HTMLElement): void {\n    htmlElement.createChild('span').textContent = `Name: ${this._title}`;\n    htmlElement.createChild('br');\n\n    const startTimeReadable = formatMillisecondsToSeconds(this.startTime, 2);\n    if (this._live) {\n      htmlElement.createChild('span').textContent = `Duration: ${startTimeReadable} - LIVE!`;\n    } else if (!isNaN(this.duration)) {\n      const durationReadable = formatMillisecondsToSeconds(this.duration + this.startTime, 2);\n      htmlElement.createChild('span').textContent = `Duration: ${startTimeReadable} - ${durationReadable}`;\n    } else {\n      htmlElement.createChild('span').textContent = `Time: ${startTimeReadable}`;\n    }\n  }\n\n  /**\n   * set an event to be \"live\" where it's ended time is always the chart maximum\n   * or to be a fixed time.\n   * @param {number} time\n   */\n  set endTime(time: number) {\n    // Setting end time to -1 signals that an event becomes live\n    if (time === -1) {\n      this._timelineData.entryTotalTimes[this._selfIndex] = this._setLive(this._selfIndex);\n      this._live = true;\n    } else {\n      this._live = false;\n      const duration = time - this._timelineData.entryStartTimes[this._selfIndex];\n      this._timelineData.entryTotalTimes[this._selfIndex] = duration;\n      this._setComplete(this._selfIndex);\n      this._updateMaxTime(time);\n    }\n  }\n\n  get id(): number {\n    return this._selfIndex;\n  }\n\n  set level(level: number) {\n    this._timelineData.entryLevels[this._selfIndex] = level;\n  }\n\n  set title(text: string) {\n    this._title = text;\n  }\n\n  get title(): string {\n    return this._title;\n  }\n\n  set color(color: string) {\n    this._color = color;\n    this._fontColor = calculateFontColor(this._color);\n  }\n\n  get color(): string {\n    return this._color;\n  }\n\n  get fontColor(): string {\n    return this._fontColor;\n  }\n\n  get startTime(): number {\n    // Round it\n    return this._timelineData.entryStartTimes[this._selfIndex];\n  }\n\n  get duration(): number {\n    return this._timelineData.entryTotalTimes[this._selfIndex];\n  }\n\n  get live(): boolean {\n    return this._live;\n  }\n}\n\nexport class TickingFlameChart extends UI.Widget.VBox {\n  _intervalTimer: number;\n  _lastTimestamp: number;\n  _canTick: boolean;\n  _ticking: boolean;\n  _isShown: boolean;\n  _bounds: Bounds;\n  _dataProvider: TickingFlameChartDataProvider;\n  _delegate: TickingFlameChartDelegate;\n  _chartGroupExpansionSetting: Common.Settings.Setting<Object>;\n  _chart: PerfUI.FlameChart.FlameChart;\n  _stoppedPermanently?: boolean;\n\n  constructor() {\n    super();\n\n    // set to update once per second _while the tab is active_\n    this._intervalTimer = 0;\n    this._lastTimestamp = 0;\n    this._canTick = true;\n    this._ticking = false;\n    this._isShown = false;\n\n    // The max bounds for scroll-out.\n    this._bounds = new Bounds(0, 1000, 30000, 1000);\n\n    // Create the data provider with the initial max bounds,\n    // as well as a function to attempt bounds updating everywhere.\n    this._dataProvider = new TickingFlameChartDataProvider(this._bounds, this._updateMaxTime.bind(this));\n\n    // Delegate doesn't do much for now.\n    this._delegate = new TickingFlameChartDelegate();\n\n    // Chart settings.\n    this._chartGroupExpansionSetting =\n        Common.Settings.Settings.instance().createSetting('mediaFlameChartGroupExpansion', {});\n\n    // Create the chart.\n    this._chart =\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        new PerfUI.FlameChart.FlameChart(this._dataProvider, this._delegate, this._chartGroupExpansionSetting);\n\n    // TODO: needs to have support in the delegate for supporting this.\n    this._chart.disableRangeSelection();\n\n    // Scrolling should change the current bounds, and repaint the chart.\n    this._chart.bindCanvasEvent('wheel', e => {\n      this._onScroll(e as WheelEvent);\n    });\n\n    // Add the chart.\n    this._chart.show(this.contentElement);\n  }\n\n  /**\n   * Add a marker with |properties| at |time|.\n   */\n  addMarker(properties: EventProperties): void {\n    properties['duration'] = NaN;\n    this.startEvent(properties);\n  }\n\n  /**\n   * Create an event which will be set to live by default.\n   */\n  startEvent(properties: EventProperties): Event {\n    // Make sure that an unspecified event gets live duration.\n    // Have to check for undefined, since NaN is allowed but evaluates to false.\n    if (properties['duration'] === undefined) {\n      properties['duration'] = -1;\n    }\n    const time = properties['startTime'] || 0;\n\n    // Event has to be created before the updateMaxTime call.\n    const event = this._dataProvider.startEvent(properties);\n\n    this._updateMaxTime(time);\n    return event;\n  }\n\n  /**\n   * Add a group with |name| that can contain |depth| different tracks.\n   */\n  addGroup(name: Common.UIString.LocalizedString, depth: number): void {\n    this._dataProvider.addGroup(name, depth);\n  }\n\n  _updateMaxTime(time: number): void {\n    if (this._bounds.pushMaxAtLeastTo(time)) {\n      this._updateRender();\n    }\n  }\n\n  _onScroll(e: WheelEvent): void {\n    // TODO: is this a good divisor? does it account for high presicision scroll wheels?\n    // low precisision scroll wheels?\n    const scrollTickCount = Math.round(e.deltaY / 50);\n    const scrollPositionRatio = e.offsetX / (e.srcElement as HTMLElement).clientWidth;\n    if (scrollTickCount > 0) {\n      this._bounds.zoomOut(scrollTickCount, scrollPositionRatio);\n    } else {\n      this._bounds.zoomIn(-scrollTickCount, scrollPositionRatio);\n    }\n    this._updateRender();\n  }\n\n  willHide(): void {\n    this._isShown = false;\n    if (this._ticking) {\n      this._stop();\n    }\n  }\n\n  wasShown(): void {\n    this._isShown = true;\n    if (this._canTick && !this._ticking) {\n      this._start();\n    }\n  }\n\n  set canTick(allowed: boolean) {\n    this._canTick = allowed;\n    if (this._ticking && !allowed) {\n      this._stop();\n    }\n    if (!this._ticking && this._isShown && allowed) {\n      this._start();\n    }\n  }\n\n  _start(): void {\n    if (this._lastTimestamp === 0) {\n      this._lastTimestamp = Date.now();\n    }\n    if (this._intervalTimer !== 0 || this._stoppedPermanently) {\n      return;\n    }\n    // 16 ms is roughly 60 fps.\n    this._intervalTimer = window.setInterval(this._updateRender.bind(this), 16);\n    this._ticking = true;\n  }\n\n  _stop(permanently: boolean = false): void {\n    window.clearInterval(this._intervalTimer);\n    this._intervalTimer = 0;\n    if (permanently) {\n      this._stoppedPermanently = true;\n    }\n    this._ticking = false;\n  }\n\n  _updateRender(): void {\n    if (this._ticking) {\n      const currentTimestamp = Date.now();\n      const duration = currentTimestamp - this._lastTimestamp;\n      this._lastTimestamp = currentTimestamp;\n      this._bounds.addMax(duration);\n    }\n    this._dataProvider.updateMaxTime(this._bounds);\n    this._chart.setWindowTimes(this._bounds.low, this._bounds.high, true);\n    this._chart.scheduleUpdate();\n  }\n}\n\n/**\n * Doesn't do much right now, but can be used in the future for selecting events.\n */\nclass TickingFlameChartDelegate implements PerfUI.FlameChart.FlameChartDelegate {\n  constructor() {\n  }\n\n  windowChanged(_windowStartTime: number, _windowEndTime: number, _animate: boolean): void {\n  }\n\n  updateRangeSelection(_startTime: number, _endTime: number): void {\n  }\n\n  updateSelectedGroup(_flameChart: PerfUI.FlameChart.FlameChart, _group: PerfUI.FlameChart.Group|null): void {\n  }\n}\n\nclass TickingFlameChartDataProvider implements PerfUI.FlameChart.FlameChartDataProvider {\n  _updateMaxTimeHandle: (arg0: number) => void;\n  _bounds: Bounds;\n  _liveEvents: Set<number>;\n  _eventMap: Map<number, Event>;\n  _timelineData: PerfUI.FlameChart.TimelineData;\n  _maxLevel: number;\n\n  constructor(initialBounds: Bounds, updateMaxTime: (arg0: number) => void) {\n    // do _not_ call this method from within this class - only for passing to events.\n    this._updateMaxTimeHandle = updateMaxTime;\n\n    this._bounds = initialBounds;\n\n    // All the events which should have their time updated when the chart ticks.\n    this._liveEvents = new Set();\n\n    // All events.\n    // Map<Event>\n    this._eventMap = new Map();\n\n    // Contains the numerical indicies. This is passed as a reference to the events\n    // so that they can update it when they change.\n    this._timelineData = new PerfUI.FlameChart.TimelineData([], [], [], []);\n\n    // The current sum of all group heights.\n    this._maxLevel = 0;\n  }\n\n  /**\n   * Add a group with |name| that can contain |depth| different tracks.\n   */\n  addGroup(name: Common.UIString.LocalizedString, depth: number): void {\n    if (this._timelineData.groups) {\n      this._timelineData.groups.push({\n        name: name,\n        startLevel: this._maxLevel,\n        expanded: true,\n        selectable: false,\n        style: DefaultStyle,\n        track: null,\n      });\n    }\n    this._maxLevel += depth;\n  }\n\n  /**\n   * Create an event which will be set to live by default.\n   */\n  startEvent(properties: EventProperties): Event {\n    properties['level'] = properties['level'] || 0;\n    if (properties['level'] > this._maxLevel) {\n      throw `level ${properties['level']} is above the maximum allowed of ${this._maxLevel}`;\n    }\n\n    const event = new Event(\n        this._timelineData, {\n          setLive: this._setLive.bind(this),\n          setComplete: this._setComplete.bind(this),\n          updateMaxTime: this._updateMaxTimeHandle,\n        },\n        properties);\n\n    this._eventMap.set(event.id, event);\n    return event;\n  }\n\n  _setLive(index: number): number {\n    this._liveEvents.add(index);\n    return this._bounds.max;\n  }\n\n  _setComplete(index: number): void {\n    this._liveEvents.delete(index);\n  }\n\n  updateMaxTime(bounds: Bounds): void {\n    this._bounds = bounds;\n    for (const eventID of this._liveEvents.entries()) {\n      // force recalculation of all live events.\n      (this._eventMap.get(eventID[0]) as Event).endTime = -1;\n    }\n  }\n\n  maxStackDepth(): number {\n    return this._maxLevel + 1;\n  }\n\n  timelineData(): PerfUI.FlameChart.TimelineData {\n    return this._timelineData;\n  }\n\n  /** time in milliseconds\n     */\n  minimumBoundary(): number {\n    return this._bounds.low;\n  }\n\n  totalTime(): number {\n    return this._bounds.high;\n  }\n\n  entryColor(index: number): string {\n    return (this._eventMap.get(index) as Event).color;\n  }\n\n  textColor(index: number): string {\n    return (this._eventMap.get(index) as Event).fontColor;\n  }\n\n  entryTitle(index: number): string|null {\n    return (this._eventMap.get(index) as Event).title;\n  }\n\n  entryFont(_index: number): string|null {\n    return defaultFont;\n  }\n\n  decorateEntry(\n      _index: number, _context: CanvasRenderingContext2D, _text: string|null, _barX: number, _barY: number,\n      _barWidth: number, _barHeight: number, _unclippedBarX: number, _timeToPixelRatio: number): boolean {\n    return false;\n  }\n\n  forceDecoration(_index: number): boolean {\n    return false;\n  }\n\n  prepareHighlightedEntryInfo(index: number): Element|null {\n    const element = document.createElement('div');\n    (this._eventMap.get(index) as Event).decorate(element);\n    return element;\n  }\n\n  formatValue(value: number, _precision?: number): string {\n    // value is always [0, X] so we need to add lower bound\n    value += Math.round(this._bounds.low);\n\n    // Magic numbers of pre-calculated logorithms.\n\n    // we want to show additional decimals at the time when two adjacent labels\n    // would otherwise show the same number. At 3840 pixels wide, that cutoff\n    // happens to be about 30 seconds for one decimal and 2.8 for two decimals.\n    if (this._bounds.range < 2800) {\n      return formatMillisecondsToSeconds(value, 2);\n    }\n    if (this._bounds.range < 30000) {\n      return formatMillisecondsToSeconds(value, 1);\n    }\n    return formatMillisecondsToSeconds(value, 0);\n  }\n\n  canJumpToEntry(_entryIndex: number): boolean {\n    return false;\n  }\n\n  navStartTimes(): Map<string, SDK.TracingModel.Event> {\n    return new Map();\n  }\n}\n"]}