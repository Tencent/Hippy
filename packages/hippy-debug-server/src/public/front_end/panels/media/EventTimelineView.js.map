{"version":3,"file":"EventTimelineView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/EventTimelineView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport type {PlayerEvent} from './MediaModel.js';\nimport type {Event, EventProperties} from './TickingFlameChart.js';\nimport {ColdColorScheme, HotColorScheme, TickingFlameChart} from './TickingFlameChart.js';\n\n// Has to be a double, see https://v8.dev/blog/react-cliff\nconst NO_NORMALIZED_TIMESTAMP = -1.5;\n\nconst UIStrings = {\n  /**\n  *@description Title of the 'Playback Status' button\n  */\n  playbackStatus: 'Playback Status',\n  /**\n  *@description Title of the 'Buffering Status' button\n  */\n  bufferingStatus: 'Buffering Status',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/media/EventTimelineView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\ntype State = {\n  [key: string]: string,\n};\n\nexport class PlayerEventsTimeline extends TickingFlameChart {\n  _normalizedTimestamp: number;\n  _playbackStatusLastEvent: Event|null;\n  _audioBufferingStateEvent: Event|null;\n  _videoBufferingStateEvent: Event|null;\n\n  constructor() {\n    super();\n\n    this._normalizedTimestamp = NO_NORMALIZED_TIMESTAMP;\n\n    this.addGroup(i18nString(UIStrings.playbackStatus), 2);\n    this.addGroup(i18nString(UIStrings.bufferingStatus), 2);  // video on top, audio on bottom\n\n    this._playbackStatusLastEvent = null;\n    this._audioBufferingStateEvent = null;\n    this._videoBufferingStateEvent = null;\n  }\n\n  _ensureNoPreviousPlaybackEvent(normalizedTime: number): void {\n    if (this._playbackStatusLastEvent !== null) {\n      this._playbackStatusLastEvent.endTime = normalizedTime;\n      this._playbackStatusLastEvent = null;\n    }\n  }\n\n  /**\n   * Playback events are {kPlay, kPause, kSuspended, kEnded, and kWebMediaPlayerDestroyed}\n   * once destroyed, a player cannot recieve more events of any kind.\n   */\n  _onPlaybackEvent(event: PlayerEvent, normalizedTime: number): void {\n    switch (event.event) {\n      case 'kPlay':\n        this.canTick = true;\n        this._ensureNoPreviousPlaybackEvent(normalizedTime);\n\n        // Disabled until Closure is gone.\n        // clang-format off\n        this._playbackStatusLastEvent = this.startEvent({\n          level: 0,\n          startTime: normalizedTime,\n          name: 'Play',\n        } as EventProperties);\n        // clang-format on\n        break;\n\n      case 'kPause':\n        // Don't change ticking state - the player is still active even during\n        // video pause. It may recieve buffering events, seeks, etc.\n        this._ensureNoPreviousPlaybackEvent(normalizedTime);\n\n        // Disabled until Closure is gone.\n        // clang-format off\n        this._playbackStatusLastEvent = this.startEvent({\n          level: 0,\n          startTime: normalizedTime,\n          name: 'Pause',\n          color: HotColorScheme[1],\n        } as EventProperties);\n        // clang-format on\n        break;\n\n      case 'kWebMediaPlayerDestroyed':\n        this.canTick = false;\n        this._ensureNoPreviousPlaybackEvent(normalizedTime);\n        this.addMarker({\n          level: 1,\n          startTime: normalizedTime,\n          name: 'Destroyed',\n          color: HotColorScheme[4],\n        } as EventProperties);\n        // clang-format on\n        break;\n\n      case 'kSuspended':\n        // Other event's can't happen during suspension or while the player is\n        // destroyed, so stop the ticking.\n        this.canTick = false;\n        this._ensureNoPreviousPlaybackEvent(normalizedTime);\n\n        // Disabled until Closure is gone.\n        // clang-format off\n        this._playbackStatusLastEvent = this.startEvent({\n          level: 1,\n          startTime: normalizedTime,\n          name: 'Suspended',\n          color: HotColorScheme[3],\n        } as EventProperties);\n        // clang-format on\n        break;\n\n      case 'kEnded':\n        // Player ending can still have seeks & other events.\n        this._ensureNoPreviousPlaybackEvent(normalizedTime);\n\n        // Disabled until Closure is gone.\n        // clang-format off\n        this._playbackStatusLastEvent = this.startEvent({\n          level: 1,\n          startTime: normalizedTime,\n          name: 'Ended',\n          color: HotColorScheme[2],\n        } as EventProperties);\n        // clang-format on\n        break;\n\n      default:\n        throw `_onPlaybackEvent cant handle ${event.event}`;\n    }\n  }\n\n  _bufferedEnough(state: State): boolean {\n    return state['state'] === 'BUFFERING_HAVE_ENOUGH';\n  }\n\n  _onBufferingStatus(event: PlayerEvent, normalizedTime: number): void {\n    // No declarations inside the case labels.\n    let audioState: State|null = null;\n    let videoState: State|null = null;\n\n    switch (event.event) {\n      case 'kBufferingStateChanged':\n        // There are three allowed entries, audio, video, and pipeline.\n        // We only want the buffering for audio and video to be displayed.\n        // One event may have changes for a single type, or for both audio/video\n        // simultaneously.\n        // @ts-ignore\n        audioState = event.value['audio_buffering_state'];\n        // @ts-ignore\n        videoState = event.value['video_buffering_state'];\n\n        if (audioState) {\n          if (this._audioBufferingStateEvent !== null) {\n            this._audioBufferingStateEvent.endTime = normalizedTime;\n            this._audioBufferingStateEvent = null;\n          }\n          if (!this._bufferedEnough(audioState)) {\n            this._audioBufferingStateEvent = this.startEvent({\n              level: 3,\n              startTime: normalizedTime,\n              name: 'Audio Buffering',\n              color: ColdColorScheme[1],\n            } as EventProperties);\n          }\n        }\n\n        if (videoState) {\n          if (this._videoBufferingStateEvent !== null) {\n            this._videoBufferingStateEvent.endTime = normalizedTime;\n            this._videoBufferingStateEvent = null;\n          }\n          if (!this._bufferedEnough(videoState)) {\n            this._videoBufferingStateEvent = this.startEvent({\n              level: 2,\n              startTime: normalizedTime,\n              name: 'Video Buffering',\n              color: ColdColorScheme[0],\n            } as EventProperties);\n          }\n        }\n        break;\n\n      default:\n        throw `_onPlaybackEvent cant handle ${event.event}`;\n    }\n  }\n\n  onEvent(event: PlayerEvent): void {\n    if (this._normalizedTimestamp === NO_NORMALIZED_TIMESTAMP) {\n      this._normalizedTimestamp = Number(event.timestamp);\n    }\n    const inMilliseconds = (Number(event.timestamp) - this._normalizedTimestamp) * 1000;\n\n    switch (event.event) {\n      case 'kPlay':\n      case 'kPause':\n      case 'kWebMediaPlayerDestroyed':\n      case 'kSuspended':\n      case 'kEnded':\n        return this._onPlaybackEvent(event, inMilliseconds);\n\n      case 'kBufferingStateChanged':\n        return this._onBufferingStatus(event, inMilliseconds);\n\n      default:\n    }\n  }\n}\n"]}