{"version":3,"file":"MainView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/media/MainView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {PlayerEvent} from './MediaModel.js';\nimport {MediaModel, ProtocolTriggers} from './MediaModel.js';\nimport {PlayerDetailView} from './PlayerDetailView.js';\nimport {PlayerListView} from './PlayerListView.js';\n\nexport interface TriggerHandler {\n  onProperty(property: Protocol.Media.PlayerProperty): void;\n  onError(error: Protocol.Media.PlayerError): void;\n  onMessage(message: Protocol.Media.PlayerMessage): void;\n  onEvent(event: PlayerEvent): void;\n}\n\nexport interface TriggerDispatcher {\n  onProperty(playerID: string, property: Protocol.Media.PlayerProperty): void;\n  onError(playerID: string, error: Protocol.Media.PlayerError): void;\n  onMessage(playerID: string, message: Protocol.Media.PlayerMessage): void;\n  onEvent(playerID: string, event: PlayerEvent): void;\n}\n\nclass PlayerDataCollection implements TriggerHandler {\n  _properties: Map<string, string>;\n  _messages: Protocol.Media.PlayerMessage[];\n  _events: PlayerEvent[];\n  _errors: Protocol.Media.PlayerError[];\n\n  constructor() {\n    this._properties = new Map();\n    this._messages = [];\n    this._events = [];\n    this._errors = [];\n  }\n\n  onProperty(property: Protocol.Media.PlayerProperty): void {\n    this._properties.set(property.name, property.value);\n  }\n\n  onError(error: Protocol.Media.PlayerError): void {\n    this._errors.push(error);\n  }\n\n  onMessage(message: Protocol.Media.PlayerMessage): void {\n    this._messages.push(message);\n  }\n\n  onEvent(event: PlayerEvent): void {\n    this._events.push(event);\n  }\n\n  export(): {\n    properties: Map<string, string>,\n    messages: Protocol.Media.PlayerMessage[],\n    events: PlayerEvent[],\n    errors: Protocol.Media.PlayerError[],\n  } {\n    return {'properties': this._properties, 'messages': this._messages, 'events': this._events, 'errors': this._errors};\n  }\n}\n\nclass PlayerDataDownloadManager implements TriggerDispatcher {\n  _playerDataCollection: Map<string, PlayerDataCollection>;\n  constructor() {\n    this._playerDataCollection = new Map();\n  }\n\n  addPlayer(playerID: string): void {\n    this._playerDataCollection.set(playerID, new PlayerDataCollection());\n  }\n\n  onProperty(playerID: string, property: Protocol.Media.PlayerProperty): void {\n    const playerProperty = this._playerDataCollection.get(playerID);\n    if (!playerProperty) {\n      return;\n    }\n\n    playerProperty.onProperty(property);\n  }\n\n  onError(playerID: string, error: Protocol.Media.PlayerError): void {\n    const playerProperty = this._playerDataCollection.get(playerID);\n    if (!playerProperty) {\n      return;\n    }\n\n    playerProperty.onError(error);\n  }\n\n  onMessage(playerID: string, message: Protocol.Media.PlayerMessage): void {\n    const playerProperty = this._playerDataCollection.get(playerID);\n    if (!playerProperty) {\n      return;\n    }\n\n    playerProperty.onMessage(message);\n  }\n\n  onEvent(playerID: string, event: PlayerEvent): void {\n    const playerProperty = this._playerDataCollection.get(playerID);\n    if (!playerProperty) {\n      return;\n    }\n\n    playerProperty.onEvent(event);\n  }\n\n  exportPlayerData(playerID: string): {\n    properties: Map<string, string>,\n    messages: Protocol.Media.PlayerMessage[],\n    events: PlayerEvent[],\n    errors: Protocol.Media.PlayerError[],\n  } {\n    const playerProperty = this._playerDataCollection.get(playerID);\n    if (!playerProperty) {\n      throw new Error('Unable to find player');\n    }\n\n    return playerProperty.export();\n  }\n\n  deletePlayer(playerID: string): void {\n    this._playerDataCollection.delete(playerID);\n  }\n}\n\nlet mainViewInstance: MainView;\nexport class MainView extends UI.Panel.PanelWithSidebar implements SDK.TargetManager.SDKModelObserver<MediaModel> {\n  _detailPanels: Map<string, PlayerDetailView>;\n  _deletedPlayers: Set<string>;\n  _downloadStore: PlayerDataDownloadManager;\n  _sidebar: PlayerListView;\n\n  constructor() {\n    super('Media');\n    this._detailPanels = new Map();\n\n    this._deletedPlayers = new Set();\n\n    this._downloadStore = new PlayerDataDownloadManager();\n\n    this._sidebar = new PlayerListView(this);\n    this._sidebar.show(this.panelSidebarElement());\n\n    SDK.TargetManager.TargetManager.instance().observeModels(MediaModel, this);\n  }\n\n  static instance(opts = {forceNew: null}): MainView {\n    const {forceNew} = opts;\n    if (!mainViewInstance || forceNew) {\n      mainViewInstance = new MainView();\n    }\n\n    return mainViewInstance;\n  }\n\n  renderMainPanel(playerID: string): void {\n    if (!this._detailPanels.has(playerID)) {\n      return;\n    }\n    const mainWidget = this.splitWidget().mainWidget();\n    if (mainWidget) {\n      mainWidget.detachChildWidgets();\n    }\n    this._detailPanels.get(playerID)?.show(this.mainElement());\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    for (const model of SDK.TargetManager.TargetManager.instance().models(MediaModel)) {\n      this._addEventListeners(model);\n    }\n  }\n\n  willHide(): void {\n    for (const model of SDK.TargetManager.TargetManager.instance().models(MediaModel)) {\n      this._removeEventListeners(model);\n    }\n  }\n\n  modelAdded(model: MediaModel): void {\n    if (this.isShowing()) {\n      this._addEventListeners(model);\n    }\n  }\n\n  modelRemoved(model: MediaModel): void {\n    this._removeEventListeners(model);\n  }\n\n  _addEventListeners(mediaModel: MediaModel): void {\n    mediaModel.ensureEnabled();\n    mediaModel.addEventListener(ProtocolTriggers.PlayerPropertiesChanged, this._propertiesChanged, this);\n    mediaModel.addEventListener(ProtocolTriggers.PlayerEventsAdded, this._eventsAdded, this);\n    mediaModel.addEventListener(ProtocolTriggers.PlayerMessagesLogged, this._messagesLogged, this);\n    mediaModel.addEventListener(ProtocolTriggers.PlayerErrorsRaised, this._errorsRaised, this);\n    mediaModel.addEventListener(ProtocolTriggers.PlayersCreated, this._playersCreated, this);\n  }\n\n  _removeEventListeners(mediaModel: MediaModel): void {\n    mediaModel.removeEventListener(ProtocolTriggers.PlayerPropertiesChanged, this._propertiesChanged, this);\n    mediaModel.removeEventListener(ProtocolTriggers.PlayerEventsAdded, this._eventsAdded, this);\n    mediaModel.removeEventListener(ProtocolTriggers.PlayerMessagesLogged, this._messagesLogged, this);\n    mediaModel.removeEventListener(ProtocolTriggers.PlayerErrorsRaised, this._errorsRaised, this);\n    mediaModel.removeEventListener(ProtocolTriggers.PlayersCreated, this._playersCreated, this);\n  }\n\n  _onPlayerCreated(playerID: string): void {\n    this._sidebar.addMediaElementItem(playerID);\n    this._detailPanels.set(playerID, new PlayerDetailView());\n    this._downloadStore.addPlayer(playerID);\n  }\n\n  _propertiesChanged(event: Common.EventTarget.EventTargetEvent): void {\n    for (const property of event.data.properties) {\n      this.onProperty(event.data.playerId, property);\n    }\n  }\n\n  _eventsAdded(event: Common.EventTarget.EventTargetEvent): void {\n    for (const ev of event.data.events) {\n      this.onEvent(event.data.playerId, ev);\n    }\n  }\n\n  _messagesLogged(event: Common.EventTarget.EventTargetEvent): void {\n    for (const message of event.data.messages) {\n      this.onMessage(event.data.playerId, message);\n    }\n  }\n\n  _errorsRaised(event: Common.EventTarget.EventTargetEvent): void {\n    for (const error of event.data.errors) {\n      this.onError(event.data.playerId, error);\n    }\n  }\n\n  _shouldPropagate(playerID: string): boolean {\n    return !this._deletedPlayers.has(playerID) && this._detailPanels.has(playerID);\n  }\n\n  onProperty(playerID: string, property: Protocol.Media.PlayerProperty): void {\n    if (!this._shouldPropagate(playerID)) {\n      return;\n    }\n    this._sidebar.onProperty(playerID, property);\n    this._downloadStore.onProperty(playerID, property);\n    this._detailPanels.get(playerID)?.onProperty(property);\n  }\n\n  onError(playerID: string, error: Protocol.Media.PlayerError): void {\n    if (!this._shouldPropagate(playerID)) {\n      return;\n    }\n    this._sidebar.onError(playerID, error);\n    this._downloadStore.onError(playerID, error);\n    this._detailPanels.get(playerID)?.onError(error);\n  }\n\n  onMessage(playerID: string, message: Protocol.Media.PlayerMessage): void {\n    if (!this._shouldPropagate(playerID)) {\n      return;\n    }\n    this._sidebar.onMessage(playerID, message);\n    this._downloadStore.onMessage(playerID, message);\n    this._detailPanels.get(playerID)?.onMessage(message);\n  }\n\n  onEvent(playerID: string, event: PlayerEvent): void {\n    if (!this._shouldPropagate(playerID)) {\n      return;\n    }\n    this._sidebar.onEvent(playerID, event);\n    this._downloadStore.onEvent(playerID, event);\n    this._detailPanels.get(playerID)?.onEvent(event);\n  }\n\n  _playersCreated(event: Common.EventTarget.EventTargetEvent): void {\n    const playerlist = event.data as Iterable<string>;\n    for (const playerID of playerlist) {\n      this._onPlayerCreated(playerID);\n    }\n  }\n\n  markPlayerForDeletion(playerID: string): void {\n    // TODO(tmathmeyer): send this to chromium to save the storage space there too.\n    this._deletedPlayers.add(playerID);\n    this._detailPanels.delete(playerID);\n    this._sidebar.deletePlayer(playerID);\n    this._downloadStore.deletePlayer(playerID);\n  }\n\n  markOtherPlayersForDeletion(playerID: string): void {\n    for (const keyID of this._detailPanels.keys()) {\n      if (keyID !== playerID) {\n        this.markPlayerForDeletion(keyID);\n      }\n    }\n  }\n\n  exportPlayerData(playerID: string): void {\n    const dump = this._downloadStore.exportPlayerData(playerID);\n    const uriContent = 'data:application/octet-stream,' + encodeURIComponent(JSON.stringify(dump, null, 2));\n    const anchor = document.createElement('a');\n    anchor.href = uriContent;\n    anchor.download = playerID + '.json';\n    anchor.click();\n  }\n}\n"]}