{"version":3,"file":"ThrottlingManager.js","sourceRoot":"","sources":["../../../../../../front_end/panels/mobile_throttling/ThrottlingManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {MobileThrottlingSelector} from './MobileThrottlingSelector.js';\nimport {NetworkThrottlingSelector} from './NetworkThrottlingSelector.js';\n\nimport type {Conditions, ConditionsList, MobileThrottlingConditionsGroup, NetworkThrottlingConditionsGroup} from './ThrottlingPresets.js';\nimport {CPUThrottlingRates, ThrottlingPresets} from './ThrottlingPresets.js';\n\nconst UIStrings = {\n  /**\n  *@description Text with two placeholders separated by a colon\n  *@example {Node removed} PH1\n  *@example {div#id1} PH2\n  */\n  sS: '{PH1}: {PH2}',\n  /**\n  *@description Text in Throttling Manager of the Network panel\n  */\n  add: 'Add…',\n  /**\n  *@description Accessibility label for custom add network throttling option\n  *@example {Custom} PH1\n  */\n  addS: 'Add {PH1}',\n  /**\n  *@description Text to indicate the network connectivity is offline\n  */\n  offline: 'Offline',\n  /**\n  *@description Text in Throttling Manager of the Network panel\n  */\n  forceDisconnectedFromNetwork: 'Force disconnected from network',\n  /**\n  *@description Text for throttling the network\n  */\n  throttling: 'Throttling',\n  /**\n  *@description Icon title in Throttling Manager of the Network panel\n  */\n  cpuThrottlingIsEnabled: 'CPU throttling is enabled',\n  /**\n  *@description Screen reader label for a select box that chooses the CPU throttling speed in the Performance panel\n  */\n  cpuThrottling: 'CPU throttling',\n  /**\n  *@description Text for no network throttling\n  */\n  noThrottling: 'No throttling',\n  /**\n  *@description Text in Throttling Manager of the Network panel\n  *@example {2} PH1\n  */\n  dSlowdown: '{PH1}× slowdown',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/ThrottlingManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet throttlingManagerInstance: ThrottlingManager;\n\nexport class ThrottlingManager extends Common.ObjectWrapper.ObjectWrapper implements\n    SDK.TargetManager.SDKModelObserver<SDK.EmulationModel.EmulationModel> {\n  _cpuThrottlingRate: number;\n  _cpuThrottlingControls: Set<UI.Toolbar.ToolbarComboBox>;\n  _cpuThrottlingRates: number[];\n  _customNetworkConditionsSetting: Common.Settings.Setting<SDK.NetworkManager.Conditions[]>;\n  _currentNetworkThrottlingConditions: SDK.NetworkManager.Conditions;\n  _lastNetworkThrottlingConditions!: SDK.NetworkManager.Conditions;\n\n  private constructor() {\n    super();\n    this._cpuThrottlingRate = CPUThrottlingRates.NoThrottling;\n    this._cpuThrottlingControls = new Set();\n    this._cpuThrottlingRates = ThrottlingPresets.cpuThrottlingPresets;\n    this._customNetworkConditionsSetting = Common.Settings.Settings.instance().moduleSetting('customNetworkConditions');\n    this._currentNetworkThrottlingConditions = SDK.NetworkManager.NoThrottlingConditions;\n\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, () => {\n          this._lastNetworkThrottlingConditions = this._currentNetworkThrottlingConditions;\n          this._currentNetworkThrottlingConditions =\n              SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n        });\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.EmulationModel.EmulationModel, this);\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ThrottlingManager {\n    const {forceNew} = opts;\n    if (!throttlingManagerInstance || forceNew) {\n      throttlingManagerInstance = new ThrottlingManager();\n    }\n\n    return throttlingManagerInstance;\n  }\n\n  decorateSelectWithNetworkThrottling(selectElement: HTMLSelectElement): NetworkThrottlingSelector {\n    let options: (SDK.NetworkManager.Conditions|null)[] = [];\n    const selector = new NetworkThrottlingSelector(populate, select, this._customNetworkConditionsSetting);\n    selectElement.addEventListener('change', optionSelected, false);\n    return selector;\n\n    function populate(groups: NetworkThrottlingConditionsGroup[]): (SDK.NetworkManager.Conditions|null)[] {\n      selectElement.removeChildren();\n      options = [];\n      for (let i = 0; i < groups.length; ++i) {\n        const group = groups[i];\n        const groupElement = selectElement.createChild('optgroup') as HTMLOptGroupElement;\n        groupElement.label = group.title;\n        for (const conditions of group.items) {\n          // The title is usually an i18nLazyString except for custom values that are stored in the local storage in the form of a string.\n          const title = typeof conditions.title === 'function' ? conditions.title() : conditions.title;\n          const option = new Option(title, title);\n          UI.ARIAUtils.setAccessibleName(option, i18nString(UIStrings.sS, {PH1: group.title, PH2: title}));\n          groupElement.appendChild(option);\n          options.push(conditions);\n        }\n        if (i === groups.length - 1) {\n          const option = new Option(i18nString(UIStrings.add), i18nString(UIStrings.add));\n          UI.ARIAUtils.setAccessibleName(option, i18nString(UIStrings.addS, {PH1: group.title}));\n          groupElement.appendChild(option);\n          options.push(null);\n        }\n      }\n      return options;\n    }\n\n    function optionSelected(): void {\n      if (selectElement.selectedIndex === selectElement.options.length - 1) {\n        selector.revealAndUpdate();\n      } else {\n        const option = options[selectElement.selectedIndex];\n        if (option) {\n          selector.optionSelected(option);\n        }\n      }\n    }\n\n    function select(index: number): void {\n      if (selectElement.selectedIndex !== index) {\n        selectElement.selectedIndex = index;\n      }\n    }\n  }\n\n  createOfflineToolbarCheckbox(): UI.Toolbar.ToolbarCheckbox {\n    const checkbox = new UI.Toolbar.ToolbarCheckbox(\n        i18nString(UIStrings.offline), i18nString(UIStrings.forceDisconnectedFromNetwork), forceOffline.bind(this));\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, networkConditionsChanged);\n    checkbox.setChecked(\n        SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions() ===\n        SDK.NetworkManager.OfflineConditions);\n\n    function forceOffline(this: ThrottlingManager): void {\n      if (checkbox.checked()) {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n            SDK.NetworkManager.OfflineConditions);\n      } else {\n        SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n            this._lastNetworkThrottlingConditions);\n      }\n    }\n\n    function networkConditionsChanged(): void {\n      checkbox.setChecked(\n          SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions() ===\n          SDK.NetworkManager.OfflineConditions);\n    }\n\n    return checkbox;\n  }\n\n  createMobileThrottlingButton(): UI.Toolbar.ToolbarMenuButton {\n    const button = new UI.Toolbar.ToolbarMenuButton(appendItems);\n    button.setTitle(i18nString(UIStrings.throttling));\n    button.setGlyph('');\n    button.turnIntoSelect();\n    button.setDarkText();\n\n    let options: ConditionsList = [];\n    let selectedIndex = -1;\n    const selector = new MobileThrottlingSelector(populate, select);\n    return button;\n\n    function appendItems(contextMenu: UI.ContextMenu.ContextMenu): void {\n      for (let index = 0; index < options.length; ++index) {\n        const conditions = options[index];\n        if (!conditions) {\n          continue;\n        }\n        if (conditions.title === ThrottlingPresets.getCustomConditions().title &&\n            conditions.description === ThrottlingPresets.getCustomConditions().description) {\n          continue;\n        }\n        contextMenu.defaultSection().appendCheckboxItem(\n            i18nString(conditions.title), selector.optionSelected.bind(selector, conditions as Conditions),\n            selectedIndex === index);\n      }\n    }\n\n    function populate(groups: MobileThrottlingConditionsGroup[]): ConditionsList {\n      options = [];\n      for (const group of groups) {\n        for (const conditions of group.items) {\n          options.push(conditions);\n        }\n        options.push(null);\n      }\n      return options;\n    }\n\n    function select(index: number): void {\n      selectedIndex = index;\n      const option = options[index];\n      if (option) {\n        button.setText(option.title);\n        button.setTitle(option.description);\n      }\n    }\n  }\n\n  cpuThrottlingRate(): number {\n    return this._cpuThrottlingRate;\n  }\n\n  setCPUThrottlingRate(rate: number): void {\n    this._cpuThrottlingRate = rate;\n    for (const emulationModel of SDK.TargetManager.TargetManager.instance().models(SDK.EmulationModel.EmulationModel)) {\n      emulationModel.setCPUThrottlingRate(this._cpuThrottlingRate);\n    }\n    let icon: UI.Icon.Icon|null = null;\n    if (this._cpuThrottlingRate !== CPUThrottlingRates.NoThrottling) {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.CpuThrottlingEnabled);\n      icon = UI.Icon.Icon.create('smallicon-warning');\n      UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.cpuThrottlingIsEnabled));\n    }\n    const index = this._cpuThrottlingRates.indexOf(this._cpuThrottlingRate);\n    for (const control of this._cpuThrottlingControls) {\n      control.setSelectedIndex(index);\n    }\n    UI.InspectorView.InspectorView.instance().setPanelIcon('timeline', icon);\n    this.dispatchEventToListeners(Events.RateChanged, this._cpuThrottlingRate);\n  }\n\n  modelAdded(emulationModel: SDK.EmulationModel.EmulationModel): void {\n    if (this._cpuThrottlingRate !== CPUThrottlingRates.NoThrottling) {\n      emulationModel.setCPUThrottlingRate(this._cpuThrottlingRate);\n    }\n  }\n\n  modelRemoved(_emulationModel: SDK.EmulationModel.EmulationModel): void {\n  }\n\n  createCPUThrottlingSelector(): UI.Toolbar.ToolbarComboBox {\n    const control = new UI.Toolbar.ToolbarComboBox(\n        event => this.setCPUThrottlingRate(this._cpuThrottlingRates[(event.target as HTMLSelectElement).selectedIndex]),\n        i18nString(UIStrings.cpuThrottling));\n    this._cpuThrottlingControls.add(control);\n    const currentRate = this._cpuThrottlingRate;\n\n    for (let i = 0; i < this._cpuThrottlingRates.length; ++i) {\n      const rate = this._cpuThrottlingRates[i];\n      const title = rate === 1 ? i18nString(UIStrings.noThrottling) : i18nString(UIStrings.dSlowdown, {PH1: rate});\n      const option = control.createOption(title);\n      control.addOption(option);\n      if (currentRate === rate) {\n        control.setSelectedIndex(i);\n      }\n    }\n    return control;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  RateChanged = 'RateChanged',\n}\nlet actionDelegateInstance: ActionDelegate;\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n    return actionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    if (actionId === 'network-conditions.network-online') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          SDK.NetworkManager.NoThrottlingConditions);\n      return true;\n    }\n    if (actionId === 'network-conditions.network-low-end-mobile') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Slow3GConditions);\n      return true;\n    }\n    if (actionId === 'network-conditions.network-mid-tier-mobile') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(SDK.NetworkManager.Fast3GConditions);\n      return true;\n    }\n    if (actionId === 'network-conditions.network-offline') {\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          SDK.NetworkManager.OfflineConditions);\n      return true;\n    }\n    return false;\n  }\n}\n\nexport function throttlingManager(): ThrottlingManager {\n  return ThrottlingManager.instance();\n}\n"]}