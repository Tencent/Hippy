{"version":3,"file":"MobileThrottlingSelector.js","sourceRoot":"","sources":["../../../../../../front_end/panels/mobile_throttling/MobileThrottlingSelector.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nimport {Events, throttlingManager} from './ThrottlingManager.js';\n\nimport type {Conditions, ConditionsList, MobileThrottlingConditionsGroup} from './ThrottlingPresets.js';\nimport {ThrottlingPresets} from './ThrottlingPresets.js';\n\nconst UIStrings = {\n  /**\n  *@description Mobile throttling is disabled. The user can select this option to run mobile\n  *emulation at a normal speed instead of throttled.\n  */\n  disabled: 'Disabled',\n  /**\n  *@description Title for a group of pre-decided configuration options for mobile throttling. These\n  *are useful default options that users might want.\n  */\n  presets: 'Presets',\n  /**\n  *@description Title for a group of advanced configuration options for mobile throttling, which\n  *might not be applicable to every user or situation.\n  */\n  advanced: 'Advanced',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/MobileThrottlingSelector.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class MobileThrottlingSelector {\n  _populateCallback: (arg0: Array<MobileThrottlingConditionsGroup>) => ConditionsList;\n  _selectCallback: (arg0: number) => void;\n  _options: ConditionsList;\n\n  constructor(\n      populateCallback: (arg0: Array<MobileThrottlingConditionsGroup>) => ConditionsList,\n      selectCallback: (arg0: number) => void) {\n    this._populateCallback = populateCallback;\n    this._selectCallback = selectCallback;\n    throttlingManager().addEventListener(Events.RateChanged, this._conditionsChanged, this);\n    SDK.NetworkManager.MultitargetNetworkManager.instance().addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, this._conditionsChanged, this);\n    this._options = this._populateOptions();\n    this._conditionsChanged();\n  }\n\n  optionSelected(conditions: Conditions): void {\n    SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(conditions.network);\n    throttlingManager().setCPUThrottlingRate(conditions.cpuThrottlingRate);\n  }\n\n  _populateOptions(): ConditionsList {\n    const disabledGroup = {\n      title: i18nString(UIStrings.disabled),\n      items: [ThrottlingPresets.getNoThrottlingConditions()],\n    };\n    const presetsGroup = {title: i18nString(UIStrings.presets), items: ThrottlingPresets.getMobilePresets()};\n    const advancedGroup = {title: i18nString(UIStrings.advanced), items: ThrottlingPresets.getAdvancedMobilePresets()};\n    return this._populateCallback([disabledGroup, presetsGroup, advancedGroup]);\n  }\n\n  _conditionsChanged(): void {\n    const networkConditions = SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions();\n    const cpuThrottlingRate = throttlingManager().cpuThrottlingRate();\n    for (let index = 0; index < this._options.length; ++index) {\n      const option = this._options[index];\n      if (option && 'network' in option && option.network === networkConditions &&\n          option.cpuThrottlingRate === cpuThrottlingRate) {\n        this._selectCallback(index);\n        return;\n      }\n    }\n\n    const customConditions = ThrottlingPresets.getCustomConditions();\n    for (let index = 0; index < this._options.length; ++index) {\n      const item = this._options[index];\n      if (item && item.title === customConditions.title && item.description === customConditions.description) {\n        this._selectCallback(index);\n        return;\n      }\n    }\n  }\n}\n"]}