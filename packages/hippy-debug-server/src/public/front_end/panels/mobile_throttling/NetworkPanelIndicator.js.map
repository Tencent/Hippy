{"version":3,"file":"NetworkPanelIndicator.js","sourceRoot":"","sources":["../../../../../../front_end/panels/mobile_throttling/NetworkPanelIndicator.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Icon title in Network Panel Indicator of the Network panel\n  */\n  networkThrottlingIsEnabled: 'Network throttling is enabled',\n  /**\n  *@description Icon title in Network Panel Indicator of the Network panel\n  */\n  requestsMayBeRewrittenByLocal: 'Requests may be rewritten by local overrides',\n  /**\n  *@description Icon title in Network Panel Indicator of the Network panel\n  */\n  requestsMayBeBlocked: 'Requests may be blocked',\n  /**\n   * @description Title of an icon in the Network panel that indicates that accepted content encodings have been overriden.\n   */\n  acceptedEncodingOverrideSet:\n      'The set of accepted `Content-Encoding` headers has been modified by DevTools. See the Network Conditions panel.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/mobile_throttling/NetworkPanelIndicator.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkPanelIndicator {\n  constructor() {\n    // TODO: we should not access network from other modules.\n    if (!UI.InspectorView.InspectorView.instance().hasPanel('network')) {\n      return;\n    }\n    const manager = SDK.NetworkManager.MultitargetNetworkManager.instance();\n    manager.addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.ConditionsChanged, updateVisibility);\n    manager.addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.BlockedPatternsChanged, updateVisibility);\n    manager.addEventListener(SDK.NetworkManager.MultitargetNetworkManager.Events.InterceptorsChanged, updateVisibility);\n    manager.addEventListener(\n        SDK.NetworkManager.MultitargetNetworkManager.Events.AcceptedEncodingsChanged, updateVisibility);\n    updateVisibility();\n\n    function updateVisibility(): void {\n      let icon: UI.Icon.Icon|null = null;\n      if (manager.isThrottling()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.networkThrottlingIsEnabled));\n      } else if (SDK.NetworkManager.MultitargetNetworkManager.instance().isIntercepting()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.requestsMayBeRewrittenByLocal));\n      } else if (manager.isBlocking()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.requestsMayBeBlocked));\n      } else if (manager.isAcceptedEncodingOverrideSet()) {\n        icon = UI.Icon.Icon.create('smallicon-warning');\n        UI.Tooltip.Tooltip.install(icon, i18nString(UIStrings.acceptedEncodingOverrideSet));\n      }\n      UI.InspectorView.InspectorView.instance().setPanelIcon('network', icon);\n    }\n  }\n}\n"]}