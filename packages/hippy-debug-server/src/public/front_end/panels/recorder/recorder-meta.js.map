{"version":3,"file":"recorder-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/recorder/recorder-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,QAAQ,EAAE,UAAU;IACpB;;MAEE;IACF,YAAY,EAAE,UAAU;CACzB,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AACxF,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,oBAAiD,CAAC;AAEtD,KAAK,UAAU,kBAAkB;IAC/B,IAAI,CAAC,oBAAoB,EAAE;QACzB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAC3E,oBAAoB,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC;KACtD;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,UAAU;IACd,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC;IACrD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC;IACzC,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,QAAQ;IAChD,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IACzD,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Recorder from './recorder.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the CSS Overview Panel\n  */\n  recorder: 'Recorder',\n  /**\n  *@description Title of the CSS Overview Panel\n  */\n  showRecorder: 'Recorder',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/recorder/recorder-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedRecorderModule: (typeof Recorder|undefined);\n\nasync function loadRecorderModule(): Promise<typeof Recorder> {\n  if (!loadedRecorderModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/recorder');\n    loadedRecorderModule = await import('./recorder.js');\n  }\n  return loadedRecorderModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'recorder',\n  commandPrompt: i18nLazyString(UIStrings.showRecorder),\n  title: i18nLazyString(UIStrings.recorder),\n  experiment: Root.Runtime.ExperimentName.RECORDER,\n  order: 95,\n  async loadView() {\n    const Recorder = await loadRecorderModule();\n    return Recorder.RecorderPanel.RecorderPanel.instance();\n  },\n});\n"]}