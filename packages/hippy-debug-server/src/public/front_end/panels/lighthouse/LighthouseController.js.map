{"version":3,"file":"LighthouseController.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/LighthouseController.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport type {ProtocolService} from './LighthouseProtocolService.js';\n\nconst UIStrings = {\n  /**\n  *@description Explanation for user that Ligthhouse can only audit HTTP/HTTPS pages\n  */\n  canOnlyAuditHttphttpsPagesAnd:\n      'Can only audit HTTP/HTTPS pages and `Chrome` extensions. Navigate to a different page to start an audit.',\n  /**\n  *@description Text when stored data in one location may affect Lighthouse run\n  *@example {IndexedDB} PH1\n  */\n  thereMayBeStoredDataAffectingSingular:\n      'There may be stored data affecting loading performance in this location: {PH1}. Audit this page in an incognito window to prevent those resources from affecting your scores.',\n  /**\n  *@description Text when stored data in multiple locations may affect Lighthouse run\n  *@example {IndexedDB, WebSQL} PH1\n  */\n  thereMayBeStoredDataAffectingLoadingPlural:\n      'There may be stored data affecting loading performance in these locations: {PH1}. Audit this page in an incognito window to prevent those resources from affecting your scores.',\n  /**\n  *@description Help text in Lighthouse Controller\n  */\n  multipleTabsAreBeingControlledBy:\n      'Multiple tabs are being controlled by the same `service worker`. Close your other tabs on the same origin to audit this page.',\n  /**\n  *@description Help text in Lighthouse Controller\n  */\n  atLeastOneCategoryMustBeSelected: 'At least one category must be selected.',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  localStorage: 'Local Storage',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  indexeddb: 'IndexedDB',\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  webSql: 'Web SQL',\n  /**\n  *@description Text of checkbox to include running the performance audits in Lighthouse\n  */\n  performance: 'Performance',\n  /**\n  *@description Tooltip text of checkbox to include running the performance audits in Lighthouse\n  */\n  howLongDoesThisAppTakeToShow: 'How long does this app take to show content and become usable',\n  /**\n  *@description Text of checkbox to include running the Progressive Web App audits in Lighthouse\n  */\n  progressiveWebApp: 'Progressive Web App',\n  /**\n  *@description Tooltip text of checkbox to include running the Progressive Web App audits in Lighthouse\n  */\n  doesThisPageMeetTheStandardOfA: 'Does this page meet the standard of a Progressive Web App',\n  /**\n  *@description Text of checkbox to include running the Best Practices audits in Lighthouse\n  */\n  bestPractices: 'Best practices',\n  /**\n  *@description Tooltip text of checkbox to include running the Best Practices audits in Lighthouse\n  */\n  doesThisPageFollowBestPractices: 'Does this page follow best practices for modern web development',\n  /**\n  *@description Text of checkbox to include running the Accessibility audits in Lighthouse\n  */\n  accessibility: 'Accessibility',\n  /**\n  *@description Tooltip text of checkbox to include running the Accessibility audits in Lighthouse\n  */\n  isThisPageUsableByPeopleWith: 'Is this page usable by people with disabilities or impairments',\n  /**\n  *@description Text of checkbox to include running the Search Engine Optimization audits in Lighthouse\n  */\n  seo: 'SEO',\n  /**\n  *@description Tooltip text of checkbox to include running the Search Engine Optimization audits in Lighthouse\n  */\n  isThisPageOptimizedForSearch: 'Is this page optimized for search engine results ranking',\n  /**\n  *@description Text of checkbox to include running the Ad speed and quality audits in Lighthouse\n  */\n  publisherAds: 'Publisher Ads',\n  /**\n  *@description Tooltip text of checkbox to include running the Ad speed and quality audits in Lighthouse\n  */\n  isThisPageOptimizedForAdSpeedAnd: 'Is this page optimized for ad speed and quality',\n  /**\n  *@description ARIA label for a radio button input to emulate mobile device behavior when running audits in Lighthouse.\n  */\n  applyMobileEmulation: 'Apply mobile emulation',\n  /**\n  *@description Tooltip text of checkbox to emulate mobile device behavior when running audits in Lighthouse\n  */\n  applyMobileEmulationDuring: 'Apply mobile emulation during auditing',\n  /**\n  *@description Text for the mobile platform, as opposed to desktop\n  */\n  mobile: 'Mobile',\n  /**\n  *@description Text for the desktop platform, as opposed to mobile\n  */\n  desktop: 'Desktop',\n  /**\n  *@description Text for option to enable simulated throttling in Lighthouse Panel\n  */\n  simulatedThrottling: 'Simulated throttling',\n  /**\n  *@description Tooltip text that appears when hovering over the 'Simulated Throttling' checkbox in the settings pane opened by clicking the setting cog in the start view of the audits panel\n  */\n  simulateASlowerPageLoadBasedOn:\n      'Simulate a slower page load, based on data from an initial unthrottled load. If disabled, the page is actually slowed with applied throttling.',\n  /**\n  *@description Text of checkbox to reset storage features prior to running audits in Lighthouse\n  */\n  clearStorage: 'Clear storage',\n  /**\n  * @description Tooltip text of checkbox to reset storage features prior to running audits in\n  * Lighthouse. Resetting the storage clears/empties it to a neutral state.\n  */\n  resetStorageLocalstorage:\n      'Reset storage (`cache`, `service workers`, etc) before auditing. (Good for performance & `PWA` testing)',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/lighthouse/LighthouseController.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport class LighthouseController extends Common.ObjectWrapper.ObjectWrapper implements\n    SDK.TargetManager.SDKModelObserver<SDK.ServiceWorkerManager.ServiceWorkerManager> {\n  _manager?: SDK.ServiceWorkerManager.ServiceWorkerManager|null;\n  _serviceWorkerListeners?: Common.EventTarget.EventDescriptor[];\n  _inspectedURL?: string;\n\n  constructor(protocolService: ProtocolService) {\n    super();\n\n    protocolService.registerStatusCallback(\n        message => this.dispatchEventToListeners(Events.AuditProgressChanged, {message}));\n\n    for (const preset of Presets) {\n      preset.setting.addChangeListener(this.recomputePageAuditability.bind(this));\n    }\n\n    for (const runtimeSetting of RuntimeSettings) {\n      runtimeSetting.setting.addChangeListener(this.recomputePageAuditability.bind(this));\n    }\n\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.ServiceWorkerManager.ServiceWorkerManager, this);\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.InspectedURLChanged, this.recomputePageAuditability, this);\n  }\n\n  modelAdded(serviceWorkerManager: SDK.ServiceWorkerManager.ServiceWorkerManager): void {\n    if (this._manager) {\n      return;\n    }\n\n    this._manager = serviceWorkerManager;\n    this._serviceWorkerListeners = [\n      this._manager.addEventListener(\n          SDK.ServiceWorkerManager.Events.RegistrationUpdated, this.recomputePageAuditability, this),\n      this._manager.addEventListener(\n          SDK.ServiceWorkerManager.Events.RegistrationDeleted, this.recomputePageAuditability, this),\n    ];\n\n    this.recomputePageAuditability();\n  }\n\n  modelRemoved(serviceWorkerManager: SDK.ServiceWorkerManager.ServiceWorkerManager): void {\n    if (this._manager !== serviceWorkerManager) {\n      return;\n    }\n    if (this._serviceWorkerListeners) {\n      Common.EventTarget.EventTarget.removeEventListeners(this._serviceWorkerListeners);\n    }\n    this._manager = null;\n    this.recomputePageAuditability();\n  }\n\n  _hasActiveServiceWorker(): boolean {\n    if (!this._manager) {\n      return false;\n    }\n\n    const mainTarget = this._manager.target();\n    if (!mainTarget) {\n      return false;\n    }\n\n    const inspectedURL = Common.ParsedURL.ParsedURL.fromString(mainTarget.inspectedURL());\n    const inspectedOrigin = inspectedURL && inspectedURL.securityOrigin();\n    for (const registration of this._manager.registrations().values()) {\n      if (registration.securityOrigin !== inspectedOrigin) {\n        continue;\n      }\n\n      for (const version of registration.versions.values()) {\n        if (version.controlledClients.length > 1) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  _hasAtLeastOneCategory(): boolean {\n    return Presets.some(preset => preset.setting.get());\n  }\n\n  _unauditablePageMessage(): string|null {\n    if (!this._manager) {\n      return null;\n    }\n\n    const mainTarget = this._manager.target();\n    const inspectedURL = mainTarget && mainTarget.inspectedURL();\n    if (inspectedURL && !/^(http|chrome-extension)/.test(inspectedURL)) {\n      return i18nString(UIStrings.canOnlyAuditHttphttpsPagesAnd);\n    }\n\n    return null;\n  }\n\n  async _hasImportantResourcesNotCleared(): Promise<string> {\n    const clearStorageSetting =\n        RuntimeSettings.find(runtimeSetting => runtimeSetting.setting.name === 'lighthouse.clear_storage');\n    if (clearStorageSetting && !clearStorageSetting.setting.get()) {\n      return '';\n    }\n    if (!this._manager) {\n      return '';\n    }\n    const mainTarget = this._manager.target();\n    const usageData = await mainTarget.storageAgent().invoke_getUsageAndQuota({origin: mainTarget.inspectedURL()});\n    const locations = usageData.usageBreakdown.filter(usage => usage.usage)\n                          .map(usage => STORAGE_TYPE_NAMES.get(usage.storageType))\n                          .map(i18nStringFn => i18nStringFn ? i18nStringFn() : undefined)\n                          .filter(Boolean);\n    if (locations.length === 1) {\n      return i18nString(UIStrings.thereMayBeStoredDataAffectingSingular, {PH1: locations[0]});\n    }\n    if (locations.length > 1) {\n      return i18nString(UIStrings.thereMayBeStoredDataAffectingLoadingPlural, {PH1: locations.join(', ')});\n    }\n    return '';\n  }\n\n  async _evaluateInspectedURL(): Promise<string> {\n    if (!this._manager) {\n      return '';\n    }\n    const mainTarget = this._manager.target();\n    const runtimeModel = mainTarget.model(SDK.RuntimeModel.RuntimeModel);\n    const executionContext = runtimeModel && runtimeModel.defaultExecutionContext();\n    let inspectedURL = mainTarget.inspectedURL();\n    if (!executionContext) {\n      return inspectedURL;\n    }\n\n    // Evaluate location.href for a more specific URL than inspectedURL provides so that SPA hash navigation routes\n    // will be respected and audited.\n    try {\n      const result = await executionContext.evaluate(\n          {\n            expression: 'window.location.href',\n            objectGroup: 'lighthouse',\n            includeCommandLineAPI: false,\n            silent: false,\n            returnByValue: true,\n            generatePreview: false,\n            allowUnsafeEvalBlockedByCSP: undefined,\n            disableBreaks: undefined,\n            replMode: undefined,\n            throwOnSideEffect: undefined,\n            timeout: undefined,\n          },\n          /* userGesture */ false, /* awaitPromise */ false);\n      if ((!('exceptionDetails' in result) || !result.exceptionDetails) && 'object' in result && result.object) {\n        inspectedURL = result.object.value;\n        result.object.release();\n      }\n    } catch (err) {\n      console.error(err);\n    }\n\n    return inspectedURL;\n  }\n\n  getFlags(): {internalDisableDeviceScreenEmulation: boolean, emulatedFormFactor: (string|undefined)} {\n    const flags = {\n      // DevTools handles all the emulation. This tells Lighthouse to not bother with emulation.\n      internalDisableDeviceScreenEmulation: true,\n    };\n    for (const runtimeSetting of RuntimeSettings) {\n      runtimeSetting.setFlags(flags, runtimeSetting.setting.get());\n    }\n    return /** @type {{internalDisableDeviceScreenEmulation: boolean, emulatedFormFactor: (string|undefined)}} */ flags as\n        {\n          internalDisableDeviceScreenEmulation: boolean,\n          emulatedFormFactor: (string | undefined),\n        };\n  }\n\n  getCategoryIDs(): string[] {\n    const categoryIDs = [];\n    for (const preset of Presets) {\n      if (preset.setting.get()) {\n        categoryIDs.push(preset.configID);\n      }\n    }\n    return categoryIDs;\n  }\n\n  async getInspectedURL(options?: {force: boolean}): Promise<string> {\n    if (options && options.force || !this._inspectedURL) {\n      this._inspectedURL = await this._evaluateInspectedURL();\n    }\n    return this._inspectedURL;\n  }\n\n  recomputePageAuditability(): void {\n    const hasActiveServiceWorker = this._hasActiveServiceWorker();\n    const hasAtLeastOneCategory = this._hasAtLeastOneCategory();\n    const unauditablePageMessage = this._unauditablePageMessage();\n\n    let helpText = '';\n    if (hasActiveServiceWorker) {\n      helpText = i18nString(UIStrings.multipleTabsAreBeingControlledBy);\n    } else if (!hasAtLeastOneCategory) {\n      helpText = i18nString(UIStrings.atLeastOneCategoryMustBeSelected);\n    } else if (unauditablePageMessage) {\n      helpText = unauditablePageMessage;\n    }\n\n    this.dispatchEventToListeners(Events.PageAuditabilityChanged, {helpText});\n\n    this._hasImportantResourcesNotCleared().then(warning => {\n      this.dispatchEventToListeners(Events.PageWarningsChanged, {warning});\n    });\n  }\n}\n\nconst STORAGE_TYPE_NAMES = new Map([\n  [Protocol.Storage.StorageType.Local_storage, i18nLazyString(UIStrings.localStorage)],\n  [Protocol.Storage.StorageType.Indexeddb, i18nLazyString(UIStrings.indexeddb)],\n  [Protocol.Storage.StorageType.Websql, i18nLazyString(UIStrings.webSql)],\n]);\n\nexport const Presets: Preset[] = [\n  // configID maps to Lighthouse's Object.keys(config.categories)[0] value\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.cat_perf', true),\n    configID: 'performance',\n    title: i18nLazyString(UIStrings.performance),\n    description: i18nLazyString(UIStrings.howLongDoesThisAppTakeToShow),\n    plugin: false,\n  },\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.cat_pwa', true),\n    configID: 'pwa',\n    title: i18nLazyString(UIStrings.progressiveWebApp),\n    description: i18nLazyString(UIStrings.doesThisPageMeetTheStandardOfA),\n    plugin: false,\n  },\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.cat_best_practices', true),\n    configID: 'best-practices',\n    title: i18nLazyString(UIStrings.bestPractices),\n    description: i18nLazyString(UIStrings.doesThisPageFollowBestPractices),\n    plugin: false,\n  },\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.cat_a11y', true),\n    configID: 'accessibility',\n    title: i18nLazyString(UIStrings.accessibility),\n    description: i18nLazyString(UIStrings.isThisPageUsableByPeopleWith),\n    plugin: false,\n  },\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.cat_seo', true),\n    configID: 'seo',\n    title: i18nLazyString(UIStrings.seo),\n    description: i18nLazyString(UIStrings.isThisPageOptimizedForSearch),\n    plugin: false,\n  },\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.cat_pubads', false),\n    plugin: true,\n    configID: 'lighthouse-plugin-publisher-ads',\n    title: i18nLazyString(UIStrings.publisherAds),\n    description: i18nLazyString(UIStrings.isThisPageOptimizedForAdSpeedAnd),\n  },\n];\n\nexport type Flags = {\n  [flag: string]: string|boolean,\n};\n\nexport const RuntimeSettings: RuntimeSetting[] = [\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.device_type', 'mobile'),\n    title: i18nLazyString(UIStrings.applyMobileEmulation),\n    description: i18nLazyString(UIStrings.applyMobileEmulationDuring),\n    setFlags: (flags: Flags, value: string|boolean): void => {\n      // See Audits.AuditsPanel._setupEmulationAndProtocolConnection()\n      flags.emulatedFormFactor = value;\n    },\n    options: [\n      {label: i18nLazyString(UIStrings.mobile), value: 'mobile'},\n      {label: i18nLazyString(UIStrings.desktop), value: 'desktop'},\n    ],\n    learnMore: undefined,\n  },\n  {\n    // This setting is disabled, but we keep it around to show in the UI.\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.throttling', true),\n    title: i18nLazyString(UIStrings.simulatedThrottling),\n    // We will disable this when we have a Lantern trace viewer within DevTools.\n    learnMore:\n        'https://github.com/GoogleChrome/lighthouse/blob/master/docs/throttling.md#devtools-lighthouse-panel-throttling',\n    description: i18nLazyString(UIStrings.simulateASlowerPageLoadBasedOn),\n    setFlags: (flags: Flags, value: string|boolean): void => {\n      flags.throttlingMethod = value ? 'simulate' : 'devtools';\n    },\n    options: undefined,\n  },\n  {\n    setting: Common.Settings.Settings.instance().createSetting('lighthouse.clear_storage', true),\n    title: i18nLazyString(UIStrings.clearStorage),\n    description: i18nLazyString(UIStrings.resetStorageLocalstorage),\n    setFlags: (flags: Flags, value: string|boolean): void => {\n      flags.disableStorageReset = !value;\n    },\n    options: undefined,\n    learnMore: undefined,\n  },\n];\n\nexport const Events = {\n  PageAuditabilityChanged: Symbol('PageAuditabilityChanged'),\n  PageWarningsChanged: Symbol('PageWarningsChanged'),\n  AuditProgressChanged: Symbol('AuditProgressChanged'),\n  RequestLighthouseStart: Symbol('RequestLighthouseStart'),\n  RequestLighthouseCancel: Symbol('RequestLighthouseCancel'),\n};\nexport interface Preset {\n  setting: Common.Settings.Setting<boolean>;\n  configID: string;\n  title: () => Common.UIString.LocalizedString;\n  description: () => Common.UIString.LocalizedString;\n  plugin: boolean;\n}\nexport interface RuntimeSetting {\n  setting: Common.Settings.Setting<string|boolean>;\n  description: () => Common.UIString.LocalizedString;\n  setFlags: (flags: Flags, value: string|boolean) => void;\n  options?: {label: () => Common.UIString.LocalizedString, value: string}[];\n  title?: () => Common.UIString.LocalizedString;\n  learnMore?: string;\n}\n"]}