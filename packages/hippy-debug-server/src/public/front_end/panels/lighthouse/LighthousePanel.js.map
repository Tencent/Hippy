{"version":3,"file":"LighthousePanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/LighthousePanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Emulation from '../emulation/emulation.js';\n\nimport {Events, LighthouseController} from './LighthouseController.js';\nimport {ProtocolService} from './LighthouseProtocolService.js';\n\nimport type * as ReportRenderer from './LighthouseReporterTypes.js';\nimport {LighthouseReportRenderer, LighthouseReportUIFeatures} from './LighthouseReportRenderer.js';\nimport {Item, ReportSelector} from './LighthouseReportSelector.js';\nimport {StartView} from './LighthouseStartView.js';\nimport {StatusView} from './LighthouseStatusView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text that appears when user drag and drop something (for example, a file) in Lighthouse Panel\n  */\n  dropLighthouseJsonHere: 'Drop `Lighthouse` JSON here',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon add button in the Lighthouse Panel\n  */\n  performAnAudit: 'Perform an audit…',\n  /**\n  *@description Text to clear everything\n  */\n  clearAll: 'Clear all',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in start view of the audits panel\n  */\n  lighthouseSettings: '`Lighthouse` settings',\n  /**\n  *@description Status header in the Lighthouse panel\n  */\n  printing: 'Printing',\n  /**\n  *@description Status text in the Lighthouse panel\n  */\n  thePrintPopupWindowIsOpenPlease: 'The print popup window is open. Please close it to continue.',\n  /**\n  *@description Text in Lighthouse Panel\n  */\n  cancelling: 'Cancelling',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/lighthouse/LighthousePanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet lighthousePanelInstace: LighthousePanel;\n\nexport class LighthousePanel extends UI.Panel.Panel {\n  _protocolService: ProtocolService;\n  _controller: LighthouseController;\n  _startView: StartView;\n  _statusView: StatusView;\n  _warningText: null;\n  _unauditableExplanation: null;\n  _cachedRenderedReports: Map<ReportRenderer.ReportJSON, HTMLElement>;\n  _dropTarget: UI.DropTarget.DropTarget;\n  _auditResultsElement: HTMLElement;\n  _clearButton!: UI.Toolbar.ToolbarButton;\n  _newButton!: UI.Toolbar.ToolbarButton;\n  _reportSelector!: ReportSelector;\n  _settingsPane!: UI.Widget.Widget;\n  _rightToolbar!: UI.Toolbar.Toolbar;\n  _showSettingsPaneSetting!: Common.Settings.Setting<boolean>;\n  _stateBefore?: {\n    emulation: {enabled: boolean, outlineEnabled: boolean, toolbarControlsEnabled: boolean},\n    network: {conditions: SDK.NetworkManager.Conditions},\n  };\n  _isLHAttached?: boolean;\n\n  private constructor() {\n    super('lighthouse');\n    this.registerRequiredCSS('third_party/lighthouse/report-assets/report.css', {enableLegacyPatching: false});\n    this.registerRequiredCSS('panels/lighthouse/lighthousePanel.css', {enableLegacyPatching: false});\n\n    this._protocolService = new ProtocolService();\n    this._controller = new LighthouseController(this._protocolService);\n    this._startView = new StartView(this._controller);\n    this._statusView = new StatusView(this._controller);\n\n    this._warningText = null;\n    this._unauditableExplanation = null;\n    this._cachedRenderedReports = new Map();\n\n    this._dropTarget = new UI.DropTarget.DropTarget(\n        this.contentElement, [UI.DropTarget.Type.File], i18nString(UIStrings.dropLighthouseJsonHere),\n        this._handleDrop.bind(this));\n\n    this._controller.addEventListener(Events.PageAuditabilityChanged, this._refreshStartAuditUI.bind(this));\n    this._controller.addEventListener(Events.PageWarningsChanged, this._refreshWarningsUI.bind(this));\n    this._controller.addEventListener(Events.AuditProgressChanged, this._refreshStatusUI.bind(this));\n    this._controller.addEventListener(Events.RequestLighthouseStart, event => {\n      this._startLighthouse(event);\n    });\n    this._controller.addEventListener(Events.RequestLighthouseCancel, _event => {\n      this._cancelLighthouse();\n    });\n\n    this._renderToolbar();\n    this._auditResultsElement = this.contentElement.createChild('div', 'lighthouse-results-container');\n    this._renderStartView();\n\n    this._controller.recomputePageAuditability();\n  }\n\n  static instance(opts = {forceNew: null}): LighthousePanel {\n    const {forceNew} = opts;\n    if (!lighthousePanelInstace || forceNew) {\n      lighthousePanelInstace = new LighthousePanel();\n    }\n\n    return lighthousePanelInstace;\n  }\n\n  static getEvents(): typeof Events {\n    return Events;\n  }\n\n  _refreshWarningsUI(evt: Common.EventTarget.EventTargetEvent): void {\n    // PageWarningsChanged fires multiple times during an audit, which we want to ignore.\n    if (this._isLHAttached) {\n      return;\n    }\n\n    this._warningText = evt.data.warning;\n    this._startView.setWarningText(evt.data.warning);\n  }\n\n  _refreshStartAuditUI(evt: Common.EventTarget.EventTargetEvent): void {\n    // PageAuditabilityChanged fires multiple times during an audit, which we want to ignore.\n    if (this._isLHAttached) {\n      return;\n    }\n\n    this._unauditableExplanation = evt.data.helpText;\n    this._startView.setUnauditableExplanation(evt.data.helpText);\n    this._startView.setStartButtonEnabled(!evt.data.helpText);\n  }\n\n  _refreshStatusUI(evt: Common.EventTarget.EventTargetEvent): void {\n    this._statusView.updateStatus(evt.data.message);\n  }\n\n  _refreshToolbarUI(): void {\n    this._clearButton.setEnabled(this._reportSelector.hasItems());\n  }\n\n  _clearAll(): void {\n    this._reportSelector.clearAll();\n    this._renderStartView();\n    this._refreshToolbarUI();\n  }\n\n  _renderToolbar(): void {\n    const lighthouseToolbarContainer = this.element.createChild('div', 'lighthouse-toolbar-container');\n\n    const toolbar = new UI.Toolbar.Toolbar('', lighthouseToolbarContainer);\n\n    this._newButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.performAnAudit), 'largeicon-add');\n    toolbar.appendToolbarItem(this._newButton);\n    this._newButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._renderStartView.bind(this));\n\n    toolbar.appendSeparator();\n\n    this._reportSelector = new ReportSelector(() => this._renderStartView());\n    toolbar.appendToolbarItem(this._reportSelector.comboBox());\n\n    this._clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAll), 'largeicon-clear');\n    toolbar.appendToolbarItem(this._clearButton);\n    this._clearButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._clearAll.bind(this));\n\n    this._settingsPane = new UI.Widget.HBox();\n    this._settingsPane.show(this.contentElement);\n    this._settingsPane.element.classList.add('lighthouse-settings-pane');\n    this._settingsPane.element.appendChild(this._startView.settingsToolbar().element);\n    this._showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('lighthouseShowSettingsToolbar', false);\n\n    this._rightToolbar = new UI.Toolbar.Toolbar('', lighthouseToolbarContainer);\n    this._rightToolbar.appendSeparator();\n    this._rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingToggle(\n        this._showSettingsPaneSetting, 'largeicon-settings-gear', i18nString(UIStrings.lighthouseSettings)));\n    this._showSettingsPaneSetting.addChangeListener(this._updateSettingsPaneVisibility.bind(this));\n    this._updateSettingsPaneVisibility();\n\n    this._refreshToolbarUI();\n  }\n\n  _updateSettingsPaneVisibility(): void {\n    this._settingsPane.element.classList.toggle('hidden', !this._showSettingsPaneSetting.get());\n  }\n\n  _toggleSettingsDisplay(show: boolean): void {\n    this._rightToolbar.element.classList.toggle('hidden', !show);\n    this._settingsPane.element.classList.toggle('hidden', !show);\n    this._updateSettingsPaneVisibility();\n  }\n\n  _renderStartView(): void {\n    this._auditResultsElement.removeChildren();\n    this._statusView.hide();\n\n    this._reportSelector.selectNewReport();\n    this.contentElement.classList.toggle('in-progress', false);\n\n    this._startView.show(this.contentElement);\n    this._toggleSettingsDisplay(true);\n    this._startView.setUnauditableExplanation(this._unauditableExplanation);\n    this._startView.setStartButtonEnabled(!this._unauditableExplanation);\n    if (!this._unauditableExplanation) {\n      this._startView.focusStartButton();\n    }\n    this._startView.setWarningText(this._warningText);\n\n    this._newButton.setEnabled(false);\n    this._refreshToolbarUI();\n    this.setDefaultFocusedChild(this._startView);\n  }\n\n  _renderStatusView(inspectedURL: string): void {\n    this.contentElement.classList.toggle('in-progress', true);\n    this._statusView.setInspectedURL(inspectedURL);\n    this._statusView.show(this.contentElement);\n  }\n\n  _beforePrint(): void {\n    this._statusView.show(this.contentElement);\n    this._statusView.toggleCancelButton(false);\n    this._statusView.renderText(i18nString(UIStrings.printing), i18nString(UIStrings.thePrintPopupWindowIsOpenPlease));\n  }\n\n  _afterPrint(): void {\n    this._statusView.hide();\n    this._statusView.toggleCancelButton(true);\n  }\n\n  _renderReport(lighthouseResult: ReportRenderer.ReportJSON, artifacts?: ReportRenderer.RunnerResultArtifacts): void {\n    this._toggleSettingsDisplay(false);\n    this.contentElement.classList.toggle('in-progress', false);\n    this._startView.hideWidget();\n    this._statusView.hide();\n    this._auditResultsElement.removeChildren();\n    this._newButton.setEnabled(true);\n    this._refreshToolbarUI();\n\n    const cachedRenderedReport = this._cachedRenderedReports.get(lighthouseResult);\n    if (cachedRenderedReport) {\n      this._auditResultsElement.appendChild(cachedRenderedReport);\n      return;\n    }\n\n    const reportContainer = this._auditResultsElement.createChild('div', 'lh-vars lh-root lh-devtools');\n\n    const dom = new DOM(this._auditResultsElement.ownerDocument as Document);\n    const renderer = new LighthouseReportRenderer(dom) as ReportRenderer.ReportRenderer;\n\n    const templatesHTML = Root.Runtime.cachedResources.get('third_party/lighthouse/report-assets/templates.html');\n    if (!templatesHTML) {\n      return;\n    }\n    const templatesDOM = new DOMParser().parseFromString(templatesHTML, 'text/html');\n    if (!templatesDOM) {\n      return;\n    }\n\n    renderer.setTemplateContext(templatesDOM);\n    const el = renderer.renderReport(lighthouseResult, reportContainer);\n    // Linkifying requires the target be loaded. Do not block the report\n    // from rendering, as this is just an embellishment and the main target\n    // could take awhile to load.\n    this._waitForMainTargetLoad().then(() => {\n      LighthouseReportRenderer.linkifyNodeDetails(el);\n      LighthouseReportRenderer.linkifySourceLocationDetails(el);\n    });\n    LighthouseReportRenderer.handleDarkMode(el);\n\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const features = new LighthouseReportUIFeatures(dom) as any;\n    features.setBeforePrint(this._beforePrint.bind(this));\n    features.setAfterPrint(this._afterPrint.bind(this));\n    features.setTemplateContext(templatesDOM);\n    LighthouseReportRenderer.addViewTraceButton(el, features, artifacts);\n    features.initFeatures(lighthouseResult);\n\n    this._cachedRenderedReports.set(lighthouseResult, reportContainer);\n  }\n\n  async _waitForMainTargetLoad(): Promise<void> {\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel = mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return;\n    }\n    return resourceTreeModel.once(SDK.ResourceTreeModel.Events.Load);\n  }\n\n  _buildReportUI(lighthouseResult: ReportRenderer.ReportJSON, artifacts?: ReportRenderer.RunnerResultArtifacts): void {\n    if (lighthouseResult === null) {\n      return;\n    }\n\n    const optionElement = new Item(\n        lighthouseResult, () => this._renderReport(lighthouseResult, artifacts), this._renderStartView.bind(this));\n    this._reportSelector.prepend(optionElement);\n    this._refreshToolbarUI();\n    this._renderReport(lighthouseResult);\n  }\n\n  _handleDrop(dataTransfer: DataTransfer): void {\n    const items = dataTransfer.items;\n    if (!items.length) {\n      return;\n    }\n    const item = items[0];\n    if (item.kind === 'file') {\n      const entry = items[0].webkitGetAsEntry();\n      if (!entry.isFile) {\n        return;\n      }\n      entry.file((file: Blob) => {\n        const reader = new FileReader();\n        reader.onload = (): void => this._loadedFromFile(reader.result as string);\n        reader.readAsText(file);\n      });\n    }\n  }\n\n  _loadedFromFile(report: string): void {\n    const data = JSON.parse(report);\n    if (!data['lighthouseVersion']) {\n      return;\n    }\n    this._buildReportUI(data as ReportRenderer.ReportJSON);\n  }\n\n  async _startLighthouse(_event: Common.EventTarget.EventTargetEvent): Promise<void> {\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.LighthouseStarted);\n\n    try {\n      const inspectedURL = await this._controller.getInspectedURL({force: true});\n      const categoryIDs = this._controller.getCategoryIDs();\n      const flags = this._controller.getFlags();\n\n      await this._setupEmulationAndProtocolConnection();\n\n      this._renderStatusView(inspectedURL);\n\n      const lighthouseResponse = await this._protocolService.startLighthouse(inspectedURL, categoryIDs, flags);\n\n      if (lighthouseResponse && lighthouseResponse.fatal) {\n        const error = new Error(lighthouseResponse.message);\n        error.stack = lighthouseResponse.stack;\n        throw error;\n      }\n\n      if (!lighthouseResponse) {\n        throw new Error('Auditing failed to produce a result');\n      }\n\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.LighthouseFinished);\n\n      await this._resetEmulationAndProtocolConnection();\n      this._buildReportUI(lighthouseResponse.lhr, lighthouseResponse.artifacts);\n      // Give focus to the new audit button when completed\n      this._newButton.element.focus();\n    } catch (err) {\n      await this._resetEmulationAndProtocolConnection();\n      if (err instanceof Error) {\n        this._statusView.renderBugReport(err);\n      }\n    }\n  }\n\n  async _cancelLighthouse(): Promise<void> {\n    this._statusView.updateStatus(i18nString(UIStrings.cancelling));\n    await this._resetEmulationAndProtocolConnection();\n    this._renderStartView();\n  }\n\n  /**\n   * We set the device emulation on the DevTools-side for two reasons:\n   * 1. To workaround some odd device metrics emulation bugs like occuluding viewports\n   * 2. To get the attractive device outline\n   *\n   * We also set flags.internalDisableDeviceScreenEmulation = true to let LH only apply UA emulation\n   */\n  async _setupEmulationAndProtocolConnection(): Promise<void> {\n    const flags = this._controller.getFlags();\n\n    const emulationModel = Emulation.DeviceModeModel.DeviceModeModel.instance();\n    this._stateBefore = {\n      emulation: {\n        enabled: emulationModel.enabledSetting().get(),\n        outlineEnabled: emulationModel.deviceOutlineSetting().get(),\n        toolbarControlsEnabled: emulationModel.toolbarControlsEnabledSetting().get(),\n      },\n      network: {conditions: SDK.NetworkManager.MultitargetNetworkManager.instance().networkConditions()},\n    };\n\n    emulationModel.toolbarControlsEnabledSetting().set(false);\n    if ('emulatedFormFactor' in flags && flags.emulatedFormFactor === 'desktop') {\n      emulationModel.enabledSetting().set(false);\n      emulationModel.emulate(Emulation.DeviceModeModel.Type.None, null, null);\n    } else if (flags.emulatedFormFactor === 'mobile') {\n      emulationModel.enabledSetting().set(true);\n      emulationModel.deviceOutlineSetting().set(true);\n\n      for (const device of Emulation.EmulatedDevices.EmulatedDevicesList.instance().standard()) {\n        if (device.title === 'Moto G4') {\n          emulationModel.emulate(Emulation.DeviceModeModel.Type.Device, device, device.modes[0], 1);\n        }\n      }\n    }\n\n    await this._protocolService.attach();\n    this._isLHAttached = true;\n  }\n\n  async _resetEmulationAndProtocolConnection(): Promise<void> {\n    if (!this._isLHAttached) {\n      return;\n    }\n\n    this._isLHAttached = false;\n    await this._protocolService.detach();\n\n    if (this._stateBefore) {\n      const emulationModel = Emulation.DeviceModeModel.DeviceModeModel.instance();\n      emulationModel.enabledSetting().set(this._stateBefore.emulation.enabled);\n      emulationModel.deviceOutlineSetting().set(this._stateBefore.emulation.outlineEnabled);\n      emulationModel.toolbarControlsEnabledSetting().set(this._stateBefore.emulation.toolbarControlsEnabled);\n      SDK.NetworkManager.MultitargetNetworkManager.instance().setNetworkConditions(\n          this._stateBefore.network.conditions);\n      delete this._stateBefore;\n    }\n\n    Emulation.InspectedPagePlaceholder.InspectedPagePlaceholder.instance().update(true);\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel = mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return;\n    }\n    // reload to reset the page state\n    const inspectedURL = await this._controller.getInspectedURL();\n    await resourceTreeModel.navigate(inspectedURL);\n  }\n}\n"]}