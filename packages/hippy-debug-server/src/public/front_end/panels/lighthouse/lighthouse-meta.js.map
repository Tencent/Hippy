{"version":3,"file":"lighthouse-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/lighthouse/lighthouse-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,cAAc,EAAE,mBAAmB;CACpC,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,sCAAsC,EAAE,SAAS,CAAC,CAAC;AAC5F,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,sBAAqD,CAAC;AAE1D,KAAK,UAAU,oBAAoB;IACjC,IAAI,CAAC,sBAAsB,EAAE;QAC3B,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,CAAC;QAC7E,sBAAsB,GAAG,MAAM,MAAM,CAAC,iBAAiB,CAAC,CAAC;KAC1D;IACD,OAAO,sBAAsB,CAAC;AAChC,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,YAAY;IAChB,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;IAC/C,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC;IACvD,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,UAAU,GAAG,MAAM,oBAAoB,EAAE,CAAC;QAChD,OAAO,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC/D,CAAC;IACD,IAAI,EAAE;QACJ,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;KAClC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Lighthouse from './lighthouse.js';\n\nconst UIStrings = {\n  /**\n  *@description Command for showing the 'Lighthouse' tool\n  */\n  showLighthouse: 'Show `Lighthouse`',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/lighthouse/lighthouse-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedLighthouseModule: (typeof Lighthouse|undefined);\n\nasync function loadLighthouseModule(): Promise<typeof Lighthouse> {\n  if (!loadedLighthouseModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/lighthouse');\n    loadedLighthouseModule = await import('./lighthouse.js');\n  }\n  return loadedLighthouseModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'lighthouse',\n  title: i18n.i18n.lockedLazyString('Lighthouse'),\n  commandPrompt: i18nLazyString(UIStrings.showLighthouse),\n  order: 90,\n  async loadView() {\n    const Lighthouse = await loadLighthouseModule();\n    return Lighthouse.LighthousePanel.LighthousePanel.instance();\n  },\n  tags: [\n    i18n.i18n.lockedLazyString('lighthouse'),\n    i18n.i18n.lockedLazyString('pwa'),\n  ],\n});\n"]}