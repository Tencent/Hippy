{"version":3,"file":"input-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/input/input-meta.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Input from './input.js';\n\nconst UIStrings = {\n  /**\n    *@description Title of the inputs tool, which records user input.\n    */\n  inputs: 'Inputs',\n  /**\n    *@description Command to pause the replaying of user inputs.\n    */\n  pause: 'Pause',\n  /**\n    *@description Command to resume the replaying of user inputs.\n    */\n  resume: 'Resume',\n  /**\n    *@description Command for showing the inputs tool.\n    */\n  showInputs: 'Show Inputs',\n  /**\n    *@description Command to begin a recording of user input.\n    */\n  startRecording: 'Start recording',\n  /**\n    *@description Command to start replaying the recorded user input.\n    */\n  startReplaying: 'Start replaying',\n  /**\n    *@description Command to stop a recording of user input.\n    */\n  stopRecording: 'Stop recording',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/input//input-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedInputModule: (typeof Input|undefined);\n\nasync function loadInputModule(): Promise<typeof Input> {\n  if (!loadedInputModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('input');\n    loadedInputModule = await import('./input.js');\n  }\n  return loadedInputModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'Inputs',\n  title: i18nLazyString(UIStrings.inputs),\n  commandPrompt: i18nLazyString(UIStrings.showInputs),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 7,\n  async loadView() {\n    const Input = await loadInputModule();\n    return Input.InputTimeline.InputTimeline.instance();\n  },\n  experiment: Root.Runtime.ExperimentName.TIMELINE_REPLAY_EVENT,\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'input.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  async loadActionDelegate() {\n    const Input = await loadInputModule();\n    return Input.InputTimeline.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.INPUTS,\n  experiment: Root.Runtime.ExperimentName.TIMELINE_REPLAY_EVENT,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startRecording),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecording),\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'input.start-replaying',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_PLAY,\n  toggleable: false,\n  async loadActionDelegate() {\n    const Input = await loadInputModule();\n    return Input.InputTimeline.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.INPUTS,\n  experiment: Root.Runtime.ExperimentName.TIMELINE_REPLAY_EVENT,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startReplaying),\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'input.toggle-pause',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_PAUSE,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_RESUME,\n  async loadActionDelegate() {\n    const Input = await loadInputModule();\n    return Input.InputTimeline.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.INPUTS,\n  experiment: Root.Runtime.ExperimentName.TIMELINE_REPLAY_EVENT,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.pause),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.resume),\n    },\n  ],\n});\n"]}