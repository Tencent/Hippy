{"version":3,"file":"InputModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/input/InputModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nexport class InputModel extends SDK.SDKModel.SDKModel {\n  _inputAgent: ProtocolProxyApi.InputApi;\n  _eventDispatchTimer: number;\n  _dispatchEventDataList: EventData[];\n  _finishCallback: (() => void)|null;\n  _dispatchingIndex!: number;\n  _lastEventTime?: number|null;\n  _replayPaused?: boolean;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    this._inputAgent = target.inputAgent();\n    this._eventDispatchTimer = 0;\n    this._dispatchEventDataList = [];\n    this._finishCallback = null;\n\n    this._reset();\n  }\n\n  _reset(): void {\n    this._lastEventTime = null;\n    this._replayPaused = false;\n    this._dispatchingIndex = 0;\n    window.clearTimeout(this._eventDispatchTimer);\n  }\n\n  setEvents(tracingModel: SDK.TracingModel.TracingModel): void {\n    this._dispatchEventDataList = [];\n    for (const process of tracingModel.sortedProcesses()) {\n      for (const thread of process.sortedThreads()) {\n        this._processThreadEvents(tracingModel, thread);\n      }\n    }\n    function compareTimestamp(a: EventData, b: EventData): number {\n      return a.timestamp - b.timestamp;\n    }\n    this._dispatchEventDataList.sort(compareTimestamp);\n  }\n\n  startReplay(finishCallback: (() => void)|null): void {\n    this._reset();\n    this._finishCallback = finishCallback;\n    if (this._dispatchEventDataList.length) {\n      this._dispatchNextEvent();\n    } else {\n      this._replayStopped();\n    }\n  }\n\n  pause(): void {\n    window.clearTimeout(this._eventDispatchTimer);\n    if (this._dispatchingIndex >= this._dispatchEventDataList.length) {\n      this._replayStopped();\n    } else {\n      this._replayPaused = true;\n    }\n  }\n\n  resume(): void {\n    this._replayPaused = false;\n    if (this._dispatchingIndex < this._dispatchEventDataList.length) {\n      this._dispatchNextEvent();\n    }\n  }\n\n  _processThreadEvents(_tracingModel: SDK.TracingModel.TracingModel, thread: SDK.TracingModel.Thread): void {\n    for (const event of thread.events()) {\n      if (event.name === 'EventDispatch' && this._isValidInputEvent(event.args.data)) {\n        this._dispatchEventDataList.push(event.args.data);\n      }\n    }\n  }\n\n  _isValidInputEvent(eventData: EventData): boolean {\n    return this._isMouseEvent(eventData as MouseEventData) || this._isKeyboardEvent(eventData as KeyboardEventData);\n  }\n\n  _isMouseEvent(eventData: MouseEventData): boolean {\n    if (!MOUSE_EVENT_TYPE_TO_REQUEST_TYPE.has(eventData.type)) {\n      return false;\n    }\n    if (!('x' in eventData && 'y' in eventData)) {\n      return false;\n    }\n    return true;\n  }\n\n  _isKeyboardEvent(eventData: KeyboardEventData): boolean {\n    if (!KEYBOARD_EVENT_TYPE_TO_REQUEST_TYPE.has(eventData.type)) {\n      return false;\n    }\n    if (!('code' in eventData && 'key' in eventData)) {\n      return false;\n    }\n    return true;\n  }\n\n  _dispatchNextEvent(): void {\n    const eventData = this._dispatchEventDataList[this._dispatchingIndex];\n    this._lastEventTime = eventData.timestamp;\n    if (MOUSE_EVENT_TYPE_TO_REQUEST_TYPE.has(eventData.type)) {\n      this._dispatchMouseEvent(eventData as MouseEventData);\n    } else if (KEYBOARD_EVENT_TYPE_TO_REQUEST_TYPE.has(eventData.type)) {\n      this._dispatchKeyEvent(eventData as KeyboardEventData);\n    }\n\n    ++this._dispatchingIndex;\n    if (this._dispatchingIndex < this._dispatchEventDataList.length) {\n      const waitTime = (this._dispatchEventDataList[this._dispatchingIndex].timestamp - this._lastEventTime) / 1000;\n      this._eventDispatchTimer = window.setTimeout(this._dispatchNextEvent.bind(this), waitTime);\n    } else {\n      this._replayStopped();\n    }\n  }\n\n  async _dispatchMouseEvent(eventData: MouseEventData): Promise<void> {\n    const type = MOUSE_EVENT_TYPE_TO_REQUEST_TYPE.get(eventData.type);\n    if (!type) {\n      throw new Error(`Could not find mouse event type for eventData ${eventData.type}`);\n    }\n    const buttonActionName = BUTTONID_TO_ACTION_NAME.get(eventData.button);\n    const params = {\n      type,\n      x: eventData.x,\n      y: eventData.y,\n      modifiers: eventData.modifiers,\n      button: (eventData.type === 'mousedown' || eventData.type === 'mouseup') ? buttonActionName :\n                                                                                 Protocol.Input.MouseButton.None,\n      buttons: eventData.buttons,\n      clickCount: eventData.clickCount,\n      deltaX: eventData.deltaX,\n      deltaY: eventData.deltaY,\n    };\n    await this._inputAgent.invoke_dispatchMouseEvent(params);\n  }\n\n  async _dispatchKeyEvent(eventData: KeyboardEventData): Promise<void> {\n    const type = KEYBOARD_EVENT_TYPE_TO_REQUEST_TYPE.get(eventData.type);\n    if (!type) {\n      throw new Error(`Could not find key event type for eventData ${eventData.type}`);\n    }\n    const text = eventData.type === 'keypress' ? eventData.key[0] : undefined;\n    const params = {\n      type,\n      modifiers: eventData.modifiers,\n      text: text,\n      unmodifiedText: text ? text.toLowerCase() : undefined,\n      code: eventData.code,\n      key: eventData.key,\n    };\n    await this._inputAgent.invoke_dispatchKeyEvent(params);\n  }\n\n  _replayStopped(): void {\n    window.clearTimeout(this._eventDispatchTimer);\n    this._reset();\n    if (this._finishCallback) {\n      this._finishCallback();\n    }\n  }\n}\n\nconst MOUSE_EVENT_TYPE_TO_REQUEST_TYPE = new Map<string, Protocol.Input.DispatchMouseEventRequestType>([\n  ['mousedown', Protocol.Input.DispatchMouseEventRequestType.MousePressed],\n  ['mouseup', Protocol.Input.DispatchMouseEventRequestType.MouseReleased],\n  ['mousemove', Protocol.Input.DispatchMouseEventRequestType.MouseMoved],\n  ['wheel', Protocol.Input.DispatchMouseEventRequestType.MouseWheel],\n]);\n\nconst KEYBOARD_EVENT_TYPE_TO_REQUEST_TYPE = new Map<string, Protocol.Input.DispatchKeyEventRequestType>([\n  ['keydown', Protocol.Input.DispatchKeyEventRequestType.KeyDown],\n  ['keyup', Protocol.Input.DispatchKeyEventRequestType.KeyUp],\n  ['keypress', Protocol.Input.DispatchKeyEventRequestType.Char],\n]);\n\nconst BUTTONID_TO_ACTION_NAME = new Map<number, Protocol.Input.MouseButton>([\n  [0, Protocol.Input.MouseButton.Left],\n  [1, Protocol.Input.MouseButton.Middle],\n  [2, Protocol.Input.MouseButton.Right],\n  [3, Protocol.Input.MouseButton.Back],\n  [4, Protocol.Input.MouseButton.Forward],\n]);\n\nSDK.SDKModel.SDKModel.register(InputModel, {capabilities: SDK.Target.Capability.Input, autostart: false});\nexport interface MouseEventData {\n  type: string;\n  modifiers: number;\n  timestamp: number;\n  x: number;\n  y: number;\n  button: number;\n  buttons: number;\n  clickCount: number;\n  deltaX: number;\n  deltaY: number;\n}\nexport interface KeyboardEventData {\n  type: string;\n  modifiers: number;\n  timestamp: number;\n  code: string;\n  key: string;\n}\n\nexport type EventData = MouseEventData|KeyboardEventData;\n"]}