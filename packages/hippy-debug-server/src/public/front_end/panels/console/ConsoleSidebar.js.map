{"version":3,"file":"ConsoleSidebar.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console/ConsoleSidebar.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {LevelsMask} from './ConsoleFilter.js';\nimport {ConsoleFilter, FilterType} from './ConsoleFilter.js';\nimport type {ConsoleViewMessage} from './ConsoleViewMessage.js';\n\nconst UIStrings = {\n  /**\n  * @description Filter name in Console Sidebar of the Console panel. This is shown when we fail to\n  * parse a URL when trying to display console messages from each URL separately. This might be\n  * because the console message does not come from any particular URL. This should be translated as\n  * a term that indicates 'not one of the other URLs listed here'.\n  */\n  other: '<other>',\n  /**\n  *@description Text in Console Sidebar of the Console panel to show how many user messages exist.\n  */\n  dUserMessages: '{n, plural, =0 {No user messages} =1 {# user message} other {# user messages}}',\n  /**\n  *@description Text in Console Sidebar of the Console panel to show how many messages exist.\n  */\n  dMessages: '{n, plural, =0 {No messages} =1 {# message} other {# messages}}',\n  /**\n  *@description Text in Console Sidebar of the Console panel to show how many errors exist.\n  */\n  dErrors: '{n, plural, =0 {No errors} =1 {# error} other {# errors}}',\n  /**\n  *@description Text in Console Sidebar of the Console panel to show how many warnings exist.\n  */\n  dWarnings: '{n, plural, =0 {No warnings} =1 {# warning} other {# warnings}}',\n  /**\n  *@description Text in Console Sidebar of the Console panel to show how many info messages exist.\n  */\n  dInfo: '{n, plural, =0 {No info} =1 {# info} other {# info}}',\n  /**\n  *@description Text in Console Sidebar of the Console panel to show how many verbose messages exist.\n  */\n  dVerbose: '{n, plural, =0 {No verbose} =1 {# verbose} other {# verbose}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsoleSidebar.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ConsoleSidebar extends UI.Widget.VBox {\n  _tree: UI.TreeOutline.TreeOutlineInShadow;\n  _selectedTreeElement: UI.TreeOutline.TreeElement|null;\n  _treeElements: FilterTreeElement[];\n\n  constructor() {\n    super(true);\n    this.setMinimumSize(125, 0);\n\n    this._tree = new UI.TreeOutline.TreeOutlineInShadow();\n    this._tree.registerRequiredCSS('panels/console/consoleSidebar.css', {enableLegacyPatching: false});\n    this._tree.addEventListener(UI.TreeOutline.Events.ElementSelected, this._selectionChanged.bind(this));\n    this.contentElement.appendChild(this._tree.element);\n    this._selectedTreeElement = null;\n    this._treeElements = [];\n    const selectedFilterSetting =\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        Common.Settings.Settings.instance().createSetting<string>('console.sidebarSelectedFilter', null);\n\n    const consoleAPIParsedFilters = [{\n      key: FilterType.Source,\n      text: SDK.ConsoleModel.FrontendMessageSource.ConsoleAPI,\n      negative: false,\n      regex: undefined,\n    }];\n    this._appendGroup(\n        GroupName.All, [], ConsoleFilter.allLevelsFilterValue(), UI.Icon.Icon.create('mediumicon-list'),\n        selectedFilterSetting);\n    this._appendGroup(\n        GroupName.ConsoleAPI, consoleAPIParsedFilters, ConsoleFilter.allLevelsFilterValue(),\n        UI.Icon.Icon.create('mediumicon-account-circle'), selectedFilterSetting);\n    this._appendGroup(\n        GroupName.Error, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Error),\n        UI.Icon.Icon.create('mediumicon-error-circle'), selectedFilterSetting);\n    this._appendGroup(\n        GroupName.Warning, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Warning),\n        UI.Icon.Icon.create('mediumicon-warning-triangle'), selectedFilterSetting);\n    this._appendGroup(\n        GroupName.Info, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Info),\n        UI.Icon.Icon.create('mediumicon-info-circle'), selectedFilterSetting);\n    this._appendGroup(\n        GroupName.Verbose, [], ConsoleFilter.singleLevelMask(Protocol.Log.LogEntryLevel.Verbose),\n        UI.Icon.Icon.create('mediumicon-bug'), selectedFilterSetting);\n    const selectedTreeElementName = selectedFilterSetting.get();\n    const defaultTreeElement =\n        this._treeElements.find(x => x.name() === selectedTreeElementName) || this._treeElements[0];\n    defaultTreeElement.select();\n  }\n\n  _appendGroup(\n      name: string, parsedFilters: TextUtils.TextUtils.ParsedFilter[], levelsMask: LevelsMask, icon: UI.Icon.Icon,\n      selectedFilterSetting: Common.Settings.Setting<string>): void {\n    const filter = new ConsoleFilter(name, parsedFilters, null, levelsMask);\n    const treeElement = new FilterTreeElement(filter, icon, selectedFilterSetting);\n    this._tree.appendChild(treeElement);\n    this._treeElements.push(treeElement);\n  }\n\n  clear(): void {\n    for (const treeElement of this._treeElements) {\n      treeElement.clear();\n    }\n  }\n\n  onMessageAdded(viewMessage: ConsoleViewMessage): void {\n    for (const treeElement of this._treeElements) {\n      treeElement.onMessageAdded(viewMessage);\n    }\n  }\n\n  shouldBeVisible(viewMessage: ConsoleViewMessage): boolean {\n    if (this._selectedTreeElement instanceof ConsoleSidebarTreeElement) {\n      return this._selectedTreeElement.filter().shouldBeVisible(viewMessage);\n    }\n    return true;\n  }\n\n  _selectionChanged(event: Common.EventTarget.EventTargetEvent): void {\n    this._selectedTreeElement = (event.data as UI.TreeOutline.TreeElement);\n    this.dispatchEventToListeners(Events.FilterSelected);\n  }\n}\n\nexport const enum Events {\n  FilterSelected = 'FilterSelected',\n}\n\nclass ConsoleSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  _filter: ConsoleFilter;\n\n  constructor(title: string|Node, filter: ConsoleFilter) {\n    super(title);\n    this._filter = filter;\n  }\n\n  filter(): ConsoleFilter {\n    return this._filter;\n  }\n}\n\nexport class URLGroupTreeElement extends ConsoleSidebarTreeElement {\n  _countElement: HTMLElement;\n  _messageCount: number;\n\n  constructor(filter: ConsoleFilter) {\n    super(filter.name, filter);\n    this._countElement = this.listItemElement.createChild('span', 'count');\n    const leadingIcons = [UI.Icon.Icon.create('largeicon-navigator-file')];\n    this.setLeadingIcons(leadingIcons);\n    this._messageCount = 0;\n  }\n\n  incrementAndUpdateCounter(): void {\n    this._messageCount++;\n    this._countElement.textContent = `${this._messageCount}`;\n  }\n}\n\n/**\n * Maps the GroupName for a filter to the UIString used to render messages.\n * Stored here so we only construct it once at runtime, rather than everytime we\n * construct a filter or get a new message.\n */\nconst stringForFilterSidebarItemMap = new Map<GroupName, string>([\n  [GroupName.ConsoleAPI, UIStrings.dUserMessages],\n  [GroupName.All, UIStrings.dMessages],\n  [GroupName.Error, UIStrings.dErrors],\n  [GroupName.Warning, UIStrings.dWarnings],\n  [GroupName.Info, UIStrings.dInfo],\n  [GroupName.Verbose, UIStrings.dVerbose],\n]);\n\nexport class FilterTreeElement extends ConsoleSidebarTreeElement {\n  _selectedFilterSetting: Common.Settings.Setting<string>;\n  _urlTreeElements: Map<string|null, URLGroupTreeElement>;\n  _messageCount: number;\n  private uiStringForFilterCount: string;\n\n  constructor(filter: ConsoleFilter, icon: UI.Icon.Icon, selectedFilterSetting: Common.Settings.Setting<string>) {\n    super(filter.name, filter);\n    this.uiStringForFilterCount = stringForFilterSidebarItemMap.get(filter.name as GroupName) || '';\n    this._selectedFilterSetting = selectedFilterSetting;\n    this._urlTreeElements = new Map();\n    this.setLeadingIcons([icon]);\n    this._messageCount = 0;\n    this._updateCounter();\n  }\n\n\n  clear(): void {\n    this._urlTreeElements.clear();\n    this.removeChildren();\n    this._messageCount = 0;\n    this._updateCounter();\n  }\n\n  name(): string {\n    return this._filter.name;\n  }\n\n  onselect(selectedByUser?: boolean): boolean {\n    this._selectedFilterSetting.set(this._filter.name);\n    return super.onselect(selectedByUser);\n  }\n\n  _updateCounter(): void {\n    this.title = this._updateGroupTitle(this._messageCount);\n    this.setExpandable(Boolean(this.childCount()));\n  }\n\n  _updateGroupTitle(messageCount: number): string {\n    if (this.uiStringForFilterCount) {\n      return i18nString(this.uiStringForFilterCount, {n: messageCount});\n    }\n    return '';\n  }\n\n  onMessageAdded(viewMessage: ConsoleViewMessage): void {\n    const message = viewMessage.consoleMessage();\n    const shouldIncrementCounter = message.type !== SDK.ConsoleModel.FrontendMessageType.Command &&\n        message.type !== SDK.ConsoleModel.FrontendMessageType.Result && !message.isGroupMessage();\n    if (!this._filter.shouldBeVisible(viewMessage) || !shouldIncrementCounter) {\n      return;\n    }\n    const child = this._childElement(message.url);\n    child.incrementAndUpdateCounter();\n    this._messageCount++;\n    this._updateCounter();\n  }\n\n  _childElement(url?: string): URLGroupTreeElement {\n    const urlValue = url || null;\n    let child = this._urlTreeElements.get(urlValue);\n    if (child) {\n      return child;\n    }\n\n    const filter = this._filter.clone();\n    const parsedURL = urlValue ? Common.ParsedURL.ParsedURL.fromString(urlValue) : null;\n    if (urlValue) {\n      filter.name = parsedURL ? parsedURL.displayName : urlValue;\n    } else {\n      filter.name = i18nString(UIStrings.other);\n    }\n    filter.parsedFilters.push({key: FilterType.Url, text: urlValue, negative: false, regex: undefined});\n    child = new URLGroupTreeElement(filter);\n    if (urlValue) {\n      child.tooltip = urlValue;\n    }\n    this._urlTreeElements.set(urlValue, child);\n    this.appendChild(child);\n    return child;\n  }\n}\n\nconst enum GroupName {\n  ConsoleAPI = 'user message',\n  All = 'message',\n  Error = 'error',\n  Warning = 'warning',\n  Info = 'info',\n  Verbose = 'verbose',\n}\n"]}