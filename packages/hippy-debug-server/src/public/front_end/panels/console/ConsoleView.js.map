{"version":3,"file":"ConsoleView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/console/ConsoleView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2009 Joseph Pecoraro\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ConsoleContextSelector} from './ConsoleContextSelector.js';\n\nimport type {LevelsMask} from './ConsoleFilter.js';\nimport {ConsoleFilter, FilterType} from './ConsoleFilter.js';\nimport {ConsolePinPane} from './ConsolePinPane.js';\nimport {ConsolePrompt, Events as ConsolePromptEvents} from './ConsolePrompt.js';\nimport {ConsoleSidebar, Events} from './ConsoleSidebar.js';\nimport {ConsoleCommand, ConsoleCommandResult, ConsoleGroupViewMessage, ConsoleTableMessageView, ConsoleViewMessage, getMessageForElement, MaxLengthForLinks} from './ConsoleViewMessage.js';\n\nimport type {ConsoleViewportElement, ConsoleViewportProvider} from './ConsoleViewport.js';\nimport {ConsoleViewport} from './ConsoleViewport.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for button which links to Issues tab, specifying how many issues there are.\n  */\n  issuesWithColon: '{n, plural, =0 {No Issues} =1 {# Issue:} other {# Issues:}}',\n  /**\n  *@description Text for the tooltip of the issue counter toolbar item\n  */\n  issueToolbarTooltipGeneral: 'Some problems no longer generate console messages, but are surfaced in the issues tab.',\n  /**\n  * @description Text for the tooltip of the issue counter toolbar item. The placeholder indicates how many issues\n  * there are in the Issues tab broken down by kind.\n  * @example {1 page error, 2 breaking changes} issueEnumeration\n  */\n  issueToolbarClickToView: 'Click to view {issueEnumeration}',\n  /**\n  * @description Text for the tooltip of the issue counter toolbar item. The placeholder indicates how many issues\n  * there are in the Issues tab broken down by kind.\n  */\n  issueToolbarClickToGoToTheIssuesTab: 'Click to go to the issues tab',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  findStringInLogs: 'Find string in logs',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in console view of the console panel\n  */\n  consoleSettings: 'Console settings',\n  /**\n  *@description Title of a setting under the Console category that can be invoked through the Command Menu\n  */\n  groupSimilarMessagesInConsole: 'Group similar messages in console',\n  /**\n  * @description Tooltip for the the console sidebar toggle in the Console panel. Command to\n  * open/show the sidebar.\n  */\n  showConsoleSidebar: 'Show console sidebar',\n  /**\n  * @description Tooltip for the the console sidebar toggle in the Console panel. Command to\n  * open/show the sidebar.\n  */\n  hideConsoleSidebar: 'Hide console sidebar',\n  /**\n  *@description Tooltip text that appears on the setting to preserve log when hovering over the item\n  */\n  doNotClearLogOnPageReload: 'Do not clear log on page reload / navigation',\n  /**\n  *@description Text to preserve the log after refreshing\n  */\n  preserveLog: 'Preserve log',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  hideNetwork: 'Hide network',\n  /**\n  *@description Tooltip text that appears on the setting when hovering over it in Console View of the Console panel\n  */\n  onlyShowMessagesFromTheCurrentContext:\n      'Only show messages from the current context (`top`, `iframe`, `worker`, extension)',\n  /**\n  *@description Alternative title text of a setting in Console View of the Console panel\n  */\n  selectedContextOnly: 'Selected context only',\n  /**\n  *@description Tooltip text that appears on the setting when hovering over it in Console View of the Console panel\n  */\n  eagerlyEvaluateTextInThePrompt: 'Eagerly evaluate text in the prompt',\n  /**\n  * @description Text in Console View of the Console panel, indicating that a number of console\n  * messages have been hidden.\n  */\n  sHidden: '{n, plural, =1 {# hidden} other {# hidden}}',\n  /**\n  *@description Alert message for screen readers when the console is cleared\n  */\n  consoleCleared: 'Console cleared',\n  /**\n  *@description Text in Console View of the Console panel\n  *@example {index.js} PH1\n  */\n  hideMessagesFromS: 'Hide messages from {PH1}',\n  /**\n  *@description Text to save content as a specific file type\n  */\n  saveAs: 'Save as...',\n  /**\n  *@description A context menu item in the Console View of the Console panel\n  */\n  copyVisibleStyledSelection: 'Copy visible styled selection',\n  /**\n  *@description Text to replay an XHR request\n  */\n  replayXhr: 'Replay XHR',\n  /**\n  *@description Text to indicate DevTools is writing to a file\n  */\n  writingFile: 'Writing file…',\n  /**\n  *@description Text to indicate the searching is in progress\n  */\n  searching: 'Searching…',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  egEventdCdnUrlacom: 'e.g. `/event\\d/ -cdn url:a.com`',\n  /**\n  *@description Sdk console message message level verbose of level Labels in Console View of the Console panel\n  */\n  verbose: 'Verbose',\n  /**\n  *@description Sdk console message message level info of level Labels in Console View of the Console panel\n  */\n  info: 'Info',\n  /**\n  *@description Sdk console message message level warning of level Labels in Console View of the Console panel\n  */\n  warnings: 'Warnings',\n  /**\n  *@description Text for errors\n  */\n  errors: 'Errors',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  logLevels: 'Log levels',\n  /**\n  *@description Title text of a setting in Console View of the Console panel\n  */\n  overriddenByFilterSidebar: 'Overridden by filter sidebar',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  customLevels: 'Custom levels',\n  /**\n  *@description Text in Console View of the Console panel\n  *@example {Warnings} PH1\n  */\n  sOnly: '{PH1} only',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  allLevels: 'All levels',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  defaultLevels: 'Default levels',\n  /**\n  *@description Text in Console View of the Console panel\n  */\n  hideAll: 'Hide all',\n  /**\n  *@description Title of level menu button in console view of the console panel\n  *@example {All levels} PH1\n  */\n  logLevelS: 'Log level: {PH1}',\n  /**\n  *@description A context menu item in the Console View of the Console panel\n  */\n  default: 'Default',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/console/ConsoleView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet consoleViewInstance: ConsoleView;\n\nexport class ConsoleView extends UI.Widget.VBox implements UI.SearchableView.Searchable, ConsoleViewportProvider {\n  _searchableView: UI.SearchableView.SearchableView;\n  _sidebar: ConsoleSidebar;\n  _isSidebarOpen: boolean;\n  _filter: ConsoleViewFilter;\n  _consoleToolbarContainer: HTMLElement;\n  _splitWidget: UI.SplitWidget.SplitWidget;\n  _contentsElement: UI.Widget.WidgetElement;\n  _visibleViewMessages: ConsoleViewMessage[];\n  _hiddenByFilterCount: number;\n  _shouldBeHiddenCache: Set<ConsoleViewMessage>;\n  _lastShownHiddenByFilterCount!: number;\n  _currentMatchRangeIndex!: number;\n  _searchRegex!: RegExp|null;\n  _groupableMessages: Map<string, ConsoleViewMessage[]>;\n  _groupableMessageTitle: Map<string, ConsoleViewMessage>;\n  _shortcuts: Map<number, () => void>;\n  _regexMatchRanges: RegexMatchRange[];\n  _consoleContextSelector: ConsoleContextSelector;\n  _filterStatusText: UI.Toolbar.ToolbarText;\n  _showSettingsPaneSetting: Common.Settings.Setting<boolean>;\n  _showSettingsPaneButton: UI.Toolbar.ToolbarSettingToggle;\n  _progressToolbarItem: UI.Toolbar.ToolbarItem;\n  _groupSimilarSetting: Common.Settings.Setting<boolean>;\n  _preserveLogCheckbox: UI.Toolbar.ToolbarSettingCheckbox;\n  _hideNetworkMessagesCheckbox: UI.Toolbar.ToolbarSettingCheckbox;\n  _timestampsSetting: Common.Settings.Setting<unknown>;\n  _consoleHistoryAutocompleteSetting: Common.Settings.Setting<boolean>;\n  _pinPane: ConsolePinPane;\n  _viewport: ConsoleViewport;\n  _messagesElement: HTMLElement;\n  _viewportThrottler: Common.Throttler.Throttler;\n  _pendingBatchResize: boolean;\n  _onMessageResizedBound: (e: Common.EventTarget.EventTargetEvent) => void;\n  _topGroup: ConsoleGroup;\n  _currentGroup: ConsoleGroup;\n  _promptElement: HTMLElement;\n  _linkifier: Components.Linkifier.Linkifier;\n  _consoleMessages: ConsoleViewMessage[];\n  _viewMessageSymbol: symbol;\n  _consoleHistorySetting: Common.Settings.Setting<string[]>;\n  _prompt: ConsolePrompt;\n  _immediatelyFilterMessagesForTest?: boolean;\n  _maybeDirtyWhileMuted?: boolean;\n  _scheduledRefreshPromiseForTest?: Promise<void>;\n  _needsFullUpdate?: boolean;\n  _buildHiddenCacheTimeout?: number;\n  _searchShouldJumpBackwards?: boolean;\n  _searchProgressIndicator?: UI.ProgressIndicator.ProgressIndicator;\n  _innerSearchTimeoutId?: number;\n  _muteViewportUpdates?: boolean;\n  _waitForScrollTimeout?: number;\n  _issueCounter: IssueCounter.IssueCounter.IssueCounter;\n  private pendingSidebarMessages: ConsoleViewMessage[] = [];\n  private userHasOpenedSidebarAtLeastOnce = false;\n  private issueToolbarThrottle: Common.Throttler.Throttler;\n\n  constructor() {\n    super();\n    this.setMinimumSize(0, 35);\n    this.registerRequiredCSS('panels/console/consoleView.css', {enableLegacyPatching: false});\n    this.registerRequiredCSS('ui/legacy/components/object_ui/objectValue.css', {enableLegacyPatching: false});\n\n    this._searchableView = new UI.SearchableView.SearchableView(this, null);\n    this._searchableView.element.classList.add('console-searchable-view');\n    this._searchableView.setPlaceholder(i18nString(UIStrings.findStringInLogs));\n    this._searchableView.setMinimalSearchQuerySize(0);\n    this._sidebar = new ConsoleSidebar();\n    this._sidebar.addEventListener(Events.FilterSelected, this._onFilterChanged.bind(this));\n    this._isSidebarOpen = false;\n    this._filter = new ConsoleViewFilter(this._onFilterChanged.bind(this));\n\n    this._consoleToolbarContainer = this.element.createChild('div', 'console-toolbar-container');\n    this._splitWidget = new UI.SplitWidget.SplitWidget(\n        true /* isVertical */, false /* secondIsSidebar */, 'console.sidebar.width', 100);\n    this._splitWidget.setMainWidget(this._searchableView);\n    this._splitWidget.setSidebarWidget(this._sidebar);\n    this._splitWidget.show(this.element);\n    this._splitWidget.hideSidebar();\n    this._splitWidget.enableShowModeSaving();\n    this._isSidebarOpen = this._splitWidget.showMode() === UI.SplitWidget.ShowMode.Both;\n    this._filter.setLevelMenuOverridden(this._isSidebarOpen);\n    this._splitWidget.addEventListener(UI.SplitWidget.Events.ShowModeChanged, event => {\n      this._isSidebarOpen = event.data === UI.SplitWidget.ShowMode.Both;\n\n      if (this._isSidebarOpen) {\n        if (!this.userHasOpenedSidebarAtLeastOnce) {\n          /**\n           * We only want to know if the user opens the sidebar once, not how\n           * many times in a given session they might open and close it, hence\n           * the userHasOpenedSidebarAtLeastOnce variable to track this.\n           */\n          Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConsoleSidebarOpened);\n          this.userHasOpenedSidebarAtLeastOnce = true;\n        }\n\n        // If the user has now opened the sidebar, we need to update it, so send\n        // through all the pending messages.\n        this.pendingSidebarMessages.forEach(message => {\n          this._sidebar.onMessageAdded(message);\n        });\n        this.pendingSidebarMessages = [];\n      }\n      this._filter.setLevelMenuOverridden(this._isSidebarOpen);\n      this._onFilterChanged();\n    });\n    this._contentsElement = this._searchableView.element;\n    this.element.classList.add('console-view');\n\n    this._visibleViewMessages = [];\n    this._hiddenByFilterCount = 0;\n    this._shouldBeHiddenCache = new Set();\n\n    this._groupableMessages = new Map();\n    this._groupableMessageTitle = new Map();\n    this._shortcuts = new Map();\n\n    this._regexMatchRanges = [];\n\n    this._consoleContextSelector = new ConsoleContextSelector();\n\n    this._filterStatusText = new UI.Toolbar.ToolbarText();\n    this._filterStatusText.element.classList.add('dimmed');\n    this._showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('consoleShowSettingsToolbar', false);\n    this._showSettingsPaneButton = new UI.Toolbar.ToolbarSettingToggle(\n        this._showSettingsPaneSetting, 'largeicon-settings-gear', i18nString(UIStrings.consoleSettings));\n    this._progressToolbarItem = new UI.Toolbar.ToolbarItem(document.createElement('div'));\n    this._groupSimilarSetting = Common.Settings.Settings.instance().moduleSetting('consoleGroupSimilar');\n    this._groupSimilarSetting.addChangeListener(() => this._updateMessageList());\n    const groupSimilarToggle = new UI.Toolbar.ToolbarSettingCheckbox(\n        this._groupSimilarSetting, i18nString(UIStrings.groupSimilarMessagesInConsole));\n\n    const toolbar = new UI.Toolbar.Toolbar('console-main-toolbar', this._consoleToolbarContainer);\n    toolbar.makeWrappable(true);\n    const rightToolbar = new UI.Toolbar.Toolbar('', this._consoleToolbarContainer);\n    toolbar.appendToolbarItem(this._splitWidget.createShowHideSidebarButton(\n        i18nString(UIStrings.showConsoleSidebar), i18nString(UIStrings.hideConsoleSidebar)));\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(\n        (UI.ActionRegistry.ActionRegistry.instance().action('console.clear') as UI.ActionRegistration.Action)));\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this._consoleContextSelector.toolbarItem());\n    toolbar.appendSeparator();\n    const liveExpressionButton = UI.Toolbar.Toolbar.createActionButton(\n        (UI.ActionRegistry.ActionRegistry.instance().action('console.create-pin') as UI.ActionRegistration.Action));\n    toolbar.appendToolbarItem(liveExpressionButton);\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this._filter._textFilterUI);\n    toolbar.appendToolbarItem(this._filter._levelMenuButton);\n    toolbar.appendToolbarItem(this._progressToolbarItem);\n    toolbar.appendSeparator();\n    this._issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n    this._issueCounter.id = 'console-issues-counter';\n    const issuesToolbarItem = new UI.Toolbar.ToolbarItem(this._issueCounter);\n    this._issueCounter.data = {\n      clickHandler: (): void => {\n        Host.userMetrics.issuesPanelOpenedFrom(Host.UserMetrics.IssueOpener.StatusBarIssuesCounter);\n        UI.ViewManager.ViewManager.instance().showView('issues-pane');\n      },\n      issuesManager: IssuesManager.IssuesManager.IssuesManager.instance(),\n      accessibleName: i18nString(UIStrings.issueToolbarTooltipGeneral),\n      displayMode: IssueCounter.IssueCounter.DisplayMode.OmitEmpty,\n    };\n    toolbar.appendToolbarItem(issuesToolbarItem);\n    rightToolbar.appendSeparator();\n    rightToolbar.appendToolbarItem(this._filterStatusText);\n    rightToolbar.appendToolbarItem(this._showSettingsPaneButton);\n\n    this._preserveLogCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('preserveConsoleLog'),\n        i18nString(UIStrings.doNotClearLogOnPageReload), i18nString(UIStrings.preserveLog));\n    this._hideNetworkMessagesCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        this._filter._hideNetworkMessagesSetting, this._filter._hideNetworkMessagesSetting.title(),\n        i18nString(UIStrings.hideNetwork));\n    const filterByExecutionContextCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        this._filter._filterByExecutionContextSetting, i18nString(UIStrings.onlyShowMessagesFromTheCurrentContext),\n        i18nString(UIStrings.selectedContextOnly));\n    const monitoringXHREnabledSetting = Common.Settings.Settings.instance().moduleSetting('monitoringXHREnabled');\n    this._timestampsSetting = Common.Settings.Settings.instance().moduleSetting('consoleTimestampsEnabled');\n    this._consoleHistoryAutocompleteSetting =\n        Common.Settings.Settings.instance().moduleSetting('consoleHistoryAutocomplete');\n\n    const settingsPane = new UI.Widget.HBox();\n    settingsPane.show(this._contentsElement);\n    settingsPane.element.classList.add('console-settings-pane');\n\n    UI.ARIAUtils.setAccessibleName(settingsPane.element, i18nString(UIStrings.consoleSettings));\n    UI.ARIAUtils.markAsGroup(settingsPane.element);\n    const settingsToolbarLeft = new UI.Toolbar.Toolbar('', settingsPane.element);\n    settingsToolbarLeft.makeVertical();\n    settingsToolbarLeft.appendToolbarItem(this._hideNetworkMessagesCheckbox);\n    settingsToolbarLeft.appendToolbarItem(this._preserveLogCheckbox);\n    settingsToolbarLeft.appendToolbarItem(filterByExecutionContextCheckbox);\n    settingsToolbarLeft.appendToolbarItem(groupSimilarToggle);\n\n    const settingsToolbarRight = new UI.Toolbar.Toolbar('', settingsPane.element);\n    settingsToolbarRight.makeVertical();\n    settingsToolbarRight.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(monitoringXHREnabledSetting));\n    const eagerEvalCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('consoleEagerEval'),\n        i18nString(UIStrings.eagerlyEvaluateTextInThePrompt));\n    settingsToolbarRight.appendToolbarItem(eagerEvalCheckbox);\n    settingsToolbarRight.appendToolbarItem(\n        new UI.Toolbar.ToolbarSettingCheckbox(this._consoleHistoryAutocompleteSetting));\n    const userGestureCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('consoleUserActivationEval'));\n    settingsToolbarRight.appendToolbarItem(userGestureCheckbox);\n    if (!this._showSettingsPaneSetting.get()) {\n      settingsPane.element.classList.add('hidden');\n    }\n    this._showSettingsPaneSetting.addChangeListener(\n        () => settingsPane.element.classList.toggle('hidden', !this._showSettingsPaneSetting.get()));\n\n    this._pinPane = new ConsolePinPane(liveExpressionButton);\n    this._pinPane.element.classList.add('console-view-pinpane');\n    this._pinPane.show(this._contentsElement);\n    this._pinPane.element.addEventListener('keydown', event => {\n      if ((event.key === 'Enter' &&\n           UI.KeyboardShortcut.KeyboardShortcut.eventHasCtrlOrMeta((event as KeyboardEvent))) ||\n          event.keyCode === UI.KeyboardShortcut.Keys.Esc.code) {\n        this._prompt.focus();\n        event.consume();\n      }\n    });\n\n    this._viewport = new ConsoleViewport(this);\n    this._viewport.setStickToBottom(true);\n    this._viewport.contentElement().classList.add('console-group', 'console-group-messages');\n    this._contentsElement.appendChild(this._viewport.element);\n    this._messagesElement = this._viewport.element;\n    this._messagesElement.id = 'console-messages';\n    this._messagesElement.classList.add('monospace');\n    this._messagesElement.addEventListener('click', this._messagesClicked.bind(this), false);\n    this._messagesElement.addEventListener('paste', this._messagesPasted.bind(this), true);\n    this._messagesElement.addEventListener('clipboard-paste', this._messagesPasted.bind(this), true);\n    UI.ARIAUtils.markAsLog(this._messagesElement);\n    UI.ARIAUtils.markAsPoliteLiveRegion(this._messagesElement, false);\n\n    this._viewportThrottler = new Common.Throttler.Throttler(50);\n    this._pendingBatchResize = false;\n    this._onMessageResizedBound = (e: Common.EventTarget.EventTargetEvent): void => {\n      this._onMessageResized(e);\n    };\n\n    this._topGroup = ConsoleGroup.createTopGroup();\n    this._currentGroup = this._topGroup;\n\n    this._promptElement = this._messagesElement.createChild('div', 'source-code');\n    this._promptElement.id = 'console-prompt';\n\n    // FIXME: This is a workaround for the selection machinery bug. See crbug.com/410899\n    const selectAllFixer = this._messagesElement.createChild('div', 'console-view-fix-select-all');\n    selectAllFixer.textContent = '.';\n    UI.ARIAUtils.markAsHidden(selectAllFixer);\n\n    this._registerShortcuts();\n\n    this._messagesElement.addEventListener('contextmenu', this._handleContextMenuEvent.bind(this), false);\n\n    // Filters need to be re-applied to a console message when the message's live location changes.\n    // All relevant live locations are created by the same linkifier, so it is enough to subscribe to\n    // the linkifiers live location change event.\n    const throttler = new Common.Throttler.Throttler(100);\n    const refilterMessages = (): Promise<void> => throttler.schedule(async () => this._onFilterChanged());\n    this._linkifier =\n        new Components.Linkifier.Linkifier(MaxLengthForLinks, /* useLinkDecorator */ undefined, refilterMessages);\n\n    this._consoleMessages = [];\n    this._viewMessageSymbol = Symbol('viewMessage');\n\n    this._consoleHistorySetting = Common.Settings.Settings.instance().createLocalSetting('consoleHistory', []);\n\n    this._prompt = new ConsolePrompt();\n    this._prompt.show(this._promptElement);\n    this._prompt.element.addEventListener('keydown', this._promptKeyDown.bind(this), true);\n    this._prompt.addEventListener(ConsolePromptEvents.TextChanged, this._promptTextChanged, this);\n\n    this._messagesElement.addEventListener('keydown', this._messagesKeyDown.bind(this), false);\n    this._prompt.element.addEventListener('focusin', () => {\n      if (this._isScrolledToBottom()) {\n        this._viewport.setStickToBottom(true);\n      }\n    });\n\n    this._consoleHistoryAutocompleteSetting.addChangeListener(this._consoleHistoryAutocompleteChanged, this);\n\n    const historyData = this._consoleHistorySetting.get();\n    this._prompt.history().setHistoryData(historyData);\n    this._consoleHistoryAutocompleteChanged();\n\n    this._updateFilterStatus();\n    this._timestampsSetting.addChangeListener(this._consoleTimestampsSettingChanged, this);\n\n    this._registerWithMessageSink();\n\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.RuntimeModel.ExecutionContext, this._executionContextChanged, this);\n\n    this._messagesElement.addEventListener(\n        'mousedown', (event: Event) => this._updateStickToBottomOnPointerDown((event as MouseEvent).button === 2),\n        false);\n    this._messagesElement.addEventListener('mouseup', this._updateStickToBottomOnPointerUp.bind(this), false);\n    this._messagesElement.addEventListener('mouseleave', this._updateStickToBottomOnPointerUp.bind(this), false);\n    this._messagesElement.addEventListener('wheel', this._updateStickToBottomOnWheel.bind(this), false);\n    this._messagesElement.addEventListener(\n        'touchstart', this._updateStickToBottomOnPointerDown.bind(this, false), false);\n    this._messagesElement.addEventListener('touchend', this._updateStickToBottomOnPointerUp.bind(this), false);\n    this._messagesElement.addEventListener('touchcancel', this._updateStickToBottomOnPointerUp.bind(this), false);\n\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.ConsoleCleared, this._consoleCleared, this);\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.MessageAdded, this._onConsoleMessageAdded, this);\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.MessageUpdated, this._onConsoleMessageUpdated, this);\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.CommandEvaluated, this._commandEvaluated, this);\n    SDK.ConsoleModel.ConsoleModel.instance().messages().forEach(this._addConsoleMessage, this);\n\n    const issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.issueToolbarThrottle = new Common.Throttler.Throttler(100);\n    issuesManager.addEventListener(\n        IssuesManager.IssuesManager.Events.IssuesCountUpdated,\n        () => this.issueToolbarThrottle.schedule(async () => this._updateIssuesToolbarItem()), this);\n  }\n\n  static instance(): ConsoleView {\n    if (!consoleViewInstance) {\n      consoleViewInstance = new ConsoleView();\n    }\n    return consoleViewInstance;\n  }\n\n  static clearConsole(): void {\n    SDK.ConsoleModel.ConsoleModel.instance().requestClearMessages();\n  }\n\n  _onFilterChanged(): void {\n    this._filter._currentFilter.levelsMask =\n        this._isSidebarOpen ? ConsoleFilter.allLevelsFilterValue() : this._filter._messageLevelFiltersSetting.get();\n    this._cancelBuildHiddenCache();\n    if (this._immediatelyFilterMessagesForTest) {\n      for (const viewMessage of this._consoleMessages) {\n        this._computeShouldMessageBeVisible(viewMessage);\n      }\n      this._updateMessageList();\n      return;\n    }\n    this._buildHiddenCache(0, this._consoleMessages.slice());\n  }\n\n  _setImmediatelyFilterMessagesForTest(): void {\n    this._immediatelyFilterMessagesForTest = true;\n  }\n\n  searchableView(): UI.SearchableView.SearchableView {\n    return this._searchableView;\n  }\n\n  _clearHistory(): void {\n    this._consoleHistorySetting.set([]);\n    this._prompt.history().setHistoryData([]);\n  }\n\n  _consoleHistoryAutocompleteChanged(): void {\n    this._prompt.setAddCompletionsFromHistory(this._consoleHistoryAutocompleteSetting.get());\n  }\n\n  itemCount(): number {\n    return this._visibleViewMessages.length;\n  }\n\n  itemElement(index: number): ConsoleViewportElement|null {\n    return this._visibleViewMessages[index];\n  }\n\n  fastHeight(index: number): number {\n    return this._visibleViewMessages[index].fastHeight();\n  }\n\n  minimumRowHeight(): number {\n    return 16;\n  }\n\n  _registerWithMessageSink(): void {\n    Common.Console.Console.instance().messages().forEach(this._addSinkMessage, this);\n    Common.Console.Console.instance().addEventListener(Common.Console.Events.MessageAdded, messageAdded, this);\n\n    function messageAdded(this: ConsoleView, event: Common.EventTarget.EventTargetEvent): void {\n      this._addSinkMessage((event.data as Common.Console.Message));\n    }\n  }\n\n  _addSinkMessage(message: Common.Console.Message): void {\n    let level: Protocol.Log.LogEntryLevel = Protocol.Log.LogEntryLevel.Verbose;\n    switch (message.level) {\n      case Common.Console.MessageLevel.Info:\n        level = Protocol.Log.LogEntryLevel.Info;\n        break;\n      case Common.Console.MessageLevel.Error:\n        level = Protocol.Log.LogEntryLevel.Error;\n        break;\n      case Common.Console.MessageLevel.Warning:\n        level = Protocol.Log.LogEntryLevel.Warning;\n        break;\n    }\n\n    const consoleMessage = new SDK.ConsoleModel.ConsoleMessage(\n        null, Protocol.Log.LogEntrySource.Other, level, message.text, SDK.ConsoleModel.FrontendMessageType.System,\n        undefined, undefined, undefined, undefined, undefined, message.timestamp);\n    this._addConsoleMessage(consoleMessage);\n  }\n\n  _consoleTimestampsSettingChanged(): void {\n    this._updateMessageList();\n    this._consoleMessages.forEach(viewMessage => viewMessage.updateTimestamp());\n    this._groupableMessageTitle.forEach(viewMessage => viewMessage.updateTimestamp());\n  }\n\n  _executionContextChanged(): void {\n    this._prompt.clearAutocomplete();\n  }\n\n  willHide(): void {\n    this._hidePromptSuggestBox();\n  }\n\n  wasShown(): void {\n    this._updateIssuesToolbarItem();\n    this._viewport.refresh();\n  }\n\n  focus(): void {\n    if (this._viewport.hasVirtualSelection()) {\n      (this._viewport.contentElement() as HTMLElement).focus();\n    } else {\n      this._focusPrompt();\n    }\n  }\n\n  _focusPrompt(): void {\n    if (!this._prompt.hasFocus()) {\n      const oldStickToBottom = this._viewport.stickToBottom();\n      const oldScrollTop = this._viewport.element.scrollTop;\n      this._prompt.focus();\n      this._viewport.setStickToBottom(oldStickToBottom);\n      this._viewport.element.scrollTop = oldScrollTop;\n    }\n  }\n\n  restoreScrollPositions(): void {\n    if (this._viewport.stickToBottom()) {\n      this._immediatelyScrollToBottom();\n    } else {\n      super.restoreScrollPositions();\n    }\n  }\n\n  onResize(): void {\n    this._scheduleViewportRefresh();\n    this._hidePromptSuggestBox();\n    if (this._viewport.stickToBottom()) {\n      this._immediatelyScrollToBottom();\n    }\n    for (let i = 0; i < this._visibleViewMessages.length; ++i) {\n      this._visibleViewMessages[i].onResize();\n    }\n  }\n\n  _hidePromptSuggestBox(): void {\n    this._prompt.clearAutocomplete();\n  }\n\n  async _invalidateViewport(): Promise<void> {\n    this._updateIssuesToolbarItem();\n    if (this._muteViewportUpdates) {\n      this._maybeDirtyWhileMuted = true;\n      return;\n    }\n    if (this._needsFullUpdate) {\n      this._updateMessageList();\n      delete this._needsFullUpdate;\n    } else {\n      this._viewport.invalidate();\n    }\n    return;\n  }\n\n  _updateIssuesToolbarItem(): void {\n    const manager = IssuesManager.IssuesManager.IssuesManager.instance();\n    const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(manager);\n    const issuesTitleGotoIssues = manager.numberOfIssues() === 0 ?\n        i18nString(UIStrings.issueToolbarClickToGoToTheIssuesTab) :\n        i18nString(UIStrings.issueToolbarClickToView, {issueEnumeration});\n    const issuesTitleGeneral = i18nString(UIStrings.issueToolbarTooltipGeneral);\n    const issuesTitle = `${issuesTitleGeneral} ${issuesTitleGotoIssues}`;\n    UI.Tooltip.Tooltip.install(this._issueCounter, issuesTitle);\n    this._issueCounter.data = {\n      ...this._issueCounter.data,\n      leadingText: i18nString(UIStrings.issuesWithColon, {n: manager.numberOfIssues()}),\n      accessibleName: issuesTitle,\n    };\n  }\n\n  _scheduleViewportRefresh(): void {\n    if (this._muteViewportUpdates) {\n      this._maybeDirtyWhileMuted = true;\n      this._scheduleViewportRefreshForTest(true);\n      return;\n    }\n    this._scheduleViewportRefreshForTest(false);\n\n    this._scheduledRefreshPromiseForTest = this._viewportThrottler.schedule(this._invalidateViewport.bind(this));\n  }\n\n  _scheduleViewportRefreshForTest(_muted: boolean): void {\n    // This functions is sniffed in tests.\n  }\n\n  _immediatelyScrollToBottom(): void {\n    // This will scroll viewport and trigger its refresh.\n    this._viewport.setStickToBottom(true);\n    this._promptElement.scrollIntoView(true);\n  }\n\n  _updateFilterStatus(): void {\n    if (this._hiddenByFilterCount === this._lastShownHiddenByFilterCount) {\n      return;\n    }\n    this._filterStatusText.setText(i18nString(UIStrings.sHidden, {n: this._hiddenByFilterCount}));\n    this._filterStatusText.setVisible(Boolean(this._hiddenByFilterCount));\n    this._lastShownHiddenByFilterCount = this._hiddenByFilterCount;\n  }\n\n  _onConsoleMessageAdded(event: Common.EventTarget.EventTargetEvent): void {\n    const message = (event.data as SDK.ConsoleModel.ConsoleMessage);\n    this._addConsoleMessage(message);\n  }\n\n  _addConsoleMessage(message: SDK.ConsoleModel.ConsoleMessage): void {\n    const viewMessage = this._createViewMessage(message);\n    consoleMessageToViewMessage.set(message, viewMessage);\n    if (message.type === SDK.ConsoleModel.FrontendMessageType.Command ||\n        message.type === SDK.ConsoleModel.FrontendMessageType.Result) {\n      const lastMessage = this._consoleMessages[this._consoleMessages.length - 1];\n      const newTimestamp = lastMessage && messagesSortedBySymbol.get(lastMessage) || 0;\n      messagesSortedBySymbol.set(viewMessage, newTimestamp);\n    } else {\n      messagesSortedBySymbol.set(viewMessage, viewMessage.consoleMessage().timestamp);\n    }\n\n    let insertAt;\n    if (!this._consoleMessages.length ||\n        timeComparator(viewMessage, this._consoleMessages[this._consoleMessages.length - 1]) > 0) {\n      insertAt = this._consoleMessages.length;\n    } else {\n      insertAt = Platform.ArrayUtilities.upperBound(this._consoleMessages, viewMessage, timeComparator);\n    }\n    const insertedInMiddle = insertAt < this._consoleMessages.length;\n    this._consoleMessages.splice(insertAt, 0, viewMessage);\n\n    this._filter.onMessageAdded(message);\n    if (this._isSidebarOpen) {\n      this._sidebar.onMessageAdded(viewMessage);\n    } else {\n      this.pendingSidebarMessages.push(viewMessage);\n    }\n\n    // If we already have similar messages, go slow path.\n    let shouldGoIntoGroup = false;\n    const shouldGroupSimilar = this._groupSimilarSetting.get();\n    if (message.isGroupable()) {\n      const groupKey = viewMessage.groupKey();\n      shouldGoIntoGroup = shouldGroupSimilar && this._groupableMessages.has(groupKey);\n      let list = this._groupableMessages.get(groupKey);\n      if (!list) {\n        list = [];\n        this._groupableMessages.set(groupKey, list);\n      }\n      list.push(viewMessage);\n    }\n\n    this._computeShouldMessageBeVisible(viewMessage);\n    if (!shouldGoIntoGroup && !insertedInMiddle) {\n      this._appendMessageToEnd(\n          viewMessage,\n          !shouldGroupSimilar /* crbug.com/1082963: prevent collapse of same messages when \"Group similar\" is false */);\n      this._updateFilterStatus();\n      this._searchableView.updateSearchMatchesCount(this._regexMatchRanges.length);\n    } else {\n      this._needsFullUpdate = true;\n    }\n\n    this._scheduleViewportRefresh();\n    this._consoleMessageAddedForTest(viewMessage);\n\n    function timeComparator(viewMessage1: ConsoleViewMessage, viewMessage2: ConsoleViewMessage): number {\n      return (messagesSortedBySymbol.get(viewMessage1) || 0) - (messagesSortedBySymbol.get(viewMessage2) || 0);\n    }\n  }\n\n  _onConsoleMessageUpdated(event: Common.EventTarget.EventTargetEvent): void {\n    const message = (event.data as SDK.ConsoleModel.ConsoleMessage);\n    const viewMessage = consoleMessageToViewMessage.get(message);\n    if (viewMessage) {\n      viewMessage.updateMessageElement();\n      this._computeShouldMessageBeVisible(viewMessage);\n      this._updateMessageList();\n    }\n  }\n\n  _consoleMessageAddedForTest(_viewMessage: ConsoleViewMessage): void {\n  }\n\n  _shouldMessageBeVisible(viewMessage: ConsoleViewMessage): boolean {\n    return !this._shouldBeHiddenCache.has(viewMessage);\n  }\n\n  _computeShouldMessageBeVisible(viewMessage: ConsoleViewMessage): void {\n    if (this._filter.shouldBeVisible(viewMessage) &&\n        (!this._isSidebarOpen || this._sidebar.shouldBeVisible(viewMessage))) {\n      this._shouldBeHiddenCache.delete(viewMessage);\n    } else {\n      this._shouldBeHiddenCache.add(viewMessage);\n    }\n  }\n\n  _appendMessageToEnd(viewMessage: ConsoleViewMessage, preventCollapse?: boolean): void {\n    if (!this._shouldMessageBeVisible(viewMessage)) {\n      this._hiddenByFilterCount++;\n      return;\n    }\n\n    if (!preventCollapse &&\n        this._tryToCollapseMessages(viewMessage, this._visibleViewMessages[this._visibleViewMessages.length - 1])) {\n      return;\n    }\n\n    const lastMessage = this._visibleViewMessages[this._visibleViewMessages.length - 1];\n    if (viewMessage.consoleMessage().type === Protocol.Runtime.ConsoleAPICalledEventType.EndGroup) {\n      if (lastMessage && !this._currentGroup.messagesHidden()) {\n        lastMessage.incrementCloseGroupDecorationCount();\n      }\n      this._currentGroup = this._currentGroup.parentGroup() || this._currentGroup;\n      return;\n    }\n    if (!this._currentGroup.messagesHidden()) {\n      const originatingMessage = viewMessage.consoleMessage().originatingMessage();\n      if (lastMessage && originatingMessage && lastMessage.consoleMessage() === originatingMessage) {\n        viewMessage.toMessageElement().classList.add('console-adjacent-user-command-result');\n      }\n\n      this._visibleViewMessages.push(viewMessage);\n      this._searchMessage(this._visibleViewMessages.length - 1);\n    }\n\n    if (viewMessage.consoleMessage().isGroupStartMessage()) {\n      this._currentGroup = new ConsoleGroup(this._currentGroup, (viewMessage as ConsoleGroupViewMessage));\n    }\n\n    this._messageAppendedForTests();\n  }\n\n  _messageAppendedForTests(): void {\n    // This method is sniffed in tests.\n  }\n\n  _createViewMessage(message: SDK.ConsoleModel.ConsoleMessage): ConsoleViewMessage {\n    const nestingLevel = this._currentGroup.nestingLevel();\n    switch (message.type) {\n      case SDK.ConsoleModel.FrontendMessageType.Command:\n        return new ConsoleCommand(message, this._linkifier, nestingLevel, this._onMessageResizedBound);\n      case SDK.ConsoleModel.FrontendMessageType.Result:\n        return new ConsoleCommandResult(message, this._linkifier, nestingLevel, this._onMessageResizedBound);\n      case Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed:\n      case Protocol.Runtime.ConsoleAPICalledEventType.StartGroup:\n        return new ConsoleGroupViewMessage(\n            message, this._linkifier, nestingLevel, this._updateMessageList.bind(this), this._onMessageResizedBound);\n      case Protocol.Runtime.ConsoleAPICalledEventType.Table:\n        return new ConsoleTableMessageView(message, this._linkifier, nestingLevel, this._onMessageResizedBound);\n      default:\n        return new ConsoleViewMessage(message, this._linkifier, nestingLevel, this._onMessageResizedBound);\n    }\n  }\n\n  async _onMessageResized(event: Common.EventTarget.EventTargetEvent): Promise<void> {\n    const treeElement = (event.data as UI.TreeOutline.TreeElement);\n    if (this._pendingBatchResize || !treeElement.treeOutline) {\n      return;\n    }\n    this._pendingBatchResize = true;\n    await Promise.resolve();\n    const treeOutlineElement = treeElement.treeOutline.element;\n    this._viewport.setStickToBottom(this._isScrolledToBottom());\n    // Scroll, in case mutations moved the element below the visible area.\n    if (treeOutlineElement.offsetHeight <= this._messagesElement.offsetHeight) {\n      treeOutlineElement.scrollIntoViewIfNeeded();\n    }\n\n    this._pendingBatchResize = false;\n  }\n\n  _consoleCleared(): void {\n    const hadFocus = this._viewport.element.hasFocus();\n    this._cancelBuildHiddenCache();\n    this._currentMatchRangeIndex = -1;\n    this._consoleMessages = [];\n    this._groupableMessages.clear();\n    this._groupableMessageTitle.clear();\n    this._sidebar.clear();\n    this._updateMessageList();\n    this._hidePromptSuggestBox();\n    this._viewport.setStickToBottom(true);\n    this._linkifier.reset();\n    this._filter.clear();\n    if (hadFocus) {\n      this._prompt.focus();\n    }\n    UI.ARIAUtils.alert(i18nString(UIStrings.consoleCleared));\n  }\n\n  _handleContextMenuEvent(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const eventTarget = (event.target as Node);\n    if (eventTarget.isSelfOrDescendant(this._promptElement)) {\n      contextMenu.show();\n      return;\n    }\n\n    const sourceElement = eventTarget.enclosingNodeOrSelfWithClass('console-message-wrapper');\n    const consoleViewMessage = sourceElement && getMessageForElement(sourceElement);\n    const consoleMessage = consoleViewMessage ? consoleViewMessage.consoleMessage() : null;\n\n    if (consoleMessage && consoleMessage.url) {\n      const menuTitle = i18nString(\n          UIStrings.hideMessagesFromS, {PH1: new Common.ParsedURL.ParsedURL(consoleMessage.url).displayName});\n      contextMenu.headerSection().appendItem(\n          menuTitle, this._filter.addMessageURLFilter.bind(this._filter, consoleMessage.url));\n    }\n\n    contextMenu.defaultSection().appendAction('console.clear');\n    contextMenu.defaultSection().appendAction('console.clear.history');\n    contextMenu.saveSection().appendItem(i18nString(UIStrings.saveAs), this._saveConsole.bind(this));\n    if (this.element.hasSelection()) {\n      contextMenu.clipboardSection().appendItem(\n          i18nString(UIStrings.copyVisibleStyledSelection), this._viewport.copyWithStyles.bind(this._viewport));\n    }\n\n    if (consoleMessage) {\n      const request = Logs.NetworkLog.NetworkLog.requestForConsoleMessage(consoleMessage);\n      if (request && SDK.NetworkManager.NetworkManager.canReplayRequest(request)) {\n        contextMenu.debugSection().appendItem(\n            i18nString(UIStrings.replayXhr), SDK.NetworkManager.NetworkManager.replayRequest.bind(null, request));\n      }\n    }\n\n    contextMenu.show();\n  }\n\n  async _saveConsole(): Promise<void> {\n    const url = (SDK.TargetManager.TargetManager.instance().mainTarget() as SDK.Target.Target).inspectedURL();\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    const filename = Platform.StringUtilities.sprintf('%s-%d.log', parsedURL ? parsedURL.host : 'console', Date.now());\n    const stream = new Bindings.FileUtils.FileOutputStream();\n\n    const progressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n    progressIndicator.setTitle(i18nString(UIStrings.writingFile));\n    progressIndicator.setTotalWork(this.itemCount());\n\n    const chunkSize = 350;\n\n    if (!await stream.open(filename)) {\n      return;\n    }\n    this._progressToolbarItem.element.appendChild(progressIndicator.element);\n\n    let messageIndex = 0;\n    while (messageIndex < this.itemCount() && !progressIndicator.isCanceled()) {\n      const messageContents = [];\n      let i;\n      for (i = 0; i < chunkSize && i + messageIndex < this.itemCount(); ++i) {\n        const message = (this.itemElement(messageIndex + i) as ConsoleViewMessage);\n        messageContents.push(message.toExportString());\n      }\n      messageIndex += i;\n      await stream.write(messageContents.join('\\n') + '\\n');\n      progressIndicator.setWorked(messageIndex);\n    }\n\n    stream.close();\n    progressIndicator.done();\n  }\n\n  _tryToCollapseMessages(viewMessage: ConsoleViewMessage, lastMessage?: ConsoleViewMessage): boolean {\n    const timestampsShown = this._timestampsSetting.get();\n    if (!timestampsShown && lastMessage && !viewMessage.consoleMessage().isGroupMessage() &&\n        viewMessage.consoleMessage().type !== SDK.ConsoleModel.FrontendMessageType.Command &&\n        viewMessage.consoleMessage().type !== SDK.ConsoleModel.FrontendMessageType.Result &&\n        viewMessage.consoleMessage().isEqual(lastMessage.consoleMessage())) {\n      lastMessage.incrementRepeatCount();\n      if (viewMessage.isLastInSimilarGroup()) {\n        lastMessage.setInSimilarGroup(true, true);\n      }\n      return true;\n    }\n\n    return false;\n  }\n\n  _buildHiddenCache(startIndex: number, viewMessages: ConsoleViewMessage[]): void {\n    const startTime = Date.now();\n    let i;\n    for (i = startIndex; i < viewMessages.length; ++i) {\n      this._computeShouldMessageBeVisible(viewMessages[i]);\n      if (i % 10 === 0 && Date.now() - startTime > 12) {\n        break;\n      }\n    }\n\n    if (i === viewMessages.length) {\n      this._updateMessageList();\n      return;\n    }\n    this._buildHiddenCacheTimeout =\n        this.element.window().requestAnimationFrame(this._buildHiddenCache.bind(this, i, viewMessages));\n  }\n\n  _cancelBuildHiddenCache(): void {\n    this._shouldBeHiddenCache.clear();\n    if (this._buildHiddenCacheTimeout) {\n      this.element.window().cancelAnimationFrame(this._buildHiddenCacheTimeout);\n      delete this._buildHiddenCacheTimeout;\n    }\n  }\n\n  _updateMessageList(): void {\n    this._topGroup = ConsoleGroup.createTopGroup();\n    this._currentGroup = this._topGroup;\n    this._regexMatchRanges = [];\n    this._hiddenByFilterCount = 0;\n    for (const visibleViewMessage of this._visibleViewMessages) {\n      visibleViewMessage.resetCloseGroupDecorationCount();\n      visibleViewMessage.resetIncrementRepeatCount();\n    }\n    this._visibleViewMessages = [];\n    if (this._groupSimilarSetting.get()) {\n      this._addGroupableMessagesToEnd();\n    } else {\n      for (const consoleMessage of this._consoleMessages) {\n        consoleMessage.setInSimilarGroup(false);\n        this._appendMessageToEnd(\n            consoleMessage,\n            true /* crbug.com/1082963: prevent collapse of same messages when \"Group similar\" is false */);\n      }\n    }\n    this._updateFilterStatus();\n    this._searchableView.updateSearchMatchesCount(this._regexMatchRanges.length);\n    this._viewport.invalidate();\n  }\n\n  _addGroupableMessagesToEnd(): void {\n    const alreadyAdded = new Set<SDK.ConsoleModel.ConsoleMessage>();\n    const processedGroupKeys = new Set<string>();\n    for (const viewMessage of this._consoleMessages) {\n      const message = viewMessage.consoleMessage();\n      if (alreadyAdded.has(message)) {\n        continue;\n      }\n\n      if (!message.isGroupable()) {\n        this._appendMessageToEnd(viewMessage);\n        alreadyAdded.add(message);\n        continue;\n      }\n\n      const key = viewMessage.groupKey();\n      const viewMessagesInGroup = this._groupableMessages.get(key);\n      if (!viewMessagesInGroup || viewMessagesInGroup.length < 5) {\n        viewMessage.setInSimilarGroup(false);\n        this._appendMessageToEnd(viewMessage);\n        alreadyAdded.add(message);\n        continue;\n      }\n\n      if (processedGroupKeys.has(key)) {\n        continue;\n      }\n\n      if (!viewMessagesInGroup.find(x => this._shouldMessageBeVisible(x))) {\n        // Optimize for speed.\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n        // @ts-expect-error\n        Platform.SetUtilities.addAll(alreadyAdded, viewMessagesInGroup);\n        processedGroupKeys.add(key);\n        continue;\n      }\n\n      // Create artificial group start and end messages.\n      let startGroupViewMessage = this._groupableMessageTitle.get(key);\n      if (!startGroupViewMessage) {\n        const startGroupMessage = new SDK.ConsoleModel.ConsoleMessage(\n            null, message.source, message.level, viewMessage.groupTitle(),\n            Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed);\n        startGroupViewMessage = this._createViewMessage(startGroupMessage);\n        this._groupableMessageTitle.set(key, startGroupViewMessage);\n      }\n      startGroupViewMessage.setRepeatCount(viewMessagesInGroup.length);\n      this._appendMessageToEnd(startGroupViewMessage);\n\n      for (const viewMessageInGroup of viewMessagesInGroup) {\n        viewMessageInGroup.setInSimilarGroup(\n            true, viewMessagesInGroup[viewMessagesInGroup.length - 1] === viewMessageInGroup);\n        this._appendMessageToEnd(viewMessageInGroup, true);\n        alreadyAdded.add(viewMessageInGroup.consoleMessage());\n      }\n\n      const endGroupMessage = new SDK.ConsoleModel.ConsoleMessage(\n          null, message.source, message.level, message.messageText,\n          Protocol.Runtime.ConsoleAPICalledEventType.EndGroup);\n      this._appendMessageToEnd(this._createViewMessage(endGroupMessage));\n    }\n  }\n\n  _messagesClicked(event: Event): void {\n    const target = (event.target as Node | null);\n    // Do not focus prompt if messages have selection.\n    if (!this._messagesElement.hasSelection()) {\n      const clickedOutsideMessageList =\n          target === this._messagesElement || this._prompt.belowEditorElement().isSelfOrAncestor(target);\n      if (clickedOutsideMessageList) {\n        this._prompt.moveCaretToEndOfPrompt();\n        this._focusPrompt();\n      }\n    }\n  }\n\n  _messagesKeyDown(event: Event): void {\n    const keyEvent = (event as KeyboardEvent);\n    const hasActionModifier = keyEvent.ctrlKey || keyEvent.altKey || keyEvent.metaKey;\n    if (hasActionModifier || keyEvent.key.length !== 1 || UI.UIUtils.isEditing() ||\n        this._messagesElement.hasSelection()) {\n      return;\n    }\n    this._prompt.moveCaretToEndOfPrompt();\n    this._focusPrompt();\n  }\n\n  _messagesPasted(_event: Event): void {\n    if (UI.UIUtils.isEditing()) {\n      return;\n    }\n    this._prompt.focus();\n  }\n\n  _registerShortcuts(): void {\n    this._shortcuts.set(\n        UI.KeyboardShortcut.KeyboardShortcut.makeKey('u', UI.KeyboardShortcut.Modifiers.Ctrl),\n        this._clearPromptBackwards.bind(this));\n  }\n\n  _clearPromptBackwards(): void {\n    this._prompt.setText('');\n  }\n\n  _promptKeyDown(event: Event): void {\n    const keyboardEvent = (event as KeyboardEvent);\n    if (keyboardEvent.key === 'PageUp') {\n      this._updateStickToBottomOnWheel();\n      return;\n    }\n\n    const shortcut = UI.KeyboardShortcut.KeyboardShortcut.makeKeyFromEvent(keyboardEvent);\n    const handler = this._shortcuts.get(shortcut);\n    if (handler) {\n      handler();\n      keyboardEvent.preventDefault();\n    }\n  }\n\n  _printResult(\n      result: SDK.RemoteObject.RemoteObject|null, originatingConsoleMessage: SDK.ConsoleModel.ConsoleMessage,\n      exceptionDetails?: Protocol.Runtime.ExceptionDetails): void {\n    if (!result) {\n      return;\n    }\n\n    const level = Boolean(exceptionDetails) ? Protocol.Log.LogEntryLevel.Error : Protocol.Log.LogEntryLevel.Info;\n    let message;\n    if (!exceptionDetails) {\n      message = new SDK.ConsoleModel.ConsoleMessage(\n          result.runtimeModel(), Protocol.Log.LogEntrySource.Javascript, level, '',\n          SDK.ConsoleModel.FrontendMessageType.Result, undefined, undefined, undefined, [result]);\n    } else {\n      message = SDK.ConsoleModel.ConsoleMessage.fromException(\n          result.runtimeModel(), exceptionDetails, SDK.ConsoleModel.FrontendMessageType.Result, undefined, undefined);\n    }\n    message.setOriginatingMessage(originatingConsoleMessage);\n    SDK.ConsoleModel.ConsoleModel.instance().addMessage(message);\n  }\n\n  _commandEvaluated(event: Common.EventTarget.EventTargetEvent): void {\n    const data = (event.data as {\n      result: SDK.RemoteObject.RemoteObject | null,\n      commandMessage: SDK.ConsoleModel.ConsoleMessage,\n      exceptionDetails?: Protocol.Runtime.ExceptionDetails,\n    });\n    this._prompt.history().pushHistoryItem(data.commandMessage.messageText);\n    this._consoleHistorySetting.set(this._prompt.history().historyData().slice(-persistedHistorySize));\n    this._printResult(data.result, data.commandMessage, data.exceptionDetails);\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this._messagesElement];\n  }\n\n  searchCanceled(): void {\n    this._cleanupAfterSearch();\n    for (const message of this._visibleViewMessages) {\n      message.setSearchRegex(null);\n    }\n    this._currentMatchRangeIndex = -1;\n    this._regexMatchRanges = [];\n    this._searchRegex = null;\n    this._viewport.refresh();\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, shouldJump: boolean, jumpBackwards?: boolean): void {\n    this.searchCanceled();\n    this._searchableView.updateSearchMatchesCount(0);\n\n    this._searchRegex = searchConfig.toSearchRegex(true);\n\n    this._regexMatchRanges = [];\n    this._currentMatchRangeIndex = -1;\n\n    if (shouldJump) {\n      this._searchShouldJumpBackwards = Boolean(jumpBackwards);\n    }\n\n    this._searchProgressIndicator = new UI.ProgressIndicator.ProgressIndicator();\n    this._searchProgressIndicator.setTitle(i18nString(UIStrings.searching));\n    this._searchProgressIndicator.setTotalWork(this._visibleViewMessages.length);\n    this._progressToolbarItem.element.appendChild(this._searchProgressIndicator.element);\n\n    this._innerSearch(0);\n  }\n\n  _cleanupAfterSearch(): void {\n    delete this._searchShouldJumpBackwards;\n    if (this._innerSearchTimeoutId) {\n      clearTimeout(this._innerSearchTimeoutId);\n      delete this._innerSearchTimeoutId;\n    }\n    if (this._searchProgressIndicator) {\n      this._searchProgressIndicator.done();\n      delete this._searchProgressIndicator;\n    }\n  }\n\n  _searchFinishedForTests(): void {\n    // This method is sniffed in tests.\n  }\n\n  _innerSearch(index: number): void {\n    delete this._innerSearchTimeoutId;\n    if (this._searchProgressIndicator && this._searchProgressIndicator.isCanceled()) {\n      this._cleanupAfterSearch();\n      return;\n    }\n\n    const startTime = Date.now();\n    for (; index < this._visibleViewMessages.length && Date.now() - startTime < 100; ++index) {\n      this._searchMessage(index);\n    }\n\n    this._searchableView.updateSearchMatchesCount(this._regexMatchRanges.length);\n    if (typeof this._searchShouldJumpBackwards !== 'undefined' && this._regexMatchRanges.length) {\n      this._jumpToMatch(this._searchShouldJumpBackwards ? -1 : 0);\n      delete this._searchShouldJumpBackwards;\n    }\n\n    if (index === this._visibleViewMessages.length) {\n      this._cleanupAfterSearch();\n      setTimeout(this._searchFinishedForTests.bind(this), 0);\n      return;\n    }\n\n    this._innerSearchTimeoutId = window.setTimeout(this._innerSearch.bind(this, index), 100);\n    if (this._searchProgressIndicator) {\n      this._searchProgressIndicator.setWorked(index);\n    }\n  }\n\n  _searchMessage(index: number): void {\n    const message = this._visibleViewMessages[index];\n    message.setSearchRegex(this._searchRegex);\n    for (let i = 0; i < message.searchCount(); ++i) {\n      this._regexMatchRanges.push({messageIndex: index, matchIndex: i});\n    }\n  }\n\n  jumpToNextSearchResult(): void {\n    this._jumpToMatch(this._currentMatchRangeIndex + 1);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    this._jumpToMatch(this._currentMatchRangeIndex - 1);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n\n  _jumpToMatch(index: number): void {\n    if (!this._regexMatchRanges.length) {\n      return;\n    }\n\n    let matchRange;\n    if (this._currentMatchRangeIndex >= 0) {\n      matchRange = this._regexMatchRanges[this._currentMatchRangeIndex];\n      const message = this._visibleViewMessages[matchRange.messageIndex];\n      message.searchHighlightNode(matchRange.matchIndex)\n          .classList.remove(UI.UIUtils.highlightedCurrentSearchResultClassName);\n    }\n\n    index = Platform.NumberUtilities.mod(index, this._regexMatchRanges.length);\n    this._currentMatchRangeIndex = index;\n    this._searchableView.updateCurrentMatchIndex(index);\n    matchRange = this._regexMatchRanges[index];\n    const message = this._visibleViewMessages[matchRange.messageIndex];\n    const highlightNode = message.searchHighlightNode(matchRange.matchIndex);\n    highlightNode.classList.add(UI.UIUtils.highlightedCurrentSearchResultClassName);\n    this._viewport.scrollItemIntoView(matchRange.messageIndex);\n    highlightNode.scrollIntoViewIfNeeded();\n  }\n\n  _updateStickToBottomOnPointerDown(isRightClick?: boolean): void {\n    this._muteViewportUpdates = !isRightClick;\n    this._viewport.setStickToBottom(false);\n    if (this._waitForScrollTimeout) {\n      clearTimeout(this._waitForScrollTimeout);\n      delete this._waitForScrollTimeout;\n    }\n  }\n\n  _updateStickToBottomOnPointerUp(): void {\n    if (!this._muteViewportUpdates) {\n      return;\n    }\n\n    // Delay querying isScrolledToBottom to give time for smooth scroll\n    // events to arrive. The value for the longest timeout duration is\n    // retrieved from crbug.com/575409.\n    this._waitForScrollTimeout = window.setTimeout(updateViewportState.bind(this), 200);\n\n    function updateViewportState(this: ConsoleView): void {\n      this._muteViewportUpdates = false;\n      if (this.isShowing()) {\n        this._viewport.setStickToBottom(this._isScrolledToBottom());\n      }\n      if (this._maybeDirtyWhileMuted) {\n        this._scheduleViewportRefresh();\n        delete this._maybeDirtyWhileMuted;\n      }\n      delete this._waitForScrollTimeout;\n      this._updateViewportStickinessForTest();\n    }\n  }\n\n  _updateViewportStickinessForTest(): void {\n    // This method is sniffed in tests.\n  }\n\n  _updateStickToBottomOnWheel(): void {\n    this._updateStickToBottomOnPointerDown();\n    this._updateStickToBottomOnPointerUp();\n  }\n\n  _promptTextChanged(): void {\n    const oldStickToBottom = this._viewport.stickToBottom();\n    const willStickToBottom = this._isScrolledToBottom();\n    this._viewport.setStickToBottom(willStickToBottom);\n    if (willStickToBottom && !oldStickToBottom) {\n      this._scheduleViewportRefresh();\n    }\n    this._promptTextChangedForTest();\n  }\n\n  _promptTextChangedForTest(): void {\n    // This method is sniffed in tests.\n  }\n\n  _isScrolledToBottom(): boolean {\n    const distanceToPromptEditorBottom = this._messagesElement.scrollHeight - this._messagesElement.scrollTop -\n        this._messagesElement.clientHeight - (this._prompt.belowEditorElement() as HTMLElement).offsetHeight;\n    return distanceToPromptEditorBottom <= 2;\n  }\n}\n\n// @ts-ignore exported for Tests.js\nglobalThis.Console = globalThis.Console || {};\n// @ts-ignore exported for Tests.js\nglobalThis.Console.ConsoleView = ConsoleView;\n\nconst persistedHistorySize = 300;\n\nexport class ConsoleViewFilter {\n  _filterChanged: () => void;\n  _messageLevelFiltersSetting: Common.Settings.Setting<LevelsMask>;\n  _hideNetworkMessagesSetting: Common.Settings.Setting<boolean>;\n  _filterByExecutionContextSetting: Common.Settings.Setting<boolean>;\n  _suggestionBuilder: UI.FilterSuggestionBuilder.FilterSuggestionBuilder;\n  _textFilterUI: UI.Toolbar.ToolbarInput;\n  _textFilterSetting: Common.Settings.Setting<string>;\n  _filterParser: TextUtils.TextUtils.FilterParser;\n  _currentFilter: ConsoleFilter;\n  _levelLabels: Map<Protocol.Log.LogEntryLevel, string>;\n  _levelMenuButton: UI.Toolbar.ToolbarButton;\n\n  constructor(filterChangedCallback: () => void) {\n    this._filterChanged = filterChangedCallback;\n\n    this._messageLevelFiltersSetting = ConsoleViewFilter.levelFilterSetting();\n    this._hideNetworkMessagesSetting = Common.Settings.Settings.instance().moduleSetting('hideNetworkMessages');\n    this._filterByExecutionContextSetting =\n        Common.Settings.Settings.instance().moduleSetting('selectedContextFilterEnabled');\n\n    this._messageLevelFiltersSetting.addChangeListener(this._onFilterChanged.bind(this));\n    this._hideNetworkMessagesSetting.addChangeListener(this._onFilterChanged.bind(this));\n    this._filterByExecutionContextSetting.addChangeListener(this._onFilterChanged.bind(this));\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.RuntimeModel.ExecutionContext, this._onFilterChanged, this);\n\n    const filterKeys = Object.values(FilterType);\n    this._suggestionBuilder = new UI.FilterSuggestionBuilder.FilterSuggestionBuilder(filterKeys);\n    this._textFilterUI = new UI.Toolbar.ToolbarInput(\n        i18nString(UIStrings.filter), '', 0.2, 1, i18nString(UIStrings.egEventdCdnUrlacom),\n        this._suggestionBuilder.completions.bind(this._suggestionBuilder), true);\n    this._textFilterSetting = Common.Settings.Settings.instance().createSetting('console.textFilter', '');\n    if (this._textFilterSetting.get()) {\n      this._textFilterUI.setValue(this._textFilterSetting.get());\n    }\n    this._textFilterUI.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, () => {\n      this._textFilterSetting.set(this._textFilterUI.value());\n      this._onFilterChanged();\n    });\n    this._filterParser = new TextUtils.TextUtils.FilterParser(filterKeys);\n    this._currentFilter = new ConsoleFilter('', [], null, this._messageLevelFiltersSetting.get());\n    this._updateCurrentFilter();\n    this._levelLabels = new Map(([\n      [Protocol.Log.LogEntryLevel.Verbose, i18nString(UIStrings.verbose)],\n      [Protocol.Log.LogEntryLevel.Info, i18nString(UIStrings.info)],\n      [Protocol.Log.LogEntryLevel.Warning, i18nString(UIStrings.warnings)],\n      [Protocol.Log.LogEntryLevel.Error, i18nString(UIStrings.errors)],\n    ]));\n\n    this._levelMenuButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.logLevels));\n    this._levelMenuButton.turnIntoSelect();\n    this._levelMenuButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click, this._showLevelContextMenu.bind(this));\n    UI.ARIAUtils.markAsMenuButton(this._levelMenuButton.element);\n\n    this._updateLevelMenuButtonText();\n    this._messageLevelFiltersSetting.addChangeListener(this._updateLevelMenuButtonText.bind(this));\n  }\n\n  onMessageAdded(message: SDK.ConsoleModel.ConsoleMessage): void {\n    if (message.type === SDK.ConsoleModel.FrontendMessageType.Command ||\n        message.type === SDK.ConsoleModel.FrontendMessageType.Result || message.isGroupMessage()) {\n      return;\n    }\n    if (message.context) {\n      this._suggestionBuilder.addItem(FilterType.Context, message.context);\n    }\n    if (message.source) {\n      this._suggestionBuilder.addItem(FilterType.Source, message.source);\n    }\n    if (message.url) {\n      this._suggestionBuilder.addItem(FilterType.Url, message.url);\n    }\n  }\n\n  setLevelMenuOverridden(overridden: boolean): void {\n    this._levelMenuButton.setEnabled(!overridden);\n    if (overridden) {\n      this._levelMenuButton.setTitle(i18nString(UIStrings.overriddenByFilterSidebar));\n    } else {\n      this._updateLevelMenuButtonText();\n    }\n  }\n\n  static levelFilterSetting(): Common.Settings.Setting<LevelsMask> {\n    return Common.Settings.Settings.instance().createSetting(\n        'messageLevelFilters', ConsoleFilter.defaultLevelsFilterValue());\n  }\n\n  _updateCurrentFilter(): void {\n    const parsedFilters = this._filterParser.parse(this._textFilterUI.value());\n    if (this._hideNetworkMessagesSetting.get()) {\n      parsedFilters.push(\n          {key: FilterType.Source, text: Protocol.Log.LogEntrySource.Network, negative: true, regex: undefined});\n    }\n\n    this._currentFilter.executionContext = this._filterByExecutionContextSetting.get() ?\n        UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext) :\n        null;\n    this._currentFilter.parsedFilters = parsedFilters;\n    this._currentFilter.levelsMask = this._messageLevelFiltersSetting.get();\n  }\n\n  _onFilterChanged(): void {\n    this._updateCurrentFilter();\n    this._filterChanged();\n  }\n\n  _updateLevelMenuButtonText(): void {\n    let isAll = true;\n    let isDefault = true;\n    const allValue = ConsoleFilter.allLevelsFilterValue();\n    const defaultValue = ConsoleFilter.defaultLevelsFilterValue();\n\n    let text: Common.UIString.LocalizedString|null = null;\n    const levels = this._messageLevelFiltersSetting.get();\n    const allLevels: Protocol.EnumerableEnum<typeof Protocol.Log.LogEntryLevel> = {\n      Verbose: Protocol.Log.LogEntryLevel.Verbose,\n      Info: Protocol.Log.LogEntryLevel.Info,\n      Warning: Protocol.Log.LogEntryLevel.Warning,\n      Error: Protocol.Log.LogEntryLevel.Error,\n    };\n    for (const name of Object.values(allLevels)) {\n      isAll = isAll && levels[name] === allValue[name];\n      isDefault = isDefault && levels[name] === defaultValue[name];\n      if (levels[name]) {\n        text =\n            text ? i18nString(UIStrings.customLevels) : i18nString(UIStrings.sOnly, {PH1: this._levelLabels.get(name)});\n      }\n    }\n    if (isAll) {\n      text = i18nString(UIStrings.allLevels);\n    } else if (isDefault) {\n      text = i18nString(UIStrings.defaultLevels);\n    } else {\n      text = text || i18nString(UIStrings.hideAll);\n    }\n    this._levelMenuButton.element.classList.toggle('warning', !isAll && !isDefault);\n    this._levelMenuButton.setText(text);\n    this._levelMenuButton.setTitle(i18nString(UIStrings.logLevelS, {PH1: text}));\n  }\n\n  _showLevelContextMenu(event: Common.EventTarget.EventTargetEvent): void {\n    const mouseEvent = (event.data as Event);\n    const setting = this._messageLevelFiltersSetting;\n    const levels = setting.get();\n\n    const contextMenu = new UI.ContextMenu.ContextMenu(\n        mouseEvent, true, this._levelMenuButton.element.totalOffsetLeft(),\n        this._levelMenuButton.element.totalOffsetTop() + (this._levelMenuButton.element as HTMLElement).offsetHeight);\n    contextMenu.headerSection().appendItem(\n        i18nString(UIStrings.default), () => setting.set(ConsoleFilter.defaultLevelsFilterValue()));\n    for (const [level, levelText] of this._levelLabels.entries()) {\n      contextMenu.defaultSection().appendCheckboxItem(levelText, toggleShowLevel.bind(null, level), levels[level]);\n    }\n    contextMenu.show();\n\n    function toggleShowLevel(level: string): void {\n      levels[level] = !levels[level];\n      setting.set(levels);\n    }\n  }\n\n  addMessageURLFilter(url: string): void {\n    if (!url) {\n      return;\n    }\n    const suffix = this._textFilterUI.value() ? ` ${this._textFilterUI.value()}` : '';\n    this._textFilterUI.setValue(`-url:${url}${suffix}`);\n    this._textFilterSetting.set(this._textFilterUI.value());\n    this._onFilterChanged();\n  }\n\n  shouldBeVisible(viewMessage: ConsoleViewMessage): boolean {\n    return this._currentFilter.shouldBeVisible(viewMessage);\n  }\n\n  clear(): void {\n    this._suggestionBuilder.clear();\n  }\n\n  reset(): void {\n    this._messageLevelFiltersSetting.set(ConsoleFilter.defaultLevelsFilterValue());\n    this._filterByExecutionContextSetting.set(false);\n    this._hideNetworkMessagesSetting.set(false);\n    this._textFilterUI.setValue('');\n    this._onFilterChanged();\n  }\n}\n\nexport class ConsoleGroup {\n  _parentGroup: ConsoleGroup|null;\n  _nestingLevel: number;\n  _messagesHidden: boolean;\n\n  constructor(parentGroup: ConsoleGroup|null, groupMessage: ConsoleGroupViewMessage|null) {\n    this._parentGroup = parentGroup;\n    this._nestingLevel = parentGroup ? parentGroup.nestingLevel() + 1 : 0;\n    this._messagesHidden =\n        groupMessage && groupMessage.collapsed() || this._parentGroup && this._parentGroup.messagesHidden() || false;\n  }\n\n  static createTopGroup(): ConsoleGroup {\n    return new ConsoleGroup(null, null);\n  }\n\n  messagesHidden(): boolean {\n    return this._messagesHidden;\n  }\n\n  nestingLevel(): number {\n    return this._nestingLevel;\n  }\n\n  parentGroup(): ConsoleGroup|null {\n    return this._parentGroup;\n  }\n}\n\nlet actionDelegateInstance: ActionDelegate;\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'console.show':\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.bringToFront();\n        Common.Console.Console.instance().show();\n        ConsoleView.instance()._focusPrompt();\n        return true;\n      case 'console.clear':\n        ConsoleView.clearConsole();\n        return true;\n      case 'console.clear.history':\n        ConsoleView.instance()._clearHistory();\n        return true;\n      case 'console.create-pin':\n        ConsoleView.instance()._pinPane.addPin('', true /* userGesture */);\n        return true;\n    }\n    return false;\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n\n    return actionDelegateInstance;\n  }\n}\n\nconst messagesSortedBySymbol = new WeakMap<ConsoleViewMessage, number>();\nconst consoleMessageToViewMessage = new WeakMap<SDK.ConsoleModel.ConsoleMessage, ConsoleViewMessage>();\nexport interface RegexMatchRange {\n  messageIndex: number;\n  matchIndex: number;\n}\n"]}