{"version":3,"file":"ChangesHighlighter.js","sourceRoot":"","sources":["../../../../../../front_end/panels/changes/ChangesHighlighter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\nimport type {Row} from './ChangesView.js';\nimport {RowType} from './ChangesView.js';\n\ninterface ParserConfig {\n  diffRows: Array<Row>;\n  baselineLines: Array<string>;\n  currentLines: Array<string>;\n  mimeType: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function ChangesHighlighter(config: Object, parserConfig: ParserConfig): {\n  startState: () => DiffState,\n  token: (arg0: typeof CodeMirror.StringStream, arg1: DiffState) => string,\n  blankLine: (arg0: DiffState) => string,\n  copyState: (arg0: DiffState) => DiffState,\n} {\n  const diffRows = parserConfig.diffRows;\n  const baselineLines = parserConfig.baselineLines;\n  const currentLines = parserConfig.currentLines;\n  const syntaxHighlightMode = CodeMirror.getMode({}, parserConfig.mimeType);\n\n  function fastForward(state: DiffState, baselineLineNumber: number, currentLineNumber: number): void {\n    if (baselineLineNumber > state.baselineLineNumber) {\n      fastForwardSyntaxHighlighter(\n          state.baselineSyntaxState, state.baselineLineNumber, baselineLineNumber, baselineLines);\n      state.baselineLineNumber = baselineLineNumber;\n    }\n    if (currentLineNumber > state.currentLineNumber) {\n      fastForwardSyntaxHighlighter(state.currentSyntaxState, state.currentLineNumber, currentLineNumber, currentLines);\n      state.currentLineNumber = currentLineNumber;\n    }\n  }\n\n  function fastForwardSyntaxHighlighter(syntaxState: Object, from: number, to: number, lines: string[]): void {\n    let lineNumber = from;\n    while (lineNumber < to && lineNumber < lines.length) {\n      const stream = new CodeMirror.StringStream(lines[lineNumber]);\n      if (stream.eol() && syntaxHighlightMode.blankLine) {\n        syntaxHighlightMode.blankLine(syntaxState);\n      }\n      while (!stream.eol()) {\n        if (syntaxHighlightMode.token) {\n          syntaxHighlightMode.token(stream, syntaxState);\n        }\n        stream.start = stream.pos;\n      }\n      lineNumber++;\n    }\n  }\n\n  return {\n    startState: function(): DiffState {\n      return {\n        rowNumber: 0,\n        diffTokenIndex: 0,\n        currentLineNumber: 0,\n        baselineLineNumber: 0,\n        currentSyntaxState: CodeMirror.startState(syntaxHighlightMode),\n        baselineSyntaxState: CodeMirror.startState(syntaxHighlightMode),\n        syntaxPosition: 0,\n        diffPosition: 0,\n        syntaxStyle: '',\n        diffStyle: '',\n      };\n    },\n\n    token: function(stream: typeof CodeMirror.StringStream, state: DiffState): string {\n      const diffRow = diffRows[state.rowNumber];\n      if (!diffRow) {\n        // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n        stream.next();\n        return '';\n      }\n      fastForward(state, diffRow.baselineLineNumber - 1, diffRow.currentLineNumber - 1);\n      let classes = '';\n      // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n      if (stream.pos === 0) {\n        classes += ' line-background-' + diffRow.type + ' line-' + diffRow.type;\n      }\n\n      const syntaxHighlighterNeedsRefresh = state.diffPosition >= state.syntaxPosition;\n      if (state.diffPosition <= state.syntaxPosition) {\n        state.diffPosition += diffRow.tokens[state.diffTokenIndex].text.length;\n        state.diffStyle = diffRow.tokens[state.diffTokenIndex].className;\n        state.diffTokenIndex++;\n      }\n\n      if (syntaxHighlighterNeedsRefresh) {\n        if (syntaxHighlightMode.token &&\n            (diffRow.type === RowType.Deletion || diffRow.type === RowType.Addition ||\n             diffRow.type === RowType.Equal)) {\n          state.syntaxStyle =\n              syntaxHighlightMode.token(\n                  // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n                  stream, diffRow.type === RowType.Deletion ? state.baselineSyntaxState : state.currentSyntaxState) ||\n              '';\n          // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n          state.syntaxPosition = stream.pos;\n        } else {\n          state.syntaxStyle = '';\n          state.syntaxPosition = Infinity;\n        }\n      }\n\n      // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n      stream.pos = Math.min(state.syntaxPosition, state.diffPosition);\n      classes += ' ' + state.syntaxStyle;\n      classes += ' ' + state.diffStyle;\n\n      // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n      if (stream.eol()) {\n        state.rowNumber++;\n        if (diffRow.type === RowType.Deletion) {\n          state.baselineLineNumber++;\n        } else {\n          state.currentLineNumber++;\n        }\n        state.diffPosition = 0;\n        state.syntaxPosition = 0;\n        state.diffTokenIndex = 0;\n      }\n      return classes;\n    },\n\n    blankLine: function(state: DiffState): string {\n      const diffRow = diffRows[state.rowNumber];\n      state.rowNumber++;\n      state.syntaxPosition = 0;\n      state.diffPosition = 0;\n      state.diffTokenIndex = 0;\n      if (!diffRow) {\n        return '';\n      }\n\n      let style: void|'' = '';\n      if (syntaxHighlightMode.blankLine) {\n        if (diffRow.type === RowType.Equal || diffRow.type === RowType.Addition) {\n          // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n          style = syntaxHighlightMode.blankLine(state.currentSyntaxState);\n          state.currentLineNumber++;\n        } else if (diffRow.type === RowType.Deletion) {\n          // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n          style = syntaxHighlightMode.blankLine(state.baselineSyntaxState);\n          state.baselineLineNumber++;\n        }\n      }\n      return style + ' line-background-' + diffRow.type + ' line-' + diffRow.type;\n    },\n\n    copyState: function(state: DiffState): DiffState {\n      const newState = Object.assign({}, state);\n      // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n      newState.currentSyntaxState = CodeMirror.copyState(syntaxHighlightMode, state.currentSyntaxState);\n      // @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\n      newState.baselineSyntaxState = CodeMirror.copyState(syntaxHighlightMode, state.baselineSyntaxState);\n      return /** @type {!DiffState} */ newState as DiffState;\n    },\n  };\n}\n\n// @ts-ignore TODO(crbug.com/1011811): Fix after upstream CodeMirror type fixes\nCodeMirror.defineMode('devtools-diff', ChangesHighlighter);\nexport interface DiffState {\n  rowNumber: number;\n  diffTokenIndex: number;\n  currentLineNumber: number;\n  baselineLineNumber: number;\n  currentSyntaxState: Object;\n  baselineSyntaxState: Object;\n  syntaxPosition: number;\n  diffPosition: number;\n  syntaxStyle: string;\n  diffStyle: string;\n}\n"]}