{"version":3,"file":"changes-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/changes/changes-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,+CAA+C,CAAC;AAC/E,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,IAAI,mBAA+C,CAAC;AAEpD,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,OAAO,EAAE,SAAS;IAClB;;OAEG;IACH,WAAW,EAAE,cAAc;CAC5B,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,gCAAgC,EAAE,SAAS,CAAC,CAAC;AACtF,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,KAAK,UAAU,iBAAiB;IAC9B,IAAI,CAAC,mBAAmB,EAAE;QACxB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;QAC1E,mBAAmB,GAAG,MAAM,MAAM,CAAC,cAAc,CAAC,CAAC;KACpD;IACD,OAAO,mBAAmB,CAAC;AAC7B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,iBAAiB;IACrB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;IACxC,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;IACpD,WAAW,6BAA0C;IACrD,KAAK,CAAC,QAAQ;QACZ,MAAM,OAAO,GAAG,MAAM,iBAAiB,EAAE,CAAC;QAC1C,OAAO,OAAO,CAAC,WAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IACpD,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC/B,YAAY;QACV,OAAO;YACL,aAAa,CAAC,aAAa,CAAC,cAAc;SAC3C,CAAC;IACJ,CAAC;IACD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,cAAc;IAC/D,KAAK,CAAC,YAAY;QAChB,MAAM,OAAO,GAAG,MAAM,iBAAiB,EAAE,CAAC;QAC1C,OAAO,OAAO,CAAC,WAAW,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC;IAC/D,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as WorkspaceDiff from '../../models/workspace_diff/workspace_diff.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Changes from './changes.js';\n\nlet loadedChangesModule: (typeof Changes|undefined);\n\nconst UIStrings = {\n  /**\n   * @description Title of the 'Changes' tool in the bottom drawer\n   */\n  changes: 'Changes',\n  /**\n   * @description Command for showing the 'Changes' tool in the bottom drawer\n   */\n  showChanges: 'Show Changes',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/changes-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nasync function loadChangesModule(): Promise<typeof Changes> {\n  if (!loadedChangesModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/changes');\n    loadedChangesModule = await import('./changes.js');\n  }\n  return loadedChangesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'changes.changes',\n  title: i18nLazyString(UIStrings.changes),\n  commandPrompt: i18nLazyString(UIStrings.showChanges),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Changes = await loadChangesModule();\n    return Changes.ChangesView.ChangesView.instance();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      WorkspaceDiff.WorkspaceDiff.DiffUILocation,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.CHANGES_DRAWER,\n  async loadRevealer() {\n    const Changes = await loadChangesModule();\n    return Changes.ChangesView.DiffUILocationRevealer.instance();\n  },\n});\n"]}