{"version":3,"file":"ChangesTextEditor.js","sourceRoot":"","sources":["../../../../../../front_end/panels/changes/ChangesTextEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as TextEditor from '../../ui/legacy/components/text_editor/text_editor.js';\nimport type * as UI from '../../ui/legacy/legacy.js';\n\nimport type {Row} from './ChangesView.js';\nimport {RowType} from './ChangesView.js';\n\nconst UIStrings = {\n  /**\n  *@description Text prepended to a removed line in a diff in the Changes tool, viewable only by screen reader.\n  *@example {function log () } PH1\n  */\n  deletions: 'Deletion:{PH1}',\n  /**\n  *@description Text prepended to a new line in a diff in the Changes tool, viewable only by screen reader.\n  *@example {function log () } PH1\n  */\n  additions: 'Addition:{PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/changes/ChangesTextEditor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ChangesTextEditor extends TextEditor.CodeMirrorTextEditor.CodeMirrorTextEditor {\n  constructor(options: UI.TextEditor.Options) {\n    options.inputStyle = 'devToolsAccessibleDiffTextArea';\n    super(options);\n    this.codeMirror().setOption('gutters', ['CodeMirror-linenumbers', 'changes-diff-gutter']);\n    this.codeMirror().setOption('extraKeys', {\n      Enter: false,\n      Space: false,\n      Left: function(cm: CodeMirror.Editor): void {\n        const scrollInfo = cm.getScrollInfo();\n        // Left edge check required due to bug where line numbers would disappear when attempting to scroll left when the scrollbar is at the leftmost point.\n        // CodeMirror Issue: https://github.com/codemirror/CodeMirror/issues/6139\n        if (scrollInfo.left > 0) {\n          cm.scrollTo(scrollInfo.left - Math.round(scrollInfo.clientWidth / 6), null);\n        }\n      },\n      Right: function(cm: CodeMirror.Editor): void {\n        const scrollInfo = cm.getScrollInfo();\n        cm.scrollTo(scrollInfo.left + Math.round(scrollInfo.clientWidth / 6), null);\n      },\n    });\n  }\n\n  updateDiffGutter(diffRows: Row[]): void {\n    this.codeMirror().eachLine((line: CodeMirror.LineHandle): void => {\n      const lineNumber = this.codeMirror().getLineNumber(line);\n      const row = diffRows[lineNumber];\n      let gutterMarker;\n      if (row.type === RowType.Deletion) {\n        gutterMarker = document.createElement('div');\n        gutterMarker.classList.add('deletion');\n        gutterMarker.classList.add('changes-diff-gutter-marker');\n        gutterMarker.textContent = '-';\n      } else if (row.type === RowType.Addition) {\n        gutterMarker = document.createElement('div');\n        gutterMarker.classList.add('addition');\n        gutterMarker.classList.add('changes-diff-gutter-marker');\n        gutterMarker.textContent = '+';\n      }\n      if (gutterMarker) {\n        this.codeMirror().setGutterMarker(line, 'changes-diff-gutter', gutterMarker);\n      }\n    });\n  }\n}\n\nexport class DevToolsAccessibleDiffTextArea extends TextEditor.CodeMirrorTextEditor.DevToolsAccessibleTextArea {\n  reset(typing?: boolean): void {\n    super.reset(typing);\n    const doc = this.cm.doc;\n    if (this.textAreaBusy(Boolean(typing)) || !(typeof doc.modeOption === 'object')) {\n      return;\n    }\n\n    const diffRows = doc.modeOption.diffRows;\n    const lineNumber = this.cm.getCursor().line;\n    const rowType = diffRows[lineNumber].type;\n\n    if (rowType === RowType.Deletion) {\n      this.textarea.value = i18nString(UIStrings.deletions, {PH1: this.textarea.value});\n    }\n    if (rowType === RowType.Addition) {\n      this.textarea.value = i18nString(UIStrings.additions, {PH1: this.textarea.value});\n    }\n    this.prevInput = this.textarea.value;\n  }\n}\n\n// @ts-ignore CodeMirror integration with externals, not yet part of codemirror-legacy.d.ts\nCodeMirror.inputStyles.devToolsAccessibleDiffTextArea = DevToolsAccessibleDiffTextArea;\n"]}