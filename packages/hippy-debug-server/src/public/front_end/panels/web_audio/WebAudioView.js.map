{"version":3,"file":"WebAudioView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/web_audio/WebAudioView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\nimport type * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {ContextDetailBuilder, ContextSummaryBuilder} from './AudioContextContentBuilder.js';\nimport {AudioContextSelector, Events as SelectorEvents} from './AudioContextSelector.js';\nimport {GraphManager} from './graph_visualizer/GraphManager.js';\nimport {Events as ModelEvents, WebAudioModel} from './WebAudioModel.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Web Audio View\n  */\n  openAPageThatUsesWebAudioApiTo: 'Open a page that uses Web Audio API to start monitoring.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/web_audio/WebAudioView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n\nlet webAudioViewInstance: WebAudioView;\nexport class WebAudioView extends UI.ThrottledWidget.ThrottledWidget implements\n    SDK.TargetManager.SDKModelObserver<WebAudioModel> {\n  _contextSelector: AudioContextSelector;\n  _contentContainer: HTMLElement;\n  _detailViewContainer: HTMLElement;\n  _graphManager: GraphManager;\n  _landingPage: UI.Widget.VBox;\n  _summaryBarContainer: HTMLElement;\n  constructor() {\n    super(true, 1000);\n    this.element.classList.add('web-audio-drawer');\n    this.registerRequiredCSS('panels/web_audio/webAudio.css', {enableLegacyPatching: false});\n\n    // Creates the toolbar.\n    const toolbarContainer = this.contentElement.createChild('div', 'web-audio-toolbar-container vbox');\n    this._contextSelector = new AudioContextSelector();\n    const toolbar = new UI.Toolbar.Toolbar('web-audio-toolbar', toolbarContainer);\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('components.collect-garbage'));\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(this._contextSelector.toolbarItem());\n\n    // Create content container\n    this._contentContainer = this.contentElement.createChild('div', 'web-audio-content-container vbox flex-auto');\n\n    // Creates the detail view.\n    this._detailViewContainer = this._contentContainer.createChild('div', 'web-audio-details-container vbox flex-auto');\n\n    this._graphManager = new GraphManager();\n\n    // Creates the landing page.\n    this._landingPage = new UI.Widget.VBox();\n    this._landingPage.contentElement.classList.add('web-audio-landing-page', 'fill');\n    this._landingPage.contentElement.appendChild(UI.Fragment.html`\n  <div>\n  <p>${i18nString(UIStrings.openAPageThatUsesWebAudioApiTo)}</p>\n  </div>\n  `);\n    this._landingPage.show(this._detailViewContainer);\n\n    // Creates the summary bar.\n    this._summaryBarContainer = this._contentContainer.createChild('div', 'web-audio-summary-container');\n\n    this._contextSelector.addEventListener(\n        SelectorEvents.ContextSelected, (event: Common.EventTarget.EventTargetEvent): void => {\n          const context = (event.data as Protocol.WebAudio.BaseAudioContext);\n          this._updateDetailView(context);\n          this.doUpdate();\n        });\n\n    SDK.TargetManager.TargetManager.instance().observeModels(WebAudioModel, this);\n  }\n\n  static instance(opts = {forceNew: null}): WebAudioView {\n    const {forceNew} = opts;\n    if (!webAudioViewInstance || forceNew) {\n      webAudioViewInstance = new WebAudioView();\n    }\n\n    return webAudioViewInstance;\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this._addEventListeners(model);\n    }\n  }\n\n  willHide(): void {\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      this._removeEventListeners(model);\n    }\n  }\n\n  modelAdded(webAudioModel: WebAudioModel): void {\n    if (this.isShowing()) {\n      this._addEventListeners(webAudioModel);\n    }\n  }\n\n  modelRemoved(webAudioModel: WebAudioModel): void {\n    this._removeEventListeners(webAudioModel);\n  }\n\n  async doUpdate(): Promise<void> {\n    await this._pollRealtimeData();\n    this.update();\n  }\n\n  _addEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.ensureEnabled();\n    webAudioModel.addEventListener(ModelEvents.ContextCreated, this._contextCreated, this);\n    webAudioModel.addEventListener(ModelEvents.ContextDestroyed, this._contextDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.ContextChanged, this._contextChanged, this);\n    webAudioModel.addEventListener(ModelEvents.ModelReset, this._reset, this);\n    webAudioModel.addEventListener(ModelEvents.ModelSuspend, this._suspendModel, this);\n    webAudioModel.addEventListener(ModelEvents.AudioListenerCreated, this._audioListenerCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AudioListenerWillBeDestroyed, this._audioListenerWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.AudioNodeCreated, this._audioNodeCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AudioNodeWillBeDestroyed, this._audioNodeWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.AudioParamCreated, this._audioParamCreated, this);\n    webAudioModel.addEventListener(ModelEvents.AudioParamWillBeDestroyed, this._audioParamWillBeDestroyed, this);\n    webAudioModel.addEventListener(ModelEvents.NodesConnected, this._nodesConnected, this);\n    webAudioModel.addEventListener(ModelEvents.NodesDisconnected, this._nodesDisconnected, this);\n    webAudioModel.addEventListener(ModelEvents.NodeParamConnected, this._nodeParamConnected, this);\n    webAudioModel.addEventListener(ModelEvents.NodeParamDisconnected, this._nodeParamDisconnected, this);\n  }\n\n  _removeEventListeners(webAudioModel: WebAudioModel): void {\n    webAudioModel.removeEventListener(ModelEvents.ContextCreated, this._contextCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.ContextDestroyed, this._contextDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.ContextChanged, this._contextChanged, this);\n    webAudioModel.removeEventListener(ModelEvents.ModelReset, this._reset, this);\n    webAudioModel.removeEventListener(ModelEvents.ModelSuspend, this._suspendModel, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioListenerCreated, this._audioListenerCreated, this);\n    webAudioModel.removeEventListener(\n        ModelEvents.AudioListenerWillBeDestroyed, this._audioListenerWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioNodeCreated, this._audioNodeCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioNodeWillBeDestroyed, this._audioNodeWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioParamCreated, this._audioParamCreated, this);\n    webAudioModel.removeEventListener(ModelEvents.AudioParamWillBeDestroyed, this._audioParamWillBeDestroyed, this);\n    webAudioModel.removeEventListener(ModelEvents.NodesConnected, this._nodesConnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NodesDisconnected, this._nodesDisconnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NodeParamConnected, this._nodeParamConnected, this);\n    webAudioModel.removeEventListener(ModelEvents.NodeParamDisconnected, this._nodeParamDisconnected, this);\n  }\n\n  _contextCreated(event: Common.EventTarget.EventTargetEvent): void {\n    const context = (event.data as Protocol.WebAudio.BaseAudioContext);\n    this._graphManager.createContext(context.contextId);\n    this._contextSelector.contextCreated(event);\n  }\n\n  _contextDestroyed(event: Common.EventTarget.EventTargetEvent): void {\n    const contextId = (event.data as string);\n    this._graphManager.destroyContext(contextId);\n    this._contextSelector.contextDestroyed(event);\n  }\n\n  _contextChanged(event: Common.EventTarget.EventTargetEvent): void {\n    const context = (event.data as Protocol.WebAudio.BaseAudioContext);\n    if (!this._graphManager.hasContext(context.contextId)) {\n      return;\n    }\n\n    this._contextSelector.contextChanged(event);\n  }\n\n  _reset(): void {\n    if (this._landingPage.isShowing()) {\n      this._landingPage.detach();\n    }\n    this._contextSelector.reset();\n    this._detailViewContainer.removeChildren();\n    this._landingPage.show(this._detailViewContainer);\n    this._graphManager.clearGraphs();\n  }\n\n  _suspendModel(): void {\n    this._graphManager.clearGraphs();\n  }\n\n  _audioListenerCreated(event: Common.EventTarget.EventTargetEvent): void {\n    const listener = (event.data as Protocol.WebAudio.AudioListener);\n    const graph = this._graphManager.getGraph(listener.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNode({\n      nodeId: listener.listenerId,\n      nodeType: 'Listener',\n      numberOfInputs: 0,\n      numberOfOutputs: 0,\n    });\n  }\n\n  _audioListenerWillBeDestroyed(event: Common.EventTarget.EventTargetEvent): void {\n    const {contextId, listenerId} = event.data;\n    const graph = this._graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNode(listenerId);\n  }\n\n  _audioNodeCreated(event: Common.EventTarget.EventTargetEvent): void {\n    const node = (event.data as Protocol.WebAudio.AudioNode);\n    const graph = this._graphManager.getGraph(node.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNode({\n      nodeId: node.nodeId,\n      nodeType: node.nodeType,\n      numberOfInputs: node.numberOfInputs,\n      numberOfOutputs: node.numberOfOutputs,\n    });\n  }\n\n  _audioNodeWillBeDestroyed(event: Common.EventTarget.EventTargetEvent): void {\n    const {contextId, nodeId} = event.data;\n    const graph = this._graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNode(nodeId);\n  }\n\n  _audioParamCreated(event: Common.EventTarget.EventTargetEvent): void {\n    const param = (event.data as Protocol.WebAudio.AudioParam);\n    const graph = this._graphManager.getGraph(param.contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addParam({\n      paramId: param.paramId,\n      paramType: param.paramType,\n      nodeId: param.nodeId,\n    });\n  }\n\n  _audioParamWillBeDestroyed(event: Common.EventTarget.EventTargetEvent): void {\n    const {contextId, paramId} = event.data;\n    const graph = this._graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeParam(paramId);\n  }\n\n  _nodesConnected(event: Common.EventTarget.EventTargetEvent): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex} = event.data;\n    const graph = this._graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.addNodeToNodeConnection({\n      sourceId,\n      destinationId,\n      sourceOutputIndex,\n      destinationInputIndex,\n    });\n  }\n\n  _nodesDisconnected(event: Common.EventTarget.EventTargetEvent): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex, destinationInputIndex} = event.data;\n    const graph = this._graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    graph.removeNodeToNodeConnection({\n      sourceId,\n      destinationId,\n      sourceOutputIndex,\n      destinationInputIndex,\n    });\n  }\n\n  _nodeParamConnected(event: Common.EventTarget.EventTargetEvent): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex} = event.data;\n    const graph = this._graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    // Since the destinationId is AudioParamId, we need to find the nodeId as the\n    // real destinationId.\n    const nodeId = graph.getNodeIdByParamId(destinationId);\n    if (!nodeId) {\n      return;\n    }\n    graph.addNodeToParamConnection({\n      sourceId,\n      destinationId: nodeId,\n      sourceOutputIndex,\n      destinationParamId: destinationId,\n    });\n  }\n\n  _nodeParamDisconnected(event: Common.EventTarget.EventTargetEvent): void {\n    const {contextId, sourceId, destinationId, sourceOutputIndex} = event.data;\n    const graph = this._graphManager.getGraph(contextId);\n    if (!graph) {\n      return;\n    }\n    // Since the destinationId is AudioParamId, we need to find the nodeId as the\n    // real destinationId.\n    const nodeId = graph.getNodeIdByParamId(destinationId);\n    if (!nodeId) {\n      return;\n    }\n    graph.removeNodeToParamConnection({\n      sourceId,\n      destinationId: nodeId,\n      sourceOutputIndex,\n      destinationParamId: destinationId,\n    });\n  }\n\n  _updateDetailView(context: Protocol.WebAudio.BaseAudioContext): void {\n    if (this._landingPage.isShowing()) {\n      this._landingPage.detach();\n    }\n    const detailBuilder = new ContextDetailBuilder(context);\n    this._detailViewContainer.removeChildren();\n    this._detailViewContainer.appendChild(detailBuilder.getFragment());\n  }\n\n  _updateSummaryBar(contextId: string, contextRealtimeData: Protocol.WebAudio.ContextRealtimeData): void {\n    const summaryBuilder = new ContextSummaryBuilder(contextId, contextRealtimeData);\n    this._summaryBarContainer.removeChildren();\n    this._summaryBarContainer.appendChild(summaryBuilder.getFragment());\n  }\n\n  _clearSummaryBar(): void {\n    this._summaryBarContainer.removeChildren();\n  }\n\n  async _pollRealtimeData(): Promise<void> {\n    const context = this._contextSelector.selectedContext();\n    if (!context) {\n      this._clearSummaryBar();\n      return;\n    }\n\n    for (const model of SDK.TargetManager.TargetManager.instance().models(WebAudioModel)) {\n      // Display summary only for real-time context.\n      if (context.contextType === 'realtime') {\n        if (!this._graphManager.hasContext(context.contextId)) {\n          continue;\n        }\n        const realtimeData = await model.requestRealtimeData(context.contextId);\n        if (realtimeData) {\n          this._updateSummaryBar(context.contextId, realtimeData);\n        }\n      } else {\n        this._clearSummaryBar();\n      }\n    }\n  }\n}\n"]}