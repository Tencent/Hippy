{"version":3,"file":"DeveloperResourcesListView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/developer_resources/DeveloperResourcesListView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for the status of something\n  */\n  status: 'Status',\n  /**\n  *@description Text for web URLs\n  */\n  url: 'URL',\n  /**\n  *@description Text for the initiator of something\n  */\n  initiator: 'Initiator',\n  /**\n  *@description Text in Coverage List View of the Coverage tab\n  */\n  totalBytes: 'Total Bytes',\n  /**\n  *@description Text for errors\n  */\n  error: 'Error',\n  /**\n  *@description Title for the developer resources tab\n  */\n  developerResources: 'Developer Resources',\n  /**\n  *@description Text for a context menu entry\n  */\n  copyUrl: 'Copy URL',\n  /**\n  * @description Text for a context menu entry. Command to copy a URL to the clipboard. The initiator\n  * of a request is the entity that caused this request to be sent.\n  */\n  copyInitiatorUrl: 'Copy initiator URL',\n  /**\n  *@description Text for the status column of a list view\n  */\n  pending: 'pending',\n  /**\n  *@description Text for the status column of a list view\n  */\n  success: 'success',\n  /**\n  *@description Text for the status column of a list view\n  */\n  failure: 'failure',\n  /**\n  *@description Accessible text for the value in bytes in memory allocation.\n  */\n  sBytes: '{n, plural, =1 {# byte} other {# bytes}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/developer_resources/DeveloperResourcesListView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class DeveloperResourcesListView extends UI.Widget.VBox {\n  _nodeForItem: Map<SDK.PageResourceLoader.PageResource, GridNode>;\n  _isVisibleFilter: (arg0: SDK.PageResourceLoader.PageResource) => boolean;\n  _highlightRegExp: RegExp|null;\n  _dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n  constructor(isVisibleFilter: (arg0: SDK.PageResourceLoader.PageResource) => boolean) {\n    super(true);\n    this._nodeForItem = new Map();\n    this._isVisibleFilter = isVisibleFilter;\n    this._highlightRegExp = null;\n    this.registerRequiredCSS(\n        'panels/developer_resources/developerResourcesListView.css', {enableLegacyPatching: false});\n\n    const columns = [\n      {id: 'status', title: i18nString(UIStrings.status), width: '60px', fixedWidth: true, sortable: true},\n      {id: 'url', title: i18nString(UIStrings.url), width: '250px', fixedWidth: false, sortable: true},\n      {id: 'initiator', title: i18nString(UIStrings.initiator), width: '80px', fixedWidth: false, sortable: true},\n      {\n        id: 'size',\n        title: i18nString(UIStrings.totalBytes),\n        width: '80px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n      },\n      {\n        id: 'errorMessage',\n        title: i18nString(UIStrings.error),\n        width: '200px',\n        fixedWidth: false,\n        sortable: true,\n      },\n    ] as DataGrid.DataGrid.ColumnDescriptor[];\n    this._dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.developerResources),\n      columns,\n      editCallback: undefined,\n      refreshCallback: undefined,\n      deleteCallback: undefined,\n    });\n    this._dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    this._dataGrid.element.classList.add('flex-auto');\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this._sortingChanged, this);\n    this._dataGrid.setRowContextMenuCallback(this._populateContextMenu.bind(this));\n\n    const dataGridWidget = this._dataGrid.asWidget();\n    dataGridWidget.show(this.contentElement);\n    this.setDefaultFocusedChild(dataGridWidget);\n  }\n\n  _populateContextMenu(\n      contextMenu: UI.ContextMenu.ContextMenu,\n      gridNode: DataGrid.DataGrid.DataGridNode<\n          DataGrid.ViewportDataGrid.ViewportDataGridNode<DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>>>):\n      void {\n    const item = (gridNode as GridNode).item;\n    contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyUrl), () => {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(item.url);\n    });\n    if (item.initiator.initiatorUrl) {\n      contextMenu.clipboardSection().appendItem(i18nString(UIStrings.copyInitiatorUrl), () => {\n        Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(item.initiator.initiatorUrl);\n      });\n    }\n  }\n\n  update(items: Iterable<SDK.PageResourceLoader.PageResource>): void {\n    let hadUpdates = false;\n    const rootNode = this._dataGrid.rootNode();\n    for (const item of items) {\n      let node = this._nodeForItem.get(item);\n      if (node) {\n        if (this._isVisibleFilter(node.item)) {\n          hadUpdates = node._refreshIfNeeded() || hadUpdates;\n        }\n        continue;\n      }\n      node = new GridNode(item);\n      this._nodeForItem.set(item, node);\n      if (this._isVisibleFilter(node.item)) {\n        rootNode.appendChild(node);\n        hadUpdates = true;\n      }\n    }\n    if (hadUpdates) {\n      this._sortingChanged();\n    }\n  }\n\n  reset(): void {\n    this._nodeForItem.clear();\n    this._dataGrid.rootNode().removeChildren();\n  }\n\n  updateFilterAndHighlight(highlightRegExp: RegExp|null): void {\n    this._highlightRegExp = highlightRegExp;\n    let hadTreeUpdates = false;\n    for (const node of this._nodeForItem.values()) {\n      const shouldBeVisible = this._isVisibleFilter(node.item);\n      const isVisible = Boolean(node.parent);\n      if (shouldBeVisible) {\n        node._setHighlight(this._highlightRegExp);\n      }\n      if (shouldBeVisible === isVisible) {\n        continue;\n      }\n      hadTreeUpdates = true;\n      if (!shouldBeVisible) {\n        node.remove();\n      } else {\n        this._dataGrid.rootNode().appendChild(node);\n      }\n    }\n    if (hadTreeUpdates) {\n      this._sortingChanged();\n    }\n  }\n\n  _sortingChanged(): void {\n    const columnId = this._dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n\n    const sortFunction = GridNode.sortFunctionForColumn(columnId) as (\n                             (arg0: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n                              arg1: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>) => number) |\n        null;\n    if (sortFunction) {\n      this._dataGrid.sortNodes(sortFunction, !this._dataGrid.isSortOrderAscending());\n    }\n  }\n}\n\nclass GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<GridNode> {\n  item: SDK.PageResourceLoader.PageResource;\n  _highlightRegExp: RegExp|null;\n  constructor(item: SDK.PageResourceLoader.PageResource) {\n    super();\n    this.item = item;\n    this._highlightRegExp = null;\n  }\n\n  _setHighlight(highlightRegExp: RegExp|null): void {\n    if (this._highlightRegExp === highlightRegExp) {\n      return;\n    }\n    this._highlightRegExp = highlightRegExp;\n    this.refresh();\n  }\n\n  _refreshIfNeeded(): boolean {\n    this.refresh();\n    return true;\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId) as HTMLElement;\n    switch (columnId) {\n      case 'url': {\n        UI.Tooltip.Tooltip.install(cell, this.item.url);\n        const outer = cell.createChild('div', 'url-outer');\n        const prefix = outer.createChild('div', 'url-prefix');\n        const suffix = outer.createChild('div', 'url-suffix');\n        const splitURL = /^(.*)(\\/[^/]*)$/.exec(this.item.url);\n        prefix.textContent = splitURL ? splitURL[1] : this.item.url;\n        suffix.textContent = splitURL ? splitURL[2] : '';\n        if (this._highlightRegExp) {\n          this._highlight(outer, this.item.url);\n        }\n        this.setCellAccessibleName(this.item.url, cell, columnId);\n        break;\n      }\n      case 'initiator': {\n        const url = this.item.initiator.initiatorUrl || '';\n        cell.textContent = url;\n        UI.Tooltip.Tooltip.install(cell, url);\n        this.setCellAccessibleName(url, cell, columnId);\n        cell.onmouseenter = (): void => {\n          const frame = SDK.FrameManager.FrameManager.instance().getFrame(this.item.initiator.frameId || '');\n          if (frame) {\n            frame.highlight();\n          }\n        };\n        cell.onmouseleave = (): void => SDK.OverlayModel.OverlayModel.hideDOMNodeHighlight();\n        break;\n      }\n      case 'status': {\n        if (this.item.success === null) {\n          cell.textContent = i18nString(UIStrings.pending);\n        } else {\n          cell.textContent = this.item.success ? i18nString(UIStrings.success) : i18nString(UIStrings.failure);\n        }\n        break;\n      }\n      case 'size': {\n        const size = this.item.size;\n        if (size !== null) {\n          const sizeSpan = cell.createChild('span');\n          sizeSpan.textContent = Platform.NumberUtilities.withThousandsSeparator(size);\n          const sizeAccessibleName = i18nString(UIStrings.sBytes, {n: size});\n          this.setCellAccessibleName(sizeAccessibleName, cell, columnId);\n        }\n        break;\n      }\n      case 'errorMessage': {\n        cell.classList.add('error-message');\n        if (this.item.errorMessage) {\n          cell.textContent = this.item.errorMessage;\n          if (this._highlightRegExp) {\n            this._highlight(cell, this.item.errorMessage);\n          }\n        }\n        break;\n      }\n    }\n    return cell;\n  }\n\n  _highlight(element: Element, textContent: string): void {\n    if (!this._highlightRegExp) {\n      return;\n    }\n    const matches = this._highlightRegExp.exec(textContent);\n    if (!matches || !matches.length) {\n      return;\n    }\n    const range = new TextUtils.TextRange.SourceRange(matches.index, matches[0].length);\n    UI.UIUtils.highlightRangesWithStyleClass(element, [range], 'filter-highlight');\n  }\n\n  static sortFunctionForColumn(columnId: string): ((arg0: GridNode, arg1: GridNode) => number)|null {\n    const nullToNegative = (x: boolean|number|null): number => x === null ? -1 : Number(x);\n    switch (columnId) {\n      case 'url':\n        return (a: GridNode, b: GridNode): number => a.item.url.localeCompare(b.item.url);\n      case 'status':\n        return (a: GridNode, b: GridNode): number => {\n          return nullToNegative(a.item.success) - nullToNegative(b.item.success);\n        };\n      case 'size':\n        return (a: GridNode, b: GridNode): number => nullToNegative(a.item.size) - nullToNegative(b.item.size);\n      case 'initiator':\n        return (a: GridNode, b: GridNode): number =>\n                   (a.item.initiator.initiatorUrl || '').localeCompare(b.item.initiator.initiatorUrl || '');\n      case 'errorMessage':\n        return (a: GridNode, b: GridNode): number =>\n                   (a.item.errorMessage || '').localeCompare(b.item.errorMessage || '');\n      default:\n        console.assert(false, 'Unknown sort field: ' + columnId);\n        return null;\n    }\n  }\n}\n"]}