{"version":3,"file":"WebauthnPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/webauthn/WebauthnPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for button that allows user to download the private key related to a credential.\n  */\n  export: 'Export',\n  /**\n  *@description Label for an item to remove something\n  */\n  remove: 'Remove',\n  /**\n  *@description Label for empty credentials table.\n  *@example {navigator.credentials.create()} PH1\n  */\n  noCredentialsTryCallingSFromYour: 'No credentials. Try calling {PH1} from your website.',\n  /**\n  *@description Label for checkbox to toggle the virtual authenticator environment allowing user to interact with software-based virtual authenticators.\n  */\n  enableVirtualAuthenticator: 'Enable virtual authenticator environment',\n  /**\n  *@description Label for ID field for credentials.\n  */\n  id: 'ID',\n  /**\n  *@description Label for field that describes whether a credential is a resident credential.\n  */\n  isResident: 'Is Resident',\n  /**\n  *@description Label for credential field that represents the Relying Party ID that the credential is scoped to.\n  */\n  rpId: 'RP ID',\n  /**\n  *@description Label for a column in a table. A field/unique ID that represents the user a credential is mapped to.\n  */\n  userHandle: 'User Handle',\n  /**\n  *@description Label for signature counter field for credentials which represents the number of successful assertions.\n  * See https://w3c.github.io/webauthn/#signature-counter.\n  */\n  signCount: 'Signature Count',\n  /**\n  *@description Label for column with actions for credentials.\n  */\n  actions: 'Actions',\n  /**\n  *@description Title for the table that holds the credentials that a authenticator has registered.\n  */\n  credentials: 'Credentials',\n  /**\n  *@description Label for the learn more link that is shown before the virtual environment is enabled.\n  */\n  useWebauthnForPhishingresistant: 'Use WebAuthn for phishing-resistant authentication',\n  /**\n  *@description Text that is usually a hyperlink to more documentation\n  */\n  learnMore: 'Learn more',\n  /**\n  *@description Title for section of interface that allows user to add a new virtual authenticator.\n  */\n  newAuthenticator: 'New authenticator',\n  /**\n  *@description Text for security or network protocol\n  */\n  protocol: 'Protocol',\n  /**\n  *@description Label for input to select which transport option to use on virtual authenticators, e.g. USB or Bluetooth.\n  */\n  transport: 'Transport',\n  /**\n  *@description Label for checkbox that toggles resident key support on virtual authenticators.\n  */\n  supportsResidentKeys: 'Supports resident keys',\n  /**\n  *@description Text to add something\n  */\n  add: 'Add',\n  /**\n  *@description Label for button to add a new virtual authenticator.\n  */\n  addAuthenticator: 'Add authenticator',\n  /**\n  *@description Label for radio button that toggles whether an authenticator is active.\n  */\n  active: 'Active',\n  /**\n  *@description Title for button that enables user to customize name of authenticator.\n  */\n  editName: 'Edit name',\n  /**\n  *@description Title for button that enables user to save name of authenticator after editing it.\n  */\n  saveName: 'Save name',\n  /**\n  *@description Title for a user-added virtual authenticator which is uniquely identified with its AUTHENTICATORID.\n  *@example {8c7873be-0b13-4996-a794-1521331bbd96} PH1\n  */\n  authenticatorS: 'Authenticator {PH1}',\n  /**\n  *@description Name for generated file which user can download. A private key is a secret code which enables encoding and decoding of a credential. .pem is the file extension.\n  */\n  privateKeypem: 'Private key.pem',\n  /**\n  *@description Label for field that holds an authenticator's universally unique identifier (UUID).\n  */\n  uuid: 'UUID',\n  /**\n  *@description Label for checkbox that toggles user verification support on virtual authenticators.\n  */\n  supportsUserVerification: 'Supports user verification',\n  /**\n  *@description Text in Timeline indicating that input has happened recently\n  */\n  yes: 'Yes',\n  /**\n  *@description Text in Timeline indicating that input has not happened recently\n  */\n  no: 'No',\n  /**\n  *@description Title of radio button that sets an authenticator as active.\n  *@example {Authenticator ABCDEF} PH1\n  */\n  setSAsTheActiveAuthenticator: 'Set {PH1} as the active authenticator',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/webauthn/WebauthnPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst TIMEOUT = 1000;\n\nconst enum Events {\n  ExportCredential = 'ExportCredential',\n  RemoveCredential = 'RemoveCredential',\n}\n\n\nclass DataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  constructor(credential: Protocol.WebAuthn.Credential) {\n    super(credential);\n  }\n\n  nodeSelfHeight(): number {\n    return 24;\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = super.createCell(columnId);\n    UI.Tooltip.Tooltip.install(cell, cell.textContent || '');\n\n    if (columnId !== 'actions') {\n      return cell;\n    }\n\n    const exportButton = UI.UIUtils.createTextButton(i18nString(UIStrings.export), (): void => {\n      if (this.dataGrid) {\n        this.dataGrid.dispatchEventToListeners(Events.ExportCredential, this.data);\n      }\n    });\n\n    cell.appendChild(exportButton);\n\n    const removeButton = UI.UIUtils.createTextButton(i18nString(UIStrings.remove), (): void => {\n      if (this.dataGrid) {\n        this.dataGrid.dispatchEventToListeners(Events.RemoveCredential, this.data);\n      }\n    });\n\n    cell.appendChild(removeButton);\n\n    return cell;\n  }\n}\n\nclass EmptyDataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  createCells(element: Element): void {\n    element.removeChildren();\n    const td = (this.createTDWithClass(DataGrid.DataGrid.Align.Center) as HTMLTableCellElement);\n    if (this.dataGrid) {\n      td.colSpan = this.dataGrid.visibleColumnsArray.length;\n    }\n\n    const code = document.createElement('span', {is: 'source-code'});\n    code.textContent = 'navigator.credentials.create()';\n    code.classList.add('code');\n    const message = i18n.i18n.getFormatLocalizedString(str_, UIStrings.noCredentialsTryCallingSFromYour, {PH1: code});\n\n    td.appendChild(message);\n    element.appendChild(td);\n  }\n}\n\ntype AvailableAuthenticatorOptions = Protocol.WebAuthn.VirtualAuthenticatorOptions&{\n  active: boolean,\n  authenticatorId: Protocol.WebAuthn.AuthenticatorId,\n};\n\nlet webauthnPaneImplInstance: WebauthnPaneImpl;\n\n// We extrapolate this variable as otherwise git detects a private key, even though we\n// perform string manipulation. If we extract the name, then the regex doesn't match\n// and we can upload as expected.\nconst PRIVATE_NAME = 'PRIVATE';\nconst PRIVATE_KEY_HEADER = `-----BEGIN ${PRIVATE_NAME} KEY-----\n`;\nconst PRIVATE_KEY_FOOTER = `-----END ${PRIVATE_NAME} KEY-----`;\n\nconst PROTOCOL_AUTHENTICATOR_VALUES: Protocol.EnumerableEnum<typeof Protocol.WebAuthn.AuthenticatorProtocol> = {\n  Ctap2: Protocol.WebAuthn.AuthenticatorProtocol.Ctap2,\n  U2f: Protocol.WebAuthn.AuthenticatorProtocol.U2f,\n};\n\nexport class WebauthnPaneImpl extends UI.Widget.VBox {\n  _enabled: boolean;\n  _activeAuthId: string|null;\n  _hasBeenEnabled: boolean;\n  _dataGrids: Map<string, DataGrid.DataGrid.DataGridImpl<DataGridNode>>;\n  // @ts-ignore\n  _enableCheckbox: UI.Toolbar.ToolbarCheckbox;\n  _availableAuthenticatorSetting: Common.Settings.Setting<AvailableAuthenticatorOptions[]>;\n  _model: SDK.WebAuthnModel.WebAuthnModel|null|undefined;\n  _authenticatorsView: HTMLElement;\n  _topToolbarContainer: HTMLElement|undefined;\n  _topToolbar: UI.Toolbar.Toolbar|undefined;\n  _learnMoreView: HTMLElement|undefined;\n  _newAuthenticatorSection: HTMLElement|undefined;\n  _newAuthenticatorForm: HTMLElement|undefined;\n  _protocolSelect: HTMLSelectElement|undefined;\n  _transportSelect: HTMLSelectElement|undefined;\n  _residentKeyCheckboxLabel: UI.UIUtils.CheckboxLabel|undefined;\n  _residentKeyCheckbox: HTMLInputElement|undefined;\n  _userVerificationCheckboxLabel: UI.UIUtils.CheckboxLabel|undefined;\n  _userVerificationCheckbox: HTMLInputElement|undefined;\n  _addAuthenticatorButton: HTMLButtonElement|undefined;\n  _isEnabling?: Promise<void>;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/webauthn/webauthnPane.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('webauthn-pane');\n    this._enabled = false;\n    this._activeAuthId = null;\n    this._hasBeenEnabled = false;\n    this._dataGrids = new Map();\n\n    this._availableAuthenticatorSetting =\n        (Common.Settings.Settings.instance().createSetting('webauthnAuthenticators', []) as\n         Common.Settings.Setting<AvailableAuthenticatorOptions[]>);\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (mainTarget) {\n      this._model = mainTarget.model(SDK.WebAuthnModel.WebAuthnModel);\n    }\n\n    this._createToolbar();\n    this._authenticatorsView = this.contentElement.createChild('div', 'authenticators-view');\n    this._createNewAuthenticatorSection();\n    this._updateVisibility(false);\n  }\n\n  static instance(opts = {forceNew: null}): WebauthnPaneImpl {\n    const {forceNew} = opts;\n    if (!webauthnPaneImplInstance || forceNew) {\n      webauthnPaneImplInstance = new WebauthnPaneImpl();\n    }\n\n    return webauthnPaneImplInstance;\n  }\n\n  async _loadInitialAuthenticators(): Promise<void> {\n    let activeAuthenticatorId: string|null = null;\n    const availableAuthenticators = this._availableAuthenticatorSetting.get();\n    for (const options of availableAuthenticators) {\n      if (!this._model) {\n        continue;\n      }\n\n      const authenticatorId = await this._model.addAuthenticator(options);\n      this._addAuthenticatorSection(authenticatorId, options);\n      // Update the authenticatorIds in the options.\n      options.authenticatorId = authenticatorId;\n      if (options.active) {\n        activeAuthenticatorId = authenticatorId;\n      }\n    }\n\n    // Update the settings to reflect the new authenticatorIds.\n    this._availableAuthenticatorSetting.set(availableAuthenticators);\n    if (activeAuthenticatorId) {\n      this._setActiveAuthenticator(activeAuthenticatorId);\n    }\n  }\n\n  async ownerViewDisposed(): Promise<void> {\n    if (this._enableCheckbox) {\n      this._enableCheckbox.setChecked(false);\n    }\n    await this._setVirtualAuthEnvEnabled(false);\n  }\n\n  _createToolbar(): void {\n    this._topToolbarContainer = this.contentElement.createChild('div', 'webauthn-toolbar-container');\n    this._topToolbar = new UI.Toolbar.Toolbar('webauthn-toolbar', this._topToolbarContainer);\n    const enableCheckboxTitle = i18nString(UIStrings.enableVirtualAuthenticator);\n    this._enableCheckbox =\n        new UI.Toolbar.ToolbarCheckbox(enableCheckboxTitle, enableCheckboxTitle, this._handleCheckboxToggle.bind(this));\n    this._topToolbar.appendToolbarItem(this._enableCheckbox);\n  }\n\n  _createCredentialsDataGrid(authenticatorId: string): DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n    const columns = ([\n      {\n        id: 'credentialId',\n        title: i18nString(UIStrings.id),\n        longText: true,\n        weight: 24,\n      },\n      {\n        id: 'isResidentCredential',\n        title: i18nString(UIStrings.isResident),\n        dataType: DataGrid.DataGrid.DataType.Boolean,\n        weight: 10,\n      },\n      {\n        id: 'rpId',\n        title: i18nString(UIStrings.rpId),\n      },\n      {\n        id: 'userHandle',\n        title: i18nString(UIStrings.userHandle),\n      },\n      {\n        id: 'signCount',\n        title: i18nString(UIStrings.signCount),\n      },\n      {id: 'actions', title: i18nString(UIStrings.actions)},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n\n    const dataGridConfig = {\n      displayName: i18nString(UIStrings.credentials),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    };\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl(dataGridConfig);\n    dataGrid.renderInline();\n    dataGrid.setStriped(true);\n    dataGrid.addEventListener(Events.ExportCredential, this._handleExportCredential, this);\n    dataGrid.addEventListener(Events.RemoveCredential, this._handleRemoveCredential.bind(this, authenticatorId));\n\n    this._dataGrids.set(authenticatorId, dataGrid);\n\n    return dataGrid;\n  }\n\n  _handleExportCredential(e: {data: Protocol.WebAuthn.Credential}): void {\n    this._exportCredential(e.data);\n  }\n\n  _handleRemoveCredential(authenticatorId: string, e: {data: Protocol.WebAuthn.Credential}): void {\n    this._removeCredential(authenticatorId, e.data.credentialId);\n  }\n\n  async _updateCredentials(authenticatorId: string): Promise<void> {\n    const dataGrid = this._dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n\n    if (this._model) {\n      const credentials = await this._model.getCredentials(authenticatorId);\n\n      dataGrid.rootNode().removeChildren();\n      for (const credential of credentials) {\n        const node = new DataGridNode(credential);\n        dataGrid.rootNode().appendChild(node);\n      }\n\n      this._maybeAddEmptyNode(dataGrid);\n    }\n\n    // TODO(crbug.com/1112528): Add back-end events for credential creation and removal to avoid polling.\n    setTimeout(this._updateCredentials.bind(this, authenticatorId), TIMEOUT);\n  }\n\n  _maybeAddEmptyNode(dataGrid: DataGrid.DataGrid.DataGridImpl<DataGridNode>): void {\n    if (dataGrid.rootNode().children.length) {\n      return;\n    }\n\n    const node = new EmptyDataGridNode();\n    dataGrid.rootNode().appendChild(node);\n  }\n\n  async _setVirtualAuthEnvEnabled(enable: boolean): Promise<void> {\n    await this._isEnabling;\n    this._isEnabling = new Promise<void>(async (resolve: (value: void) => void) => {\n      if (enable && !this._hasBeenEnabled) {\n        // Ensures metric is only tracked once per session.\n        Host.userMetrics.actionTaken(Host.UserMetrics.Action.VirtualAuthenticatorEnvironmentEnabled);\n        this._hasBeenEnabled = true;\n      }\n      this._enabled = enable;\n      if (this._model) {\n        await this._model.setVirtualAuthEnvEnabled(enable);\n      }\n\n      if (enable) {\n        await this._loadInitialAuthenticators();\n      } else {\n        this._removeAuthenticatorSections();\n      }\n\n      this._updateVisibility(enable);\n      this._isEnabling = undefined;\n      resolve();\n    });\n  }\n\n  _updateVisibility(enabled: boolean): void {\n    this.contentElement.classList.toggle('enabled', enabled);\n  }\n\n  _removeAuthenticatorSections(): void {\n    this._authenticatorsView.innerHTML = '';\n    this._dataGrids.clear();\n  }\n\n  _handleCheckboxToggle(e: MouseEvent): void {\n    this._setVirtualAuthEnvEnabled((e.target as HTMLInputElement).checked);\n  }\n\n  _updateEnabledTransportOptions(enabledOptions: Protocol.WebAuthn.AuthenticatorTransport[]): void {\n    if (!this._transportSelect) {\n      return;\n    }\n\n    const prevValue = this._transportSelect.value;\n    this._transportSelect.removeChildren();\n\n    for (const option of enabledOptions) {\n      this._transportSelect.appendChild(new Option(option, option));\n    }\n\n    // Make sure the currently selected value stays the same.\n    this._transportSelect.value = prevValue;\n    // If the new set does not include the previous value.\n    if (!this._transportSelect.value) {\n      // Select the first available value.\n      this._transportSelect.selectedIndex = 0;\n    }\n  }\n\n  _updateNewAuthenticatorSectionOptions(): void {\n    if (!this._protocolSelect || !this._residentKeyCheckbox || !this._userVerificationCheckbox) {\n      return;\n    }\n\n    if (this._protocolSelect.value === Protocol.WebAuthn.AuthenticatorProtocol.Ctap2) {\n      this._residentKeyCheckbox.disabled = false;\n      this._userVerificationCheckbox.disabled = false;\n      this._updateEnabledTransportOptions([\n        Protocol.WebAuthn.AuthenticatorTransport.Usb,\n        Protocol.WebAuthn.AuthenticatorTransport.Ble,\n        Protocol.WebAuthn.AuthenticatorTransport.Nfc,\n        // TODO (crbug.com/1034663): Toggle cable as option depending on if cablev2 flag is on.\n        // Protocol.WebAuthn.AuthenticatorTransport.Cable,\n        Protocol.WebAuthn.AuthenticatorTransport.Internal,\n      ]);\n    } else {\n      this._residentKeyCheckbox.checked = false;\n      this._residentKeyCheckbox.disabled = true;\n      this._userVerificationCheckbox.checked = false;\n      this._userVerificationCheckbox.disabled = true;\n      this._updateEnabledTransportOptions([\n        Protocol.WebAuthn.AuthenticatorTransport.Usb,\n        Protocol.WebAuthn.AuthenticatorTransport.Ble,\n        Protocol.WebAuthn.AuthenticatorTransport.Nfc,\n      ]);\n    }\n  }\n\n  _createNewAuthenticatorSection(): void {\n    this._learnMoreView = this.contentElement.createChild('div', 'learn-more');\n    this._learnMoreView.appendChild(UI.Fragment.html`\n  <div>\n  ${i18nString(UIStrings.useWebauthnForPhishingresistant)}<br /><br />\n  ${\n        UI.XLink.XLink.create(\n            'https://developers.google.com/web/updates/2018/05/webauthn', i18nString(UIStrings.learnMore))}\n  </div>\n  `);\n\n    this._newAuthenticatorSection = this.contentElement.createChild('div', 'new-authenticator-container');\n    const newAuthenticatorTitle =\n        UI.UIUtils.createLabel(i18nString(UIStrings.newAuthenticator), 'new-authenticator-title');\n    this._newAuthenticatorSection.appendChild(newAuthenticatorTitle);\n    this._newAuthenticatorForm = this._newAuthenticatorSection.createChild('div', 'new-authenticator-form');\n\n    const protocolGroup = this._newAuthenticatorForm.createChild('div', 'authenticator-option');\n    const transportGroup = this._newAuthenticatorForm.createChild('div', 'authenticator-option');\n    const residentKeyGroup = this._newAuthenticatorForm.createChild('div', 'authenticator-option');\n    const userVerificationGroup = this._newAuthenticatorForm.createChild('div', 'authenticator-option');\n    const addButtonGroup = this._newAuthenticatorForm.createChild('div', 'authenticator-option');\n\n    const protocolSelectTitle = UI.UIUtils.createLabel(i18nString(UIStrings.protocol), 'authenticator-option-label');\n    protocolGroup.appendChild(protocolSelectTitle);\n    this._protocolSelect = (protocolGroup.createChild('select', 'chrome-select') as HTMLSelectElement);\n    UI.ARIAUtils.bindLabelToControl(protocolSelectTitle, (this._protocolSelect as Element));\n    Object.values(PROTOCOL_AUTHENTICATOR_VALUES)\n        .sort()\n        .forEach((option: Protocol.WebAuthn.AuthenticatorProtocol): void => {\n          if (this._protocolSelect) {\n            this._protocolSelect.appendChild(new Option(option, option));\n          }\n        });\n\n    if (this._protocolSelect) {\n      this._protocolSelect.value = Protocol.WebAuthn.AuthenticatorProtocol.Ctap2;\n    }\n\n    const transportSelectTitle = UI.UIUtils.createLabel(i18nString(UIStrings.transport), 'authenticator-option-label');\n    transportGroup.appendChild(transportSelectTitle);\n    this._transportSelect = (transportGroup.createChild('select', 'chrome-select') as HTMLSelectElement);\n    UI.ARIAUtils.bindLabelToControl(transportSelectTitle, (this._transportSelect as Element));\n    // transportSelect will be populated in _updateNewAuthenticatorSectionOptions.\n\n    this._residentKeyCheckboxLabel = UI.UIUtils.CheckboxLabel.create(i18nString(UIStrings.supportsResidentKeys), false);\n    this._residentKeyCheckboxLabel.textElement.classList.add('authenticator-option-label');\n    residentKeyGroup.appendChild(this._residentKeyCheckboxLabel.textElement);\n    this._residentKeyCheckbox = this._residentKeyCheckboxLabel.checkboxElement;\n    this._residentKeyCheckbox.checked = false;\n    this._residentKeyCheckbox.classList.add('authenticator-option-checkbox');\n    residentKeyGroup.appendChild(this._residentKeyCheckboxLabel);\n\n    this._userVerificationCheckboxLabel = UI.UIUtils.CheckboxLabel.create('Supports user verification', false);\n    this._userVerificationCheckboxLabel.textElement.classList.add('authenticator-option-label');\n    userVerificationGroup.appendChild(this._userVerificationCheckboxLabel.textElement);\n    this._userVerificationCheckbox = this._userVerificationCheckboxLabel.checkboxElement;\n    this._userVerificationCheckbox.checked = false;\n    this._userVerificationCheckbox.classList.add('authenticator-option-checkbox');\n    userVerificationGroup.appendChild(this._userVerificationCheckboxLabel);\n\n    this._addAuthenticatorButton =\n        UI.UIUtils.createTextButton(i18nString(UIStrings.add), this._handleAddAuthenticatorButton.bind(this), '');\n    addButtonGroup.createChild('div', 'authenticator-option-label');\n    addButtonGroup.appendChild(this._addAuthenticatorButton);\n    const addAuthenticatorTitle = UI.UIUtils.createLabel(i18nString(UIStrings.addAuthenticator), '');\n    UI.ARIAUtils.bindLabelToControl(addAuthenticatorTitle, this._addAuthenticatorButton);\n\n    this._updateNewAuthenticatorSectionOptions();\n    if (this._protocolSelect) {\n      this._protocolSelect.addEventListener('change', this._updateNewAuthenticatorSectionOptions.bind(this));\n    }\n  }\n\n  async _handleAddAuthenticatorButton(): Promise<void> {\n    const options = this._createOptionsFromCurrentInputs();\n    if (this._model) {\n      const authenticatorId = await this._model.addAuthenticator(options);\n      const availableAuthenticators = this._availableAuthenticatorSetting.get();\n      availableAuthenticators.push({authenticatorId, active: true, ...options});\n      this._availableAuthenticatorSetting.set(\n          availableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId})));\n      const section = await this._addAuthenticatorSection(authenticatorId, options);\n      const mediaQueryList = window.matchMedia('(prefers-reduced-motion: reduce)');\n      const prefersReducedMotion = mediaQueryList.matches;\n      section.scrollIntoView({block: 'start', behavior: prefersReducedMotion ? 'auto' : 'smooth'});\n    }\n  }\n\n  async _addAuthenticatorSection(authenticatorId: string, options: Protocol.WebAuthn.VirtualAuthenticatorOptions):\n      Promise<HTMLDivElement> {\n    const section = document.createElement('div');\n    section.classList.add('authenticator-section');\n    section.setAttribute('data-authenticator-id', authenticatorId);\n    this._authenticatorsView.appendChild(section);\n\n    const headerElement = section.createChild('div', 'authenticator-section-header');\n    const titleElement = headerElement.createChild('div', 'authenticator-section-title');\n    UI.ARIAUtils.markAsHeading(titleElement, 2);\n\n    await this._clearActiveAuthenticator();\n    const activeButtonContainer = headerElement.createChild('div', 'active-button-container');\n    const activeLabel =\n        UI.UIUtils.createRadioLabel(`active-authenticator-${authenticatorId}`, i18nString(UIStrings.active));\n    activeLabel.radioElement.addEventListener('click', this._setActiveAuthenticator.bind(this, authenticatorId));\n    activeButtonContainer.appendChild(activeLabel);\n    /** @type {!HTMLInputElement} */ (activeLabel.radioElement as HTMLInputElement).checked = true;\n    this._activeAuthId = authenticatorId;  // Newly added authenticator is automatically set as active.\n\n    const removeButton = headerElement.createChild('button', 'text-button');\n    removeButton.textContent = i18nString(UIStrings.remove);\n    removeButton.addEventListener('click', this._removeAuthenticator.bind(this, authenticatorId));\n\n    const toolbar = new UI.Toolbar.Toolbar('edit-name-toolbar', titleElement);\n    const editName = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.editName), 'largeicon-edit');\n    const saveName = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.saveName), 'largeicon-checkmark');\n    saveName.setVisible(false);\n\n    const nameField = (titleElement.createChild('input', 'authenticator-name-field') as HTMLInputElement);\n    nameField.disabled = true;\n    const userFriendlyName = authenticatorId.slice(-5);  // User friendly name defaults to last 5 chars of UUID.\n    nameField.value = i18nString(UIStrings.authenticatorS, {PH1: userFriendlyName});\n    this._updateActiveLabelTitle(activeLabel, nameField.value);\n\n    editName.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click,\n        (): void => this._handleEditNameButton(titleElement, nameField, editName, saveName));\n    saveName.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click,\n        (): void => this._handleSaveNameButton(titleElement, nameField, editName, saveName, activeLabel));\n\n    nameField.addEventListener(\n        'focusout', (): void => this._handleSaveNameButton(titleElement, nameField, editName, saveName, activeLabel));\n    nameField.addEventListener('keydown', (event: KeyboardEvent): void => {\n      if (event.key === 'Enter') {\n        this._handleSaveNameButton(titleElement, nameField, editName, saveName, activeLabel);\n      }\n    });\n\n    toolbar.appendToolbarItem(editName);\n    toolbar.appendToolbarItem(saveName);\n\n    this._createAuthenticatorFields(section, authenticatorId, options);\n\n    const label = document.createElementWithClass('div', 'credentials-title');\n    label.textContent = i18nString(UIStrings.credentials);\n    section.appendChild(label);\n\n    const dataGrid = this._createCredentialsDataGrid(authenticatorId);\n    dataGrid.asWidget().show(section);\n\n    this._updateCredentials(authenticatorId);\n\n    return section;\n  }\n\n  _exportCredential(credential: Protocol.WebAuthn.Credential): void {\n    let pem = PRIVATE_KEY_HEADER;\n    for (let i = 0; i < credential.privateKey.length; i += 64) {\n      pem += credential.privateKey.substring(i, i + 64) + '\\n';\n    }\n    pem += PRIVATE_KEY_FOOTER;\n\n    const link = document.createElement('a');\n    link.download = i18nString(UIStrings.privateKeypem);\n    link.href = 'data:application/x-pem-file,' + encodeURIComponent(pem);\n    link.click();\n  }\n\n  async _removeCredential(authenticatorId: string, credentialId: string): Promise<void> {\n    const dataGrid = this._dataGrids.get(authenticatorId);\n    if (!dataGrid) {\n      return;\n    }\n\n    // @ts-ignore dataGrid node type is indeterminate.\n    dataGrid.rootNode()\n        .children\n        .find((n: DataGrid.DataGrid.DataGridNode<DataGridNode>): boolean => n.data.credentialId === credentialId)\n        .remove();\n    this._maybeAddEmptyNode(dataGrid);\n\n    if (this._model) {\n      await this._model.removeCredential(authenticatorId, credentialId);\n    }\n  }\n\n  /**\n   * Creates the fields describing the authenticator in the front end.\n   */\n  _createAuthenticatorFields(\n      section: Element, authenticatorId: string, options: Protocol.WebAuthn.VirtualAuthenticatorOptions): void {\n    const sectionFields = section.createChild('div', 'authenticator-fields');\n    const uuidField = sectionFields.createChild('div', 'authenticator-field');\n    const protocolField = sectionFields.createChild('div', 'authenticator-field');\n    const transportField = sectionFields.createChild('div', 'authenticator-field');\n    const srkField = sectionFields.createChild('div', 'authenticator-field');\n    const suvField = sectionFields.createChild('div', 'authenticator-field');\n\n    uuidField.appendChild(UI.UIUtils.createLabel(i18nString(UIStrings.uuid), 'authenticator-option-label'));\n    protocolField.appendChild(UI.UIUtils.createLabel(i18nString(UIStrings.protocol), 'authenticator-option-label'));\n    transportField.appendChild(UI.UIUtils.createLabel(i18nString(UIStrings.transport), 'authenticator-option-label'));\n    srkField.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.supportsResidentKeys), 'authenticator-option-label'));\n    suvField.appendChild(\n        UI.UIUtils.createLabel(i18nString(UIStrings.supportsUserVerification), 'authenticator-option-label'));\n\n    uuidField.createChild('div', 'authenticator-field-value').textContent = authenticatorId;\n    protocolField.createChild('div', 'authenticator-field-value').textContent = options.protocol;\n    transportField.createChild('div', 'authenticator-field-value').textContent = options.transport;\n    srkField.createChild('div', 'authenticator-field-value').textContent =\n        options.hasResidentKey ? i18nString(UIStrings.yes) : i18nString(UIStrings.no);\n    suvField.createChild('div', 'authenticator-field-value').textContent =\n        options.hasUserVerification ? i18nString(UIStrings.yes) : i18nString(UIStrings.no);\n  }\n\n  _handleEditNameButton(\n      titleElement: Element, nameField: HTMLInputElement, editName: UI.Toolbar.ToolbarButton,\n      saveName: UI.Toolbar.ToolbarButton): void {\n    nameField.disabled = false;\n    titleElement.classList.add('editing-name');\n    nameField.focus();\n    saveName.setVisible(true);\n    editName.setVisible(false);\n  }\n\n  _handleSaveNameButton(\n      titleElement: Element, nameField: HTMLInputElement, editName: UI.Toolbar.ToolbarItem,\n      saveName: UI.Toolbar.ToolbarItem, activeLabel: UI.UIUtils.DevToolsRadioButton): void {\n    nameField.disabled = true;\n    titleElement.classList.remove('editing-name');\n    editName.setVisible(true);\n    saveName.setVisible(false);\n    this._updateActiveLabelTitle(activeLabel, nameField.value);\n  }\n\n  _updateActiveLabelTitle(activeLabel: UI.UIUtils.DevToolsRadioButton, authenticatorName: string): void {\n    UI.Tooltip.Tooltip.install(\n        activeLabel.radioElement, i18nString(UIStrings.setSAsTheActiveAuthenticator, {PH1: authenticatorName}));\n  }\n\n  /**\n   * Removes both the authenticator and its respective UI element.\n   */\n  _removeAuthenticator(authenticatorId: string): void {\n    if (this._authenticatorsView) {\n      const child = this._authenticatorsView.querySelector(`[data-authenticator-id=${CSS.escape(authenticatorId)}]`);\n      if (child) {\n        child.remove();\n      }\n    }\n    this._dataGrids.delete(authenticatorId);\n\n    if (this._model) {\n      this._model.removeAuthenticator(authenticatorId);\n    }\n\n    // Update available authenticator setting.\n    const prevAvailableAuthenticators = this._availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators = prevAvailableAuthenticators.filter(a => a.authenticatorId !== authenticatorId);\n    this._availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    if (this._activeAuthId === authenticatorId) {\n      const availableAuthenticatorIds = Array.from(this._dataGrids.keys());\n      if (availableAuthenticatorIds.length) {\n        this._setActiveAuthenticator(availableAuthenticatorIds[0]);\n      } else {\n        this._activeAuthId = null;\n      }\n    }\n  }\n\n  _createOptionsFromCurrentInputs(): Protocol.WebAuthn.VirtualAuthenticatorOptions {\n    // TODO(crbug.com/1034663): Add optionality for isUserVerified param.\n    if (!this._protocolSelect || !this._transportSelect || !this._residentKeyCheckbox ||\n        !this._userVerificationCheckbox) {\n      throw new Error('Unable to create options from current inputs');\n    }\n\n    /**\n     * @type {!Protocol.WebAuthn.VirtualAuthenticatorOptions}\n     */\n    const options = ({\n      protocol: this._protocolSelect.options[this._protocolSelect.selectedIndex].value,\n      transport: this._transportSelect.options[this._transportSelect.selectedIndex].value,\n      hasResidentKey: this._residentKeyCheckbox.checked,\n      hasUserVerification: this._userVerificationCheckbox.checked,\n      automaticPresenceSimulation: true,\n      isUserVerified: true,\n    } as Protocol.WebAuthn.VirtualAuthenticatorOptions);\n\n    return options;\n  }\n\n  /**\n   * Sets the given authenticator as active.\n   * Note that a newly added authenticator will automatically be set as active.\n   */\n  async _setActiveAuthenticator(authenticatorId: string): Promise<void> {\n    await this._clearActiveAuthenticator();\n    if (this._model) {\n      await this._model.setAutomaticPresenceSimulation(authenticatorId, true);\n    }\n    this._activeAuthId = authenticatorId;\n\n    const prevAvailableAuthenticators = this._availableAuthenticatorSetting.get();\n    const newAvailableAuthenticators =\n        prevAvailableAuthenticators.map(a => ({...a, active: a.authenticatorId === authenticatorId}));\n    this._availableAuthenticatorSetting.set(newAvailableAuthenticators);\n\n    this._updateActiveButtons();\n  }\n\n  _updateActiveButtons(): void {\n    const authenticators = this._authenticatorsView.getElementsByClassName('authenticator-section');\n    Array.from(authenticators).forEach((authenticator: Element): void => {\n      const button = (authenticator.querySelector('input.dt-radio-button') as HTMLInputElement);\n      if (!button) {\n        return;\n      }\n      button.checked =\n          /** @type {!HTMLElement} */ (authenticator as HTMLElement).dataset.authenticatorId === this._activeAuthId;\n    });\n  }\n\n  async _clearActiveAuthenticator(): Promise<void> {\n    if (this._activeAuthId && this._model) {\n      await this._model.setAutomaticPresenceSimulation(this._activeAuthId, false);\n    }\n    this._activeAuthId = null;\n    this._updateActiveButtons();\n  }\n}\n"]}