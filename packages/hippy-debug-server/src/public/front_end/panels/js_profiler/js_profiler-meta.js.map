{"version":3,"file":"js_profiler-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/js_profiler/js_profiler-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,QAAQ,EAAE,UAAU;IACpB;;MAEE;IACF,YAAY,EAAE,eAAe;IAC7B;;MAEE;IACF,kBAAkB,EAAE,sBAAsB;CAC3C,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,wCAAwC,EAAE,SAAS,CAAC,CAAC;AAC9F,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,oBAAiD,CAAC;AAEtD,KAAK,UAAU,kBAAkB;IAC/B,IAAI,CAAC,oBAAoB,EAAE;QACzB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAC3E,oBAAoB,GAAG,MAAM,MAAM,CAAC,yBAAyB,CAAC,CAAC;KAChE;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,SAAS,yBAAyB,CAAc,gBAA0D;IACxG,IAAI,oBAAoB,KAAK,SAAS,EAAE;QACtC,OAAO,EAAE,CAAC;KACX;IACD,OAAO,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;AAChD,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,aAAa;IACjB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC;IACzC,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,YAAY,CAAC;IACrD,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3D,CAAC;CACF,CAAC,CAAC;AAEH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,EAAE,8BAA8B;IACxC,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,mBAAmB;IAClE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC;IACnD,SAAS,6DAA2D;IACpE,UAAU,EAAE,IAAI;IAChB,gBAAgB,2DAA0D;IAC1E,kBAAkB,EAAE,IAAI;IACxB,YAAY;QACV,OAAO,yBAAyB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,CAAC;IACzF,CAAC;IACD,KAAK,CAAC,kBAAkB;QACtB,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAC3D,CAAC;IACD,QAAQ,EAAE;QACR;YACE,QAAQ,oCAA8C;YACtD,QAAQ,EAAE,QAAQ;SACnB;QACD;YACE,QAAQ,iBAAqC;YAC7C,QAAQ,EAAE,QAAQ;SACnB;KACF;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Profiler from '../profiler/profiler.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the Profiler tool\n  */\n  profiler: 'Profiler',\n  /**\n  *@description Command for showing the Profiler tool\n  */\n  showProfiler: 'Show Profiler',\n  /**\n  *@description Text in the Shortcuts page to explain a keyboard shortcut (start/stop recording performance)\n  */\n  startStopRecording: 'Start/stop recording',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/js_profiler/js_profiler-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedProfilerModule: (typeof Profiler|undefined);\n\nasync function loadProfilerModule(): Promise<typeof Profiler> {\n  if (!loadedProfilerModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/profiler');\n    loadedProfilerModule = await import('../profiler/profiler.js');\n  }\n  return loadedProfilerModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (profilerModule: typeof Profiler) => T[]): T[] {\n  if (loadedProfilerModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedProfilerModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'js_profiler',\n  title: i18nLazyString(UIStrings.profiler),\n  commandPrompt: i18nLazyString(UIStrings.showProfiler),\n  order: 65,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.js-toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.JAVASCRIPT_PROFILER,\n  title: i18nLazyString(UIStrings.startStopRecording),\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.ProfilesPanel.JSProfilerPanel]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.ProfilesPanel.JSProfilerPanel.instance();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n"]}