{"version":3,"file":"animation-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/animation/animation-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,IAAI,qBAAmD,CAAC;AAExD,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,UAAU,EAAE,YAAY;IACxB;;OAEG;IACH,cAAc,EAAE,iBAAiB;CAClC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oCAAoC,EAAE,SAAS,CAAC,CAAC;AAC1F,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,KAAK,UAAU,mBAAmB;IAChC,IAAI,CAAC,qBAAqB,EAAE;QAC1B,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;QAC5E,qBAAqB,GAAG,MAAM,MAAM,CAAC,gBAAgB,CAAC,CAAC;KACxD;IACD,OAAO,qBAAqB,CAAC;AAC/B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,YAAY;IAChB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;IAC3C,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,cAAc,CAAC;IACvD,WAAW,6BAA0C;IACrD,KAAK,EAAE,CAAC;IACR,KAAK,CAAC,QAAQ;QACZ,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IAClE,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Animation from './animation.js';\n\nlet loadedAnimationModule: (typeof Animation|undefined);\n\nconst UIStrings = {\n  /**\n   * @description Title for the 'Animations' tool in the bottom drawer\n   */\n  animations: 'Animations',\n  /**\n   * @description Command for showing the 'Animations' tool in the bottom drawer\n   */\n  showAnimations: 'Show Animations',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/animation/animation-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nasync function loadAnimationModule(): Promise<typeof Animation> {\n  if (!loadedAnimationModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/animation');\n    loadedAnimationModule = await import('./animation.js');\n  }\n  return loadedAnimationModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'animations',\n  title: i18nLazyString(UIStrings.animations),\n  commandPrompt: i18nLazyString(UIStrings.showAnimations),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 0,\n  async loadView() {\n    const Animation = await loadAnimationModule();\n    return Animation.AnimationTimeline.AnimationTimeline.instance();\n  },\n});\n"]}