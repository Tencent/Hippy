{"version":3,"file":"CoveragePlugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/CoveragePlugin.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Formatter from '../../models/formatter/formatter.js';\nimport type * as Workspace from '../../models/workspace/workspace.js'; // eslint-disable-line no-unused-vars\nimport type * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js'; // eslint-disable-line no-unused-vars\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Coverage from '../coverage/coverage.js';\n\nimport {Plugin} from './Plugin.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for Coverage Status Bar Item in Sources Panel\n  */\n  clickToShowCoveragePanel: 'Click to show Coverage Panel',\n  /**\n  *@description Text for Coverage Status Bar Item in Sources Panel\n  */\n  showDetails: 'Show Details',\n  /**\n  *@description Text to show in the status bar if coverage data is available\n  *@example {12.3} PH1\n  */\n  coverageS: 'Coverage: {PH1} %',\n  /**\n  *@description Text to be shown in the status bar if no coverage data is available\n  */\n  coverageNa: 'Coverage: n/a',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/CoveragePlugin.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CoveragePlugin extends Plugin {\n  private uiSourceCode: Workspace.UISourceCode.UISourceCode;\n  private originalSourceCode: Workspace.UISourceCode.UISourceCode;\n  private infoInToolbar: UI.Toolbar.ToolbarButton;\n  private model: Coverage.CoverageModel.CoverageModel|null|undefined;\n  private coverage: Coverage.CoverageModel.URLCoverageInfo|null|undefined;\n\n  constructor(\n      _textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor, uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this.uiSourceCode = uiSourceCode;\n    this.originalSourceCode =\n        Formatter.SourceFormatter.SourceFormatter.instance().getOriginalUISourceCode(this.uiSourceCode);\n    this.infoInToolbar = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clickToShowCoveragePanel));\n    this.infoInToolbar.setSecondary();\n    this.infoInToolbar.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      UI.ViewManager.ViewManager.instance().showView('coverage');\n    });\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (mainTarget) {\n      this.model = mainTarget.model(Coverage.CoverageModel.CoverageModel);\n      if (this.model) {\n        this.model.addEventListener(Coverage.CoverageModel.Events.CoverageReset, this.handleReset, this);\n\n        this.coverage = this.model.getCoverageForUrl(this.originalSourceCode.url());\n        if (this.coverage) {\n          this.coverage.addEventListener(\n              Coverage.CoverageModel.URLCoverageInfo.Events.SizesChanged, this.handleCoverageSizesChanged, this);\n        }\n      }\n    }\n\n    this.updateStats();\n  }\n\n  dispose(): void {\n    if (this.coverage) {\n      this.coverage.removeEventListener(\n          Coverage.CoverageModel.URLCoverageInfo.Events.SizesChanged, this.handleCoverageSizesChanged, this);\n    }\n    if (this.model) {\n      this.model.removeEventListener(Coverage.CoverageModel.Events.CoverageReset, this.handleReset, this);\n    }\n  }\n\n  static accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return uiSourceCode.contentType().isDocumentOrScriptOrStyleSheet();\n  }\n\n  private handleReset(): void {\n    this.coverage = null;\n    this.updateStats();\n  }\n\n  private handleCoverageSizesChanged(): void {\n    this.updateStats();\n  }\n\n  private updateStats(): void {\n    if (this.coverage) {\n      this.infoInToolbar.setTitle(i18nString(UIStrings.showDetails));\n      this.infoInToolbar.setText(i18nString(UIStrings.coverageS, {PH1: this.coverage.usedPercentage().toFixed(1)}));\n    } else {\n      this.infoInToolbar.setTitle(i18nString(UIStrings.clickToShowCoveragePanel));\n      this.infoInToolbar.setText(i18nString(UIStrings.coverageNa));\n    }\n  }\n\n  async rightToolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [this.infoInToolbar];\n  }\n}\n"]}