{"version":3,"file":"BreakpointEditDialog.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/BreakpointEditDialog.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as ObjectUI from '../../ui/legacy/components/object_ui/object_ui.js';\nimport * as TextEditor from '../../ui/legacy/components/text_editor/text_editor.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Screen reader label for a select box that chooses the breakpoint type in the Sources panel when editing a breakpoint\n  */\n  breakpointType: 'Breakpoint type',\n  /**\n  *@description Text in Breakpoint Edit Dialog of the Sources panel\n  */\n  breakpoint: 'Breakpoint',\n  /**\n  *@description Text in Breakpoint Edit Dialog of the Sources panel\n  */\n  conditionalBreakpoint: 'Conditional breakpoint',\n  /**\n  *@description Text in Breakpoint Edit Dialog of the Sources panel\n  */\n  logpoint: 'Logpoint',\n  /**\n  *@description Text in Breakpoint Edit Dialog of the Sources panel\n  */\n  expressionToCheckBeforePausingEg: 'Expression to check before pausing, e.g. x > 5',\n  /**\n  *@description Type selector element title in Breakpoint Edit Dialog of the Sources panel\n  */\n  pauseOnlyWhenTheConditionIsTrue: 'Pause only when the condition is true',\n  /**\n  *@description Text in Breakpoint Edit Dialog of the Sources panel\n  */\n  logMessageEgXIsX: 'Log message, e.g. \\'x is\\', x',\n  /**\n  *@description Type selector element title in Breakpoint Edit Dialog of the Sources panel\n  */\n  logAMessageToConsoleDoNotBreak: 'Log a message to Console, do not break',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/BreakpointEditDialog.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class BreakpointEditDialog extends UI.Widget.Widget {\n  _onFinish: (arg0: {\n    committed: boolean,\n    condition: string,\n  }) => Promise<void>;\n  _finished: boolean;\n  _editor: TextEditor.CodeMirrorTextEditor.CodeMirrorTextEditor|null;\n  _isLogpoint: boolean;\n  _typeSelector: UI.Toolbar.ToolbarComboBox;\n\n  constructor(editorLineNumber: number, oldCondition: string, preferLogpoint: boolean, onFinish: (arg0: {\n                                                                                         committed: boolean,\n                                                                                         condition: string,\n                                                                                       }) => Promise<void>) {\n    super(true);\n    this.registerRequiredCSS('panels/sources/breakpointEditDialog.css', {enableLegacyPatching: false});\n    this._onFinish = onFinish;\n    this._finished = false;\n    this._editor = null;\n    this.element.tabIndex = -1;\n\n    const logpointPrefix = LogpointPrefix;\n    const logpointSuffix = LogpointSuffix;\n    this._isLogpoint = oldCondition.startsWith(logpointPrefix) && oldCondition.endsWith(logpointSuffix);\n    if (this._isLogpoint) {\n      oldCondition = oldCondition.substring(logpointPrefix.length, oldCondition.length - logpointSuffix.length);\n    }\n    this._isLogpoint = this._isLogpoint || preferLogpoint;\n\n    this.element.classList.add('sources-edit-breakpoint-dialog');\n    const toolbar = new UI.Toolbar.Toolbar('source-frame-breakpoint-toolbar', this.contentElement);\n    toolbar.appendText(`Line ${editorLineNumber + 1}:`);\n\n    this._typeSelector =\n        new UI.Toolbar.ToolbarComboBox(this._onTypeChanged.bind(this), i18nString(UIStrings.breakpointType));\n    this._typeSelector.createOption(i18nString(UIStrings.breakpoint), BreakpointType.Breakpoint);\n    const conditionalOption =\n        this._typeSelector.createOption(i18nString(UIStrings.conditionalBreakpoint), BreakpointType.Conditional);\n    const logpointOption = this._typeSelector.createOption(i18nString(UIStrings.logpoint), BreakpointType.Logpoint);\n    this._typeSelector.select(this._isLogpoint ? logpointOption : conditionalOption);\n    toolbar.appendToolbarItem(this._typeSelector);\n\n    const factory = TextEditor.CodeMirrorTextEditor.CodeMirrorTextEditorFactory.instance();\n    const editorOptions = {\n      lineNumbers: false,\n      lineWrapping: true,\n      mimeType: 'javascript',\n      autoHeight: true,\n      bracketMatchingSetting: undefined,\n      devtoolsAccessibleName: undefined,\n      padBottom: undefined,\n      maxHighlightLength: undefined,\n      placeholder: undefined,\n      lineWiseCopyCut: undefined,\n      inputStyle: undefined,\n    };\n    this._editor = factory.createEditor(editorOptions);\n    this._updatePlaceholder();\n    this._editor.widget().element.classList.add('condition-editor');\n    this._editor.configureAutocomplete(\n        ObjectUI.JavaScriptAutocomplete.JavaScriptAutocompleteConfig.createConfigForEditor(this._editor));\n    if (oldCondition) {\n      this._editor.setText(oldCondition);\n    }\n    this._editor.widget().markAsExternallyManaged();\n    this._editor.widget().show(this.contentElement);\n    this._editor.setSelection(this._editor.fullRange());\n    this._editor.widget().element.addEventListener('keydown', this._onKeyDown.bind(this), true);\n    this.element.addEventListener('blur', event => {\n      if (event.relatedTarget && !(event.relatedTarget as Node).isSelfOrDescendant(this.element)) {\n        this._finishEditing(true);\n      }\n    }, true);\n  }\n\n  focusEditor(): void {\n    if (this._editor) {\n      this._editor.widget().focus();\n    }\n  }\n  static _conditionForLogpoint(condition: string): string {\n    return `${LogpointPrefix}${condition}${LogpointSuffix}`;\n  }\n\n  _onTypeChanged(): void {\n    const option = this._typeSelector.selectedOption();\n    if (!option || !this._editor) {\n      return;\n    }\n    const value = option.value;\n    this._isLogpoint = value === BreakpointType.Logpoint;\n    this._updatePlaceholder();\n    if (value === BreakpointType.Breakpoint) {\n      this._editor.setText('');\n      this._finishEditing(true);\n    }\n  }\n\n  _updatePlaceholder(): void {\n    const option = this._typeSelector.selectedOption();\n    if (!option || !this._editor) {\n      return;\n    }\n    const selectedValue = option.value;\n    if (selectedValue === BreakpointType.Conditional) {\n      this._editor.setPlaceholder(i18nString(UIStrings.expressionToCheckBeforePausingEg));\n      UI.Tooltip.Tooltip.install((this._typeSelector.element), i18nString(UIStrings.pauseOnlyWhenTheConditionIsTrue));\n    } else if (selectedValue === BreakpointType.Logpoint) {\n      this._editor.setPlaceholder(i18nString(UIStrings.logMessageEgXIsX));\n      UI.Tooltip.Tooltip.install((this._typeSelector.element), i18nString(UIStrings.logAMessageToConsoleDoNotBreak));\n    }\n  }\n\n  _finishEditing(committed: boolean): void {\n    if (this._finished) {\n      return;\n    }\n    this._finished = true;\n    if (!this._editor) {\n      return;\n    }\n    this._editor.widget().detach();\n    let condition = this._editor.text();\n    if (this._isLogpoint) {\n      condition = BreakpointEditDialog._conditionForLogpoint(condition);\n    }\n    this._onFinish({committed, condition});\n  }\n\n  async _onKeyDown(event: Event): Promise<void> {\n    if (!(event instanceof KeyboardEvent) || !this._editor) {\n      return;\n    }\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.consume(true);\n      const expression = this._editor.text();\n      if (event.ctrlKey ||\n          await ObjectUI.JavaScriptAutocomplete.JavaScriptAutocomplete.isExpressionComplete(expression)) {\n        this._finishEditing(true);\n      } else {\n        this._editor.newlineAndIndent();\n      }\n    }\n    if (isEscKey(event)) {\n      this._finishEditing(false);\n      event.stopImmediatePropagation();\n    }\n  }\n}\n\nexport const LogpointPrefix = '/** DEVTOOLS_LOGPOINT */ console.log(';\nexport const LogpointSuffix = ')';\n\nexport const BreakpointType = {\n  Breakpoint: 'Breakpoint',\n  Conditional: 'Conditional',\n  Logpoint: 'Logpoint',\n};\n"]}