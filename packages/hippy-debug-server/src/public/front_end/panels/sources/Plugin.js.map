{"version":3,"file":"Plugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/Plugin.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAO7B,MAAM,OAAO,MAAM;IACjB,MAAM,CAAC,OAAO,CAAC,aAAkD;QAC/D,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ;IACR,CAAC;IAED,QAAQ;IACR,CAAC;IAED,KAAK,CAAC,iBAAiB;QACrB,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;;;OAIG;IACH,gBAAgB;QACd,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,6BAA6B,CAAC,YAAwC,EAAE,WAAmB;QACzF,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,2BAA2B,CAAC,YAAwC,EAAE,WAAmB,EAAE,aAAqB;QAE9G,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAED,OAAO;IACP,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Workspace from '../../models/workspace/workspace.js'; // eslint-disable-line no-unused-vars\nimport type * as UI from '../../ui/legacy/legacy.js';                  // eslint-disable-line no-unused-vars\n\nexport class Plugin {\n  static accepts(_uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return false;\n  }\n\n  wasShown(): void {\n  }\n\n  willHide(): void {\n  }\n\n  async rightToolbarItems(): Promise<UI.Toolbar.ToolbarItem[]> {\n    return [];\n  }\n\n  /**\n   *\n   * TODO(szuend): It is OK to asyncify this function (similar to {rightToolbarItems}),\n   *               but it is currently not strictly necessary.\n   */\n  leftToolbarItems(): UI.Toolbar.ToolbarItem[] {\n    return [];\n  }\n\n  populateLineGutterContextMenu(_contextMenu: UI.ContextMenu.ContextMenu, _lineNumber: number): Promise<void> {\n    return Promise.resolve();\n  }\n\n  populateTextAreaContextMenu(_contextMenu: UI.ContextMenu.ContextMenu, _lineNumber: number, _columnNumber: number):\n      Promise<void> {\n    return Promise.resolve();\n  }\n\n  dispose(): void {\n  }\n}\n"]}