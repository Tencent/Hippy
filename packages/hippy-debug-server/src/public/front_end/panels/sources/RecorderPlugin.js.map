{"version":3,"file":"RecorderPlugin.js","sourceRoot":"","sources":["../../../../../../front_end/panels/sources/RecorderPlugin.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,QAAQ,MAAM,mCAAmC,CAAC;AAG9D,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAEhD,OAAO,EAAC,MAAM,EAAC,MAAM,aAAa,CAAC;AAEnC,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,MAAM,EAAE,QAAQ;IAChB;;MAEE;IACF,IAAI,EAAE,QAAQ;IACd;;MAEE;IACF,MAAM,EAAE,QAAQ;CACjB,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AACxF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,OAAO,cAAe,SAAQ,MAAM;IACxC,WAAW,CAAkD;IAC7D,aAAa,CAAsC;IAEnD,YACI,UAA2D,EAAE,YAAiD;QAChH,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;IACpC,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,YAAiD;QAC9D,OAAO,QAAQ,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC;IAC5E,CAAC;IAED,gBAAgB;QACd,MAAM,eAAe,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,CAAC;QAChG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QACtD,MAAM,eAAe,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,CAAC;QAChG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;QACpD,MAAM,eAAe,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,uBAAuB,CAAC,2BAA2B,CAAC,CAAC;QAChG,eAAe,CAAC,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;QAEtD,OAAO,CAAC,eAAe,EAAE,eAAe,EAAE,eAAe,CAAC,CAAC;IAC7D,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Recorder from '../../models/recorder/recorder.js';\nimport type * as Workspace from '../../models/workspace/workspace.js'; // eslint-disable-line no-unused-vars\nimport type * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js'; // eslint-disable-line no-unused-vars\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {Plugin} from './Plugin.js';\n\nconst UIStrings = {\n  /**\n  *@description Text to record a series of actions for analysis\n  */\n  record: 'Record',\n  /**\n  *@description Text to replay a recording\n  */\n  play: 'Replay',\n  /**\n  *@description Text of a button to export as a Puppeteer script\n  */\n  export: 'Export',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/sources/RecorderPlugin.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class RecorderPlugin extends Plugin {\n  _textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor;\n  _uiSourceCode: Workspace.UISourceCode.UISourceCode;\n\n  constructor(\n      textEditor: SourceFrame.SourcesTextEditor.SourcesTextEditor, uiSourceCode: Workspace.UISourceCode.UISourceCode) {\n    super();\n    this._textEditor = textEditor;\n    this._uiSourceCode = uiSourceCode;\n  }\n\n  static accepts(uiSourceCode: Workspace.UISourceCode.UISourceCode): boolean {\n    return Recorder.RecordingFileSystem.isRecordingUISourceCode(uiSourceCode);\n  }\n\n  leftToolbarItems(): UI.Toolbar.ToolbarItem[] {\n    const toggleRecording = UI.Toolbar.Toolbar.createActionButtonForId('recorder.toggle-recording');\n    toggleRecording.setText(i18nString(UIStrings.record));\n    const replayRecording = UI.Toolbar.Toolbar.createActionButtonForId('recorder.replay-recording');\n    replayRecording.setText(i18nString(UIStrings.play));\n    const exportRecording = UI.Toolbar.Toolbar.createActionButtonForId('recorder.export-recording');\n    exportRecording.setText(i18nString(UIStrings.export));\n\n    return [toggleRecording, replayRecording, exportRecording];\n  }\n}\n"]}