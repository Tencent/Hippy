{"version":3,"file":"InputModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/screencast/InputModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nexport class InputModel extends SDK.SDKModel.SDKModel {\n  _inputAgent: ProtocolProxyApi.InputApi;\n  _activeTouchOffsetTop: number|null;\n  _activeTouchParams: Protocol.Input.EmulateTouchFromMouseEventRequest|null;\n\n  constructor(target: SDK.Target.Target) {\n    super(target);\n    this._inputAgent = target.inputAgent();\n    this._activeTouchOffsetTop = null;\n    this._activeTouchParams = null;\n  }\n\n  emitKeyEvent(event: Event): void {\n    let type: Protocol.Input.DispatchKeyEventRequestType;\n    switch (event.type) {\n      case 'keydown':\n        type = Protocol.Input.DispatchKeyEventRequestType.KeyDown;\n        break;\n      case 'keyup':\n        type = Protocol.Input.DispatchKeyEventRequestType.KeyUp;\n        break;\n      case 'keypress':\n        type = Protocol.Input.DispatchKeyEventRequestType.Char;\n        break;\n      default:\n        return;\n    }\n    const keyboardEvent = event as KeyboardEvent;\n    const text = event.type === 'keypress' ? String.fromCharCode(keyboardEvent.charCode) : undefined;\n    this._inputAgent.invoke_dispatchKeyEvent({\n      type: type,\n      modifiers: this._modifiersForEvent(keyboardEvent),\n      text: text,\n      unmodifiedText: text ? text.toLowerCase() : undefined,\n      keyIdentifier: (keyboardEvent as {keyIdentifier?: string}).keyIdentifier,\n      code: keyboardEvent.code,\n      key: keyboardEvent.key,\n      windowsVirtualKeyCode: keyboardEvent.keyCode,\n      nativeVirtualKeyCode: keyboardEvent.keyCode,\n      autoRepeat: false,\n      isKeypad: false,\n      isSystemKey: false,\n    });\n  }\n\n  emitTouchFromMouseEvent(event: Event, offsetTop: number, zoom: number): void {\n    const buttons = ['none', 'left', 'middle', 'right'] as Protocol.Input.MouseButton[];\n    const types: {[key: string]: Protocol.Input.EmulateTouchFromMouseEventRequestType} = {\n      mousedown: Protocol.Input.EmulateTouchFromMouseEventRequestType.MousePressed,\n      mouseup: Protocol.Input.EmulateTouchFromMouseEventRequestType.MouseReleased,\n      mousemove: Protocol.Input.EmulateTouchFromMouseEventRequestType.MouseMoved,\n      mousewheel: Protocol.Input.EmulateTouchFromMouseEventRequestType.MouseWheel,\n    };\n\n    const eventType = event.type as string;\n    if (!(eventType in types)) {\n      return;\n    }\n\n    const mouseEvent = event as MouseEvent;\n\n    if (!(mouseEvent.which in buttons)) {\n      return;\n    }\n    if (eventType !== 'mousewheel' && buttons[mouseEvent.which] === 'none') {\n      return;\n    }\n\n    if (eventType === 'mousedown' || this._activeTouchOffsetTop === null) {\n      this._activeTouchOffsetTop = offsetTop;\n    }\n\n    const x = Math.round(mouseEvent.offsetX / zoom);\n    let y = Math.round(mouseEvent.offsetY / zoom);\n    y = Math.round(y - this._activeTouchOffsetTop);\n    const params: Protocol.Input.EmulateTouchFromMouseEventRequest = {\n      type: types[eventType],\n      x: x,\n      y: y,\n      modifiers: 0,\n      button: buttons[mouseEvent.which],\n      clickCount: 0,\n    };\n    if (event.type === 'mousewheel') {\n      const wheelEvent = mouseEvent as WheelEvent;\n      params.deltaX = wheelEvent.deltaX / zoom;\n      params.deltaY = -wheelEvent.deltaY / zoom;\n    } else {\n      this._activeTouchParams = params;\n    }\n    if (event.type === 'mouseup') {\n      this._activeTouchOffsetTop = null;\n    }\n    this._inputAgent.invoke_emulateTouchFromMouseEvent(params);\n  }\n\n  cancelTouch(): void {\n    if (this._activeTouchParams !== null) {\n      const params = this._activeTouchParams;\n      this._activeTouchParams = null;\n      params.type = 'mouseReleased' as Protocol.Input.EmulateTouchFromMouseEventRequestType;\n      this._inputAgent.invoke_emulateTouchFromMouseEvent(params);\n    }\n  }\n\n  _modifiersForEvent(event: KeyboardEvent): number {\n    return (event.altKey ? 1 : 0) | (event.ctrlKey ? 2 : 0) | (event.metaKey ? 4 : 0) | (event.shiftKey ? 8 : 0);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(InputModel, {capabilities: SDK.Target.Capability.Input, autostart: false});\n"]}