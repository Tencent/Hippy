{"version":3,"file":"Layers3DView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/layer_viewer/Layers3DView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {LayerView, LayerViewHost} from './LayerViewHost.js';\nimport {LayerSelection, Selection, SnapshotSelection, Type, ScrollRectSelection} from './LayerViewHost.js';\nimport {Events as TransformControllerEvents, TransformController} from './TransformController.js';\n\nconst UIStrings = {\n  /**\n  *@description Text of a DOM element in DView of the Layers panel\n  */\n  layerInformationIsNotYet: 'Layer information is not yet available.',\n  /**\n  *@description Accessibility label for canvas view in Layers tool\n  */\n  dLayersView: '3D Layers View',\n  /**\n  *@description Text in DView of the Layers panel\n  */\n  cantDisplayLayers: 'Can\\'t display layers,',\n  /**\n  *@description Text in DView of the Layers panel\n  */\n  webglSupportIsDisabledInYour: 'WebGL support is disabled in your browser.',\n  /**\n  *@description Text in DView of the Layers panel\n  *@example {about:gpu} PH1\n  */\n  checkSForPossibleReasons: 'Check {PH1} for possible reasons.',\n  /**\n  *@description Text for a checkbox in the toolbar of the Layers panel to show the area of slow scroll rect\n  */\n  slowScrollRects: 'Slow scroll rects',\n  /**\n  * @description Text for a checkbox in the toolbar of the Layers panel. This is a noun, for a\n  * setting meaning 'display paints in the layers viewer'. 'Paints' here means 'paint events' i.e.\n  * when the browser draws pixels to the screen.\n  */\n  paints: 'Paints',\n  /**\n  *@description A context menu item in the DView of the Layers panel\n  */\n  resetView: 'Reset View',\n  /**\n  *@description A context menu item in the DView of the Layers panel\n  */\n  showPaintProfiler: 'Show Paint Profiler',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/layer_viewer/Layers3DView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst vertexPositionAttributes = new Map<WebGLProgram, number>();\n\nconst vertexColorAttributes = new Map<WebGLProgram, number>();\n\nconst textureCoordAttributes = new Map<WebGLProgram, number>();\n\nconst uniformMatrixLocations = new Map<WebGLProgram, WebGLUniformLocation|null>();\n\nconst uniformSamplerLocations = new Map<WebGLProgram, WebGLUniformLocation|null>();\n\nconst imageForTexture = new Map<WebGLTexture, HTMLImageElement>();\n\nexport class Layers3DView extends UI.Widget.VBox implements LayerView {\n  _failBanner: UI.Widget.VBox;\n  _layerViewHost: LayerViewHost;\n  _transformController: TransformController;\n  _canvasElement: HTMLCanvasElement;\n  _lastSelection: {[x: string]: Selection|null};\n  _layerTree: SDK.LayerTreeBase.LayerTreeBase|null;\n  _textureManager: LayerTextureManager;\n  _chromeTextures: (WebGLTexture|undefined)[];\n  _rects: Rectangle[];\n  _snapshotLayers: Map<SDK.LayerTreeBase.Layer, SnapshotSelection>;\n  _shaderProgram!: WebGLProgram|null;\n  _oldTextureScale!: number|undefined;\n  _depthByLayerId!: Map<string, number>;\n  _visibleLayers!: Set<SDK.LayerTreeBase.Layer>;\n  _maxDepth!: number;\n  _scale!: number;\n  _layerTexture?: {layer: SDK.LayerTreeBase.Layer, texture: WebGLTexture}|null;\n  _projectionMatrix?: DOMMatrix;\n  _whiteTexture?: WebGLTexture|null;\n  _gl?: WebGLRenderingContext|null;\n  _dimensionsForAutoscale?: {width: number, height: number};\n  _needsUpdate?: boolean;\n  _panelToolbar?: UI.Toolbar.Toolbar;\n  _showSlowScrollRectsSetting?: Common.Settings.Setting<boolean>;\n  _showPaintsSetting?: Common.Settings.Setting<boolean>;\n  _mouseDownX?: number;\n  _mouseDownY?: number;\n\n  constructor(layerViewHost: LayerViewHost) {\n    super(true);\n\n    this.registerRequiredCSS('panels/layer_viewer/layers3DView.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('layers-3d-view');\n    this._failBanner = new UI.Widget.VBox();\n    this._failBanner.element.classList.add('full-widget-dimmed-banner');\n    UI.UIUtils.createTextChild(this._failBanner.element, i18nString(UIStrings.layerInformationIsNotYet));\n\n    this._layerViewHost = layerViewHost;\n    this._layerViewHost.registerView(this);\n    this._transformController = new TransformController(this.contentElement as HTMLElement);\n    this._transformController.addEventListener(TransformControllerEvents.TransformChanged, this._update, this);\n    this._initToolbar();\n    this._canvasElement = this.contentElement.createChild('canvas') as HTMLCanvasElement;\n    this._canvasElement.tabIndex = 0;\n    this._canvasElement.addEventListener('dblclick', this._onDoubleClick.bind(this), false);\n    this._canvasElement.addEventListener('mousedown', this._onMouseDown.bind(this), false);\n    this._canvasElement.addEventListener('mouseup', this._onMouseUp.bind(this), false);\n    this._canvasElement.addEventListener('mouseleave', this._onMouseMove.bind(this), false);\n    this._canvasElement.addEventListener('mousemove', this._onMouseMove.bind(this), false);\n    this._canvasElement.addEventListener('contextmenu', this._onContextMenu.bind(this), false);\n    UI.ARIAUtils.setAccessibleName(this._canvasElement, i18nString(UIStrings.dLayersView));\n\n    this._lastSelection = {};\n    this._layerTree = null;\n\n    this._textureManager = new LayerTextureManager(this._update.bind(this));\n\n    this._chromeTextures = [];\n\n    this._rects = [];\n\n    this._snapshotLayers = new Map();\n    this._layerViewHost.setLayerSnapshotMap(this._snapshotLayers);\n\n    this._layerViewHost.showInternalLayersSetting().addChangeListener(this._update, this);\n  }\n\n  setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n    this._layerTree = layerTree;\n    this._layerTexture = null;\n    delete this._oldTextureScale;\n    if (this._showPaints()) {\n      this._textureManager.setLayerTree(layerTree);\n    }\n    this._update();\n  }\n\n  showImageForLayer(layer: SDK.LayerTreeBase.Layer, imageURL?: string): void {\n    if (!imageURL) {\n      this._layerTexture = null;\n      this._update();\n      return;\n    }\n    UI.UIUtils.loadImage(imageURL).then(image => {\n      const texture = image && LayerTextureManager._createTextureForImage(this._gl || null, image);\n      this._layerTexture = texture ? {layer: layer, texture: texture} : null;\n      this._update();\n    });\n  }\n\n  onResize(): void {\n    this._resizeCanvas();\n    this._update();\n  }\n\n  willHide(): void {\n    this._textureManager.suspend();\n  }\n\n  wasShown(): void {\n    this._textureManager.resume();\n    if (!this._needsUpdate) {\n      return;\n    }\n    this._resizeCanvas();\n    this._update();\n  }\n\n  updateLayerSnapshot(layer: SDK.LayerTreeBase.Layer): void {\n    this._textureManager.layerNeedsUpdate(layer);\n  }\n\n  _setOutline(type: OutlineType, selection: Selection|null): void {\n    this._lastSelection[type] = selection;\n    this._update();\n  }\n\n  hoverObject(selection: Selection|null): void {\n    this._setOutline(OutlineType.Hovered, selection);\n  }\n\n  selectObject(selection: Selection|null): void {\n    this._setOutline(OutlineType.Hovered, null);\n    this._setOutline(OutlineType.Selected, selection);\n  }\n\n  snapshotForSelection(selection: Selection): Promise<SDK.PaintProfiler.SnapshotWithRect|null> {\n    if (selection.type() === Type.Snapshot) {\n      const snapshotWithRect = (selection as SnapshotSelection).snapshot();\n      snapshotWithRect.snapshot.addReference();\n      return /** @type {!Promise<?SDK.PaintProfiler.SnapshotWithRect>} */ Promise.resolve(snapshotWithRect) as\n          Promise<SDK.PaintProfiler.SnapshotWithRect|null>;\n    }\n    if (selection.layer()) {\n      const promise = selection.layer().snapshots()[0];\n      if (promise !== undefined) {\n        return promise;\n      }\n    }\n    return /** @type {!Promise<?SDK.PaintProfiler.SnapshotWithRect>} */ Promise.resolve(null) as\n        Promise<SDK.PaintProfiler.SnapshotWithRect|null>;\n  }\n\n  _initGL(canvas: HTMLCanvasElement): WebGLRenderingContext|null {\n    const gl = canvas.getContext('webgl');\n    if (!gl) {\n      return null;\n    }\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.enable(gl.BLEND);\n    gl.clearColor(0.0, 0.0, 0.0, 0.0);\n    gl.enable(gl.DEPTH_TEST);\n    return /** @type {!WebGLRenderingContext} */ gl as WebGLRenderingContext;\n  }\n\n  _createShader(type: number, script: string): void {\n    if (!this._gl) {\n      return;\n    }\n\n    const shader = this._gl.createShader(type);\n    if (shader && this._shaderProgram) {\n      this._gl.shaderSource(shader, script);\n      this._gl.compileShader(shader);\n      this._gl.attachShader(this._shaderProgram, shader);\n    }\n  }\n\n  _initShaders(): void {\n    if (!this._gl) {\n      return;\n    }\n\n    this._shaderProgram = this._gl.createProgram();\n    if (!this._shaderProgram) {\n      return;\n    }\n    this._createShader(this._gl.FRAGMENT_SHADER, FragmentShader);\n    this._createShader(this._gl.VERTEX_SHADER, VertexShader);\n    this._gl.linkProgram(this._shaderProgram);\n    this._gl.useProgram(this._shaderProgram);\n\n    const aVertexPositionAttribute = this._gl.getAttribLocation(this._shaderProgram, 'aVertexPosition');\n    this._gl.enableVertexAttribArray(aVertexPositionAttribute);\n    vertexPositionAttributes.set(this._shaderProgram, aVertexPositionAttribute);\n\n    const aVertexColorAttribute = this._gl.getAttribLocation(this._shaderProgram, 'aVertexColor');\n    this._gl.enableVertexAttribArray(aVertexColorAttribute);\n    vertexColorAttributes.set(this._shaderProgram, aVertexColorAttribute);\n\n    const aTextureCoordAttribute = this._gl.getAttribLocation(this._shaderProgram, 'aTextureCoord');\n    this._gl.enableVertexAttribArray(aTextureCoordAttribute);\n    textureCoordAttributes.set(this._shaderProgram, aTextureCoordAttribute);\n\n    const uMatrixLocation = this._gl.getUniformLocation(this._shaderProgram, 'uPMatrix');\n    uniformMatrixLocations.set(this._shaderProgram, uMatrixLocation);\n\n    const uSamplerLocation = this._gl.getUniformLocation(this._shaderProgram, 'uSampler');\n    uniformSamplerLocations.set(this._shaderProgram, uSamplerLocation);\n  }\n\n  _resizeCanvas(): void {\n    this._canvasElement.width = this._canvasElement.offsetWidth * window.devicePixelRatio;\n    this._canvasElement.height = this._canvasElement.offsetHeight * window.devicePixelRatio;\n  }\n\n  _updateTransformAndConstraints(): void {\n    const paddingFraction = 0.1;\n    const dimensionsForAutoscale = this._dimensionsForAutoscale || {width: 0, height: 0};\n    const viewport = this._layerTree ? this._layerTree.viewportSize() : null;\n    const baseWidth = viewport ? viewport.width : dimensionsForAutoscale.width;\n    const baseHeight = viewport ? viewport.height : dimensionsForAutoscale.height;\n    const canvasWidth = this._canvasElement.width;\n    const canvasHeight = this._canvasElement.height;\n    const paddingX = canvasWidth * paddingFraction;\n    const paddingY = canvasHeight * paddingFraction;\n    const scaleX = (canvasWidth - 2 * paddingX) / baseWidth;\n    const scaleY = (canvasHeight - 2 * paddingY) / baseHeight;\n    const viewScale = Math.min(scaleX, scaleY);\n    const minScaleConstraint =\n        Math.min(baseWidth / dimensionsForAutoscale.width, baseHeight / dimensionsForAutoscale.width) / 2;\n    this._transformController.setScaleConstraints(\n        minScaleConstraint,\n        10 / viewScale);  // 1/viewScale is 1:1 in terms of pixels, so allow zooming to 10x of native size\n    const scale = this._transformController.scale();\n    const rotateX = this._transformController.rotateX();\n    const rotateY = this._transformController.rotateY();\n\n    this._scale = scale * viewScale;\n    const textureScale = Platform.NumberUtilities.clamp(this._scale, 0.1, 1);\n    if (textureScale !== this._oldTextureScale) {\n      this._oldTextureScale = textureScale;\n      this._textureManager.setScale(textureScale);\n      this.dispatchEventToListeners(Events.ScaleChanged, textureScale);\n    }\n    const scaleAndRotationMatrix = new WebKitCSSMatrix()\n                                       .scale(scale, scale, scale)\n                                       .translate(canvasWidth / 2, canvasHeight / 2, 0)\n                                       .rotate(rotateX, rotateY, 0)\n                                       .scale(viewScale, viewScale, viewScale)\n                                       .translate(-baseWidth / 2, -baseHeight / 2, 0);\n\n    let bounds;\n    for (let i = 0; i < this._rects.length; ++i) {\n      bounds = UI.Geometry.boundsForTransformedPoints(scaleAndRotationMatrix, this._rects[i].vertices, bounds);\n    }\n\n    if (bounds) {\n      this._transformController.clampOffsets(\n          (paddingX - bounds.maxX) / window.devicePixelRatio,\n          (canvasWidth - paddingX - bounds.minX) / window.devicePixelRatio,\n          (paddingY - bounds.maxY) / window.devicePixelRatio,\n          (canvasHeight - paddingY - bounds.minY) / window.devicePixelRatio);\n    }\n    const offsetX = this._transformController.offsetX() * window.devicePixelRatio;\n    const offsetY = this._transformController.offsetY() * window.devicePixelRatio;\n    // Multiply to translation matrix on the right rather than translate (which would implicitly multiply on the left).\n    this._projectionMatrix = new WebKitCSSMatrix().translate(offsetX, offsetY, 0).multiply(scaleAndRotationMatrix);\n\n    const glProjectionMatrix = new WebKitCSSMatrix()\n                                   .scale(1, -1, -1)\n                                   .translate(-1, -1, 0)\n                                   .scale(2 / this._canvasElement.width, 2 / this._canvasElement.height, 1 / 1000000)\n                                   .multiply(this._projectionMatrix);\n\n    if (this._shaderProgram) {\n      const pMatrixUniform = uniformMatrixLocations.get(this._shaderProgram);\n      if (this._gl && pMatrixUniform) {\n        this._gl.uniformMatrix4fv(pMatrixUniform, false, this._arrayFromMatrix(glProjectionMatrix));\n      }\n    }\n  }\n\n  _arrayFromMatrix(m: DOMMatrix): Float32Array {\n    return new Float32Array([\n      m.m11,\n      m.m12,\n      m.m13,\n      m.m14,\n      m.m21,\n      m.m22,\n      m.m23,\n      m.m24,\n      m.m31,\n      m.m32,\n      m.m33,\n      m.m34,\n      m.m41,\n      m.m42,\n      m.m43,\n      m.m44,\n    ]);\n  }\n\n  _initWhiteTexture(): void {\n    if (!this._gl) {\n      return;\n    }\n\n    this._whiteTexture = this._gl.createTexture();\n    this._gl.bindTexture(this._gl.TEXTURE_2D, this._whiteTexture);\n    const whitePixel = new Uint8Array([255, 255, 255, 255]);\n    this._gl.texImage2D(\n        this._gl.TEXTURE_2D, 0, this._gl.RGBA, 1, 1, 0, this._gl.RGBA, this._gl.UNSIGNED_BYTE, whitePixel);\n  }\n\n  _initChromeTextures(): void {\n    function loadChromeTexture(this: Layers3DView, index: ChromeTexture, url: string): void {\n      UI.UIUtils.loadImage(url).then(image => {\n        this._chromeTextures[index] =\n            image && LayerTextureManager._createTextureForImage(this._gl || null, image) || undefined;\n      });\n    }\n    loadChromeTexture.call(this, ChromeTexture.Left, 'Images/chromeLeft.avif');\n    loadChromeTexture.call(this, ChromeTexture.Middle, 'Images/chromeMiddle.avif');\n    loadChromeTexture.call(this, ChromeTexture.Right, 'Images/chromeRight.avif');\n  }\n\n  _initGLIfNecessary(): WebGLRenderingContext|null {\n    if (this._gl) {\n      return this._gl;\n    }\n    this._gl = this._initGL(this._canvasElement);\n    if (!this._gl) {\n      return null;\n    }\n    this._initShaders();\n    this._initWhiteTexture();\n    this._initChromeTextures();\n    this._textureManager.setContext(this._gl);\n    return this._gl;\n  }\n\n  _calculateDepthsAndVisibility(): void {\n    /** @type {!Map<string, number>} */\n    this._depthByLayerId = new Map();\n    let depth = 0;\n    const showInternalLayers = this._layerViewHost.showInternalLayersSetting().get();\n    if (!this._layerTree) {\n      return;\n    }\n\n    const root =\n        showInternalLayers ? this._layerTree.root() : (this._layerTree.contentRoot() || this._layerTree.root());\n    if (!root) {\n      return;\n    }\n\n    const queue = [root];\n    this._depthByLayerId.set(root.id(), 0);\n    /** @type {!Set<!SDK.LayerTreeBase.Layer>} */\n    this._visibleLayers = new Set();\n    while (queue.length > 0) {\n      const layer = queue.shift();\n      if (!layer) {\n        break;\n      }\n\n      if (showInternalLayers || layer.drawsContent()) {\n        this._visibleLayers.add(layer);\n      }\n      const children = layer.children();\n      for (let i = 0; i < children.length; ++i) {\n        this._depthByLayerId.set(children[i].id(), ++depth);\n        queue.push(children[i]);\n      }\n    }\n    this._maxDepth = depth;\n  }\n\n  _depthForLayer(layer: SDK.LayerTreeBase.Layer): number {\n    return (this._depthByLayerId.get(layer.id()) || 0) * LayerSpacing;\n  }\n\n  _calculateScrollRectDepth(layer: SDK.LayerTreeBase.Layer, index: number): number {\n    return this._depthForLayer(layer) + index * ScrollRectSpacing + 1;\n  }\n\n  _updateDimensionsForAutoscale(layer: SDK.LayerTreeBase.Layer): void {\n    // We don't want to be precise, but rather pick something least affected by\n    // animationtransforms, so that we don't change scale too often. So let's\n    // disregard transforms, scrolling and relative layer positioning and choose\n    // the largest dimensions of all layers.\n    if (!this._dimensionsForAutoscale) {\n      this._dimensionsForAutoscale = {width: 0, height: 0};\n    }\n\n    this._dimensionsForAutoscale.width = Math.max(layer.width(), this._dimensionsForAutoscale.width);\n    this._dimensionsForAutoscale.height = Math.max(layer.height(), this._dimensionsForAutoscale.height);\n  }\n\n  _calculateLayerRect(layer: SDK.LayerTreeBase.Layer): void {\n    if (!this._visibleLayers.has(layer)) {\n      return;\n    }\n    const selection = new LayerSelection(layer);\n    const rect = new Rectangle(selection);\n    rect.setVertices(layer.quad(), this._depthForLayer(layer));\n    this._appendRect(rect);\n    this._updateDimensionsForAutoscale(layer);\n  }\n\n  _appendRect(rect: Rectangle): void {\n    const selection = rect.relatedObject;\n    const isSelected = Selection.isEqual(this._lastSelection[OutlineType.Selected], selection);\n    const isHovered = Selection.isEqual(this._lastSelection[OutlineType.Hovered], selection);\n    if (isSelected) {\n      rect.borderColor = SelectedBorderColor;\n    } else if (isHovered) {\n      rect.borderColor = HoveredBorderColor;\n      const fillColor = rect.fillColor || [255, 255, 255, 1];\n      const maskColor = HoveredImageMaskColor;\n      rect.fillColor = [\n        fillColor[0] * maskColor[0] / 255,\n        fillColor[1] * maskColor[1] / 255,\n        fillColor[2] * maskColor[2] / 255,\n        fillColor[3] * maskColor[3],\n      ];\n    } else {\n      rect.borderColor = BorderColor;\n    }\n    rect.lineWidth = isSelected ? SelectedBorderWidth : BorderWidth;\n    this._rects.push(rect);\n  }\n\n  _calculateLayerScrollRects(layer: SDK.LayerTreeBase.Layer): void {\n    const scrollRects = layer.scrollRects();\n    for (let i = 0; i < scrollRects.length; ++i) {\n      const selection = new ScrollRectSelection(layer, i);\n      const rect = new Rectangle(selection);\n      rect.calculateVerticesFromRect(layer, scrollRects[i].rect, this._calculateScrollRectDepth(layer, i));\n      rect.fillColor = ScrollRectBackgroundColor;\n      this._appendRect(rect);\n    }\n  }\n\n  _calculateLayerTileRects(layer: SDK.LayerTreeBase.Layer): void {\n    const tiles = this._textureManager.tilesForLayer(layer);\n    for (let i = 0; i < tiles.length; ++i) {\n      const tile = tiles[i];\n      if (!tile.texture) {\n        continue;\n      }\n      const selection = new SnapshotSelection(layer, {rect: tile.rect, snapshot: tile.snapshot});\n      const rect = new Rectangle(selection);\n      if (!this._snapshotLayers.has(layer)) {\n        this._snapshotLayers.set(layer, selection);\n      }\n\n      rect.calculateVerticesFromRect(layer, tile.rect, this._depthForLayer(layer) + 1);\n      rect.texture = tile.texture;\n      this._appendRect(rect);\n    }\n  }\n\n  _calculateRects(): void {\n    this._rects = [];\n    this._snapshotLayers.clear();\n    this._dimensionsForAutoscale = {width: 0, height: 0};\n    if (this._layerTree) {\n      this._layerTree.forEachLayer(this._calculateLayerRect.bind(this));\n    }\n\n    if (this._showSlowScrollRectsSetting && this._showSlowScrollRectsSetting.get() && this._layerTree) {\n      this._layerTree.forEachLayer(this._calculateLayerScrollRects.bind(this));\n    }\n\n    if (this._layerTexture && this._visibleLayers.has(this._layerTexture.layer)) {\n      const layer = this._layerTexture.layer;\n      const selection = new LayerSelection(layer);\n      const rect = new Rectangle(selection);\n      rect.setVertices(layer.quad(), this._depthForLayer(layer));\n      rect.texture = this._layerTexture.texture;\n      this._appendRect(rect);\n    } else if (this._showPaints() && this._layerTree) {\n      this._layerTree.forEachLayer(this._calculateLayerTileRects.bind(this));\n    }\n  }\n\n  _makeColorsArray(color: number[]): number[] {\n    let colors: number[] = [];\n    const normalizedColor = [color[0] / 255, color[1] / 255, color[2] / 255, color[3]];\n    for (let i = 0; i < 4; i++) {\n      colors = colors.concat(normalizedColor);\n    }\n    return colors;\n  }\n\n  _setVertexAttribute(attribute: number, array: number[], length: number): void {\n    const gl = this._gl;\n    if (!gl) {\n      return;\n    }\n\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(array), gl.STATIC_DRAW);\n    gl.vertexAttribPointer(attribute, length, gl.FLOAT, false, 0, 0);\n  }\n\n  _drawRectangle(vertices: number[], mode: number, color?: number[], texture?: Object): void {\n    const gl = this._gl;\n    const white = [255, 255, 255, 1];\n    color = color || white;\n    if (!this._shaderProgram) {\n      return;\n    }\n\n    const vertexPositionAttribute = vertexPositionAttributes.get(this._shaderProgram);\n    const textureCoordAttribute = textureCoordAttributes.get(this._shaderProgram);\n    const vertexColorAttribute = vertexColorAttributes.get(this._shaderProgram);\n    if (typeof vertexPositionAttribute !== 'undefined') {\n      this._setVertexAttribute(vertexPositionAttribute, vertices, 3);\n    }\n    if (typeof textureCoordAttribute !== 'undefined') {\n      this._setVertexAttribute(textureCoordAttribute, [0, 1, 1, 1, 1, 0, 0, 0], 2);\n    }\n    if (typeof vertexColorAttribute !== 'undefined') {\n      this._setVertexAttribute(vertexColorAttribute, this._makeColorsArray(color), color.length);\n    }\n\n    if (!gl) {\n      return;\n    }\n\n    const samplerUniform = uniformSamplerLocations.get(this._shaderProgram);\n    if (texture) {\n      if (samplerUniform) {\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.uniform1i(samplerUniform, 0);\n      }\n    } else if (this._whiteTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, this._whiteTexture);\n    }\n\n    const numberOfVertices = vertices.length / 3;\n    gl.drawArrays(mode, 0, numberOfVertices);\n  }\n\n  _drawTexture(vertices: number[], texture: WebGLTexture, color?: number[]): void {\n    if (!this._gl) {\n      return;\n    }\n\n    this._drawRectangle(vertices, this._gl.TRIANGLE_FAN, color, texture);\n  }\n\n  _drawViewportAndChrome(): void {\n    if (!this._layerTree) {\n      return;\n    }\n\n    const viewport = this._layerTree.viewportSize();\n    if (!viewport) {\n      return;\n    }\n\n    const drawChrome = !Common.Settings.Settings.instance().moduleSetting('frameViewerHideChromeWindow').get() &&\n        this._chromeTextures.length >= 3 && this._chromeTextures.indexOf(undefined) < 0;\n    const z = (this._maxDepth + 1) * LayerSpacing;\n    const borderWidth = Math.ceil(ViewportBorderWidth * this._scale);\n    let vertices: number[] = [viewport.width, 0, z, viewport.width, viewport.height, z, 0, viewport.height, z, 0, 0, z];\n    if (!this._gl) {\n      return;\n    }\n\n    this._gl.lineWidth(borderWidth);\n    this._drawRectangle(vertices, drawChrome ? this._gl.LINE_STRIP : this._gl.LINE_LOOP, ViewportBorderColor);\n\n    if (!drawChrome) {\n      return;\n    }\n\n    const viewportSize = this._layerTree.viewportSize();\n    if (!viewportSize) {\n      return;\n    }\n\n    const borderAdjustment = ViewportBorderWidth / 2;\n    const viewportWidth = viewportSize.width + 2 * borderAdjustment;\n    if (this._chromeTextures[0] && this._chromeTextures[2]) {\n      const chromeTextureImage =\n          imageForTexture.get(this._chromeTextures[0] as WebGLTexture) || {naturalHeight: 0, naturalWidth: 0};\n      const chromeHeight = chromeTextureImage.naturalHeight;\n\n      const middleTextureImage =\n          imageForTexture.get(this._chromeTextures[2] as WebGLTexture) || {naturalHeight: 0, naturalWidth: 0};\n      const middleFragmentWidth = viewportWidth - chromeTextureImage.naturalWidth - middleTextureImage.naturalWidth;\n      let x = -borderAdjustment;\n      const y = -chromeHeight;\n      for (let i = 0; i < this._chromeTextures.length; ++i) {\n        const texture = this._chromeTextures[i];\n        if (!texture) {\n          continue;\n        }\n\n        const image = imageForTexture.get(texture);\n        if (!image) {\n          continue;\n        }\n        const width = i === ChromeTexture.Middle ? middleFragmentWidth : image.naturalWidth;\n        if (width < 0 || x + width > viewportWidth) {\n          break;\n        }\n        vertices = [x, y, z, x + width, y, z, x + width, y + chromeHeight, z, x, y + chromeHeight, z];\n        this._drawTexture(vertices, this._chromeTextures[i] as WebGLTexture);\n        x += width;\n      }\n    }\n  }\n\n  _drawViewRect(rect: Rectangle): void {\n    if (!this._gl) {\n      return;\n    }\n\n    const vertices = rect.vertices;\n    if (rect.texture) {\n      this._drawTexture(vertices, rect.texture, rect.fillColor || undefined);\n    } else if (rect.fillColor) {\n      this._drawRectangle(vertices, this._gl.TRIANGLE_FAN, rect.fillColor);\n    }\n    this._gl.lineWidth(rect.lineWidth);\n    if (rect.borderColor) {\n      this._drawRectangle(vertices, this._gl.LINE_LOOP, rect.borderColor);\n    }\n  }\n\n  _update(): void {\n    if (!this.isShowing()) {\n      this._needsUpdate = true;\n      return;\n    }\n    if (!this._layerTree || !this._layerTree.root()) {\n      this._failBanner.show(this.contentElement);\n      return;\n    }\n    const gl = this._initGLIfNecessary();\n    if (!gl) {\n      this._failBanner.element.removeChildren();\n      this._failBanner.element.appendChild(this._webglDisabledBanner());\n      this._failBanner.show(this.contentElement);\n      return;\n    }\n    this._failBanner.detach();\n    const viewportWidth = this._canvasElement.width;\n    const viewportHeight = this._canvasElement.height;\n\n    this._calculateDepthsAndVisibility();\n    this._calculateRects();\n    this._updateTransformAndConstraints();\n\n    gl.viewport(0, 0, viewportWidth, viewportHeight);\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n\n    this._rects.forEach(this._drawViewRect.bind(this));\n    this._drawViewportAndChrome();\n  }\n\n  _webglDisabledBanner(): Node {\n    const fragment = this.contentElement.ownerDocument.createDocumentFragment();\n    fragment.createChild('div').textContent = i18nString(UIStrings.cantDisplayLayers);\n    fragment.createChild('div').textContent = i18nString(UIStrings.webglSupportIsDisabledInYour);\n    fragment.appendChild(i18n.i18n.getFormatLocalizedString(\n        str_, UIStrings.checkSForPossibleReasons, {PH1: UI.XLink.XLink.create('about:gpu')}));\n    return fragment;\n  }\n\n  _selectionFromEventPoint(event: Event): Selection|null {\n    const mouseEvent = event as MouseEvent;\n    if (!this._layerTree) {\n      return null;\n    }\n    let closestIntersectionPoint: number = Infinity;\n    let closestObject: Selection|null = null;\n    const projectionMatrix =\n        new WebKitCSSMatrix().scale(1, -1, -1).translate(-1, -1, 0).multiply(this._projectionMatrix);\n    const x0 = (mouseEvent.clientX - this._canvasElement.totalOffsetLeft()) * window.devicePixelRatio;\n    const y0 = -(mouseEvent.clientY - this._canvasElement.totalOffsetTop()) * window.devicePixelRatio;\n\n    function checkIntersection(rect: Rectangle): void {\n      if (!rect.relatedObject) {\n        return;\n      }\n      const t = rect.intersectWithLine(projectionMatrix, x0, y0);\n      if (t && t < closestIntersectionPoint) {\n        closestIntersectionPoint = t;\n        closestObject = rect.relatedObject;\n      }\n    }\n\n    this._rects.forEach(checkIntersection);\n    return closestObject;\n  }\n\n  _createVisibilitySetting(caption: string, name: string, value: boolean, toolbar: UI.Toolbar.Toolbar):\n      Common.Settings.Setting<boolean> {\n    const setting = Common.Settings.Settings.instance().createSetting(name, value);\n    setting.setTitle(i18nString(caption));\n    setting.addChangeListener(this._update, this);\n    toolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(setting));\n    return setting;\n  }\n\n  _initToolbar(): void {\n    this._panelToolbar = this._transformController.toolbar();\n    this.contentElement.appendChild(this._panelToolbar.element);\n    this._showSlowScrollRectsSetting = this._createVisibilitySetting(\n        i18nString(UIStrings.slowScrollRects), 'frameViewerShowSlowScrollRects', true, this._panelToolbar);\n    this._showPaintsSetting =\n        this._createVisibilitySetting(i18nString(UIStrings.paints), 'frameViewerShowPaints', true, this._panelToolbar);\n    this._showPaintsSetting.addChangeListener(this._updatePaints, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('frameViewerHideChromeWindow')\n        .addChangeListener(this._update, this);\n  }\n\n  _onContextMenu(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(\n        i18nString(UIStrings.resetView), () => this._transformController.resetAndNotify(), false);\n    const selection = this._selectionFromEventPoint(event);\n    if (selection && selection.type() === Type.Snapshot) {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.showPaintProfiler),\n          this.dispatchEventToListeners.bind(this, Events.PaintProfilerRequested, selection), false);\n    }\n    this._layerViewHost.showContextMenu(contextMenu, selection);\n  }\n\n  _onMouseMove(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    if (mouseEvent.which) {\n      return;\n    }\n    this._layerViewHost.hoverObject(this._selectionFromEventPoint(event));\n  }\n\n  _onMouseDown(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    this._mouseDownX = mouseEvent.clientX;\n    this._mouseDownY = mouseEvent.clientY;\n  }\n\n  _onMouseUp(event: Event): void {\n    const mouseEvent = event as MouseEvent;\n    const maxDistanceInPixels = 6;\n    if (this._mouseDownX && Math.abs(mouseEvent.clientX - this._mouseDownX) < maxDistanceInPixels &&\n        Math.abs(mouseEvent.clientY - (this._mouseDownY || 0)) < maxDistanceInPixels) {\n      this._canvasElement.focus();\n      this._layerViewHost.selectObject(this._selectionFromEventPoint(event));\n    }\n    delete this._mouseDownX;\n    delete this._mouseDownY;\n  }\n\n  _onDoubleClick(event: Event): void {\n    const selection = this._selectionFromEventPoint(event);\n    if (selection && (selection.type() === Type.Snapshot || selection.layer())) {\n      this.dispatchEventToListeners(Events.PaintProfilerRequested, selection);\n    }\n    event.stopPropagation();\n  }\n\n  _updatePaints(): void {\n    if (this._showPaints()) {\n      this._textureManager.setLayerTree(this._layerTree);\n      this._textureManager.forceUpdate();\n    } else {\n      this._textureManager.reset();\n    }\n    this._update();\n  }\n\n  _showPaints(): boolean {\n    return this._showPaintsSetting ? this._showPaintsSetting.get() : false;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum OutlineType {\n  Hovered = 'hovered',\n  Selected = 'selected',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  PaintProfilerRequested = 'PaintProfilerRequested',\n  ScaleChanged = 'ScaleChanged',\n}\n\nexport const enum ChromeTexture {\n  Left = 0,\n  Middle = 1,\n  Right = 2,\n}\n\nexport const FragmentShader = '' +\n    'precision mediump float;\\n' +\n    'varying vec4 vColor;\\n' +\n    'varying vec2 vTextureCoord;\\n' +\n    'uniform sampler2D uSampler;\\n' +\n    'void main(void)\\n' +\n    '{\\n' +\n    '    gl_FragColor = texture2D(uSampler, vec2(vTextureCoord.s, vTextureCoord.t)) * vColor;\\n' +\n    '}';\n\nexport const VertexShader = '' +\n    'attribute vec3 aVertexPosition;\\n' +\n    'attribute vec2 aTextureCoord;\\n' +\n    'attribute vec4 aVertexColor;\\n' +\n    'uniform mat4 uPMatrix;\\n' +\n    'varying vec2 vTextureCoord;\\n' +\n    'varying vec4 vColor;\\n' +\n    'void main(void)\\n' +\n    '{\\n' +\n    'gl_Position = uPMatrix * vec4(aVertexPosition, 1.0);\\n' +\n    'vColor = aVertexColor;\\n' +\n    'vTextureCoord = aTextureCoord;\\n' +\n    '}';\n\nexport const HoveredBorderColor = [0, 0, 255, 1];\nexport const SelectedBorderColor = [0, 255, 0, 1];\nexport const BorderColor = [0, 0, 0, 1];\nexport const ViewportBorderColor = [160, 160, 160, 1];\nexport const ScrollRectBackgroundColor = [178, 100, 100, 0.6];\nexport const HoveredImageMaskColor = [200, 200, 255, 1];\nexport const BorderWidth = 1;\nexport const SelectedBorderWidth = 2;\nexport const ViewportBorderWidth = 3;\n\nexport const LayerSpacing = 20;\nexport const ScrollRectSpacing = 4;\n\nexport class LayerTextureManager {\n  _textureUpdatedCallback: () => void;\n  _throttler: Common.Throttler.Throttler;\n  _scale: number;\n  _active: boolean;\n  _queue!: SDK.LayerTreeBase.Layer[];\n  _tilesByLayer!: Map<SDK.LayerTreeBase.Layer, Tile[]>;\n  _gl?: WebGLRenderingContext;\n  constructor(textureUpdatedCallback: () => void) {\n    this._textureUpdatedCallback = textureUpdatedCallback;\n    this._throttler = new Common.Throttler.Throttler(0);\n    this._scale = 0;\n    this._active = false;\n    this.reset();\n  }\n\n  static _createTextureForImage(gl: WebGLRenderingContext|null, image: HTMLImageElement): WebGLTexture {\n    if (!gl) {\n      throw new Error('WebGLRenderingContext not provided');\n    }\n    const texture = gl.createTexture();\n    if (!texture) {\n      throw new Error('Unable to create texture');\n    }\n\n    imageForTexture.set(texture, image);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, 1);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    return texture;\n  }\n\n  reset(): void {\n    if (this._tilesByLayer) {\n      this.setLayerTree(null);\n    }\n\n    /** @type {!Map<!SDK.LayerTreeBase.Layer, !Array<!Tile>>} */\n    this._tilesByLayer = new Map();\n    /** @type {!Array<!SDK.LayerTreeBase.Layer>} */\n    this._queue = [];\n  }\n\n  setContext(glContext: WebGLRenderingContext): void {\n    this._gl = glContext;\n    if (this._scale) {\n      this._updateTextures();\n    }\n  }\n\n  suspend(): void {\n    this._active = false;\n  }\n\n  resume(): void {\n    this._active = true;\n    if (this._queue.length) {\n      this._update();\n    }\n  }\n\n  setLayerTree(layerTree: SDK.LayerTreeBase.LayerTreeBase|null): void {\n    const newLayers = new Set<SDK.LayerTreeBase.Layer>();\n    const oldLayers = Array.from(this._tilesByLayer.keys());\n    if (layerTree) {\n      layerTree.forEachLayer(layer => {\n        if (!layer.drawsContent()) {\n          return;\n        }\n        newLayers.add(layer);\n        if (!this._tilesByLayer.has(layer)) {\n          this._tilesByLayer.set(layer, []);\n          this.layerNeedsUpdate(layer);\n        }\n      });\n    }\n    if (!oldLayers.length) {\n      this.forceUpdate();\n    }\n    for (const layer of oldLayers) {\n      if (newLayers.has(layer)) {\n        continue;\n      }\n      const tiles = this._tilesByLayer.get(layer);\n      if (tiles) {\n        tiles.forEach(tile => tile.dispose());\n      }\n      this._tilesByLayer.delete(layer);\n    }\n  }\n\n  _setSnapshotsForLayer(layer: SDK.LayerTreeBase.Layer, snapshots: SDK.PaintProfiler.SnapshotWithRect[]):\n      Promise<void> {\n    const oldSnapshotsToTiles = new Map((this._tilesByLayer.get(layer) || []).map(tile => [tile.snapshot, tile]));\n    const newTiles = [];\n    const reusedTiles = [];\n    for (const snapshot of snapshots) {\n      const oldTile = oldSnapshotsToTiles.get(snapshot.snapshot);\n      if (oldTile) {\n        reusedTiles.push(oldTile);\n        oldSnapshotsToTiles.delete(snapshot.snapshot);\n      } else {\n        newTiles.push(new Tile(snapshot));\n      }\n    }\n    this._tilesByLayer.set(layer, reusedTiles.concat(newTiles));\n    for (const tile of oldSnapshotsToTiles.values()) {\n      tile.dispose();\n    }\n    const gl = this._gl;\n    if (!gl || !this._scale) {\n      return Promise.resolve();\n    }\n    return Promise.all(newTiles.map(tile => tile.update(gl, this._scale))).then(this._textureUpdatedCallback);\n  }\n\n  setScale(scale: number): void {\n    if (this._scale && this._scale >= scale) {\n      return;\n    }\n    this._scale = scale;\n    this._updateTextures();\n  }\n\n  tilesForLayer(layer: SDK.LayerTreeBase.Layer): Tile[] {\n    return this._tilesByLayer.get(layer) || [];\n  }\n\n  layerNeedsUpdate(layer: SDK.LayerTreeBase.Layer): void {\n    if (this._queue.indexOf(layer) < 0) {\n      this._queue.push(layer);\n    }\n    if (this._active) {\n      this._throttler.schedule(this._update.bind(this));\n    }\n  }\n\n  forceUpdate(): void {\n    this._queue.forEach(layer => this._updateLayer(layer));\n    this._queue = [];\n    this._update();\n  }\n\n  _update(): Promise<void> {\n    const layer = this._queue.shift();\n    if (!layer) {\n      return Promise.resolve();\n    }\n    if (this._queue.length) {\n      this._throttler.schedule(this._update.bind(this));\n    }\n    return this._updateLayer(layer);\n  }\n\n  _updateLayer(layer: SDK.LayerTreeBase.Layer): Promise<void> {\n    return Promise.all(layer.snapshots())\n        .then(\n            snapshots => this._setSnapshotsForLayer(\n                layer, snapshots.filter(snapshot => snapshot !== null) as SDK.PaintProfiler.SnapshotWithRect[]));\n  }\n\n  _updateTextures(): void {\n    if (!this._gl) {\n      return;\n    }\n    if (!this._scale) {\n      return;\n    }\n\n    for (const tiles of this._tilesByLayer.values()) {\n      for (const tile of tiles) {\n        const promise = tile.updateScale(this._gl, this._scale);\n        if (promise) {\n          promise.then(this._textureUpdatedCallback);\n        }\n      }\n    }\n  }\n}\n\nexport class Rectangle {\n  relatedObject: Selection|null;\n  lineWidth: number;\n  borderColor: number[]|null;\n  fillColor: number[]|null;\n  texture: WebGLTexture|null;\n  vertices!: number[];\n  constructor(relatedObject: Selection|null) {\n    this.relatedObject = relatedObject;\n    this.lineWidth = 1;\n    this.borderColor = null;\n    this.fillColor = null;\n    this.texture = null;\n  }\n\n  setVertices(quad: number[], z: number): void {\n    this.vertices = [quad[0], quad[1], z, quad[2], quad[3], z, quad[4], quad[5], z, quad[6], quad[7], z];\n  }\n\n  /**\n   * Finds coordinates of point on layer quad, having offsets (ratioX * width) and (ratioY * height)\n   * from the left corner of the initial layer rect, where width and heigth are layer bounds.\n   */\n  _calculatePointOnQuad(quad: number[], ratioX: number, ratioY: number): number[] {\n    const x0 = quad[0];\n    const y0 = quad[1];\n    const x1 = quad[2];\n    const y1 = quad[3];\n    const x2 = quad[4];\n    const y2 = quad[5];\n    const x3 = quad[6];\n    const y3 = quad[7];\n    // Point on the first quad side clockwise\n    const firstSidePointX = x0 + ratioX * (x1 - x0);\n    const firstSidePointY = y0 + ratioX * (y1 - y0);\n    // Point on the third quad side clockwise\n    const thirdSidePointX = x3 + ratioX * (x2 - x3);\n    const thirdSidePointY = y3 + ratioX * (y2 - y3);\n    const x = firstSidePointX + ratioY * (thirdSidePointX - firstSidePointX);\n    const y = firstSidePointY + ratioY * (thirdSidePointY - firstSidePointY);\n    return [x, y];\n  }\n\n  calculateVerticesFromRect(layer: SDK.LayerTreeBase.Layer, rect: Protocol.DOM.Rect, z: number): void {\n    const quad = layer.quad();\n    const rx1 = rect.x / layer.width();\n    const rx2 = (rect.x + rect.width) / layer.width();\n    const ry1 = rect.y / layer.height();\n    const ry2 = (rect.y + rect.height) / layer.height();\n    const rectQuad = this._calculatePointOnQuad(quad, rx1, ry1)\n                         .concat(this._calculatePointOnQuad(quad, rx2, ry1))\n                         .concat(this._calculatePointOnQuad(quad, rx2, ry2))\n                         .concat(this._calculatePointOnQuad(quad, rx1, ry2));\n    this.setVertices(rectQuad, z);\n  }\n\n  /**\n   * Intersects quad with given transform matrix and line l(t) = (x0, y0, t)\n   */\n  intersectWithLine(matrix: DOMMatrix, x0: number, y0: number): number|undefined {\n    let i;\n    // Vertices of the quad with transform matrix applied\n    const points = [];\n    for (i = 0; i < 4; ++i) {\n      points[i] = UI.Geometry.multiplyVectorByMatrixAndNormalize(\n          new UI.Geometry.Vector(this.vertices[i * 3], this.vertices[i * 3 + 1], this.vertices[i * 3 + 2]), matrix);\n    }\n    // Calculating quad plane normal\n    const normal = UI.Geometry.crossProduct(\n        UI.Geometry.subtract(points[1], points[0]), UI.Geometry.subtract(points[2], points[1]));\n    // General form of the equation of the quad plane: A * x + B * y + C * z + D = 0\n    const A = normal.x;\n    const B = normal.y;\n    const C = normal.z;\n    const D = -(A * points[0].x + B * points[0].y + C * points[0].z);\n    // Finding t from the equation\n    const t = -(D + A * x0 + B * y0) / C;\n    // Point of the intersection\n    const pt = new UI.Geometry.Vector(x0, y0, t);\n    // Vectors from the intersection point to vertices of the quad\n    const tVects = points.map(UI.Geometry.subtract.bind(null, pt));\n    // Intersection point lies inside of the polygon if scalar products of normal of the plane and\n    // cross products of successive tVects are all nonstrictly above or all nonstrictly below zero\n    for (i = 0; i < tVects.length; ++i) {\n      const product =\n          UI.Geometry.scalarProduct(normal, UI.Geometry.crossProduct(tVects[i], tVects[(i + 1) % tVects.length]));\n      if (product < 0) {\n        return undefined;\n      }\n    }\n    return t;\n  }\n}\n\nexport class Tile {\n  snapshot: SDK.PaintProfiler.PaintProfilerSnapshot;\n  rect: Protocol.DOM.Rect;\n  scale: number;\n  texture: WebGLTexture|null;\n  _gl!: WebGLRenderingContext;\n  constructor(snapshotWithRect: SDK.PaintProfiler.SnapshotWithRect) {\n    this.snapshot = snapshotWithRect.snapshot;\n    this.rect = snapshotWithRect.rect;\n    this.scale = 0;\n    this.texture = null;\n  }\n\n  dispose(): void {\n    this.snapshot.release();\n    if (this.texture) {\n      this._gl.deleteTexture(this.texture);\n      this.texture = null;\n    }\n  }\n\n  updateScale(glContext: WebGLRenderingContext, scale: number): Promise<void>|null {\n    if (this.texture && this.scale >= scale) {\n      return null;\n    }\n    return this.update(glContext, scale);\n  }\n\n  async update(glContext: WebGLRenderingContext, scale: number): Promise<void> {\n    this._gl = glContext;\n    this.scale = scale;\n    const imageURL = await this.snapshot.replay(scale);\n    const image = imageURL ? await UI.UIUtils.loadImage(imageURL) : null;\n    this.texture = image ? LayerTextureManager._createTextureForImage(glContext, image) : null;\n  }\n}\n"]}