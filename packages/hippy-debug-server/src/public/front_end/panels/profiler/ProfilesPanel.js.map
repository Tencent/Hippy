{"version":3,"file":"ProfilesPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/ProfilesPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {DataDisplayDelegate, ProfileHeader, ProfileType} from './ProfileHeader.js';\nimport {ProfileEvents as ProfileTypeEvents} from './ProfileHeader.js';\nimport {Events as ProfileLauncherEvents, ProfileLauncherView} from './ProfileLauncherView.js';\nimport {ProfileSidebarTreeElement, setSharedFileSelectorElement} from './ProfileSidebarTreeElement.js';\nimport {instance} from './ProfileTypeRegistry.js';\n\nconst UIStrings = {\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon clear button in the Profiles Panel of a profiler tool\n  */\n  clearAllProfiles: 'Clear all profiles',\n  /**\n  *@description Text in Profiles Panel of a profiler tool\n  *@example {'.js', '.json'} PH1\n  */\n  cantLoadFileSupportedFile: 'Can’t load file. Supported file extensions: \\'{PH1}.\\'',\n  /**\n  *@description Text in Profiles Panel of a profiler tool\n  */\n  cantLoadProfileWhileAnother: 'Can’t load profile while another profile is being recorded.',\n  /**\n  *@description Text in Profiles Panel of a profiler tool\n  *@example {cannot open file} PH1\n  */\n  profileLoadingFailedS: 'Profile loading failed: {PH1}.',\n  /**\n  *@description A context menu item in the Profiles Panel of a profiler tool\n  */\n  load: 'Load…',\n  /**\n  *@description Text in Profiles Panel of a profiler tool\n  *@example {2} PH1\n  */\n  runD: 'Run {PH1}',\n  /**\n  *@description Text in Profiles Panel of a profiler tool\n  */\n  profiles: 'Profiles',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/ProfilesPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ProfilesPanel extends UI.Panel.PanelWithSidebar implements DataDisplayDelegate {\n  _profileTypes: ProfileType[];\n  profilesItemTreeElement: ProfilesSidebarTreeElement;\n  _sidebarTree: UI.TreeOutline.TreeOutlineInShadow;\n  profileViews: HTMLDivElement;\n  _toolbarElement: HTMLDivElement;\n  _toggleRecordAction: UI.ActionRegistration.Action;\n  _toggleRecordButton: UI.Toolbar.ToolbarButton;\n  clearResultsButton: UI.Toolbar.ToolbarButton;\n  _profileViewToolbar: UI.Toolbar.Toolbar;\n  _profileGroups: {};\n  _launcherView: ProfileLauncherView;\n  visibleView!: UI.Widget.Widget|undefined;\n  _profileToView: {\n    profile: ProfileHeader,\n    view: UI.Widget.Widget,\n  }[];\n  _typeIdToSidebarSection: {\n    [x: string]: ProfileTypeSidebarSection,\n  };\n  _fileSelectorElement!: HTMLInputElement;\n  _selectedProfileType?: ProfileType;\n  constructor(name: string, profileTypes: ProfileType[], recordingActionId: string) {\n    super(name);\n    this._profileTypes = profileTypes;\n    this.registerRequiredCSS('panels/profiler/heapProfiler.css', {enableLegacyPatching: false});\n    this.registerRequiredCSS('panels/profiler/profilesPanel.css', {enableLegacyPatching: false});\n    this.registerRequiredCSS('ui/legacy/components/object_ui/objectValue.css', {enableLegacyPatching: false});\n\n    const mainContainer = new UI.Widget.VBox();\n    this.splitWidget().setMainWidget(mainContainer);\n\n    this.profilesItemTreeElement = new ProfilesSidebarTreeElement(this);\n\n    this._sidebarTree = new UI.TreeOutline.TreeOutlineInShadow();\n    this._sidebarTree.registerRequiredCSS('panels/profiler/profilesSidebarTree.css', {enableLegacyPatching: false});\n    this._sidebarTree.element.classList.add('profiles-sidebar-tree-box');\n    this.panelSidebarElement().appendChild(this._sidebarTree.element);\n\n    this._sidebarTree.appendChild(this.profilesItemTreeElement);\n\n    this._sidebarTree.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\n\n    this.profileViews = document.createElement('div');\n    this.profileViews.id = 'profile-views';\n    this.profileViews.classList.add('vbox');\n    mainContainer.element.appendChild(this.profileViews);\n\n    this._toolbarElement = document.createElement('div');\n    this._toolbarElement.classList.add('profiles-toolbar');\n    mainContainer.element.insertBefore(this._toolbarElement, mainContainer.element.firstChild);\n\n    this.panelSidebarElement().classList.add('profiles-tree-sidebar');\n    const toolbarContainerLeft = document.createElement('div');\n    toolbarContainerLeft.classList.add('profiles-toolbar');\n    this.panelSidebarElement().insertBefore(toolbarContainerLeft, this.panelSidebarElement().firstChild);\n    const toolbar = new UI.Toolbar.Toolbar('', toolbarContainerLeft);\n    this._toggleRecordAction =\n        (UI.ActionRegistry.ActionRegistry.instance().action(recordingActionId) as UI.ActionRegistration.Action);\n    this._toggleRecordButton = UI.Toolbar.Toolbar.createActionButton(this._toggleRecordAction);\n    toolbar.appendToolbarItem(this._toggleRecordButton);\n\n    this.clearResultsButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearAllProfiles), 'largeicon-clear');\n    this.clearResultsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._reset, this);\n    toolbar.appendToolbarItem(this.clearResultsButton);\n    toolbar.appendSeparator();\n    toolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButtonForId('components.collect-garbage'));\n\n    this._profileViewToolbar = new UI.Toolbar.Toolbar('', this._toolbarElement);\n    this._profileViewToolbar.makeWrappable(true);\n\n    this._profileGroups = {};\n    this._launcherView = new ProfileLauncherView(this);\n    this._launcherView.addEventListener(ProfileLauncherEvents.ProfileTypeSelected, this._onProfileTypeSelected, this);\n\n    this._profileToView = [];\n\n    this._typeIdToSidebarSection = {};\n\n    const types = this._profileTypes;\n    for (let i = 0; i < types.length; i++) {\n      this._registerProfileType(types[i]);\n    }\n    this._launcherView.restoreSelectedProfileType();\n    this.profilesItemTreeElement.select();\n    this._showLauncherView();\n    this._createFileSelectorElement();\n\n    this.element.addEventListener('contextmenu', this._handleContextMenuEvent.bind(this), false);\n\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this._onSuspendStateChanged, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.CPUProfilerModel.CPUProfilerModel, this._updateProfileTypeSpecificUI, this);\n    UI.Context.Context.instance().addFlavorChangeListener(\n        SDK.HeapProfilerModel.HeapProfilerModel, this._updateProfileTypeSpecificUI, this);\n  }\n\n  _onKeyDown(ev: Event): void {\n    const event = (ev as KeyboardEvent);\n    let handled = false;\n    if (event.key === 'ArrowDown' && !event.altKey) {\n      handled = this._sidebarTree.selectNext();\n    } else if (event.key === 'ArrowUp' && !event.altKey) {\n      handled = this._sidebarTree.selectPrevious();\n    }\n    if (handled) {\n      event.consume(true);\n    }\n  }\n\n  searchableView(): UI.SearchableView.SearchableView|null {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const visibleView = (this.visibleView as any);\n    return visibleView && visibleView.searchableView ? visibleView.searchableView() : null;\n  }\n\n  _createFileSelectorElement(): void {\n    if (this._fileSelectorElement) {\n      this.element.removeChild(this._fileSelectorElement);\n    }\n    this._fileSelectorElement = UI.UIUtils.createFileSelectorElement(this._loadFromFile.bind(this));\n    setSharedFileSelectorElement(this._fileSelectorElement);\n    this.element.appendChild(this._fileSelectorElement);\n  }\n\n  _findProfileTypeByExtension(fileName: string): ProfileType|null {\n    return this._profileTypes.find(\n               type => Boolean(type.fileExtension()) && fileName.endsWith(type.fileExtension() || '')) ||\n        null;\n  }\n\n  async _loadFromFile(file: File): Promise<void> {\n    this._createFileSelectorElement();\n\n    const profileType = this._findProfileTypeByExtension(file.name);\n    if (!profileType) {\n      const extensions = new Set(this._profileTypes.map(type => type.fileExtension()).filter(ext => ext));\n      Common.Console.Console.instance().error(\n          i18nString(UIStrings.cantLoadFileSupportedFile, {PH1: Array.from(extensions).join('\\', \\'')}));\n      return;\n    }\n\n    if (Boolean(profileType.profileBeingRecorded())) {\n      Common.Console.Console.instance().error(i18nString(UIStrings.cantLoadProfileWhileAnother));\n      return;\n    }\n\n    const error = await profileType.loadFromFile(file);\n    if (error && 'message' in error) {\n      UI.UIUtils.MessageDialog.show(i18nString(UIStrings.profileLoadingFailedS, {PH1: error.message}));\n    }\n  }\n\n  toggleRecord(): boolean {\n    if (!this._toggleRecordAction.enabled()) {\n      return true;\n    }\n    const toggleButton = this.element.ownerDocument.deepActiveElement();\n    const type = this._selectedProfileType;\n    if (!type) {\n      return true;\n    }\n    const isProfiling = type.buttonClicked();\n    this._updateToggleRecordAction(isProfiling);\n    if (isProfiling) {\n      this._launcherView.profileStarted();\n      if (type.hasTemporaryView()) {\n        this.showProfile(type.profileBeingRecorded());\n      }\n    } else {\n      this._launcherView.profileFinished();\n    }\n    if (toggleButton) {\n      (toggleButton as HTMLElement).focus();\n    }\n    return true;\n  }\n\n  _onSuspendStateChanged(): void {\n    this._updateToggleRecordAction(this._toggleRecordAction.toggled());\n  }\n\n  _updateToggleRecordAction(toggled: boolean): void {\n    const hasSelectedTarget = Boolean(\n        UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel) ||\n        UI.Context.Context.instance().flavor(SDK.HeapProfilerModel.HeapProfilerModel));\n    const enable = toggled || (!SDK.TargetManager.TargetManager.instance().allTargetsSuspended() && hasSelectedTarget);\n    this._toggleRecordAction.setEnabled(enable);\n    this._toggleRecordAction.setToggled(toggled);\n    if (enable) {\n      this._toggleRecordButton.setTitle(this._selectedProfileType ? this._selectedProfileType.buttonTooltip : '');\n    } else {\n      this._toggleRecordButton.setTitle(UI.UIUtils.anotherProfilerActiveLabel());\n    }\n    if (this._selectedProfileType) {\n      this._launcherView.updateProfileType(this._selectedProfileType, enable);\n    }\n  }\n\n  _profileBeingRecordedRemoved(): void {\n    this._updateToggleRecordAction(false);\n    this._launcherView.profileFinished();\n  }\n\n  _onProfileTypeSelected(event: Common.EventTarget.EventTargetEvent): void {\n    this._selectedProfileType = (event.data as ProfileType);\n    this._updateProfileTypeSpecificUI();\n  }\n\n  _updateProfileTypeSpecificUI(): void {\n    this._updateToggleRecordAction(this._toggleRecordAction.toggled());\n  }\n\n  _reset(): void {\n    this._profileTypes.forEach(type => type.reset());\n\n    delete this.visibleView;\n\n    this._profileGroups = {};\n    this._updateToggleRecordAction(false);\n    this._launcherView.profileFinished();\n\n    this._sidebarTree.element.classList.remove('some-expandable');\n\n    this._launcherView.detach();\n    this.profileViews.removeChildren();\n    this._profileViewToolbar.removeToolbarItems();\n\n    this.clearResultsButton.element.classList.remove('hidden');\n    this.profilesItemTreeElement.select();\n    this._showLauncherView();\n  }\n\n  _showLauncherView(): void {\n    this.closeVisibleView();\n    this._profileViewToolbar.removeToolbarItems();\n    this._launcherView.show(this.profileViews);\n    this.visibleView = this._launcherView;\n    this._toolbarElement.classList.add('hidden');\n  }\n\n  _registerProfileType(profileType: ProfileType): void {\n    this._launcherView.addProfileType(profileType);\n    const profileTypeSection = new ProfileTypeSidebarSection(this, profileType);\n    this._typeIdToSidebarSection[profileType.id] = profileTypeSection;\n    this._sidebarTree.appendChild(profileTypeSection);\n    profileTypeSection.childrenListElement.addEventListener(\n        'contextmenu', this._handleContextMenuEvent.bind(this), false);\n\n    function onAddProfileHeader(this: ProfilesPanel, event: Common.EventTarget.EventTargetEvent): void {\n      this._addProfileHeader((event.data as ProfileHeader));\n    }\n\n    function onRemoveProfileHeader(this: ProfilesPanel, event: Common.EventTarget.EventTargetEvent): void {\n      this._removeProfileHeader((event.data as ProfileHeader));\n    }\n\n    function profileComplete(this: ProfilesPanel, event: Common.EventTarget.EventTargetEvent): void {\n      this.showProfile((event.data as ProfileHeader));\n    }\n\n    profileType.addEventListener(ProfileTypeEvents.ViewUpdated, this._updateProfileTypeSpecificUI, this);\n    profileType.addEventListener(ProfileTypeEvents.AddProfileHeader, onAddProfileHeader, this);\n    profileType.addEventListener(ProfileTypeEvents.RemoveProfileHeader, onRemoveProfileHeader, this);\n    profileType.addEventListener(ProfileTypeEvents.ProfileComplete, profileComplete, this);\n\n    const profiles = profileType.getProfiles();\n    for (let i = 0; i < profiles.length; i++) {\n      this._addProfileHeader(profiles[i]);\n    }\n  }\n\n  _handleContextMenuEvent(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    if (this.panelSidebarElement().isSelfOrAncestor((event.target as Node | null))) {\n      contextMenu.defaultSection().appendItem(\n          i18nString(UIStrings.load), this._fileSelectorElement.click.bind(this._fileSelectorElement));\n    }\n    contextMenu.show();\n  }\n\n  showLoadFromFileDialog(): void {\n    this._fileSelectorElement.click();\n  }\n\n  _addProfileHeader(profile: ProfileHeader): void {\n    const profileType = profile.profileType();\n    const typeId = profileType.id;\n    this._typeIdToSidebarSection[typeId].addProfileHeader(profile);\n    if (!this.visibleView || this.visibleView === this._launcherView) {\n      this.showProfile(profile);\n    }\n  }\n\n  _removeProfileHeader(profile: ProfileHeader): void {\n    if (profile.profileType().profileBeingRecorded() === profile) {\n      this._profileBeingRecordedRemoved();\n    }\n\n    const i = this._indexOfViewForProfile(profile);\n    if (i !== -1) {\n      this._profileToView.splice(i, 1);\n    }\n\n    const typeId = profile.profileType().id;\n    const sectionIsEmpty = this._typeIdToSidebarSection[typeId].removeProfileHeader(profile);\n\n    // No other item will be selected if there aren't any other profiles, so\n    // make sure that view gets cleared when the last profile is removed.\n    if (sectionIsEmpty) {\n      this.profilesItemTreeElement.select();\n      this._showLauncherView();\n    }\n  }\n\n  showProfile(profile: ProfileHeader|null): UI.Widget.Widget|null {\n    if (!profile ||\n        (profile.profileType().profileBeingRecorded() === profile) && !profile.profileType().hasTemporaryView()) {\n      return null;\n    }\n\n    const view = this.viewForProfile(profile);\n    if (view === this.visibleView) {\n      return view;\n    }\n\n    this.closeVisibleView();\n\n    view.show(this.profileViews);\n    this._toolbarElement.classList.remove('hidden');\n    this.visibleView = view;\n\n    const profileTypeSection = this._typeIdToSidebarSection[profile.profileType().id];\n    const sidebarElement = profileTypeSection.sidebarElementForProfile(profile);\n    if (sidebarElement) {\n      sidebarElement.revealAndSelect();\n    }\n\n    this._profileViewToolbar.removeToolbarItems();\n\n    (view as unknown as UI.View.View).toolbarItems().then(items => {\n      items.map(item => this._profileViewToolbar.appendToolbarItem(item));\n    });\n\n    return view;\n  }\n\n  showObject(_snapshotObjectId: string, _perspectiveName: string): void {\n  }\n\n  async linkifyObject(_nodeIndex: number): Promise<Element|null> {\n    return null;\n  }\n\n  viewForProfile(profile: ProfileHeader): UI.Widget.Widget {\n    const index = this._indexOfViewForProfile(profile);\n    if (index !== -1) {\n      return this._profileToView[index].view;\n    }\n    const view = profile.createView(this);\n    view.element.classList.add('profile-view');\n    this._profileToView.push({profile: profile, view: view});\n    return view;\n  }\n\n  _indexOfViewForProfile(profile: ProfileHeader): number {\n    return this._profileToView.findIndex(item => item.profile === profile);\n  }\n\n  closeVisibleView(): void {\n    if (this.visibleView) {\n      this.visibleView.detach();\n    }\n    delete this.visibleView;\n  }\n\n  focus(): void {\n    this._sidebarTree.focus();\n  }\n}\n\nexport class ProfileTypeSidebarSection extends UI.TreeOutline.TreeElement {\n  _dataDisplayDelegate: DataDisplayDelegate;\n  _profileTreeElements: ProfileSidebarTreeElement[];\n  _profileGroups: {\n    [x: string]: ProfileGroup,\n  };\n\n  constructor(dataDisplayDelegate: DataDisplayDelegate, profileType: ProfileType) {\n    super(profileType.treeItemTitle, true);\n    this.selectable = false;\n    this._dataDisplayDelegate = dataDisplayDelegate;\n    this._profileTreeElements = [];\n    this._profileGroups = {};\n    this.expand();\n    this.hidden = true;\n    this.setCollapsible(false);\n  }\n\n  addProfileHeader(profile: ProfileHeader): void {\n    this.hidden = false;\n    const profileType = profile.profileType();\n    let sidebarParent: (ProfileGroupSidebarTreeElement|null)|this = this;\n    const profileTreeElement =\n        (profile.createSidebarTreeElement(this._dataDisplayDelegate) as ProfileSidebarTreeElement);\n    this._profileTreeElements.push(profileTreeElement);\n\n    if (!profile.fromFile() && profileType.profileBeingRecorded() !== profile) {\n      const profileTitle = profile.title;\n      let group: ProfileGroup = this._profileGroups[profileTitle];\n      if (!group) {\n        group = new ProfileGroup();\n        this._profileGroups[profileTitle] = group;\n      }\n      group.profileSidebarTreeElements.push(profileTreeElement);\n\n      const groupSize = group.profileSidebarTreeElements.length;\n      if (groupSize === 2) {\n        // Make a group UI.TreeOutline.TreeElement now that there are 2 profiles.\n        group.sidebarTreeElement = new ProfileGroupSidebarTreeElement(this._dataDisplayDelegate, profile.title);\n\n        const firstProfileTreeElement = group.profileSidebarTreeElements[0];\n        // Insert at the same index for the first profile of the group.\n        const index = this.children().indexOf(firstProfileTreeElement);\n        this.insertChild(group.sidebarTreeElement, index);\n\n        // Move the first profile to the group.\n        const selected = firstProfileTreeElement.selected;\n        this.removeChild(firstProfileTreeElement);\n        group.sidebarTreeElement.appendChild(firstProfileTreeElement);\n        if (selected) {\n          firstProfileTreeElement.revealAndSelect();\n        }\n\n        firstProfileTreeElement.setSmall(true);\n        firstProfileTreeElement.setMainTitle(i18nString(UIStrings.runD, {PH1: 1}));\n\n        if (this.treeOutline) {\n          this.treeOutline.element.classList.add('some-expandable');\n        }\n      }\n\n      if (groupSize >= 2) {\n        sidebarParent = group.sidebarTreeElement;\n        profileTreeElement.setSmall(true);\n        profileTreeElement.setMainTitle(i18nString(UIStrings.runD, {PH1: groupSize}));\n      }\n    }\n\n    if (sidebarParent) {\n      sidebarParent.appendChild(profileTreeElement);\n    }\n  }\n\n  removeProfileHeader(profile: ProfileHeader): boolean {\n    const index = this._sidebarElementIndex(profile);\n    if (index === -1) {\n      return false;\n    }\n    const profileTreeElement = this._profileTreeElements[index];\n    this._profileTreeElements.splice(index, 1);\n\n    let sidebarParent: (ProfileGroupSidebarTreeElement|null)|this = this;\n    const group = this._profileGroups[profile.title];\n    if (group) {\n      const groupElements = group.profileSidebarTreeElements;\n      groupElements.splice(groupElements.indexOf(profileTreeElement), 1);\n      if (groupElements.length === 1) {\n        // Move the last profile out of its group and remove the group.\n        const pos = sidebarParent.children().indexOf((group.sidebarTreeElement as ProfileGroupSidebarTreeElement));\n        if (group.sidebarTreeElement) {\n          group.sidebarTreeElement.removeChild(groupElements[0]);\n        }\n        this.insertChild(groupElements[0], pos);\n        groupElements[0].setSmall(false);\n        groupElements[0].setMainTitle(profile.title);\n        if (group.sidebarTreeElement) {\n          this.removeChild(group.sidebarTreeElement);\n        }\n      }\n      if (groupElements.length !== 0) {\n        sidebarParent = group.sidebarTreeElement;\n      }\n    }\n    if (sidebarParent) {\n      sidebarParent.removeChild(profileTreeElement);\n    }\n    profileTreeElement.dispose();\n\n    if (this.childCount()) {\n      return false;\n    }\n    this.hidden = true;\n    return true;\n  }\n\n  sidebarElementForProfile(profile: ProfileHeader): ProfileSidebarTreeElement|null {\n    const index = this._sidebarElementIndex(profile);\n    return index === -1 ? null : this._profileTreeElements[index];\n  }\n\n  _sidebarElementIndex(profile: ProfileHeader): number {\n    const elements = this._profileTreeElements;\n    for (let i = 0; i < elements.length; i++) {\n      if (elements[i].profile === profile) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  onattach(): void {\n    this.listItemElement.classList.add('profiles-tree-section');\n  }\n}\n\nexport class ProfileGroup {\n  profileSidebarTreeElements: ProfileSidebarTreeElement[];\n  sidebarTreeElement: ProfileGroupSidebarTreeElement|null;\n  constructor() {\n    this.profileSidebarTreeElements = [];\n    this.sidebarTreeElement = null;\n  }\n}\n\nexport class ProfileGroupSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  _dataDisplayDelegate: DataDisplayDelegate;\n  _profileTitle: string;\n  toggleOnClick: boolean;\n\n  constructor(dataDisplayDelegate: DataDisplayDelegate, title: string) {\n    super('', true);\n    this.selectable = false;\n    this._dataDisplayDelegate = dataDisplayDelegate;\n    this._profileTitle = title;\n    this.expand();\n    this.toggleOnClick = true;\n  }\n\n  onselect(): boolean {\n    const hasChildren = this.childCount() > 0;\n    if (hasChildren) {\n      const lastChild = this.lastChild();\n      if (lastChild instanceof ProfileSidebarTreeElement) {\n        this._dataDisplayDelegate.showProfile(lastChild.profile);\n      }\n    }\n    return hasChildren;\n  }\n\n  onattach(): void {\n    this.listItemElement.classList.add('profile-group-sidebar-tree-item');\n    this.listItemElement.createChild('div', 'icon');\n    this.listItemElement.createChild('div', 'titles no-subtitle')\n        .createChild('span', 'title-container')\n        .createChild('span', 'title')\n        .textContent = this._profileTitle;\n  }\n}\n\nexport class ProfilesSidebarTreeElement extends UI.TreeOutline.TreeElement {\n  _panel: ProfilesPanel;\n\n  constructor(panel: ProfilesPanel) {\n    super('', false);\n    this.selectable = true;\n    this._panel = panel;\n  }\n\n  onselect(): boolean {\n    this._panel._showLauncherView();\n    return true;\n  }\n\n  onattach(): void {\n    this.listItemElement.classList.add('profile-launcher-view-tree-item');\n    this.listItemElement.createChild('div', 'icon');\n    this.listItemElement.createChild('div', 'titles no-subtitle')\n        .createChild('span', 'title-container')\n        .createChild('span', 'title')\n        .textContent = i18nString(UIStrings.profiles);\n  }\n}\n\nlet jsProfilerPanelInstance: JSProfilerPanel;\n\nexport class JSProfilerPanel extends ProfilesPanel implements UI.ActionRegistration.ActionDelegate {\n  constructor() {\n    const registry = instance;\n    super('js_profiler', [registry.cpuProfileType], 'profiler.js-toggle-recording');\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): JSProfilerPanel {\n    const {forceNew} = opts;\n    if (!jsProfilerPanelInstance || forceNew) {\n      jsProfilerPanelInstance = new JSProfilerPanel();\n    }\n    return jsProfilerPanelInstance;\n  }\n  wasShown(): void {\n    UI.Context.Context.instance().setFlavor(JSProfilerPanel, this);\n  }\n\n  willHide(): void {\n    UI.Context.Context.instance().setFlavor(JSProfilerPanel, null);\n  }\n\n  handleAction(_context: UI.Context.Context, _actionId: string): boolean {\n    const panel = UI.Context.Context.instance().flavor(JSProfilerPanel);\n    if (panel instanceof JSProfilerPanel) {\n      panel.toggleRecord();\n    } else {\n      throw new Error('non-null JSProfilerPanel expected!');\n    }\n    return true;\n  }\n}\n"]}