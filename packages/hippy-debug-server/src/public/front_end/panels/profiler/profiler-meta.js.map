{"version":3,"file":"profiler-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/profiler-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,IAAI,oBAAiD,CAAC;AAEtD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,MAAM,EAAE,QAAQ;IAChB;;MAEE;IACF,eAAe,EAAE,mBAAmB;IACpC;;MAEE;IACF,6BAA6B,EAAE,kCAAkC;IACjE;;MAEE;IACF,4BAA4B,EAAE,iCAAiC;IAC/D;;MAEE;IACF,sCAAsC,EAAE,sDAAsD;IAC9F;;MAEE;IACF,kBAAkB,EAAE,sBAAsB;IAC1C;;MAEE;IACF,mBAAmB,EAAE,qCAAqC;IAC1D;;MAEE;IACF,UAAU,EAAE,aAAa;IACzB;;MAEE;IACF,mBAAmB,EAAE,wBAAwB;CAE9C,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,kCAAkC,EAAE,SAAS,CAAC,CAAC;AACxF,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,KAAK,UAAU,kBAAkB;IAC/B,IAAI,CAAC,oBAAoB,EAAE;QACzB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAC3E,oBAAoB,GAAG,MAAM,MAAM,CAAC,eAAe,CAAC,CAAC;KACtD;IACD,OAAO,oBAAoB,CAAC;AAC9B,CAAC;AAED,SAAS,yBAAyB,CAAc,gBAA0D;IACxG,IAAI,oBAAoB,KAAK,SAAS,EAAE;QACtC,OAAO,EAAE,CAAC;KACX;IACD,OAAO,gBAAgB,CAAC,oBAAoB,CAAC,CAAC;AAChD,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,eAAe;IACnB,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;IACnD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;IACvC,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IACjE,CAAC;CACF,CAAC,CAAC;AAEH,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,mBAAmB;IACvB,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAC5D,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IAChD,WAAW,6BAA0C;IACrD,KAAK,EAAE,GAAG;IACV,KAAK,CAAC,QAAQ;QACZ,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,QAAQ,EAAE,CAAC;IACrE,CAAC;IACD,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,iBAAiB;CAC1D,CAAC,CAAC;AAEH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,EAAE,oCAAoC;IAC9C,SAAS,6DAA2D;IACpE,UAAU,EAAE,IAAI;IAChB,gBAAgB,2DAA0D;IAC1E,kBAAkB,EAAE,IAAI;IACxB,KAAK,CAAC,kBAAkB;QACtB,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,mBAAmB,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IAChE,CAAC;IACD,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,MAAM;IACrD,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,iBAAiB;IACzD,OAAO,EAAE;QACP;YACE,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,6BAA6B,CAAC;SAC/D;QACD;YACE,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,4BAA4B,CAAC;SAC9D;KACF;CACF,CAAC,CAAC;AAEH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,EAAE,qCAAqC;IAC/C,SAAS,6CAAmD;IAC5D,KAAK,CAAC,kBAAkB;QACtB,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,mBAAmB,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IAChE,CAAC;IACD,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,MAAM;IACrD,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,iBAAiB;IACzD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,sCAAsC,CAAC;CACxE,CAAC,CAAC;AAEH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,EAAE,gCAAgC;IAC1C,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,MAAM;IACrD,SAAS,6DAA2D;IACpE,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC;IACnD,UAAU,EAAE,IAAI;IAChB,gBAAgB,2DAA0D;IAC1E,kBAAkB,EAAE,IAAI;IACxB,YAAY;QACV,OAAO,yBAAyB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC/F,CAAC;IACD,KAAK,CAAC,kBAAkB;QACtB,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IACjE,CAAC;IACD,QAAQ,EAAE;QACR;YACE,QAAQ,oCAA8C;YACtD,QAAQ,EAAE,QAAQ;SACnB;QACD;YACE,QAAQ,iBAAqC;YAC7C,QAAQ,EAAE,QAAQ;SACnB;KACF;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,wBAAwB,CAAC;IACvC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,WAAW;IACrD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,mBAAmB,CAAC;IACpD,WAAW,EAAE,gCAAgC;IAC7C,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,OAAO;IAChD,YAAY,EAAE,IAAI;CACnB,CAAC,CAAC;AAEH,EAAE,CAAC,WAAW,CAAC,gBAAgB,CAAC;IAC9B,YAAY;QACV,OAAO;YACL,GAAG,CAAC,YAAY,CAAC,YAAY;SAC9B,CAAC;IACJ,CAAC;IACD,KAAK,CAAC,YAAY;QAChB,MAAM,QAAQ,GAAG,MAAM,kBAAkB,EAAE,CAAC;QAC5C,OAAO,QAAQ,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IACjE,CAAC;IACD,UAAU,EAAE,SAAS;CACtB,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Profiler from './profiler.js';\n\nlet loadedProfilerModule: (typeof Profiler|undefined);\n\nconst UIStrings = {\n  /**\n  *@description Title for the profiler tab\n  */\n  memory: 'Memory',\n  /**\n  *@description Title of the 'Live Heap Profile' tool in the bottom drawer\n  */\n  liveHeapProfile: 'Live Heap Profile',\n  /**\n  *@description Title of an action under the Performance category that can be invoked through the Command Menu\n  */\n  startRecordingHeapAllocations: 'Start recording heap allocations',\n  /**\n  *@description Title of an action under the Performance category that can be invoked through the Command Menu\n  */\n  stopRecordingHeapAllocations: 'Stop recording heap allocations',\n  /**\n  *@description Title of an action in the live heap profile tool to start with reload\n  */\n  startRecordingHeapAllocationsAndReload: 'Start recording heap allocations and reload the page',\n  /**\n  *@description Text in the Shortcuts page to explain a keyboard shortcut (start/stop recording performance)\n  */\n  startStopRecording: 'Start/stop recording',\n  /**\n  *@description Title of a setting under the Performance category in Settings\n  */\n  showNativeFunctions: 'Show native functions in JS Profile',\n  /**\n  *@description Command for shwoing the profiler tab\n  */\n  showMemory: 'Show Memory',\n  /**\n  *@description Command for showing the 'Live Heap Profile' tool in the bottom drawer\n  */\n  showLiveHeapProfile: 'Show Live Heap Profile',\n\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/profiler-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nasync function loadProfilerModule(): Promise<typeof Profiler> {\n  if (!loadedProfilerModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/profiler');\n    loadedProfilerModule = await import('./profiler.js');\n  }\n  return loadedProfilerModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (profilerModule: typeof Profiler) => T[]): T[] {\n  if (loadedProfilerModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedProfilerModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'heap_profiler',\n  commandPrompt: i18nLazyString(UIStrings.showMemory),\n  title: i18nLazyString(UIStrings.memory),\n  order: 60,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.HeapProfilerPanel.HeapProfilerPanel.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'live_heap_profile',\n  commandPrompt: i18nLazyString(UIStrings.showLiveHeapProfile),\n  title: i18nLazyString(UIStrings.liveHeapProfile),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 100,\n  async loadView() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.LiveHeapProfileView.LiveHeapProfileView.instance();\n  },\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'live-heap-profile.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.LiveHeapProfileView.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startRecordingHeapAllocations),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingHeapAllocations),\n    },\n  ],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'live-heap-profile.start-with-reload',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_REFRESH,\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.LiveHeapProfileView.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  experiment: Root.Runtime.ExperimentName.LIVE_HEAP_PROFILE,\n  title: i18nLazyString(UIStrings.startRecordingHeapAllocationsAndReload),\n});\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'profiler.heap-toggle-recording',\n  category: UI.ActionRegistration.ActionCategory.MEMORY,\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  title: i18nLazyString(UIStrings.startStopRecording),\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Profiler => [Profiler.HeapProfilerPanel.HeapProfilerPanel]);\n  },\n  async loadActionDelegate() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.HeapProfilerPanel.HeapProfilerPanel.instance();\n  },\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nCommon.Settings.registerSettingExtension({\n  category: Common.Settings.SettingCategory.PERFORMANCE,\n  title: i18nLazyString(UIStrings.showNativeFunctions),\n  settingName: 'showNativeFunctionsInJSProfile',\n  settingType: Common.Settings.SettingType.BOOLEAN,\n  defaultValue: true,\n});\n\nUI.ContextMenu.registerProvider({\n  contextTypes() {\n    return [\n      SDK.RemoteObject.RemoteObject,\n    ];\n  },\n  async loadProvider() {\n    const Profiler = await loadProfilerModule();\n    return Profiler.HeapProfilerPanel.HeapProfilerPanel.instance();\n  },\n  experiment: undefined,\n});\n"]}