{"version":3,"file":"LiveHeapProfileView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/LiveHeapProfileView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for a heap profile type\n  */\n  jsHeap: 'JS Heap',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  allocatedJsHeapSizeCurrentlyIn: 'Allocated JS heap size currently in use',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  vms: 'VMs',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  numberOfVmsSharingTheSameScript: 'Number of VMs sharing the same script source',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  scriptUrl: 'Script URL',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  */\n  urlOfTheScriptSource: 'URL of the script source',\n  /**\n  *@description Data grid name for Heap Profile data grids\n  */\n  heapProfile: 'Heap Profile',\n  /**\n  *@description Text in Live Heap Profile View of a profiler tool\n  *@example {1} PH1\n  */\n  anonymousScriptS: '(Anonymous Script {PH1})',\n  /**\n  *@description A unit\n  */\n  kb: 'kB',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/LiveHeapProfileView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet liveHeapProfileViewInstance: LiveHeapProfileView;\nexport class LiveHeapProfileView extends UI.Widget.VBox {\n  _gridNodeByUrl: Map<string, GridNode>;\n  _setting: Common.Settings.Setting<boolean>;\n  _toggleRecordAction: UI.ActionRegistration.Action;\n  _toggleRecordButton: UI.Toolbar.ToolbarToggle;\n  _startWithReloadButton: UI.Toolbar.ToolbarButton|undefined;\n  _dataGrid: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n  _currentPollId: number;\n\n  private constructor() {\n    super(true);\n    this._gridNodeByUrl = new Map();\n    this.registerRequiredCSS('panels/profiler/liveHeapProfile.css', {enableLegacyPatching: false});\n\n    this._setting = Common.Settings.Settings.instance().moduleSetting('memoryLiveHeapProfile');\n    const toolbar = new UI.Toolbar.Toolbar('live-heap-profile-toolbar', this.contentElement);\n    this._toggleRecordAction =\n        (UI.ActionRegistry.ActionRegistry.instance().action('live-heap-profile.toggle-recording') as\n         UI.ActionRegistration.Action);\n    this._toggleRecordButton =\n        (UI.Toolbar.Toolbar.createActionButton(this._toggleRecordAction) as UI.Toolbar.ToolbarToggle);\n    this._toggleRecordButton.setToggled(this._setting.get());\n    toolbar.appendToolbarItem(this._toggleRecordButton);\n\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (mainTarget && mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel)) {\n      const startWithReloadAction =\n          (UI.ActionRegistry.ActionRegistry.instance().action('live-heap-profile.start-with-reload') as\n           UI.ActionRegistration.Action);\n      this._startWithReloadButton = UI.Toolbar.Toolbar.createActionButton(startWithReloadAction);\n      toolbar.appendToolbarItem(this._startWithReloadButton);\n    }\n\n    this._dataGrid = this._createDataGrid();\n    this._dataGrid.asWidget().show(this.contentElement);\n\n    this._currentPollId = 0;\n  }\n\n  static instance(): LiveHeapProfileView {\n    if (!liveHeapProfileViewInstance) {\n      liveHeapProfileViewInstance = new LiveHeapProfileView();\n    }\n    return liveHeapProfileViewInstance;\n  }\n\n  _createDataGrid(): DataGrid.SortableDataGrid.SortableDataGrid<GridNode> {\n    const defaultColumnConfig: DataGrid.DataGrid.ColumnDescriptor = {\n      id: '',\n      title: Common.UIString.LocalizedEmptyString,\n      width: undefined,\n      fixedWidth: true,\n      sortable: true,\n      align: DataGrid.DataGrid.Align.Right,\n      sort: DataGrid.DataGrid.Order.Descending,\n      titleDOMFragment: undefined,\n      editable: undefined,\n      nonSelectable: undefined,\n      longText: undefined,\n      disclosure: undefined,\n      weight: undefined,\n      allowInSortByEvenWhenHidden: undefined,\n      dataType: undefined,\n      defaultWeight: undefined,\n    };\n    const columns = [\n      {\n        ...defaultColumnConfig,\n        id: 'size',\n        title: i18nString(UIStrings.jsHeap),\n        width: '72px',\n        fixedWidth: true,\n        sortable: true,\n        align: DataGrid.DataGrid.Align.Right,\n        sort: DataGrid.DataGrid.Order.Descending,\n        tooltip: i18nString(UIStrings.allocatedJsHeapSizeCurrentlyIn),\n      },\n      {\n        ...defaultColumnConfig,\n        id: 'isolates',\n        title: i18nString(UIStrings.vms),\n        width: '40px',\n        fixedWidth: true,\n        align: DataGrid.DataGrid.Align.Right,\n        tooltip: i18nString(UIStrings.numberOfVmsSharingTheSameScript),\n      },\n      {\n        ...defaultColumnConfig,\n        id: 'url',\n        title: i18nString(UIStrings.scriptUrl),\n        fixedWidth: false,\n        sortable: true,\n        tooltip: i18nString(UIStrings.urlOfTheScriptSource),\n      },\n    ];\n    const dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.heapProfile),\n      columns,\n      editCallback: undefined,\n      deleteCallback: undefined,\n      refreshCallback: undefined,\n    });\n    dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    dataGrid.element.classList.add('flex-auto');\n    dataGrid.element.addEventListener('keydown', this._onKeyDown.bind(this), false);\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.OpenedNode, this._revealSourceForSelectedNode, this);\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this._sortingChanged, this);\n    for (const info of columns) {\n      const headerCell = dataGrid.headerTableHeader(info.id);\n      if (headerCell) {\n        headerCell.setAttribute('title', info.tooltip);\n      }\n    }\n    return dataGrid;\n  }\n\n  wasShown(): void {\n    this._poll();\n    this._setting.addChangeListener(this._settingChanged, this);\n  }\n\n  willHide(): void {\n    ++this._currentPollId;\n    this._setting.removeChangeListener(this._settingChanged, this);\n  }\n\n  _settingChanged(value: Common.EventTarget.EventTargetEvent): void {\n    this._toggleRecordButton.setToggled((value.data as boolean));\n  }\n\n  async _poll(): Promise<void> {\n    const pollId = this._currentPollId;\n    do {\n      const isolates = Array.from(SDK.IsolateManager.IsolateManager.instance().isolates());\n      const profiles = await Promise.all(isolates.map(isolate => {\n        const heapProfilerModel = isolate.heapProfilerModel();\n        if (!heapProfilerModel) {\n          return null;\n        }\n\n        return heapProfilerModel.getSamplingProfile();\n      }));\n      if (this._currentPollId !== pollId) {\n        return;\n      }\n      this._update(isolates, profiles);\n      await new Promise(r => setTimeout(r, 3000));\n    } while (this._currentPollId === pollId);\n  }\n\n  _update(isolates: SDK.IsolateManager.Isolate[], profiles: (Protocol.HeapProfiler.SamplingHeapProfile|null)[]): void {\n    const dataByUrl = new Map<string, {\n      size: number,\n      isolates: Set<SDK.IsolateManager.Isolate>,\n    }>();\n    profiles.forEach((profile, index) => {\n      if (profile) {\n        processNodeTree(isolates[index], '', profile.head);\n      }\n    });\n\n    const rootNode = this._dataGrid.rootNode();\n    const exisitingNodes = new Set<GridNode>();\n    for (const pair of dataByUrl) {\n      const url = (pair[0] as string);\n      const size = (pair[1].size as number);\n      const isolateCount = (pair[1].isolates.size as number);\n      if (!url) {\n        console.info(`Node with empty URL: ${size} bytes`);  // eslint-disable-line no-console\n        continue;\n      }\n      let node = this._gridNodeByUrl.get(url);\n      if (node) {\n        node.updateNode(size, isolateCount);\n      } else {\n        node = new GridNode(url, size, isolateCount);\n        this._gridNodeByUrl.set(url, node);\n        rootNode.appendChild(node);\n      }\n      exisitingNodes.add(node);\n    }\n\n    for (const node of rootNode.children.slice()) {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-expect-error\n      if (!exisitingNodes.has(node)) {\n        node.remove();\n      }\n      const gridNode = (node as GridNode);\n      this._gridNodeByUrl.delete(gridNode._url);\n    }\n\n    this._sortingChanged();\n\n    function processNodeTree(\n        isolate: SDK.IsolateManager.Isolate, parentUrl: string,\n        node: Protocol.HeapProfiler.SamplingHeapProfileNode): void {\n      const url = node.callFrame.url || parentUrl || systemNodeName(node) || anonymousScriptName(node);\n      node.children.forEach(processNodeTree.bind(null, isolate, url));\n      if (!node.selfSize) {\n        return;\n      }\n      let data = dataByUrl.get(url);\n      if (!data) {\n        data = {size: 0, isolates: new Set()};\n        dataByUrl.set(url, data);\n      }\n      data.size += node.selfSize;\n      data.isolates.add(isolate);\n    }\n\n    function systemNodeName(node: Protocol.HeapProfiler.SamplingHeapProfileNode): string {\n      const name = node.callFrame.functionName;\n      return name.startsWith('(') && name !== '(root)' ? name : '';\n    }\n\n    function anonymousScriptName(node: Protocol.HeapProfiler.SamplingHeapProfileNode): string {\n      return Number(node.callFrame.scriptId) ? i18nString(UIStrings.anonymousScriptS, {PH1: node.callFrame.scriptId}) :\n                                               '';\n    }\n  }\n\n  _onKeyDown(event: KeyboardEvent): void {\n    if (!(event.key === 'Enter')) {\n      return;\n    }\n    event.consume(true);\n    this._revealSourceForSelectedNode();\n  }\n\n  _revealSourceForSelectedNode(): void {\n    const node = (this._dataGrid.selectedNode as GridNode);\n    if (!node || !node._url) {\n      return;\n    }\n    const sourceCode = Workspace.Workspace.WorkspaceImpl.instance().uiSourceCodeForURL(node._url);\n    if (sourceCode) {\n      Common.Revealer.reveal(sourceCode);\n    }\n  }\n\n  _sortingChanged(): void {\n    const columnId = this._dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n\n    function sortByUrl(\n        a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      return (b as GridNode)._url.localeCompare((a as GridNode)._url);\n    }\n\n    function sortBySize(\n        a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      return (b as GridNode)._size - (a as GridNode)._size;\n    }\n\n    const sortFunction = columnId === 'url' ? sortByUrl : sortBySize;\n    this._dataGrid.sortNodes(sortFunction, this._dataGrid.isSortOrderAscending());\n  }\n\n  _toggleRecording(): void {\n    const enable = !this._setting.get();\n    if (enable) {\n      this._startRecording(false);\n    } else {\n      this._stopRecording();\n    }\n  }\n\n  _startRecording(reload?: boolean): void {\n    this._setting.set(true);\n    if (!reload) {\n      return;\n    }\n    const mainTarget = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!mainTarget) {\n      return;\n    }\n    const resourceTreeModel =\n        (mainTarget.model(SDK.ResourceTreeModel.ResourceTreeModel) as SDK.ResourceTreeModel.ResourceTreeModel | null);\n    if (resourceTreeModel) {\n      resourceTreeModel.reloadPage();\n    }\n  }\n\n  async _stopRecording(): Promise<void> {\n    this._setting.set(false);\n  }\n}\n\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<unknown> {\n  _url: string;\n  _size: number;\n  _isolateCount: number;\n\n  constructor(url: string, size: number, isolateCount: number) {\n    super();\n    this._url = url;\n    this._size = size;\n    this._isolateCount = isolateCount;\n  }\n\n  updateNode(size: number, isolateCount: number): void {\n    if (this._size === size && this._isolateCount === isolateCount) {\n      return;\n    }\n    this._size = size;\n    this._isolateCount = isolateCount;\n    this.refresh();\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    switch (columnId) {\n      case 'url':\n        cell.textContent = this._url;\n        break;\n      case 'size':\n        cell.textContent = Platform.NumberUtilities.withThousandsSeparator(Math.round(this._size / 1e3));\n        cell.createChild('span', 'size-units').textContent = i18nString(UIStrings.kb);\n        break;\n      case 'isolates':\n        cell.textContent = `${this._isolateCount}`;\n        break;\n    }\n    return cell;\n  }\n}\n\nlet profilerActionDelegateInstance: ActionDelegate;\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!profilerActionDelegateInstance || forceNew) {\n      profilerActionDelegateInstance = new ActionDelegate();\n    }\n    return profilerActionDelegateInstance;\n  }\n\n  handleAction(_context: UI.Context.Context, actionId: string): boolean {\n    (async(): Promise<void> => {\n      const profileViewId = 'live_heap_profile';\n      await UI.ViewManager.ViewManager.instance().showView(profileViewId);\n      const view = UI.ViewManager.ViewManager.instance().view(profileViewId);\n      if (view) {\n        const widget = await view.widget();\n        this._innerHandleAction((widget as LiveHeapProfileView), actionId);\n      }\n    })();\n    return true;\n  }\n\n  _innerHandleAction(profilerView: LiveHeapProfileView, actionId: string): void {\n    switch (actionId) {\n      case 'live-heap-profile.toggle-recording':\n        profilerView._toggleRecording();\n        break;\n      case 'live-heap-profile.start-with-reload':\n        profilerView._startRecording(true);\n        break;\n      default:\n        console.assert(false, `Unknown action: ${actionId}`);\n    }\n  }\n}\n"]}