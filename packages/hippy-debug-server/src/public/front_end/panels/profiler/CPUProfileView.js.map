{"version":3,"file":"CPUProfileView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/CPUProfileView.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B;;;;;;;;;;;;;;;;;;;;;;;GAuBG;AAEH,uDAAuD;AAEvD,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,MAAM,MAAM,+CAA+C,CAAC;AACxE,OAAO,KAAK,UAAU,MAAM,2CAA2C,CAAC;AACxE,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAGhD,OAAO,EAAC,6BAA6B,EAAC,MAAM,2BAA2B,CAAC;AAIxE,OAAO,EAAC,aAAa,EAAE,WAAW,EAAC,MAAM,oBAAoB,CAAC;AAC9D,OAAO,EAAC,WAAW,EAAE,qBAAqB,EAAC,MAAM,kBAAkB,CAAC;AAEpE,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,QAAQ,EAAE,WAAW;IACrB;;MAEE;IACF,SAAS,EAAE,YAAY;IACvB;;MAEE;IACF,0BAA0B,EAAE,+BAA+B;IAC3D;;MAEE;IACF,gBAAgB,EAAE,oBAAoB;IACtC;;MAEE;IACF,iBAAiB,EAAE,qBAAqB;IACxC;;MAEE;IACF,WAAW,EAAE,cAAc;IAC3B;;MAEE;IACF,eAAe,EAAE,2FAA2F;IAC5G;;MAEE;IACF,SAAS,EAAE,YAAY;IACvB;;;MAGE;IACF,GAAG,EAAE,UAAU;IACf;;;MAGE;IACF,aAAa,EAAE,SAAS;IACxB;;MAEE;IACF,IAAI,EAAE,MAAM;IACZ;;MAEE;IACF,GAAG,EAAE,KAAK;IACV;;MAEE;IACF,kBAAkB,EAAE,sBAAsB;IAC1C;;MAEE;IACF,mBAAmB,EAAE,uBAAuB;IAC5C;;MAEE;IACF,YAAY,EAAE,eAAe;CAC9B,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,mCAAmC,EAAE,SAAS,CAAC,CAAC;AACzF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACtE,MAAM,OAAO,cAAe,SAAQ,WAAW;IAC7C,aAAa,CAAmB;IAChC,aAAa,CAAS;IACtB,YAAY,aAA+B;QACzC,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,IAAI,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACzC,MAAM,OAAO,GAAG,aAAa,CAAC,YAAY,EAAE,CAAC;QAC7C,IAAI,CAAC,aAAa,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC;QAC/C,IAAI,CAAC,aAAa,IAAI,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC;QACvD,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,CAAC,CAAC;IACrG,CAAC;IAED,YAAY,CAAC,QAAgB;QAC3B,QAAQ,QAAQ,EAAE;YAChB,KAAK,MAAM;gBACT,OAAO,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACxC,KAAK,OAAO;gBACV,OAAO,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;SAC1C;QACD,OAAO,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC;IAC9C,CAAC;IAED,4BAA4B;QAC1B,OAAO,IAAI,yBAAyB,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,EAAE,EAAE,IAAI,CAAC,aAAa,CAAC,iBAAiB,CAAC,CAAC;IAChH,CAAC;CACF;AAED,MAAM,OAAO,cAAe,SAAQ,WAAW;IAC7C,UAAU,CAAU;IACpB;QACE,KAAK,CAAC,cAAc,CAAC,MAAM,EAAE,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC,CAAC;QAC/E,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QAExB,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,sBAAsB,EACzF,IAAI,CAAC,uBAAuB,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,oBAAoB;QAClB,OAAO,KAAK,CAAC,oBAAoB,EAA0B,CAAC;IAC9D,CAAC;IAED,QAAQ;QACN,OAAO,KAAK,CAAC;IACf,CAAC;IAED,aAAa;QACX,OAAO,aAAa,CAAC;IACvB,CAAC;IAED,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;IAC5G,CAAC;IAED,aAAa;QACX,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,OAAO,KAAK,CAAC;SACd;QACD,IAAI,CAAC,sBAAsB,EAAE,CAAC;QAC9B,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,aAAa;QACf,OAAO,UAAU,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,WAAW;QACb,OAAO,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;IAC/C,CAAC;IAED,uBAAuB,CAAC,KAA0C;QAChE,MAAM,IAAI,GAAI,KAAK,CAAC,IAAuC,CAAC;QAC5D,MAAM,UAAU,GAAI,IAAI,CAAC,UAAwC,CAAC;QAClE,MAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9E,OAAO,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC3B,CAAC;IAED,sBAAsB;QACpB,MAAM,gBAAgB,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,CAAC;QACrG,IAAI,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,EAAE;YACpD,OAAO;SACR;QACD,MAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QAC7D,IAAI,CAAC,uBAAuB,CAAC,OAAwB,CAAC,CAAC;QACvD,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,iBAAiB,EAAE,CAAC;QAC/D,IAAI,CAAC,UAAU,CAAC,OAAwB,CAAC,CAAC;QAC1C,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC;QACtD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,gBAAgB,CAAC,cAAc,EAAE,CAAC;QAClC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,uBAAuB,CAAC,CAAC;IAChF,CAAC;IAED,KAAK,CAAC,qBAAqB;QACzB,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;QACxB,MAAM,oBAAoB,GAAG,IAAI,CAAC,oBAAoB,EAAsB,CAAC;QAC7E,IAAI,CAAC,oBAAoB,IAAI,CAAC,oBAAoB,CAAC,iBAAiB,EAAE;YACpE,OAAO;SACR;QAED,MAAM,OAAO,GAAG,MAAM,oBAAoB,CAAC,iBAAiB,CAAC,aAAa,EAAE,CAAC;QAC7E,MAAM,eAAe,GAAG,IAAI,CAAC,oBAAoB,EAAsB,CAAC;QACxE,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,OAAO,EAAE;gBACZ,MAAM,IAAI,KAAK,CAAC,iCAAiC,CAAC,CAAC;aACpD;YACD,eAAe,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;YAC5C,eAAe,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;YACjC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;SACpC;QAED,MAAM,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,EAAE,CAAC;QACpE,IAAI,CAAC,wBAAwB,CAAC,aAAa,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC;IAChF,CAAC;IAED,2BAA2B,CAAC,KAAa;QACvC,OAAO,IAAI,gBAAgB,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAED,2BAA2B;QACzB,IAAI,CAAC,qBAAqB,EAAE,CAAC;IAC/B,CAAC;IAED,gEAAgE;IAChE,MAAM,CAAU,MAAM,GAAG,KAAK,CAAC;;AAIjC,MAAM,OAAO,gBAAiB,SAAQ,qBAAqB;IACzD,iBAAiB,CAA6C;IAC9D,aAAa,CAA+C;IAE5D,YAAY,gBAA4D,EAAE,IAAoB,EAAE,KAAc;QAC5G,KAAK,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACzE,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;IAC5C,CAAC;IAED,UAAU;QACR,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC;IAClC,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,gBAAgB,EAAE;YAC1B,MAAM,IAAI,KAAK,CAAC,2CAA2C,CAAC,CAAC;SAC9D;QACD,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,YAAY;QACV,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;YACvB,MAAM,IAAI,KAAK,CAAC,wCAAwC,CAAC,CAAC;SAC3D;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,UAAU,CAAC,OAAkC;QAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,IAAI,IAAI,CAAC;QACjF,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACxF,CAAC;CACF;AAED,MAAM,OAAO,aAAa;IACxB,YAAY,CAAiB;IAC7B,YAAY,WAA2B;QACrC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;IAClC,CAAC;IAED,WAAW,CAAC,KAAa;QACvB,OAAO,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;IAC5D,CAAC;IAED,yBAAyB,CAAC,KAAa;QACrC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,aAAa,CAAC,KAAa,EAAE,IAAyB;QACpD,IAAI,IAAI,CAAC,YAAY,EAAE;YACrB,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAC5C,IAAI,OAAO,IAAI,IAAI,CAAC,WAAW,KAAM,OAAuD,CAAC,QAAQ,EAAE;gBACrG,OAAO,UAAU,CAAC,SAAS,CAAC,aAAa,EAAE,EAAC,GAAG,EAAE,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;aACrE;SACF;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IAED,WAAW,CAAC,IAAyB;QACnC,MAAM,gBAAgB,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,iBAAiB,CAAC;QAC3E,MAAM,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;QACnE,MAAM,OAAO,GAAG,EAAC,SAAS,EAAE,mBAAmB,EAAE,YAAY,EAAE,SAAS,EAAE,gBAAgB,EAAE,CAAC,EAAE,OAAO,EAAE,SAAS,EAAC,CAAC;QACnH,OAAO,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC,4BAA4B,CAAC,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;IACjH,CAAC;CACF;AAED,MAAM,OAAO,yBAA0B,SAAQ,6BAA6B;IAC1E,WAAW,CAA8C;IACzD,iBAAiB,CAA6C;IAC9D,eAAe,CAAgB;IAE/B,YACI,UAAuD,EACvD,gBAA4D;QAC9D,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC;QAC9B,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;IAC5C,CAAC;IAED,eAAe;QACb,OAAO,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC;IAC3C,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC;IAC5C,CAAC;IAED,mBAAmB,CAAC,UAAkB;QACpC,MAAM,IAAI,GAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAA4C,CAAC;QACrF,OAAO,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACnC,CAAC;IAED,sBAAsB;QACpB,MAAM,OAAO,GAAkD,EAAE,CAAC;QAClE,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,IAAI,QAAQ,GAAG,CAAC,CAAC;QAEjB,SAAS,WAAW;YAClB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YAC3B,wEAAwE;YACxE,sDAAsD;YACtD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,CAAC;QACD,SAAS,YAAY,CACjB,KAAa,EAAE,IAA4C,EAAE,SAAiB,EAAE,SAAiB,EACjG,QAAgB;YAClB,MAAM,KAAK,GAAI,KAAK,CAAC,GAAG,EAAa,CAAC;YACtC,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,yBAAyB,CAAC,UAAU,CAAC,KAAK,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;YACvG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;QACD,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,WAAW,EAAE,YAAY,CAAC,CAAC;QAEzD,MAAM,UAAU,GAA6C,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvF,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACpD,MAAM,eAAe,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACzD,MAAM,cAAc,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACxD,MAAM,eAAe,GAAG,IAAI,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QAEzD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;YACvC,MAAM,KAAK,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,CAAC,KAAK,EAAE;gBACV,SAAS;aACV;YACD,UAAU,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,IAAI,CAAC;YAC3B,WAAW,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;YAC7B,eAAe,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;YACpC,eAAe,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,SAAS,CAAC;YACrC,cAAc,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC;SACpC;QAED,IAAI,CAAC,cAAc,GAAG,QAAQ,GAAG,CAAC,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;QAC7B,IAAI,CAAC,aAAa,GAAG,IAAI,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,EAAE,eAAe,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC;QAE7G,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QAEtC,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED,2BAA2B,CAAC,UAAkB;QAC5C,MAAM,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC;QACxC,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QACzC,IAAI,CAAC,IAAI,EAAE;YACT,OAAO,IAAI,CAAC;SACb;QAED,MAAM,SAAS,GAGT,EAAE,CAAC;QACT,SAAS,gBAAgB,CAAC,KAAa,EAAE,KAAa;YACpD,SAAS,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAC;QAC/C,CAAC;QACD,SAAS,oBAAoB,CAAC,EAAU;YACtC,IAAI,EAAE,KAAK,CAAC,EAAE;gBACZ,OAAO,GAAG,CAAC;aACZ;YACD,IAAI,EAAE,GAAG,IAAI,EAAE;gBACb,OAAO,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC;aACxD;YACD,OAAO,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC;QACpD,CAAC;QACD,MAAM,IAAI,GAAG,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAChE,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;QACnD,MAAM,QAAQ,GAAG,oBAAoB,CAAE,IAAI,CAAC,eAAgC,CAAC,UAAU,CAAC,CAAC,CAAC;QAC1F,MAAM,SAAS,GACX,oBAAoB,CAAE,YAA+C,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC,CAAC;QACvG,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;QAC3D,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,CAAC,EAAE,SAAS,CAAC,CAAC;QAC7D,MAAM,SAAS,GAAG,IAAI,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;QACvD,MAAM,IAAI,GAAG,SAAS,CAAC,4BAA4B,CAC/C,IAAI,CAAC,iBAAiB,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/E,IAAI,IAAI,EAAE;YACR,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,WAAW,IAAI,EAAE,CAAC,CAAC;SACrE;QACD,SAAS,CAAC,OAAO,EAAE,CAAC;QACpB,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAC9G,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;QAChH,MAAM,WAAW,GAAI,IAA+C,CAAC,WAAW,CAAC;QACjF,IAAI,WAAW,EAAE;YACf,gBAAgB,CAAC,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,EAAE,WAAW,CAAC,CAAC;SACnE;QAED,OAAO,WAAW,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;IAClD,CAAC;CACF;AAED,WAAiB,yBAAyB;IACxC,MAAa,UAAU;QACrB,KAAK,CAAS;QACd,QAAQ,CAAS;QACjB,SAAS,CAAS;QAClB,QAAQ,CAAS;QACjB,IAAI,CAAyC;QAE7C,YACI,KAAa,EAAE,QAAgB,EAAE,SAAiB,EAAE,QAAgB,EACpE,IAA4C;YAC9C,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC;KACF;IAhBY,oCAAU,aAgBtB,CAAA;AACH,CAAC,EAlBgB,yBAAyB,KAAzB,yBAAyB,QAkBzC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {ProfileFlameChartDataProvider} from './CPUProfileFlameChart.js';\n\nimport type {Formatter, ProfileDataGridNode} from './ProfileDataGrid.js';\nimport type {ProfileHeader} from './ProfileHeader.js';\nimport {ProfileEvents, ProfileType} from './ProfileHeader.js';\nimport {ProfileView, WritableProfileHeader} from './ProfileView.js';\n\nconst UIStrings = {\n  /**\n  *@description Time of a single activity, as opposed to the total time\n  */\n  selfTime: 'Self Time',\n  /**\n  *@description Text for the total time of something\n  */\n  totalTime: 'Total Time',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  recordJavascriptCpuProfile: 'Record JavaScript CPU Profile',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  stopCpuProfiling: 'Stop CPU profiling',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  startCpuProfiling: 'Start CPU profiling',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  cpuProfiles: 'CPU PROFILES',\n  /**\n  *@description Text in CPUProfile View of a profiler tool, that show how much time a script spend executing a function.\n  */\n  cpuProfilesShow: 'CPU profiles show where the execution time is spent in your page\\'s JavaScript functions.',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  recording: 'Recording…',\n  /**\n  *@description Time in miliseconds\n  *@example {30.1} PH1\n  */\n  fms: '{PH1} ms',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  *@example {21.33} PH1\n  */\n  formatPercent: '{PH1} %',\n  /**\n  *@description Text for the name of something\n  */\n  name: 'Name',\n  /**\n  *@description Text for web URLs\n  */\n  url: 'URL',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  aggregatedSelfTime: 'Aggregated self time',\n  /**\n  *@description Text in CPUProfile View of a profiler tool\n  */\n  aggregatedTotalTime: 'Aggregated total time',\n  /**\n  *@description Text that indicates a JavaScript function in a CPU profile is not optimized.\n  */\n  notOptimized: 'Not optimized',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/CPUProfileView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class CPUProfileView extends ProfileView implements UI.SearchableView.Searchable {\n  profileHeader: CPUProfileHeader;\n  adjustedTotal: number;\n  constructor(profileHeader: CPUProfileHeader) {\n    super();\n    this.profileHeader = profileHeader;\n    this.initialize(new NodeFormatter(this));\n    const profile = profileHeader.profileModel();\n    this.adjustedTotal = profile.profileHead.total;\n    this.adjustedTotal -= profile.idleNode ? profile.idleNode.total : 0;\n    this.setProfile(profile);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    PerfUI.LineLevelProfile.Performance.instance().reset();\n    PerfUI.LineLevelProfile.Performance.instance().appendCPUProfile(this.profileHeader.profileModel());\n  }\n\n  columnHeader(columnId: string): Common.UIString.LocalizedString {\n    switch (columnId) {\n      case 'self':\n        return i18nString(UIStrings.selfTime);\n      case 'total':\n        return i18nString(UIStrings.totalTime);\n    }\n    return Common.UIString.LocalizedEmptyString;\n  }\n\n  createFlameChartDataProvider(): ProfileFlameChartDataProvider {\n    return new CPUFlameChartDataProvider(this.profileHeader.profileModel(), this.profileHeader._cpuProfilerModel);\n  }\n}\n\nexport class CPUProfileType extends ProfileType {\n  _recording: boolean;\n  constructor() {\n    super(CPUProfileType.TypeId, i18nString(UIStrings.recordJavascriptCpuProfile));\n    this._recording = false;\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.CPUProfilerModel.CPUProfilerModel, SDK.CPUProfilerModel.Events.ConsoleProfileFinished,\n        this._consoleProfileFinished, this);\n  }\n\n  profileBeingRecorded(): ProfileHeader|null {\n    return super.profileBeingRecorded() as ProfileHeader | null;\n  }\n\n  typeName(): string {\n    return 'CPU';\n  }\n\n  fileExtension(): string {\n    return '.cpuprofile';\n  }\n\n  get buttonTooltip(): Common.UIString.LocalizedString {\n    return this._recording ? i18nString(UIStrings.stopCpuProfiling) : i18nString(UIStrings.startCpuProfiling);\n  }\n\n  buttonClicked(): boolean {\n    if (this._recording) {\n      this._stopRecordingProfile();\n      return false;\n    }\n    this._startRecordingProfile();\n    return true;\n  }\n\n  get treeItemTitle(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.cpuProfiles);\n  }\n\n  get description(): Common.UIString.LocalizedString {\n    return i18nString(UIStrings.cpuProfilesShow);\n  }\n\n  _consoleProfileFinished(event: Common.EventTarget.EventTargetEvent): void {\n    const data = (event.data as SDK.CPUProfilerModel.EventData);\n    const cpuProfile = (data.cpuProfile as Protocol.Profiler.Profile);\n    const profile = new CPUProfileHeader(data.cpuProfilerModel, this, data.title);\n    profile.setProtocolProfile(cpuProfile);\n    this.addProfile(profile);\n  }\n\n  _startRecordingProfile(): void {\n    const cpuProfilerModel = UI.Context.Context.instance().flavor(SDK.CPUProfilerModel.CPUProfilerModel);\n    if (this.profileBeingRecorded() || !cpuProfilerModel) {\n      return;\n    }\n    const profile = new CPUProfileHeader(cpuProfilerModel, this);\n    this.setProfileBeingRecorded(profile as ProfileHeader);\n    SDK.TargetManager.TargetManager.instance().suspendAllTargets();\n    this.addProfile(profile as ProfileHeader);\n    profile.updateStatus(i18nString(UIStrings.recording));\n    this._recording = true;\n    cpuProfilerModel.startRecording();\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ProfilesCPUProfileTaken);\n  }\n\n  async _stopRecordingProfile(): Promise<void> {\n    this._recording = false;\n    const profileBeingRecorded = this.profileBeingRecorded() as CPUProfileHeader;\n    if (!profileBeingRecorded || !profileBeingRecorded._cpuProfilerModel) {\n      return;\n    }\n\n    const profile = await profileBeingRecorded._cpuProfilerModel.stopRecording();\n    const recordedProfile = this.profileBeingRecorded() as CPUProfileHeader;\n    if (recordedProfile) {\n      if (!profile) {\n        throw new Error('Expected profile to be non-null');\n      }\n      recordedProfile.setProtocolProfile(profile);\n      recordedProfile.updateStatus('');\n      this.setProfileBeingRecorded(null);\n    }\n\n    await SDK.TargetManager.TargetManager.instance().resumeAllTargets();\n    this.dispatchEventToListeners(ProfileEvents.ProfileComplete, recordedProfile);\n  }\n\n  createProfileLoadedFromFile(title: string): ProfileHeader {\n    return new CPUProfileHeader(null, this, title);\n  }\n\n  profileBeingRecordedRemoved(): void {\n    this._stopRecordingProfile();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly TypeId = 'CPU';\n}\n\n\nexport class CPUProfileHeader extends WritableProfileHeader {\n  _cpuProfilerModel: SDK.CPUProfilerModel.CPUProfilerModel|null;\n  _profileModel?: SDK.CPUProfileDataModel.CPUProfileDataModel;\n\n  constructor(cpuProfilerModel: SDK.CPUProfilerModel.CPUProfilerModel|null, type: CPUProfileType, title?: string) {\n    super(cpuProfilerModel && cpuProfilerModel.debuggerModel(), type, title);\n    this._cpuProfilerModel = cpuProfilerModel;\n  }\n\n  createView(): ProfileView {\n    return new CPUProfileView(this);\n  }\n\n  protocolProfile(): Protocol.Profiler.Profile {\n    if (!this._protocolProfile) {\n      throw new Error('Expected _protocolProfile to be available');\n    }\n    return this._protocolProfile;\n  }\n\n  profileModel(): SDK.CPUProfileDataModel.CPUProfileDataModel {\n    if (!this._profileModel) {\n      throw new Error('Expected _profileModel to be available');\n    }\n    return this._profileModel;\n  }\n\n  setProfile(profile: Protocol.Profiler.Profile): void {\n    const target = this._cpuProfilerModel && this._cpuProfilerModel.target() || null;\n    this._profileModel = new SDK.CPUProfileDataModel.CPUProfileDataModel(profile, target);\n  }\n}\n\nexport class NodeFormatter implements Formatter {\n  _profileView: CPUProfileView;\n  constructor(profileView: CPUProfileView) {\n    this._profileView = profileView;\n  }\n\n  formatValue(value: number): string {\n    return i18nString(UIStrings.fms, {PH1: value.toFixed(1)});\n  }\n\n  formatValueAccessibleText(value: number): string {\n    return this.formatValue(value);\n  }\n\n  formatPercent(value: number, node: ProfileDataGridNode): string {\n    if (this._profileView) {\n      const profile = this._profileView.profile();\n      if (profile && node.profileNode !== (profile as SDK.CPUProfileDataModel.CPUProfileDataModel).idleNode) {\n        return i18nString(UIStrings.formatPercent, {PH1: value.toFixed(2)});\n      }\n    }\n    return '';\n  }\n\n  linkifyNode(node: ProfileDataGridNode): Element|null {\n    const cpuProfilerModel = this._profileView.profileHeader._cpuProfilerModel;\n    const target = cpuProfilerModel ? cpuProfilerModel.target() : null;\n    const options = {className: 'profile-node-file', columnNumber: undefined, inlineFrameIndex: 0, tabStop: undefined};\n    return this._profileView.linkifier().maybeLinkifyConsoleCallFrame(target, node.profileNode.callFrame, options);\n  }\n}\n\nexport class CPUFlameChartDataProvider extends ProfileFlameChartDataProvider {\n  _cpuProfile: SDK.CPUProfileDataModel.CPUProfileDataModel;\n  _cpuProfilerModel: SDK.CPUProfilerModel.CPUProfilerModel|null;\n  _entrySelfTimes?: Float32Array;\n\n  constructor(\n      cpuProfile: SDK.CPUProfileDataModel.CPUProfileDataModel,\n      cpuProfilerModel: SDK.CPUProfilerModel.CPUProfilerModel|null) {\n    super();\n    this._cpuProfile = cpuProfile;\n    this._cpuProfilerModel = cpuProfilerModel;\n  }\n\n  minimumBoundary(): number {\n    return this._cpuProfile.profileStartTime;\n  }\n\n  totalTime(): number {\n    return this._cpuProfile.profileHead.total;\n  }\n\n  entryHasDeoptReason(entryIndex: number): boolean {\n    const node = (this.entryNodes[entryIndex] as SDK.CPUProfileDataModel.CPUProfileNode);\n    return Boolean(node.deoptReason);\n  }\n\n  _calculateTimelineData(): PerfUI.FlameChart.TimelineData {\n    const entries: (CPUFlameChartDataProvider.ChartEntry|null)[] = [];\n    const stack: number[] = [];\n    let maxDepth = 5;\n\n    function onOpenFrame(): void {\n      stack.push(entries.length);\n      // Reserve space for the entry, as they have to be ordered by startTime.\n      // The entry itself will be put there in onCloseFrame.\n      entries.push(null);\n    }\n    function onCloseFrame(\n        depth: number, node: SDK.CPUProfileDataModel.CPUProfileNode, startTime: number, totalTime: number,\n        selfTime: number): void {\n      const index = (stack.pop() as number);\n      entries[index] = new CPUFlameChartDataProvider.ChartEntry(depth, totalTime, startTime, selfTime, node);\n      maxDepth = Math.max(maxDepth, depth);\n    }\n    this._cpuProfile.forEachFrame(onOpenFrame, onCloseFrame);\n\n    const entryNodes: SDK.CPUProfileDataModel.CPUProfileNode[] = new Array(entries.length);\n    const entryLevels = new Uint16Array(entries.length);\n    const entryTotalTimes = new Float32Array(entries.length);\n    const entrySelfTimes = new Float32Array(entries.length);\n    const entryStartTimes = new Float64Array(entries.length);\n\n    for (let i = 0; i < entries.length; ++i) {\n      const entry = entries[i];\n      if (!entry) {\n        continue;\n      }\n      entryNodes[i] = entry.node;\n      entryLevels[i] = entry.depth;\n      entryTotalTimes[i] = entry.duration;\n      entryStartTimes[i] = entry.startTime;\n      entrySelfTimes[i] = entry.selfTime;\n    }\n\n    this._maxStackDepth = maxDepth + 1;\n    this.entryNodes = entryNodes;\n    this.timelineData_ = new PerfUI.FlameChart.TimelineData(entryLevels, entryTotalTimes, entryStartTimes, null);\n\n    this._entrySelfTimes = entrySelfTimes;\n\n    return this.timelineData_;\n  }\n\n  prepareHighlightedEntryInfo(entryIndex: number): Element|null {\n    const timelineData = this.timelineData_;\n    const node = this.entryNodes[entryIndex];\n    if (!node) {\n      return null;\n    }\n\n    const entryInfo: {\n      title: string,\n      value: string,\n    }[] = [];\n    function pushEntryInfoRow(title: string, value: string): void {\n      entryInfo.push({title: title, value: value});\n    }\n    function millisecondsToString(ms: number): string {\n      if (ms === 0) {\n        return '0';\n      }\n      if (ms < 1000) {\n        return i18nString(UIStrings.fms, {PH1: ms.toFixed(1)});\n      }\n      return i18n.i18n.secondsToString(ms / 1000, true);\n    }\n    const name = UI.UIUtils.beautifyFunctionName(node.functionName);\n    pushEntryInfoRow(i18nString(UIStrings.name), name);\n    const selfTime = millisecondsToString((this._entrySelfTimes as Float32Array)[entryIndex]);\n    const totalTime =\n        millisecondsToString((timelineData as PerfUI.FlameChart.TimelineData).entryTotalTimes[entryIndex]);\n    pushEntryInfoRow(i18nString(UIStrings.selfTime), selfTime);\n    pushEntryInfoRow(i18nString(UIStrings.totalTime), totalTime);\n    const linkifier = new Components.Linkifier.Linkifier();\n    const link = linkifier.maybeLinkifyConsoleCallFrame(\n        this._cpuProfilerModel && this._cpuProfilerModel.target(), node.callFrame);\n    if (link) {\n      pushEntryInfoRow(i18nString(UIStrings.url), link.textContent || '');\n    }\n    linkifier.dispose();\n    pushEntryInfoRow(i18nString(UIStrings.aggregatedSelfTime), i18n.i18n.secondsToString(node.self / 1000, true));\n    pushEntryInfoRow(i18nString(UIStrings.aggregatedTotalTime), i18n.i18n.secondsToString(node.total / 1000, true));\n    const deoptReason = (node as SDK.CPUProfileDataModel.CPUProfileNode).deoptReason;\n    if (deoptReason) {\n      pushEntryInfoRow(i18nString(UIStrings.notOptimized), deoptReason);\n    }\n\n    return ProfileView.buildPopoverTable(entryInfo);\n  }\n}\n\nexport namespace CPUFlameChartDataProvider {\n  export class ChartEntry {\n    depth: number;\n    duration: number;\n    startTime: number;\n    selfTime: number;\n    node: SDK.CPUProfileDataModel.CPUProfileNode;\n\n    constructor(\n        depth: number, duration: number, startTime: number, selfTime: number,\n        node: SDK.CPUProfileDataModel.CPUProfileNode) {\n      this.depth = depth;\n      this.duration = duration;\n      this.startTime = startTime;\n      this.selfTime = selfTime;\n      this.node = node;\n    }\n  }\n}\n"]}