{"version":3,"file":"HeapSnapshotProxy.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/HeapSnapshotProxy.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as HeapSnapshotModel from '../../models/heap_snapshot_model/heap_snapshot_model.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type {ChildrenProvider} from './ChildrenProvider.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Heap Snapshot Proxy of a profiler tool\n  *@example {functionName} PH1\n  */\n  anErrorOccurredWhenACallToMethod: 'An error occurred when a call to method \\'{PH1}\\' was requested',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/profiler/HeapSnapshotProxy.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class HeapSnapshotWorkerProxy extends Common.ObjectWrapper.ObjectWrapper {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _eventHandler: (arg0: string, arg1: any) => void;\n  _nextObjectId: number;\n  _nextCallId: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _callbacks: Map<number, (arg0: any) => void>;\n  _previousCallbacks: Set<number>;\n  _worker: Common.Worker.WorkerWrapper;\n  _interval?: number;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(eventHandler: (arg0: string, arg1: any) => void) {\n    super();\n    this._eventHandler = eventHandler;\n    this._nextObjectId = 1;\n    this._nextCallId = 1;\n    this._callbacks = new Map();\n    this._previousCallbacks = new Set();\n    // We use the legacy file here, as below we postMessage and expect certain objects to be\n    // defined on the global scope. Ideally we use some sort of import-export mechanism across\n    // worker boundaries, but that requires a partial rewrite of the heap_snapshot_worker.\n    this._worker = Common.Worker.WorkerWrapper.fromURL(\n        new URL('../../entrypoints/heap_snapshot_worker/heap_snapshot_worker-legacy.js', import.meta.url));\n    this._worker.onmessage = this._messageReceived.bind(this);\n  }\n\n  createLoader(profileUid: number, snapshotReceivedCallback: (arg0: HeapSnapshotProxy) => void):\n      HeapSnapshotLoaderProxy {\n    const objectId = this._nextObjectId++;\n    const proxy = new HeapSnapshotLoaderProxy(this, objectId, profileUid, snapshotReceivedCallback);\n    this._postMessage({\n      callId: this._nextCallId++,\n      disposition: 'create',\n      objectId: objectId,\n      methodName: 'HeapSnapshotWorker.HeapSnapshotLoader',\n    });\n    return proxy;\n  }\n\n  dispose(): void {\n    this._worker.terminate();\n    if (this._interval) {\n      clearInterval(this._interval);\n    }\n  }\n\n  disposeObject(objectId: number): void {\n    this._postMessage({callId: this._nextCallId++, disposition: 'dispose', objectId: objectId});\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  evaluateForTest(script: string, callback: (arg0: any) => void): void {\n    const callId = this._nextCallId++;\n    this._callbacks.set(callId, callback);\n    this._postMessage({callId: callId, disposition: 'evaluateForTest', source: script});\n  }\n\n  callFactoryMethod<T>(\n      callback: ((...arg0: unknown[]) => void)|null, objectId: string, methodName: string,\n      proxyConstructor: new(...arg1: unknown[]) => T): Object|null {\n    const callId = this._nextCallId++;\n    const methodArguments = Array.prototype.slice.call(arguments, 4);\n    const newObjectId = this._nextObjectId++;\n\n    if (callback) {\n      this._callbacks.set(callId, remoteResult => {\n        callback(remoteResult ? new proxyConstructor(this, newObjectId) : null);\n      });\n      this._postMessage({\n        callId: callId,\n        disposition: 'factory',\n        objectId: objectId,\n        methodName: methodName,\n        methodArguments: methodArguments,\n        newObjectId: newObjectId,\n      });\n      return null;\n    }\n    this._postMessage({\n      callId: callId,\n      disposition: 'factory',\n      objectId: objectId,\n      methodName: methodName,\n      methodArguments: methodArguments,\n      newObjectId: newObjectId,\n    });\n    return new proxyConstructor(this, newObjectId);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  callMethod(callback: (arg0: any) => void, objectId: string, methodName: string): void {\n    const callId = this._nextCallId++;\n    const methodArguments = Array.prototype.slice.call(arguments, 3);\n    if (callback) {\n      this._callbacks.set(callId, callback);\n    }\n    this._postMessage({\n      callId: callId,\n      disposition: 'method',\n      objectId: objectId,\n      methodName: methodName,\n      methodArguments: methodArguments,\n    });\n  }\n\n  startCheckingForLongRunningCalls(): void {\n    if (this._interval) {\n      return;\n    }\n    this._checkLongRunningCalls();\n    this._interval = window.setInterval(this._checkLongRunningCalls.bind(this), 300);\n  }\n\n  _checkLongRunningCalls(): void {\n    for (const callId of this._previousCallbacks) {\n      if (!this._callbacks.has(callId)) {\n        this._previousCallbacks.delete(callId);\n      }\n    }\n    const hasLongRunningCalls = Boolean(this._previousCallbacks.size);\n    this.dispatchEventToListeners(HeapSnapshotWorkerProxy.Events.Wait, hasLongRunningCalls);\n    for (const callId of this._callbacks.keys()) {\n      this._previousCallbacks.add(callId);\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _messageReceived(event: MessageEvent<any>): void {\n    const data = event.data;\n    if (data.eventName) {\n      if (this._eventHandler) {\n        this._eventHandler(data.eventName, data.data);\n      }\n      return;\n    }\n    if (data.error) {\n      if (data.errorMethodName) {\n        Common.Console.Console.instance().error(\n            i18nString(UIStrings.anErrorOccurredWhenACallToMethod, {PH1: data.errorMethodName}));\n      }\n      Common.Console.Console.instance().error(data['errorCallStack']);\n      this._callbacks.delete(data.callId);\n      return;\n    }\n    const callback = this._callbacks.get(data.callId);\n    if (!callback) {\n      return;\n    }\n    this._callbacks.delete(data.callId);\n    callback(data.result);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _postMessage(message: any): void {\n    this._worker.postMessage(message);\n  }\n}\n\nexport namespace HeapSnapshotWorkerProxy {\n  export const enum Events {\n    Wait = 'Wait',\n  }\n}\n\nexport class HeapSnapshotProxyObject {\n  _worker: HeapSnapshotWorkerProxy;\n  _objectId: number;\n  constructor(worker: HeapSnapshotWorkerProxy, objectId: number) {\n    this._worker = worker;\n    this._objectId = objectId;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _callWorker(workerMethodName: string, args: any[]): any {\n    args.splice(1, 0, this._objectId);\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const worker = (this._worker as any)[workerMethodName];\n    if (!worker) {\n      throw new Error(`Could not find worker with name ${workerMethodName}.`);\n    }\n    return worker.apply(this._worker, args);\n  }\n\n  dispose(): void {\n    this._worker.disposeObject(this._objectId);\n  }\n\n  disposeWorker(): void {\n    this._worker.dispose();\n  }\n\n  callFactoryMethod<T>(\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      _callback: ((...arg0: any[]) => void)|null, _methodName: string, _proxyConstructor: new(...arg1: any[]) => T,\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/naming-convention\n      ..._var_args: any[]): T {\n    return this._callWorker('callFactoryMethod', Array.prototype.slice.call(arguments, 0));\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/naming-convention\n  _callMethodPromise<T>(_methodName: string, ..._var_args: any[]): Promise<T> {\n    const args = Array.prototype.slice.call(arguments);\n    return new Promise(resolve => this._callWorker('callMethod', [resolve, ...args]));\n  }\n}\n\nexport class HeapSnapshotLoaderProxy extends HeapSnapshotProxyObject implements Common.StringOutputStream.OutputStream {\n  _profileUid: number;\n  _snapshotReceivedCallback: (arg0: HeapSnapshotProxy) => void;\n  constructor(\n      worker: HeapSnapshotWorkerProxy, objectId: number, profileUid: number,\n      snapshotReceivedCallback: (arg0: HeapSnapshotProxy) => void) {\n    super(worker, objectId);\n    this._profileUid = profileUid;\n    this._snapshotReceivedCallback = snapshotReceivedCallback;\n  }\n\n  async write(chunk: string): Promise<void> {\n    await this._callMethodPromise('write', chunk);\n  }\n\n  async close(): Promise<void> {\n    await this._callMethodPromise('close');\n    const snapshotProxy = await new Promise<HeapSnapshotProxy>(\n        resolve => this.callFactoryMethod(resolve, 'buildSnapshot', HeapSnapshotProxy));\n    this.dispose();\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // @ts-expect-error\n    snapshotProxy.setProfileUid(this._profileUid);\n    await snapshotProxy.updateStaticData();\n    this._snapshotReceivedCallback(snapshotProxy);\n  }\n}\n\nexport class HeapSnapshotProxy extends HeapSnapshotProxyObject {\n  _staticData: HeapSnapshotModel.HeapSnapshotModel.StaticData|null;\n  _profileUid?: string;\n\n  constructor(worker: HeapSnapshotWorkerProxy, objectId: number) {\n    super(worker, objectId);\n    this._staticData = null;\n  }\n\n  search(\n      searchConfig: HeapSnapshotModel.HeapSnapshotModel.SearchConfig,\n      filter: HeapSnapshotModel.HeapSnapshotModel.NodeFilter): Promise<number[]> {\n    return this._callMethodPromise('search', searchConfig, filter);\n  }\n\n  aggregatesWithFilter(filter: HeapSnapshotModel.HeapSnapshotModel.NodeFilter): Promise<{\n    [x: string]: HeapSnapshotModel.HeapSnapshotModel.Aggregate,\n  }> {\n    return this._callMethodPromise('aggregatesWithFilter', filter);\n  }\n\n  aggregatesForDiff(): Promise<{\n    [x: string]: HeapSnapshotModel.HeapSnapshotModel.AggregateForDiff,\n  }> {\n    return this._callMethodPromise('aggregatesForDiff');\n  }\n\n  calculateSnapshotDiff(baseSnapshotId: string, baseSnapshotAggregates: {\n    [x: string]: HeapSnapshotModel.HeapSnapshotModel.AggregateForDiff,\n  }): Promise<{\n    [x: string]: HeapSnapshotModel.HeapSnapshotModel.Diff,\n  }> {\n    return this._callMethodPromise('calculateSnapshotDiff', baseSnapshotId, baseSnapshotAggregates);\n  }\n\n  nodeClassName(snapshotObjectId: number): Promise<string|null> {\n    return this._callMethodPromise('nodeClassName', snapshotObjectId);\n  }\n\n  createEdgesProvider(nodeIndex: number): HeapSnapshotProviderProxy {\n    return this.callFactoryMethod(null, 'createEdgesProvider', HeapSnapshotProviderProxy, nodeIndex);\n  }\n\n  createRetainingEdgesProvider(nodeIndex: number): HeapSnapshotProviderProxy {\n    return this.callFactoryMethod(null, 'createRetainingEdgesProvider', HeapSnapshotProviderProxy, nodeIndex);\n  }\n\n  createAddedNodesProvider(baseSnapshotId: string, className: string): HeapSnapshotProviderProxy|null {\n    return this.callFactoryMethod(\n        null, 'createAddedNodesProvider', HeapSnapshotProviderProxy, baseSnapshotId, className);\n  }\n\n  createDeletedNodesProvider(nodeIndexes: number[]): HeapSnapshotProviderProxy|null {\n    return this.callFactoryMethod(null, 'createDeletedNodesProvider', HeapSnapshotProviderProxy, nodeIndexes);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createNodesProvider(filter: (arg0: any) => boolean): HeapSnapshotProviderProxy|null {\n    return this.callFactoryMethod(null, 'createNodesProvider', HeapSnapshotProviderProxy, filter);\n  }\n\n  createNodesProviderForClass(className: string, nodeFilter: HeapSnapshotModel.HeapSnapshotModel.NodeFilter):\n      HeapSnapshotProviderProxy|null {\n    return this.callFactoryMethod(\n        null, 'createNodesProviderForClass', HeapSnapshotProviderProxy, className, nodeFilter);\n  }\n\n  allocationTracesTops(): Promise<HeapSnapshotModel.HeapSnapshotModel.SerializedAllocationNode[]> {\n    return this._callMethodPromise('allocationTracesTops');\n  }\n\n  allocationNodeCallers(nodeId: number): Promise<HeapSnapshotModel.HeapSnapshotModel.AllocationNodeCallers> {\n    return this._callMethodPromise('allocationNodeCallers', nodeId);\n  }\n\n  allocationStack(nodeIndex: number): Promise<HeapSnapshotModel.HeapSnapshotModel.AllocationStackFrame[]|null> {\n    return this._callMethodPromise('allocationStack', nodeIndex);\n  }\n\n  dispose(): void {\n    throw new Error('Should never be called');\n  }\n\n  get nodeCount(): number {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.nodeCount;\n  }\n\n  get rootNodeIndex(): number {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.rootNodeIndex;\n  }\n\n  async updateStaticData(): Promise<void> {\n    this._staticData = await this._callMethodPromise('updateStaticData');\n  }\n\n  getStatistics(): Promise<HeapSnapshotModel.HeapSnapshotModel.Statistics> {\n    return this._callMethodPromise('getStatistics');\n  }\n\n  getLocation(nodeIndex: number): Promise<HeapSnapshotModel.HeapSnapshotModel.Location|null> {\n    return this._callMethodPromise('getLocation', nodeIndex);\n  }\n\n  getSamples(): Promise<HeapSnapshotModel.HeapSnapshotModel.Samples|null> {\n    return this._callMethodPromise('getSamples');\n  }\n\n  get totalSize(): number {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.totalSize;\n  }\n\n  get uid(): string|undefined {\n    return this._profileUid;\n  }\n\n  setProfileUid(profileUid: string): void {\n    this._profileUid = profileUid;\n  }\n\n  maxJSObjectId(): number {\n    if (!this._staticData) {\n      return 0;\n    }\n    return this._staticData.maxJSObjectId;\n  }\n}\n\nexport class HeapSnapshotProviderProxy extends HeapSnapshotProxyObject implements ChildrenProvider {\n  constructor(worker: HeapSnapshotWorkerProxy, objectId: number) {\n    super(worker, objectId);\n  }\n\n  nodePosition(snapshotObjectId: number): Promise<number> {\n    return this._callMethodPromise('nodePosition', snapshotObjectId);\n  }\n\n  isEmpty(): Promise<boolean> {\n    return this._callMethodPromise('isEmpty');\n  }\n\n  serializeItemsRange(startPosition: number, endPosition: number):\n      Promise<HeapSnapshotModel.HeapSnapshotModel.ItemsRange> {\n    return this._callMethodPromise('serializeItemsRange', startPosition, endPosition);\n  }\n\n  async sortAndRewind(comparator: HeapSnapshotModel.HeapSnapshotModel.ComparatorConfig): Promise<void> {\n    await this._callMethodPromise('sortAndRewind', comparator);\n  }\n}\n"]}