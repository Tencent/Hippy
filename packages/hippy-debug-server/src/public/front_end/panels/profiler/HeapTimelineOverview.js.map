{"version":3,"file":"HeapTimelineOverview.js","sourceRoot":"","sources":["../../../../../../front_end/panels/profiler/HeapTimelineOverview.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nexport class HeapTimelineOverview extends UI.Widget.VBox {\n  _overviewCalculator: OverviewCalculator;\n  _overviewContainer: HTMLElement;\n  _overviewGrid: PerfUI.OverviewGrid.OverviewGrid;\n  _overviewCanvas: HTMLCanvasElement;\n  _windowLeft: number;\n  _windowRight: number;\n  _yScale: SmoothScale;\n  _xScale: SmoothScale;\n  _profileSamples: Samples;\n  _running?: boolean;\n  _updateOverviewCanvas?: boolean;\n  _updateGridTimerId?: number;\n  _updateTimerId?: number|null;\n  _windowWidth?: number;\n  constructor() {\n    super();\n    this.element.id = 'heap-recording-view';\n    this.element.classList.add('heap-tracking-overview');\n\n    this._overviewCalculator = new OverviewCalculator();\n    this._overviewContainer = this.element.createChild('div', 'heap-overview-container');\n    this._overviewGrid = new PerfUI.OverviewGrid.OverviewGrid('heap-recording', this._overviewCalculator);\n    this._overviewGrid.element.classList.add('fill');\n    this._overviewCanvas =\n        (this._overviewContainer.createChild('canvas', 'heap-recording-overview-canvas') as HTMLCanvasElement);\n    this._overviewContainer.appendChild(this._overviewGrid.element);\n    this._overviewGrid.addEventListener(PerfUI.OverviewGrid.Events.WindowChanged, this._onWindowChanged, this);\n\n    this._windowLeft = 0.0;\n    this._windowRight = 1.0;\n    this._overviewGrid.setWindow(this._windowLeft, this._windowRight);\n    this._yScale = new SmoothScale();\n    this._xScale = new SmoothScale();\n\n    this._profileSamples = new Samples();\n  }\n\n  start(): void {\n    this._running = true;\n    const drawFrame = (): void => {\n      this.update();\n      if (this._running) {\n        this.element.window().requestAnimationFrame(drawFrame);\n      }\n    };\n    drawFrame();\n  }\n\n  stop(): void {\n    this._running = false;\n  }\n\n  setSamples(samples: Samples): void {\n    this._profileSamples = samples;\n    if (!this._running) {\n      this.update();\n    }\n  }\n\n  _drawOverviewCanvas(width: number, height: number): void {\n    if (!this._profileSamples) {\n      return;\n    }\n    const profileSamples = this._profileSamples;\n    const sizes = profileSamples.sizes;\n    const topSizes = profileSamples.max;\n    const timestamps = profileSamples.timestamps;\n    const startTime = timestamps[0];\n\n    const scaleFactor = this._xScale.nextScale(width / profileSamples.totalTime);\n    let maxSize = 0;\n    function aggregateAndCall(sizes: number[], callback: (arg0: number, arg1: number) => void): void {\n      let size = 0;\n      let currentX = 0;\n      for (let i = 1; i < timestamps.length; ++i) {\n        const x = Math.floor((timestamps[i] - startTime) * scaleFactor);\n        if (x !== currentX) {\n          if (size) {\n            callback(currentX, size);\n          }\n          size = 0;\n          currentX = x;\n        }\n        size += sizes[i];\n      }\n      callback(currentX, size);\n    }\n\n    function maxSizeCallback(x: number, size: number): void {\n      maxSize = Math.max(maxSize, size);\n    }\n\n    aggregateAndCall(sizes, maxSizeCallback);\n\n    const yScaleFactor = this._yScale.nextScale(maxSize ? height / (maxSize * 1.1) : 0.0);\n\n    this._overviewCanvas.width = width * window.devicePixelRatio;\n    this._overviewCanvas.height = height * window.devicePixelRatio;\n    this._overviewCanvas.style.width = width + 'px';\n    this._overviewCanvas.style.height = height + 'px';\n\n    const maybeContext = this._overviewCanvas.getContext('2d');\n    if (!maybeContext) {\n      throw new Error('Failed to get canvas context');\n    }\n    const context = maybeContext;\n    context.scale(window.devicePixelRatio, window.devicePixelRatio);\n\n    if (this._running) {\n      context.beginPath();\n      context.lineWidth = 2;\n      context.strokeStyle = 'rgba(192, 192, 192, 0.6)';\n      const currentX = (Date.now() - startTime) * scaleFactor;\n      context.moveTo(currentX, height - 1);\n      context.lineTo(currentX, 0);\n      context.stroke();\n      context.closePath();\n    }\n\n    let gridY = 0;\n    let gridValue;\n    const gridLabelHeight = 14;\n    if (yScaleFactor) {\n      const maxGridValue = (height - gridLabelHeight) / yScaleFactor;\n      // The round value calculation is a bit tricky, because\n      // it has a form k*10^n*1024^m, where k=[1,5], n=[0..3], m is an integer,\n      // e.g. a round value 10KB is 10240 bytes.\n      gridValue = Math.pow(1024, Math.floor(Math.log(maxGridValue) / Math.log(1024)));\n      gridValue *= Math.pow(10, Math.floor(Math.log(maxGridValue / gridValue) / Math.LN10));\n      if (gridValue * 5 <= maxGridValue) {\n        gridValue *= 5;\n      }\n      gridY = Math.round(height - gridValue * yScaleFactor - 0.5) + 0.5;\n      context.beginPath();\n      context.lineWidth = 1;\n      context.strokeStyle = 'rgba(0, 0, 0, 0.2)';\n      context.moveTo(0, gridY);\n      context.lineTo(width, gridY);\n      context.stroke();\n      context.closePath();\n    }\n\n    function drawBarCallback(x: number, size: number): void {\n      context.moveTo(x, height - 1);\n      context.lineTo(x, Math.round(height - size * yScaleFactor - 1));\n    }\n\n    context.beginPath();\n    context.lineWidth = 2;\n    context.strokeStyle = 'rgba(192, 192, 192, 0.6)';\n    aggregateAndCall(topSizes, drawBarCallback);\n    context.stroke();\n    context.closePath();\n\n    context.beginPath();\n    context.lineWidth = 2;\n    context.strokeStyle = 'rgba(0, 0, 192, 0.8)';\n    aggregateAndCall(sizes, drawBarCallback);\n    context.stroke();\n    context.closePath();\n\n    if (gridValue) {\n      const label = Platform.NumberUtilities.bytesToString(gridValue);\n      const labelPadding = 4;\n      const labelX = 0;\n      const labelY = gridY - 0.5;\n      const labelWidth = 2 * labelPadding + context.measureText(label).width;\n      context.beginPath();\n      context.textBaseline = 'bottom';\n      context.font = '10px ' + window.getComputedStyle(this.element, null).getPropertyValue('font-family');\n      context.fillStyle = 'rgba(255, 255, 255, 0.75)';\n      context.fillRect(labelX, labelY - gridLabelHeight, labelWidth, gridLabelHeight);\n      context.fillStyle = 'rgb(64, 64, 64)';\n      context.fillText(label, labelX + labelPadding, labelY);\n      context.fill();\n      context.closePath();\n    }\n  }\n\n  onResize(): void {\n    this._updateOverviewCanvas = true;\n    this._scheduleUpdate();\n  }\n\n  _onWindowChanged(): void {\n    if (!this._updateGridTimerId) {\n      this._updateGridTimerId = setTimeout(this.updateGrid.bind(this), 10);\n    }\n  }\n\n  _scheduleUpdate(): void {\n    if (this._updateTimerId) {\n      return;\n    }\n    this._updateTimerId = setTimeout(this.update.bind(this), 10);\n  }\n\n  _updateBoundaries(): void {\n    this._windowLeft = this._overviewGrid.windowLeft();\n    this._windowRight = this._overviewGrid.windowRight();\n    this._windowWidth = this._windowRight - this._windowLeft;\n  }\n\n  update(): void {\n    this._updateTimerId = null;\n    if (!this.isShowing()) {\n      return;\n    }\n    this._updateBoundaries();\n    this._overviewCalculator._updateBoundaries(this);\n    this._overviewGrid.updateDividers(this._overviewCalculator);\n    this._drawOverviewCanvas(this._overviewContainer.clientWidth, this._overviewContainer.clientHeight - 20);\n  }\n\n  updateGrid(): void {\n    this._updateGridTimerId = 0;\n    this._updateBoundaries();\n    const ids = this._profileSamples.ids;\n    if (!ids.length) {\n      return;\n    }\n    const timestamps = this._profileSamples.timestamps;\n    const sizes = this._profileSamples.sizes;\n    const startTime = timestamps[0];\n    const totalTime = this._profileSamples.totalTime;\n    const timeLeft = startTime + totalTime * this._windowLeft;\n    const timeRight = startTime + totalTime * this._windowRight;\n    const minIndex =\n        Platform.ArrayUtilities.lowerBound(timestamps, timeLeft, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    const maxIndex =\n        Platform.ArrayUtilities.upperBound(timestamps, timeRight, Platform.ArrayUtilities.DEFAULT_COMPARATOR);\n    let size = 0;\n    for (let i = minIndex; i <= maxIndex; ++i) {\n      size += sizes[i];\n    }\n    const minId = minIndex > 0 ? ids[minIndex - 1] : 0;\n    const maxId = maxIndex < ids.length ? ids[maxIndex] : Infinity;\n\n    this.dispatchEventToListeners(IdsRangeChanged, {minId, maxId, size});\n  }\n}\n\nexport const IdsRangeChanged = Symbol('IdsRangeChanged');\n\nexport class SmoothScale {\n  _lastUpdate: number;\n  _currentScale: number;\n  constructor() {\n    this._lastUpdate = 0;\n    this._currentScale = 0.0;\n  }\n\n  nextScale(target: number): number {\n    target = target || this._currentScale;\n    if (this._currentScale) {\n      const now = Date.now();\n      const timeDeltaMs = now - this._lastUpdate;\n      this._lastUpdate = now;\n      const maxChangePerSec = 20;\n      const maxChangePerDelta = Math.pow(maxChangePerSec, timeDeltaMs / 1000);\n      const scaleChange = target / this._currentScale;\n      this._currentScale *= Platform.NumberUtilities.clamp(scaleChange, 1 / maxChangePerDelta, maxChangePerDelta);\n    } else {\n      this._currentScale = target;\n    }\n    return this._currentScale;\n  }\n}\n\nexport class Samples {\n  sizes: number[];\n  ids: number[];\n  timestamps: number[];\n  max: number[];\n  totalTime: number;\n  constructor() {\n    this.sizes = [];\n    this.ids = [];\n    this.timestamps = [];\n    this.max = [];\n    this.totalTime = 30000;\n  }\n}\n\nexport class OverviewCalculator implements PerfUI.TimelineGrid.Calculator {\n  _maximumBoundaries: number;\n  _minimumBoundaries: number;\n  _xScaleFactor: number;\n  constructor() {\n    this._maximumBoundaries = 0;\n    this._minimumBoundaries = 0;\n    this._xScaleFactor = 0;\n  }\n\n  _updateBoundaries(chart: HeapTimelineOverview): void {\n    this._minimumBoundaries = 0;\n    this._maximumBoundaries = chart._profileSamples.totalTime;\n    this._xScaleFactor = chart._overviewContainer.clientWidth / this._maximumBoundaries;\n  }\n\n  computePosition(time: number): number {\n    return (time - this._minimumBoundaries) * this._xScaleFactor;\n  }\n\n  formatValue(value: number, precision?: number): string {\n    return i18n.i18n.secondsToString(value / 1000, Boolean(precision));\n  }\n\n  maximumBoundary(): number {\n    return this._maximumBoundaries;\n  }\n\n  minimumBoundary(): number {\n    return this._minimumBoundaries;\n  }\n\n  zeroTime(): number {\n    return this._minimumBoundaries;\n  }\n\n  boundarySpan(): number {\n    return this._maximumBoundaries - this._minimumBoundaries;\n  }\n}\n"]}