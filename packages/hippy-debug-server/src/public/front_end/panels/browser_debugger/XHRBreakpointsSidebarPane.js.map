{"version":3,"file":"XHRBreakpointsSidebarPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/browser_debugger/XHRBreakpointsSidebarPane.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the 'XHR/fetch Breakpoints' tool in the bottom sidebar of the Sources tool\n  */\n  xhrfetchBreakpoints: 'XHR/fetch Breakpoints',\n  /**\n  *@description Text to indicate there are no breakpoints\n  */\n  noBreakpoints: 'No breakpoints',\n  /**\n  *@description Label for a button in the Sources panel that opens the input field to create a new XHR/fetch breakpoint.\n  */\n  addXhrfetchBreakpoint: 'Add XHR/fetch breakpoint',\n  /**\n  *@description Text to add a breakpoint\n  */\n  addBreakpoint: 'Add breakpoint',\n  /**\n  *@description Input element container text content in XHRBreakpoints Sidebar Pane of the JavaScript Debugging pane in the Sources panel or the DOM Breakpoints pane in the Elements panel\n  */\n  breakWhenUrlContains: 'Break when URL contains:',\n  /**\n  *@description Accessible label for XHR/fetch breakpoint text input\n  */\n  urlBreakpoint: 'URL Breakpoint',\n  /**\n  *@description Text in XHRBreakpoints Sidebar Pane of the JavaScript Debugging pane in the Sources panel or the DOM Breakpoints pane in the Elements panel\n  *@example {example.com} PH1\n  */\n  urlContainsS: 'URL contains \"{PH1}\"',\n  /**\n  *@description Text in XHRBreakpoints Sidebar Pane of the JavaScript Debugging pane in the Sources panel or the DOM Breakpoints pane in the Elements panel\n  */\n  anyXhrOrFetch: 'Any XHR or fetch',\n  /**\n  *@description Screen reader description of a hit breakpoint in the Sources panel\n  */\n  breakpointHit: 'breakpoint hit',\n  /**\n  *@description Text to remove all breakpoints\n  */\n  removeAllBreakpoints: 'Remove all breakpoints',\n  /**\n  *@description Text to remove a breakpoint\n  */\n  removeBreakpoint: 'Remove breakpoint',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/browser_debugger/XHRBreakpointsSidebarPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst containerToBreakpointEntry = new WeakMap<Element, HTMLElement>();\n\nconst breakpointEntryToCheckbox = new WeakMap<Element, HTMLInputElement>();\n\nlet xhrBreakpointsSidebarPaneInstance: XHRBreakpointsSidebarPane;\n\nexport class XHRBreakpointsSidebarPane extends UI.Widget.VBox implements UI.ContextFlavorListener.ContextFlavorListener,\n                                                                         UI.Toolbar.ItemsProvider,\n                                                                         UI.ListControl.ListDelegate<string> {\n  _breakpoints: UI.ListModel.ListModel<string>;\n  _list: UI.ListControl.ListControl<string>;\n  _emptyElement: HTMLElement;\n  _breakpointElements: Map<string, Element>;\n  _addButton: UI.Toolbar.ToolbarButton;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _hitBreakpoint?: any;\n\n  private constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/browser_debugger/xhrBreakpointsSidebarPane.css', {enableLegacyPatching: false});\n\n    this._breakpoints = new UI.ListModel.ListModel();\n    this._list = new UI.ListControl.ListControl(this._breakpoints, this, UI.ListControl.ListMode.NonViewport);\n    this.contentElement.appendChild(this._list.element);\n    this._list.element.classList.add('breakpoint-list', 'hidden');\n    UI.ARIAUtils.markAsList(this._list.element);\n    UI.ARIAUtils.setAccessibleName(this._list.element, i18nString(UIStrings.xhrfetchBreakpoints));\n    this._emptyElement = this.contentElement.createChild('div', 'gray-info-message');\n    this._emptyElement.textContent = i18nString(UIStrings.noBreakpoints);\n\n    this._breakpointElements = new Map();\n\n    this._addButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.addXhrfetchBreakpoint), 'largeicon-add');\n    this._addButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      this._addButtonClicked();\n    });\n\n    this._emptyElement.addEventListener('contextmenu', this._emptyElementContextMenu.bind(this), true);\n    this._emptyElement.tabIndex = -1;\n    this._restoreBreakpoints();\n    this._update();\n  }\n\n  static instance(): XHRBreakpointsSidebarPane {\n    if (!xhrBreakpointsSidebarPaneInstance) {\n      xhrBreakpointsSidebarPaneInstance = new XHRBreakpointsSidebarPane();\n    }\n    return xhrBreakpointsSidebarPaneInstance;\n  }\n\n  toolbarItems(): UI.Toolbar.ToolbarItem[] {\n    return [this._addButton];\n  }\n\n  _emptyElementContextMenu(event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.addBreakpoint), this._addButtonClicked.bind(this));\n    contextMenu.show();\n  }\n\n  async _addButtonClicked(): Promise<void> {\n    await UI.ViewManager.ViewManager.instance().showView('sources.xhrBreakpoints');\n\n    const inputElementContainer = document.createElement('p');\n    inputElementContainer.classList.add('breakpoint-condition');\n    inputElementContainer.textContent = i18nString(UIStrings.breakWhenUrlContains);\n\n    const inputElement = inputElementContainer.createChild('span', 'breakpoint-condition-input');\n    UI.ARIAUtils.setAccessibleName(inputElement, i18nString(UIStrings.urlBreakpoint));\n    this._addListElement(inputElementContainer, this._list.element.firstChild as Element | null);\n\n    function finishEditing(this: XHRBreakpointsSidebarPane, accept: boolean, e: Element, text: string): void {\n      this._removeListElement(inputElementContainer);\n      if (accept) {\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().addXHRBreakpoint(text, true);\n        this._setBreakpoint(text);\n      }\n      this._update();\n    }\n\n    const config = new UI.InplaceEditor.Config(finishEditing.bind(this, true), finishEditing.bind(this, false));\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    UI.InplaceEditor.InplaceEditor.startEditing(inputElement, config as UI.InplaceEditor.Config<any>);\n  }\n\n  heightForItem(_item: string): number {\n    return 0;\n  }\n\n  isItemSelectable(_item: string): boolean {\n    return true;\n  }\n\n  _setBreakpoint(url: string): void {\n    if (this._breakpoints.indexOf(url) !== -1) {\n      this._list.refreshItem(url);\n    } else {\n      this._breakpoints.insertWithComparator(url, (a, b) => {\n        if (a > b) {\n          return 1;\n        }\n        if (a < b) {\n          return -1;\n        }\n        return 0;\n      });\n    }\n    if (!this._list.selectedItem() || !this.hasFocus()) {\n      this._list.selectItem(this._breakpoints.at(0));\n    }\n  }\n\n  createElementForItem(item: string): Element {\n    const listItemElement = document.createElement('div');\n    UI.ARIAUtils.markAsListitem(listItemElement);\n    const element = listItemElement.createChild('div', 'breakpoint-entry') as HTMLElement;\n    containerToBreakpointEntry.set(listItemElement, element);\n    const enabled = SDK.DOMDebuggerModel.DOMDebuggerManager.instance().xhrBreakpoints().get(item) || false;\n    UI.ARIAUtils.markAsCheckbox(element);\n    UI.ARIAUtils.setChecked(element, enabled);\n    element.addEventListener('contextmenu', this._contextMenu.bind(this, item), true);\n\n    const title = item ? i18nString(UIStrings.urlContainsS, {PH1: item}) : i18nString(UIStrings.anyXhrOrFetch);\n    const label = UI.UIUtils.CheckboxLabel.create(title, enabled);\n    UI.ARIAUtils.markAsHidden(label);\n    UI.ARIAUtils.setAccessibleName(element, title);\n    element.appendChild(label);\n    label.checkboxElement.addEventListener('click', this._checkboxClicked.bind(this, item, enabled), false);\n    element.addEventListener('click', event => {\n      if (event.target === element) {\n        this._checkboxClicked(item, enabled);\n      }\n    }, false);\n    breakpointEntryToCheckbox.set(element, label.checkboxElement);\n    label.checkboxElement.tabIndex = -1;\n    element.tabIndex = -1;\n    if (item === this._list.selectedItem()) {\n      element.tabIndex = 0;\n      this.setDefaultFocusedElement(element);\n    }\n    element.addEventListener('keydown', event => {\n      let handled = false;\n      if (event.key === ' ') {\n        this._checkboxClicked(item, enabled);\n        handled = true;\n      } else if (event.key === 'Enter') {\n        this._labelClicked(item);\n        handled = true;\n      }\n\n      if (handled) {\n        event.consume(true);\n      }\n    });\n\n    if (item === this._hitBreakpoint) {\n      element.classList.add('breakpoint-hit');\n      UI.ARIAUtils.setDescription(element, i18nString(UIStrings.breakpointHit));\n    }\n\n    label.classList.add('cursor-auto');\n    label.textElement.addEventListener('dblclick', this._labelClicked.bind(this, item), false);\n    this._breakpointElements.set(item, listItemElement);\n    return listItemElement;\n  }\n\n  selectedItemChanged(from: string|null, to: string|null, fromElement: HTMLElement|null, toElement: HTMLElement|null):\n      void {\n    if (fromElement) {\n      const breakpointEntryElement = containerToBreakpointEntry.get(fromElement);\n      if (!breakpointEntryElement) {\n        throw new Error('Expected breakpoint entry to be found for an element');\n      }\n      breakpointEntryElement.tabIndex = -1;\n    }\n    if (toElement) {\n      const breakpointEntryElement = containerToBreakpointEntry.get(toElement);\n      if (!breakpointEntryElement) {\n        throw new Error('Expected breakpoint entry to be found for an element');\n      }\n      this.setDefaultFocusedElement(breakpointEntryElement);\n      breakpointEntryElement.tabIndex = 0;\n      if (this.hasFocus()) {\n        breakpointEntryElement.focus();\n      }\n    }\n  }\n\n  updateSelectedItemARIA(_fromElement: Element|null, _toElement: Element|null): boolean {\n    return true;\n  }\n\n  _removeBreakpoint(url: string): void {\n    const index = this._breakpoints.indexOf(url);\n    if (index >= 0) {\n      this._breakpoints.remove(index);\n    }\n    this._breakpointElements.delete(url);\n    this._update();\n  }\n\n  _addListElement(element: Element, beforeNode: Node|null): void {\n    this._list.element.insertBefore(element, beforeNode);\n    this._emptyElement.classList.add('hidden');\n    this._list.element.classList.remove('hidden');\n  }\n\n  _removeListElement(element: Element): void {\n    this._list.element.removeChild(element);\n    if (!this._list.element.firstElementChild) {\n      this._emptyElement.classList.remove('hidden');\n      this._list.element.classList.add('hidden');\n    }\n  }\n\n  _contextMenu(url: string, event: Event): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n\n    function removeBreakpoint(this: XHRBreakpointsSidebarPane): void {\n      SDK.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(url);\n      this._removeBreakpoint(url);\n    }\n\n    function removeAllBreakpoints(this: XHRBreakpointsSidebarPane): void {\n      for (const url of this._breakpointElements.keys()) {\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(url);\n        this._removeBreakpoint(url);\n      }\n      this._update();\n    }\n    const removeAllTitle = i18nString(UIStrings.removeAllBreakpoints);\n\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.addBreakpoint), this._addButtonClicked.bind(this));\n    contextMenu.defaultSection().appendItem(i18nString(UIStrings.removeBreakpoint), removeBreakpoint.bind(this));\n    contextMenu.defaultSection().appendItem(removeAllTitle, removeAllBreakpoints.bind(this));\n    contextMenu.show();\n  }\n\n  _checkboxClicked(url: string, checked: boolean): void {\n    const hadFocus = this.hasFocus();\n    SDK.DOMDebuggerModel.DOMDebuggerManager.instance().toggleXHRBreakpoint(url, !checked);\n    this._list.refreshItem(url);\n    this._list.selectItem(url);\n    if (hadFocus) {\n      this.focus();\n    }\n  }\n\n  _labelClicked(url: string): void {\n    const element = this._breakpointElements.get(url);\n    const inputElement = document.createElement('span');\n    inputElement.classList.add('breakpoint-condition');\n    inputElement.textContent = url;\n    if (element) {\n      this._list.element.insertBefore(inputElement, element);\n      element.classList.add('hidden');\n    }\n\n    function finishEditing(this: XHRBreakpointsSidebarPane, accept: boolean, e: Element, text: string): void {\n      this._removeListElement(inputElement);\n      if (accept) {\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().removeXHRBreakpoint(url);\n        this._removeBreakpoint(url);\n        let enabled = true;\n        if (element) {\n          const breakpointEntryElement = containerToBreakpointEntry.get(element);\n          const checkboxElement =\n              breakpointEntryElement ? breakpointEntryToCheckbox.get(breakpointEntryElement) : undefined;\n          if (checkboxElement) {\n            enabled = checkboxElement.checked;\n          }\n        }\n        SDK.DOMDebuggerModel.DOMDebuggerManager.instance().addXHRBreakpoint(text, enabled);\n        this._setBreakpoint(text);\n        this._list.selectItem(text);\n      } else if (element) {\n        element.classList.remove('hidden');\n      }\n      this.focus();\n    }\n\n    const config = new UI.InplaceEditor.Config(finishEditing.bind(this, true), finishEditing.bind(this, false));\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    UI.InplaceEditor.InplaceEditor.startEditing(inputElement, config as UI.InplaceEditor.Config<any>);\n  }\n\n  flavorChanged(_object: Object|null): void {\n    this._update();\n  }\n\n  _update(): void {\n    const isEmpty = this._breakpoints.length === 0;\n    this._list.element.classList.toggle('hidden', isEmpty);\n    this._emptyElement.classList.toggle('hidden', !isEmpty);\n\n    const details = UI.Context.Context.instance().flavor(SDK.DebuggerModel.DebuggerPausedDetails);\n    if (!details || details.reason !== Protocol.Debugger.PausedEventReason.XHR) {\n      if (this._hitBreakpoint) {\n        const oldHitBreakpoint = this._hitBreakpoint;\n        delete this._hitBreakpoint;\n        if (this._breakpoints.indexOf(oldHitBreakpoint) >= 0) {\n          this._list.refreshItem(oldHitBreakpoint);\n        }\n      }\n      return;\n    }\n    const url = details.auxData && details.auxData['breakpointURL'];\n    this._hitBreakpoint = url;\n    if (this._breakpoints.indexOf(url) < 0) {\n      return;\n    }\n    this._list.refreshItem(url);\n    UI.ViewManager.ViewManager.instance().showView('sources.xhrBreakpoints');\n  }\n\n  _restoreBreakpoints(): void {\n    const breakpoints = SDK.DOMDebuggerModel.DOMDebuggerManager.instance().xhrBreakpoints();\n    for (const url of breakpoints.keys()) {\n      this._setBreakpoint(url);\n    }\n  }\n}\n"]}