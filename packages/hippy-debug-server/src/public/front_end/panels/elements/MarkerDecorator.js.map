{"version":3,"file":"MarkerDecorator.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/MarkerDecorator.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAIhD,OAAO,EAAC,0BAA0B,EAAC,MAAM,oBAAoB,CAAC,CAAE,qCAAqC;AAErG,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,aAAa,EAAE,gBAAgB;IAC/B;;MAEE;IACF,eAAe,EAAE,mBAAmB;CACrC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,oCAAoC,EAAE,SAAS,CAAC,CAAC;AAC1F,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AASxF,MAAM,OAAO,gBAAgB;IAC3B,MAAM,CAAS;IACf,MAAM,CAAS;IAEf,YAAY,SAIX;QACC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxC,MAAM,IAAI,KAAK,CAAC,mDAAmD,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC;SACxF;QACD,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,KAAK,EAAE,CAAC;QAChC,IAAI,CAAC,MAAM,GAAI,SAAS,CAAC,KAAgB,CAAC;IAC5C,CAAC;IAED,QAAQ,CAAC,KAA2B;QAIlC,OAAO,EAAC,KAAK,EAAE,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,CAAC,MAAM,EAAC,CAAC;IAClD,CAAC;CACF;AAED,MAAM,iBAAiB,GAAG;IACxB,MAAM,EAAE,mBAAmB;IAC3B,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IAC9C,KAAK,EAAE,oBAAoB;CAC5B,CAAC;AAEF,MAAM,mBAAmB,GAAG;IAC1B,MAAM,EAAE,eAAe;IACvB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IAChD,KAAK,EAAE,MAAM;CACd,CAAC;AAEF,MAAM,UAAU,uBAAuB;IACrC,OAAO;QACL;YACE,GAAG,iBAAiB;YACpB,SAAS,EAAE,GAAqB,EAAE,CAAC,IAAI,gBAAgB,CAAC,iBAAiB,CAAC;SAC3E;QACD;YACE,GAAG,mBAAmB;YACtB,SAAS,EAAE,GAAqB,EAAE,CAAC,IAAI,gBAAgB,CAAC,mBAAmB,CAAC;SAC7E;QACD;YACE,SAAS,EAAE,0BAA0B,CAAC,QAAQ;YAC9C,MAAM,EAAE,qBAAqB;YAC7B,KAAK,EAAE,SAAS;YAChB,KAAK,EAAE,SAAS;SACjB;KACF,CAAC;AACJ,CAAC","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js'; // eslint-disable-line no-unused-vars\nimport type * as SDK from '../../core/sdk/sdk.js';                // eslint-disable-line no-unused-vars\n\nimport {PseudoStateMarkerDecorator} from './ElementsPanel.js';  // eslint-disable-line no-unused-vars\n\nconst UIStrings = {\n  /**\n  *@description Title of the Marker Decorator of Elements\n  */\n  domBreakpoint: 'DOM Breakpoint',\n  /**\n  *@description Title of the Marker Decorator of Elements\n  */\n  elementIsHidden: 'Element is hidden',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/MarkerDecorator.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nexport interface MarkerDecorator {\n  decorate(node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null;\n}\n\nexport class GenericDecorator implements MarkerDecorator {\n  _title: string;\n  _color: string;\n\n  constructor(extension: {\n    marker: string,\n    title: () => string,\n    color: string,\n  }) {\n    if (!extension.title || !extension.color) {\n      throw new Error(`Generic decorator requires a color and a title: ${extension.marker}`);\n    }\n    this._title = extension.title();\n    this._color = (extension.color as string);\n  }\n\n  decorate(_node: SDK.DOMModel.DOMNode): {\n    title: string,\n    color: string,\n  }|null {\n    return {title: this._title, color: this._color};\n  }\n}\n\nconst domBreakpointData = {\n  marker: 'breakpoint-marker',\n  title: i18nLazyString(UIStrings.domBreakpoint),\n  color: 'rgb(105, 140, 254)',\n};\n\nconst elementIsHiddenData = {\n  marker: 'hidden-marker',\n  title: i18nLazyString(UIStrings.elementIsHidden),\n  color: '#555',\n};\n\nexport function getRegisteredDecorators(): MarkerDecoratorRegistration[] {\n  return [\n    {\n      ...domBreakpointData,\n      decorator: (): GenericDecorator => new GenericDecorator(domBreakpointData),\n    },\n    {\n      ...elementIsHiddenData,\n      decorator: (): GenericDecorator => new GenericDecorator(elementIsHiddenData),\n    },\n    {\n      decorator: PseudoStateMarkerDecorator.instance,\n      marker: 'pseudo-state-marker',\n      title: undefined,\n      color: undefined,\n    },\n  ];\n}\nexport interface MarkerDecoratorRegistration {\n  decorator: () => MarkerDecorator;\n  marker: string;\n  color?: string;\n  title?: (() => Platform.UIString.LocalizedString);\n}\n"]}