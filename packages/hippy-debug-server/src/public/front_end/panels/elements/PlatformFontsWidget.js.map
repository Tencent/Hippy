{"version":3,"file":"PlatformFontsWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/PlatformFontsWidget.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js'; // eslint-disable-line no-unused-vars\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {ComputedStyleModel} from './ComputedStyleModel.js';\nimport {Events} from './ComputedStyleModel.js';  // eslint-disable-line no-unused-vars\n\nconst UIStrings = {\n  /**\n  *@description Section title text content in Platform Fonts Widget of the Elements panel\n  */\n  renderedFonts: 'Rendered Fonts',\n  /**\n  *@description Text in Platform Fonts Widget of the Elements panel\n  */\n  networkResource: 'Network resource',\n  /**\n  *@description Text in Platform Fonts Widget of the Elements panel\n  */\n  localFile: 'Local file',\n  /**\n  *@description Text in Platform Fonts Widget of the Elements panel. Indicates a number of glyphs (characters) .\n  */\n  dGlyphs: '{n, plural, =1 {(# glyph)} other {(# glyphs)}}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/PlatformFontsWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class PlatformFontsWidget extends UI.ThrottledWidget.ThrottledWidget {\n  _sharedModel: ComputedStyleModel;\n  _sectionTitle: HTMLDivElement;\n  _fontStatsSection: HTMLElement;\n\n  constructor(sharedModel: ComputedStyleModel) {\n    super(true);\n    this.registerRequiredCSS('panels/elements/platformFontsWidget.css', {enableLegacyPatching: false});\n\n    this._sharedModel = sharedModel;\n    this._sharedModel.addEventListener(Events.ComputedStyleChanged, this.update, this);\n\n    this._sectionTitle = document.createElement('div');\n    this._sectionTitle.classList.add('title');\n    this.contentElement.classList.add('platform-fonts');\n    this.contentElement.appendChild(this._sectionTitle);\n    this._sectionTitle.textContent = i18nString(UIStrings.renderedFonts);\n    this._fontStatsSection = this.contentElement.createChild('div', 'stats-section');\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  doUpdate(): Promise<any> {\n    const cssModel = this._sharedModel.cssModel();\n    const node = this._sharedModel.node();\n    if (!node || !cssModel) {\n      return Promise.resolve();\n    }\n\n    return cssModel.platformFontsPromise(node.id).then(this._refreshUI.bind(this, node));\n  }\n\n  _refreshUI(node: SDK.DOMModel.DOMNode, platformFonts: Protocol.CSS.PlatformFontUsage[]|null): void {\n    if (this._sharedModel.node() !== node) {\n      return;\n    }\n\n    this._fontStatsSection.removeChildren();\n\n    const isEmptySection = !platformFonts || !platformFonts.length;\n    this._sectionTitle.classList.toggle('hidden', isEmptySection);\n    if (isEmptySection || !platformFonts) {\n      return;\n    }\n\n    platformFonts.sort(function(a, b) {\n      return b.glyphCount - a.glyphCount;\n    });\n\n    for (let i = 0; i < platformFonts.length; ++i) {\n      const fontStatElement = this._fontStatsSection.createChild('div', 'font-stats-item');\n\n      const fontNameElement = fontStatElement.createChild('span', 'font-name');\n      fontNameElement.textContent = platformFonts[i].familyName;\n\n      const fontDelimeterElement = fontStatElement.createChild('span', 'font-delimeter');\n      fontDelimeterElement.textContent = '\\u2014';\n\n      const fontOrigin = fontStatElement.createChild('span');\n      fontOrigin.textContent =\n          platformFonts[i].isCustomFont ? i18nString(UIStrings.networkResource) : i18nString(UIStrings.localFile);\n\n      const fontUsageElement = fontStatElement.createChild('span', 'font-usage');\n      const usage = platformFonts[i].glyphCount;\n      fontUsageElement.textContent = i18nString(UIStrings.dGlyphs, {n: usage});\n    }\n  }\n}\n"]}