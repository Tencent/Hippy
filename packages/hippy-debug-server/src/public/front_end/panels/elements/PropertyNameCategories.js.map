{"version":3,"file":"PropertyNameCategories.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/PropertyNameCategories.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAgB7C,MAAM,CAAC,MAAM,oBAAoB,GAAG;;;;;;;;;;;CAWnC,CAAC;AAEF,+DAA+D;AAC/D,4DAA4D;AAC5D,0DAA0D;AAC1D,4BAA4B;AAC5B,MAAM,qBAAqB,GAAG,IAAI,GAAG,CAAC;IACpC;;QAEE;YACE,SAAS,EAAQ,QAAQ,EAAO,SAAS,EAAU,QAAQ,EAAU,OAAO,EAAY,UAAU;YAClG,KAAK,EAAY,OAAO,EAAQ,QAAQ,EAAW,MAAM,EAAY,SAAS,EAAU,OAAO;YAC/F,OAAO,EAAU,UAAU,EAAK,QAAQ,EAAW,MAAM,EAAY,YAAY,EAAO,YAAY;YACpG,eAAe,EAAE,aAAa,EAAE,YAAY,EAAO,MAAM,EAAY,YAAY,EAAO,gBAAgB;YACxG,WAAW,EAAM,WAAW,EAAI,aAAa,EAAM,WAAW,EAAO,iBAAiB,EAAE,OAAO;YAC/F,aAAa,EAAI,YAAY,EAAG,iBAAiB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,gBAAgB;YACxG,WAAW,EAAM,WAAW,EAAI,YAAY,EAAO,YAAY;SAChE;KACF;IACD;;QAEE;YACE,MAAM;YACN,aAAa;YACb,WAAW;YACX,kBAAkB;YAClB,cAAc;YACd,YAAY;YACZ,cAAc;YACd,aAAa;YACb,gBAAgB;YAChB,WAAW;YACX,UAAU;YACV,YAAY;YACZ,iBAAiB;YACjB,iBAAiB;YACjB,uBAAuB;YACvB,sBAAsB;YACtB,uBAAuB;YACvB,aAAa;YACb,cAAc;YACd,eAAe;YACf,aAAa;YACb,gBAAgB;YAChB,kBAAkB;YAClB,aAAa;YACb,gBAAgB;YAChB,gBAAgB;YAChB,cAAc;YACd,aAAa;YACb,YAAY;YACZ,WAAW;SACZ;KACF;IACD;;QAEE;YACE,OAAO;YACP,SAAS;YACT,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,eAAe;YACf,QAAQ;YACR,cAAc;YACd,YAAY;YACZ,QAAQ;YACR,YAAY;YACZ,GAAG;YACH,qBAAqB;SACtB;KACF;IACD;;QAEE;YACE,WAAW;YACX,iBAAiB;YACjB,qBAAqB;YACrB,oBAAoB;YACpB,qBAAqB;YACrB,2BAA2B;YAC3B,gBAAgB;YAChB,sBAAsB;YACtB,2BAA2B;YAC3B,YAAY;YACZ,kBAAkB;YAClB,qBAAqB;YACrB,qBAAqB;YACrB,4BAA4B;SAC7B;KACF;IACD;;QAEE;YACE,MAAM;YACN,aAAa;YACb,UAAU;YACV,OAAO;YACP,aAAa;YACb,eAAe;YACf,YAAY;SACb;KACF;IACD;;QAEE;YACE,MAAM;YACN,OAAO;YACP,aAAa;YACb,eAAe;YACf,YAAY;SACb;KACF;IACD;;QAEE;YACE,iBAAiB;YACjB,gBAAgB;YAChB,cAAc;YACd,aAAa;YACb,cAAc;SACf;KACF;IACD;;QAEE;YACE,SAAS;YACT,QAAQ;YACR,eAAe;YACf,mBAAmB;SACpB;KACF;CACF,CAAC,CAAC;AAEH,MAAM,wBAAwB,GAAG,IAAI,GAAG,EAAmB,CAAC;AAE5D,KAAK,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,IAAI,qBAAqB,EAAE;IAC1D,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;QAClC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;YAC5C,wBAAwB,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;SAC7C;QACD,MAAM,UAAU,GAAI,wBAAwB,CAAC,GAAG,CAAC,SAAS,CAAgB,CAAC;QAC3E,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC3B;CACF;AAED,MAAM,6BAA6B,GAAG,CAAC,YAAoB,EAAc,EAAE;IACzE,IAAI,wBAAwB,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;QAC9C,OAAO,wBAAwB,CAAC,GAAG,CAAC,YAAY,CAAe,CAAC;KACjE;IACD,IAAI,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;QACjC,OAAO,oCAAuB,CAAC;KAChC;IACD,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF;;;;;;;GAOG;AACH,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,YAAoB,EAAc,EAAE;IACzE,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;IAClD,MAAM,aAAa,GAAG,WAAW,CAAC,qBAAqB,CAAC,YAAY,CAAC,CAAC;IACtE,MAAM,UAAU,GAAG,6BAA6B,CAAC,aAAa,CAAC,CAAC;IAChE,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;QACzB,OAAO,UAAU,CAAC;KACnB;IAED,MAAM,UAAU,GAAG,WAAW,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IACzD,IAAI,UAAU,EAAE;QACd,KAAK,MAAM,SAAS,IAAI,UAAU,EAAE;YAClC,MAAM,mBAAmB,GAAG,6BAA6B,CAAC,SAAS,CAAC,CAAC;YACrE,IAAI,mBAAmB,CAAC,MAAM,GAAG,CAAC,EAAE;gBAClC,OAAO,mBAAmB,CAAC;aAC5B;SACF;KACF;IAED,OAAO,qBAAgB,CAAC;AAC1B,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as SDK from '../../core/sdk/sdk.js';\n\nexport const enum Category {\n  Layout = 'Layout',\n  Text = 'Text',\n  Appearance = 'Appearance',\n  Animation = 'Animation',\n  Grid = 'Grid',\n  Flex = 'Flex',\n  Table = 'Table',\n  CSSVariables = 'CSS Variables',\n  GeneratedContent = 'Generated Content',\n  Other = 'Other',\n}\n\n\nexport const DefaultCategoryOrder = [\n  Category.Layout,\n  Category.Text,\n  Category.Appearance,\n  Category.Animation,\n  Category.CSSVariables,\n  Category.Grid,\n  Category.Flex,\n  Category.Table,\n  Category.GeneratedContent,\n  Category.Other,\n];\n\n// These categories are manually updated for now. In the future\n// we can try to find a way to automatically categorize them\n// or find an authoritative source for the categorization:\n// https://crbug.com/1117405\nconst CategorizedProperties = new Map([\n  [\n    Category.Layout,\n    [\n      'display',       'margin',      'padding',         'height',         'width',           'position',\n      'top',           'right',       'bottom',          'left',           'z-index',         'float',\n      'clear',         'overflow',    'resize',          'clip',           'visibility',      'box-sizing',\n      'align-content', 'align-items', 'align-self',      'flex',           'flex-basis',      'flex-direction',\n      'flex-flow',     'flex-grow',   'flex-shrink',     'flex-wrap',      'justify-content', 'order',\n      'inline-size',   'block-size',  'min-inline-size', 'min-block-size', 'max-inline-size', 'max-block-size',\n      'min-width',     'max-width',   'min-height',      'max-height',\n    ],\n  ],\n  [\n    Category.Text,\n    [\n      'font',\n      'font-family',\n      'font-size',\n      'font-size-adjust',\n      'font-stretch',\n      'font-style',\n      'font-variant',\n      'font-weight',\n      'font-smoothing',\n      'direction',\n      'tab-size',\n      'text-align',\n      'text-align-last',\n      'text-decoration',\n      'text-decoration-color',\n      'text-decoration-line',\n      'text-decoration-style',\n      'text-indent',\n      'text-justify',\n      'text-overflow',\n      'text-shadow',\n      'text-transform',\n      'text-size-adjust',\n      'line-height',\n      'vertical-align',\n      'letter-spacing',\n      'word-spacing',\n      'white-space',\n      'word-break',\n      'word-wrap',\n    ],\n  ],\n  [\n    Category.Appearance,\n    [\n      'color',\n      'outline',\n      'outline-color',\n      'outline-offset',\n      'outline-style',\n      'Outline-width',\n      'border',\n      'border-image',\n      'background',\n      'cursor',\n      'box-shadow',\n      'â‰ˆ',\n      'tap-highlight-color',\n    ],\n  ],\n  [\n    Category.Animation,\n    [\n      'animation',\n      'animation-delay',\n      'animation-direction',\n      'animation-duration',\n      'animation-fill-mode',\n      'animation-iteration-count',\n      'animation-name',\n      'animation-play-state',\n      'animation-timing-function',\n      'transition',\n      'transition-delay',\n      'transition-duration',\n      'transition-property',\n      'transition-timing-function',\n    ],\n  ],\n  [\n    Category.Grid,\n    [\n      'grid',\n      'grid-column',\n      'grid-row',\n      'order',\n      'place-items',\n      'place-content',\n      'place-self',\n    ],\n  ],\n  [\n    Category.Flex,\n    [\n      'flex',\n      'order',\n      'place-items',\n      'place-content',\n      'place-self',\n    ],\n  ],\n  [\n    Category.Table,\n    [\n      'border-collapse',\n      'border-spacing',\n      'caption-side',\n      'empty-cells',\n      'table-layout',\n    ],\n  ],\n  [\n    Category.GeneratedContent,\n    [\n      'content',\n      'quotes',\n      'counter-reset',\n      'counter-increment',\n    ],\n  ],\n]);\n\nconst CategoriesByPropertyName = new Map<string, never[]>();\n\nfor (const [category, styleNames] of CategorizedProperties) {\n  for (const styleName of styleNames) {\n    if (!CategoriesByPropertyName.has(styleName)) {\n      CategoriesByPropertyName.set(styleName, []);\n    }\n    const categories = (CategoriesByPropertyName.get(styleName) as Category[]);\n    categories.push(category);\n  }\n}\n\nconst matchCategoriesByPropertyName = (propertyName: string): Category[] => {\n  if (CategoriesByPropertyName.has(propertyName)) {\n    return CategoriesByPropertyName.get(propertyName) as Category[];\n  }\n  if (propertyName.startsWith('--')) {\n    return [Category.CSSVariables];\n  }\n  return [];\n};\n\n/**\n * Categorize a given property name to one or more categories.\n *\n * It matches against the static CategoriesByPropertyName first. It then\n * matches against several dynamic rules. It then tries to use the canonical\n * name's shorthands for matching. If nothing matches, it returns the \"Other\"\n * category.\n */\nexport const categorizePropertyName = (propertyName: string): Category[] => {\n  const cssMetadata = SDK.CSSMetadata.cssMetadata();\n  const canonicalName = cssMetadata.canonicalPropertyName(propertyName);\n  const categories = matchCategoriesByPropertyName(canonicalName);\n  if (categories.length > 0) {\n    return categories;\n  }\n\n  const shorthands = cssMetadata.shorthands(canonicalName);\n  if (shorthands) {\n    for (const shorthand of shorthands) {\n      const shorthandCategories = matchCategoriesByPropertyName(shorthand);\n      if (shorthandCategories.length > 0) {\n        return shorthandCategories;\n      }\n    }\n  }\n\n  return [Category.Other];\n};\n"]}