{"version":3,"file":"ClassesPaneWidget.js","sourceRoot":"","sources":["../../../../../../front_end/panels/elements/ClassesPaneWidget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ElementsPanel} from './ElementsPanel.js';\n\nconst UIStrings = {\n  /**\n  * @description Prompt text for a text field in the Classes Pane Widget of the Elements panel.\n  * Class refers to a CSS class.\n  */\n  addNewClass: 'Add new class',\n  /**\n  * @description Screen reader announcement string when adding a CSS class via the Classes Pane Widget.\n  * @example {vbox flex-auto} PH1\n  */\n  classesSAdded: 'Classes {PH1} added',\n  /**\n  * @description Screen reader announcement string when adding a class via the Classes Pane Widget.\n  * @example {title-container} PH1\n  */\n  classSAdded: 'Class {PH1} added',\n  /**\n  * @description Accessible title read by screen readers for the Classes Pane Widget of the Elements\n  * panel. Element is a HTML DOM Element and classes refers to CSS classes.\n  */\n  elementClasses: 'Element Classes',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/elements/ClassesPaneWidget.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ClassesPaneWidget extends UI.Widget.Widget {\n  _input: HTMLElement;\n  _classesContainer: HTMLElement;\n  _prompt: ClassNamePrompt;\n  _mutatingNodes: Set<SDK.DOMModel.DOMNode>;\n  _pendingNodeClasses: Map<SDK.DOMModel.DOMNode, string>;\n  _updateNodeThrottler: Common.Throttler.Throttler;\n  _previousTarget: SDK.DOMModel.DOMNode|null;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/elements/classesPaneWidget.css', {enableLegacyPatching: false});\n    this.contentElement.className = 'styles-element-classes-pane';\n    const container = this.contentElement.createChild('div', 'title-container');\n    this._input = container.createChild('div', 'new-class-input monospace');\n    this.setDefaultFocusedElement(this._input);\n    this._classesContainer = this.contentElement.createChild('div', 'source-code');\n    this._classesContainer.classList.add('styles-element-classes-container');\n    this._prompt = new ClassNamePrompt(this._nodeClasses.bind(this));\n    this._prompt.setAutocompletionTimeout(0);\n    this._prompt.renderAsBlock();\n\n    const proxyElement = (this._prompt.attach(this._input) as HTMLElement);\n    this._prompt.setPlaceholder(i18nString(UIStrings.addNewClass));\n    this._prompt.addEventListener(UI.TextPrompt.Events.TextChanged, this._onTextChanged, this);\n    proxyElement.addEventListener('keydown', this._onKeyDown.bind(this), false);\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DOMModel.DOMModel, SDK.DOMModel.Events.DOMMutated, this._onDOMMutated, this);\n    this._mutatingNodes = new Set();\n    this._pendingNodeClasses = new Map();\n    this._updateNodeThrottler = new Common.Throttler.Throttler(0);\n    this._previousTarget = null;\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.DOMModel.DOMNode, this._onSelectedNodeChanged, this);\n  }\n\n  _splitTextIntoClasses(text: string): string[] {\n    return text.split(/[,\\s]/).map(className => className.trim()).filter(className => className.length);\n  }\n\n  _onKeyDown(event: KeyboardEvent): void {\n    if (!(event.key === 'Enter') && !isEscKey(event)) {\n      return;\n    }\n\n    if (event.key === 'Enter') {\n      event.consume();\n      if (this._prompt.acceptAutoComplete()) {\n        return;\n      }\n    }\n\n    const eventTarget = (event.target as HTMLElement);\n    let text: ''|string = (eventTarget.textContent as string);\n    if (isEscKey(event)) {\n      if (!Platform.StringUtilities.isWhitespace(text)) {\n        event.consume(true);\n      }\n      text = '';\n    }\n\n    this._prompt.clearAutocomplete();\n    eventTarget.textContent = '';\n\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return;\n    }\n\n    const classNames = this._splitTextIntoClasses(text);\n    if (!classNames.length) {\n      this._installNodeClasses(node);\n      return;\n    }\n\n    for (const className of classNames) {\n      this._toggleClass(node, className, true);\n    }\n\n    // annoucementString is used for screen reader to announce that the class(es) has been added successfully.\n    const joinClassString = classNames.join(' ');\n    const announcementString = classNames.length > 1 ? i18nString(UIStrings.classesSAdded, {PH1: joinClassString}) :\n                                                       i18nString(UIStrings.classSAdded, {PH1: joinClassString});\n    UI.ARIAUtils.alert(announcementString);\n\n    this._installNodeClasses(node);\n    this._update();\n  }\n\n  _onTextChanged(): void {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return;\n    }\n    this._installNodeClasses(node);\n  }\n\n  _onDOMMutated(event: Common.EventTarget.EventTargetEvent): void {\n    const node = (event.data as SDK.DOMModel.DOMNode);\n    if (this._mutatingNodes.has(node)) {\n      return;\n    }\n    cachedClassesMap.delete(node);\n    this._update();\n  }\n\n  _onSelectedNodeChanged(event: Common.EventTarget.EventTargetEvent): void {\n    if (this._previousTarget && this._prompt.text()) {\n      this._input.textContent = '';\n      this._installNodeClasses(this._previousTarget);\n    }\n    this._previousTarget = (event.data as SDK.DOMModel.DOMNode | null);\n    this._update();\n  }\n\n  wasShown(): void {\n    this._update();\n  }\n\n  _update(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    let node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (node) {\n      node = node.enclosingElementOrSelf();\n    }\n\n    this._classesContainer.removeChildren();\n    // @ts-ignore this._input is a div, not an input element. So this line makes no sense at all\n    this._input.disabled = !node;\n\n    if (!node) {\n      return;\n    }\n\n    const classes = this._nodeClasses(node);\n    const keys = [...classes.keys()];\n    keys.sort(Platform.StringUtilities.caseInsensetiveComparator);\n    for (const className of keys) {\n      const label = UI.UIUtils.CheckboxLabel.create(className, classes.get(className));\n      label.classList.add('monospace');\n      label.checkboxElement.addEventListener('click', this._onClick.bind(this, className), false);\n      this._classesContainer.appendChild(label);\n    }\n  }\n\n  _onClick(className: string, event: Event): void {\n    const node = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!node) {\n      return;\n    }\n    const enabled = (event.target as HTMLInputElement).checked;\n    this._toggleClass(node, className, enabled);\n    this._installNodeClasses(node);\n  }\n\n  _nodeClasses(node: SDK.DOMModel.DOMNode): Map<string, boolean> {\n    let result = cachedClassesMap.get(node);\n    if (!result) {\n      const classAttribute = node.getAttribute('class') || '';\n      const classes = classAttribute.split(/\\s/);\n      result = new Map();\n      for (let i = 0; i < classes.length; ++i) {\n        const className = classes[i].trim();\n        if (!className.length) {\n          continue;\n        }\n        result.set(className, true);\n      }\n      cachedClassesMap.set(node, result);\n    }\n    return result;\n  }\n\n  _toggleClass(node: SDK.DOMModel.DOMNode, className: string, enabled: boolean): void {\n    const classes = this._nodeClasses(node);\n    classes.set(className, enabled);\n  }\n\n  _installNodeClasses(node: SDK.DOMModel.DOMNode): void {\n    const classes = this._nodeClasses(node);\n    const activeClasses = new Set<string>();\n    for (const className of classes.keys()) {\n      if (classes.get(className)) {\n        activeClasses.add(className);\n      }\n    }\n\n    const additionalClasses = this._splitTextIntoClasses(this._prompt.textWithCurrentSuggestion());\n    for (const className of additionalClasses) {\n      activeClasses.add(className);\n    }\n\n    const newClasses = [...activeClasses.values()].sort();\n\n    this._pendingNodeClasses.set(node, newClasses.join(' '));\n    this._updateNodeThrottler.schedule(this._flushPendingClasses.bind(this));\n  }\n\n  async _flushPendingClasses(): Promise<void> {\n    const promises = [];\n    for (const node of this._pendingNodeClasses.keys()) {\n      this._mutatingNodes.add(node);\n      const promise = node.setAttributeValuePromise('class', (this._pendingNodeClasses.get(node) as string))\n                          .then(onClassValueUpdated.bind(this, node));\n      promises.push(promise);\n    }\n    this._pendingNodeClasses.clear();\n    await Promise.all(promises);\n\n    function onClassValueUpdated(this: ClassesPaneWidget, node: SDK.DOMModel.DOMNode): void {\n      this._mutatingNodes.delete(node);\n    }\n  }\n}\n\nconst cachedClassesMap = new WeakMap<SDK.DOMModel.DOMNode, Map<string, boolean>>();\n\nlet buttonProviderInstance: ButtonProvider;\n\nexport class ButtonProvider implements UI.Toolbar.Provider {\n  _button: UI.Toolbar.ToolbarToggle;\n  _view: ClassesPaneWidget;\n  private constructor() {\n    this._button = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.elementClasses), '');\n    this._button.setText('.cls');\n    this._button.element.classList.add('monospace');\n    this._button.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._clicked, this);\n    this._view = new ClassesPaneWidget();\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ButtonProvider {\n    const {forceNew} = opts;\n    if (!buttonProviderInstance || forceNew) {\n      buttonProviderInstance = new ButtonProvider();\n    }\n\n    return buttonProviderInstance;\n  }\n\n  _clicked(): void {\n    ElementsPanel.instance().showToolbarPane(!this._view.isShowing() ? this._view : null, this._button);\n  }\n\n  item(): UI.Toolbar.ToolbarItem {\n    return this._button;\n  }\n}\n\nexport class ClassNamePrompt extends UI.TextPrompt.TextPrompt {\n  _nodeClasses: (arg0: SDK.DOMModel.DOMNode) => Map<string, boolean>;\n  _selectedFrameId: string|null;\n  _classNamesPromise: Promise<string[]>|null;\n  constructor(nodeClasses: (arg0: SDK.DOMModel.DOMNode) => Map<string, boolean>) {\n    super();\n    this._nodeClasses = nodeClasses;\n    this.initialize(this._buildClassNameCompletions.bind(this), ' ');\n    this.disableDefaultSuggestionForEmptyInput();\n    this._selectedFrameId = '';\n    this._classNamesPromise = null;\n  }\n\n  async _getClassNames(selectedNode: SDK.DOMModel.DOMNode): Promise<string[]> {\n    const promises = [];\n    const completions = new Set<string>();\n    this._selectedFrameId = selectedNode.frameId();\n\n    const cssModel = selectedNode.domModel().cssModel();\n    const allStyleSheets = cssModel.allStyleSheets();\n    for (const stylesheet of allStyleSheets) {\n      if (stylesheet.frameId !== this._selectedFrameId) {\n        continue;\n      }\n      const cssPromise = cssModel.classNamesPromise(stylesheet.id).then(classes => {\n        for (const className of classes) {\n          completions.add(className);\n        }\n      });\n      promises.push(cssPromise);\n    }\n\n    const ownerDocumentId = ((selectedNode.ownerDocument as SDK.DOMModel.DOMDocument).id);\n\n    const domPromise = selectedNode.domModel().classNamesPromise(ownerDocumentId).then(classes => {\n      for (const className of classes) {\n        completions.add(className);\n      }\n    });\n    promises.push(domPromise);\n    await Promise.all(promises);\n    return [...completions];\n  }\n\n  async _buildClassNameCompletions(expression: string, prefix: string, force?: boolean):\n      Promise<UI.SuggestBox.Suggestions> {\n    if (!prefix || force) {\n      this._classNamesPromise = null;\n    }\n\n    const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!selectedNode || (!prefix && !force && !expression.trim())) {\n      return [];\n    }\n\n    if (!this._classNamesPromise || this._selectedFrameId !== selectedNode.frameId()) {\n      this._classNamesPromise = this._getClassNames(selectedNode);\n    }\n\n    let completions: string[] = await this._classNamesPromise;\n    const classesMap = this._nodeClasses((selectedNode as SDK.DOMModel.DOMNode));\n    completions = completions.filter(value => !classesMap.get(value));\n\n    if (prefix[0] === '.') {\n      completions = completions.map(value => '.' + value);\n    }\n    return completions.filter(value => value.startsWith(prefix)).sort().map(completion => {\n      return {\n        text: completion,\n        title: undefined,\n        subtitle: undefined,\n        iconType: undefined,\n        priority: undefined,\n        isSecondary: undefined,\n        subtitleRenderer: undefined,\n        selectionRange: undefined,\n        hideGhostText: undefined,\n        iconElement: undefined,\n      };\n    });\n  }\n}\n"]}