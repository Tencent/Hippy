{"version":3,"file":"NodeText.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/elements/components/NodeText.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,2CAA2C,CAAC;AAC9E,OAAO,KAAK,OAAO,MAAM,kCAAkC,CAAC;AAE5D,MAAM,EAAC,MAAM,EAAE,IAAI,EAAC,GAAG,OAAO,CAAC;AAQ/B,MAAM,OAAO,QAAS,SAAQ,WAAW;IACvC,MAAM,CAAC,UAAU,GAAG,OAAO,CAAC,OAAO,CAAA,oBAAoB,CAAC;IAEvC,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACpD,SAAS,GAAW,EAAE,CAAC;IACvB,MAAM,GAAY,EAAE,CAAC;IACrB,WAAW,GAAc,EAAE,CAAC;IAEpC,IAAI,IAAI,CAAC,IAAkB;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC1B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACpC,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,MAAM,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnC,MAAM,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QAEhF,MAAM,KAAK,GAAG;YACZ,IAAI,CAAA,iCAAiC,IAAI,CAAC,SAAS,SAAS;SAC7D,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;gBAC1C,eAAe,EAAE,IAAI;gBACrB,2BAA2B,EAAE,cAAc;aAC5C,CAAC,CAAC;YACH,KAAK,CAAC,IAAI,CAAC,IAAI,CAAA,eAAe,OAAO,KAAK,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;SAC7E;QAED,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACnD,MAAM,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACrE,MAAM,OAAO,GAAG,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC;gBAC1C,kBAAkB,EAAE,IAAI;gBACxB,2BAA2B,EAAE,KAAK;aACnC,CAAC,CAAC;YACH,KAAK,CAAC,IAAI,CAAC,IAAI,CAAA,eAAe,OAAO,IAAI,IAAI,SAAS,CAAC,CAAC;SACzD;QAED,qDAAqD;QACrD,mBAAmB;QACnB,MAAM,CAAC,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;QA2BP,KAAK;KACR,EAAE,IAAI,CAAC,MAAM,EAAE;YACd,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;QACH,kBAAkB;IACpB,CAAC;;AAGH,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,oBAAoB,EAAE,QAAQ,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\n\nconst {render, html} = LitHtml;\n\nexport interface NodeTextData {\n  nodeTitle: string;\n  nodeId?: string;\n  nodeClasses?: string[];\n}\n\nexport class NodeText extends HTMLElement {\n  static litTagName = LitHtml.literal`devtools-node-text`;\n\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private nodeTitle: string = '';\n  private nodeId?: string = '';\n  private nodeClasses?: string[] = [];\n\n  set data(data: NodeTextData) {\n    this.nodeTitle = data.nodeTitle;\n    this.nodeId = data.nodeId;\n    this.nodeClasses = data.nodeClasses;\n    this.render();\n  }\n\n  private render(): void {\n    const hasId = Boolean(this.nodeId);\n    const hasNodeClasses = Boolean(this.nodeClasses && this.nodeClasses.length > 0);\n\n    const parts = [\n      html`<span class=\"node-label-name\">${this.nodeTitle}</span>`,\n    ];\n\n    if (this.nodeId) {\n      const classes = LitHtml.Directives.classMap({\n        'node-label-id': true,\n        'node-multiple-descriptors': hasNodeClasses,\n      });\n      parts.push(html`<span class=${classes}>#${CSS.escape(this.nodeId)}</span>`);\n    }\n\n    if (this.nodeClasses && this.nodeClasses.length > 0) {\n      const text = this.nodeClasses.map(c => `.${CSS.escape(c)}`).join('');\n      const classes = LitHtml.Directives.classMap({\n        'node-label-class': true,\n        'node-multiple-descriptors': hasId,\n      });\n      parts.push(html`<span class=${classes}>${text}</span>`);\n    }\n\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <style>\n        .node-label-name {\n          color: var(--node-text-label-color, --dom-tag-name-color); /* stylelint-disable-line plugin/use_theme_colors */\n          /* See: crbug.com/1152736 for color variable migration. */\n        }\n\n        .node-label-class {\n          color: var(--node-text-class-color, --dom-attribute-name-color); /* stylelint-disable-line plugin/use_theme_colors */\n          /* See: crbug.com/1152736 for color variable migration. */\n        }\n\n        .node-label-id {\n          color: var(--node-text-id-color); /* stylelint-disable-line plugin/use_theme_colors */\n          /* See: crbug.com/1152736 for color variable migration. */\n        }\n\n        .node-label-class.node-multiple-descriptors {\n          color: var(--node-text-multiple-descriptors-class, var(--node-text-class-color, --dom-attribute-name-color)); /* stylelint-disable-line plugin/use_theme_colors */\n          /* See: crbug.com/1152736 for color variable migration. */\n        }\n\n        .node-label-id.node-multiple-descriptors {\n          color: var(--node-text-multiple-descriptors-id, var(--node-text-id-color, --dom-attribute-name-color)); /* stylelint-disable-line plugin/use_theme_colors */\n          /* See: crbug.com/1152736 for color variable migration. */\n        }\n      </style>\n      ${parts}\n    `, this.shadow, {\n      host: this,\n    });\n    // clang-format on\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-node-text', NodeText);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-node-text': NodeText;\n  }\n}\n"]}