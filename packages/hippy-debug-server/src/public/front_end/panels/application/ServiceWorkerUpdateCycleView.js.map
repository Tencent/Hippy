{"version":3,"file":"ServiceWorkerUpdateCycleView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ServiceWorkerUpdateCycleView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Indexed DBViews of the Application panel\n  */\n  version: 'Version',\n  /**\n  *@description Table heading for Service Workers update information. Update is a noun.\n  */\n  updateActivity: 'Update Activity',\n  /**\n  *@description Title for the timeline tab.\n  */\n  timeline: 'Timeline',\n  /**\n  *@description Text in Service Workers Update Life Cycle\n  *@example {2} PH1\n  */\n  startTimeS: 'Start time: {PH1}',\n  /**\n  *@description Text for end time of an event\n  *@example {2} PH1\n  */\n  endTimeS: 'End time: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkerUpdateCycleView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServiceWorkerUpdateCycleView {\n  private registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration;\n  private rows: Array<HTMLTableRowElement>;\n  private selectedRowIndex: number;\n  tableElement: HTMLElement;\n  constructor(registration: SDK.ServiceWorkerManager.ServiceWorkerRegistration) {\n    this.registration = registration;\n    this.rows = [];\n    this.selectedRowIndex = -1;\n    this.tableElement = document.createElement('table');\n    this.createTimingTable();\n  }\n\n  calculateServiceWorkerUpdateRanges(): Array<ServiceWorkerUpdateRange> {\n    function addRange(ranges: Array<ServiceWorkerUpdateRange>, range: ServiceWorkerUpdateRange): void {\n      if (range.start < Number.MAX_VALUE && range.start <= range.end) {\n        ranges.push(range);\n      }\n    }\n\n    /**\n     * Add ranges representing Install, Wait or Activate of a sw version represented by id.\n     */\n    function addNormalizedRanges(\n        ranges: Array<ServiceWorkerUpdateRange>, id: string, startInstallTime: number, endInstallTime: number,\n        startActivateTime: number, endActivateTime: number,\n        status: Protocol.ServiceWorker.ServiceWorkerVersionStatus): void {\n      addRange(ranges, {id, phase: ServiceWorkerUpdateNames.Install, start: startInstallTime, end: endInstallTime});\n      if (status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activating ||\n          status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activated ||\n          status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Redundant) {\n        addRange(ranges, {\n          id,\n          phase: ServiceWorkerUpdateNames.Wait,\n          start: endInstallTime,\n          end: startActivateTime,\n        });\n        addRange(\n            ranges, {id, phase: ServiceWorkerUpdateNames.Activate, start: startActivateTime, end: endActivateTime});\n      }\n    }\n\n    function rangesForVersion(version: SDK.ServiceWorkerManager.ServiceWorkerVersion): Array<ServiceWorkerUpdateRange> {\n      let state: SDK.ServiceWorkerManager.ServiceWorkerVersionState|null = version.currentState;\n      let endActivateTime: number = 0;\n      let beginActivateTime: number = 0;\n      let endInstallTime: number = 0;\n      let beginInstallTime: number = 0;\n      const currentStatus = state.status;\n      if (currentStatus === Protocol.ServiceWorker.ServiceWorkerVersionStatus.New) {\n        return [];\n      }\n\n      while (state) {\n        // find the earliest timestamp of different stage on record.\n        if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activated) {\n          endActivateTime = state.last_updated_timestamp;\n        } else if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Activating) {\n          if (endActivateTime === 0) {\n            endActivateTime = state.last_updated_timestamp;\n          }\n          beginActivateTime = state.last_updated_timestamp;\n        } else if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Installed) {\n          endInstallTime = state.last_updated_timestamp;\n        } else if (state.status === Protocol.ServiceWorker.ServiceWorkerVersionStatus.Installing) {\n          if (endInstallTime === 0) {\n            endInstallTime = state.last_updated_timestamp;\n          }\n          beginInstallTime = state.last_updated_timestamp;\n        }\n        state = state.previousState;\n      }\n      /** @type {Array <ServiceWorkerUpdateRange>} */\n      const ranges: Array<ServiceWorkerUpdateRange> = [];\n      addNormalizedRanges(\n          ranges, version.id, beginInstallTime, endInstallTime, beginActivateTime, endActivateTime, currentStatus);\n      return ranges;\n    }\n\n    const versions = this.registration.versionsByMode();\n    const modes = [\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Active,\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Waiting,\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Installing,\n      SDK.ServiceWorkerManager.ServiceWorkerVersion.Modes.Redundant,\n    ];\n\n    for (const mode of modes) {\n      const version = versions.get(mode);\n      if (version) {\n        const ranges = rangesForVersion(version);\n        return ranges;\n      }\n    }\n\n    return [];\n  }\n\n  private createTimingTable(): void {\n    this.tableElement.classList.add('service-worker-update-timing-table');\n    UI.Utils.appendStyle(this.tableElement, 'panels/application/serviceWorkerUpdateCycleView.css');\n    const timeRanges = this.calculateServiceWorkerUpdateRanges();\n    this.updateTimingTable(timeRanges);\n  }\n\n  private createTimingTableHead(): void {\n    const serverHeader = this.tableElement.createChild('tr', 'service-worker-update-timing-table-header');\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.version));\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.updateActivity));\n    UI.UIUtils.createTextChild(serverHeader.createChild('td'), i18nString(UIStrings.timeline));\n  }\n\n  private removeRows(): void {\n    const rows = this.tableElement.getElementsByTagName('tr');\n    while (rows[0]) {\n      if (rows[0].parentNode) {\n        rows[0].parentNode.removeChild(rows[0]);\n      }\n    }\n    this.rows = [];\n  }\n\n  private updateTimingTable(timeRanges: Array<ServiceWorkerUpdateRange>): void {\n    this.selectedRowIndex = -1;\n    this.removeRows();\n    this.createTimingTableHead();\n    /** @type {!Array<ServiceWorkerUpdateRange>} */\n    const timeRangeArray = timeRanges;\n    if (timeRangeArray.length === 0) {\n      return;\n    }\n\n    const startTimes = timeRangeArray.map(r => r.start);\n    const endTimes = timeRangeArray.map(r => r.end);\n    const startTime = startTimes.reduce((a, b) => Math.min(a, b));\n    const endTime = endTimes.reduce((a, b) => Math.max(a, b));\n    const scale = 100 / (endTime - startTime);\n\n    for (const range of timeRangeArray) {\n      const phaseName = range.phase;\n\n      const left = (scale * (range.start - startTime));\n      const right = (scale * (endTime - range.end));\n\n      const tr = this.tableElement.createChild('tr', 'service-worker-update-timeline');\n      this.rows.push(tr as HTMLTableRowElement);\n      const timingBarVersionElement = tr.createChild('td');\n      UI.UIUtils.createTextChild(timingBarVersionElement, '#' + range.id);\n      timingBarVersionElement.classList.add('service-worker-update-timing-bar-clickable');\n      timingBarVersionElement.setAttribute('tabindex', '0');\n      timingBarVersionElement.setAttribute('role', 'switch');\n      timingBarVersionElement.addEventListener('focus', (event: Event) => {\n        this.onFocus(event);\n      });\n      UI.ARIAUtils.setChecked(timingBarVersionElement, false);\n      const timingBarTitleElement = tr.createChild('td');\n      UI.UIUtils.createTextChild(timingBarTitleElement, phaseName);\n      const barContainer = tr.createChild('td').createChild('div', 'service-worker-update-timing-row');\n\n      const bar = barContainer.createChild('span', 'service-worker-update-timing-bar ' + phaseName.toLowerCase());\n\n      bar.style.left = left + '%';\n      bar.style.right = right + '%';\n      bar.textContent = '\\u200B';  // Important for 0-time items to have 0 width.\n\n      this.constructUpdateDetails(tr, range);\n    }\n  }\n\n  /**\n   * Detailed information about an update phase. Currently starting and ending time.\n   */\n  private constructUpdateDetails(tr: HTMLElement, range: ServiceWorkerUpdateRange): void {\n    const startRow = this.tableElement.createChild('tr', 'service-worker-update-timing-bar-details');\n    startRow.classList.add('service-worker-update-timing-bar-details-collapsed');\n    const startTimeItem = startRow.createChild('td') as HTMLTableCellElement;\n    startTimeItem.colSpan = 3;\n    const startTime = (new Date(range.start)).toISOString();\n    UI.UIUtils.createTextChild(startTimeItem.createChild('span'), i18nString(UIStrings.startTimeS, {PH1: startTime}));\n    startRow.tabIndex = 0;\n\n    const endRow = this.tableElement.createChild('tr', 'service-worker-update-timing-bar-details');\n    endRow.classList.add('service-worker-update-timing-bar-details-collapsed');\n    const endTimeItem = endRow.createChild('td') as HTMLTableCellElement;\n    endTimeItem.colSpan = 3;\n    const endTime = (new Date(range.end)).toISOString();\n    UI.UIUtils.createTextChild(endTimeItem.createChild('span'), i18nString(UIStrings.endTimeS, {PH1: endTime}));\n    endRow.tabIndex = 0;\n\n    tr.addEventListener('keydown', (event: Event) => {\n      this.onKeydown(event, startRow, endRow);\n    });\n\n    tr.addEventListener('click', (event: Event) => {\n      this.onClick(event, startRow, endRow);\n    });\n  }\n\n  private toggle(startRow: Element, endRow: Element, target: Element, expanded: boolean): void {\n    if (target.classList.contains('service-worker-update-timing-bar-clickable')) {\n      startRow.classList.toggle('service-worker-update-timing-bar-details-collapsed');\n      startRow.classList.toggle('service-worker-update-timing-bar-details-expanded');\n      endRow.classList.toggle('service-worker-update-timing-bar-details-collapsed');\n      endRow.classList.toggle('service-worker-update-timing-bar-details-expanded');\n      UI.ARIAUtils.setChecked(target, !expanded);\n    }\n  }\n\n  private onFocus(event: Event): void {\n    const target = event.target as HTMLElement | null;\n    if (!target) {\n      return;\n    }\n    const tr = target.parentElement as HTMLTableRowElement | null;\n    if (!tr) {\n      return;\n    }\n\n    this.selectedRowIndex = this.rows.indexOf(tr);\n  }\n\n  private onKeydown(event: Event, startRow: HTMLElement, endRow: HTMLElement): void {\n    if (!event.target) {\n      return;\n    }\n    const target: HTMLElement = event.target as HTMLElement;\n    const keyboardEvent = event as KeyboardEvent;\n    const expanded = target.getAttribute('aria-checked') === 'true';\n\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      this.toggle(startRow, endRow, target, expanded);\n      event.preventDefault();\n      return;\n    }\n    if ((!expanded && keyboardEvent.key === 'ArrowRight') || (expanded && keyboardEvent.key === 'ArrowLeft')) {\n      this.toggle(startRow, endRow, target, expanded);\n      event.preventDefault();\n      return;\n    }\n    if (keyboardEvent.key === 'ArrowDown') {\n      if (this.selectedRowIndex >= 0) {\n        this.selectNextRow();\n      } else {\n        this.selectFirstRow();\n      }\n      event.preventDefault();\n    }\n    if (keyboardEvent.key === 'ArrowUp') {\n      if (this.selectedRowIndex >= 0) {\n        this.selectPreviousRow();\n      } else {\n        this.selectLastRow();\n      }\n      event.preventDefault();\n    }\n  }\n\n  private focusRow(row: HTMLTableRowElement): void {\n    row.cells[0].focus();\n  }\n\n  private blurRow(row: HTMLTableRowElement): void {\n    row.cells[0].blur();\n  }\n\n  private selectFirstRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    this.selectedRowIndex = 0;\n    this.focusRow(this.rows[0]);\n  }\n\n  private selectLastRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    this.selectedRowIndex = this.rows.length - 1;\n    this.focusRow(this.rows[this.selectedRowIndex]);\n  }\n\n  private selectNextRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    const previousRowIndex = this.selectedRowIndex;\n    this.selectedRowIndex++;\n    if (this.selectedRowIndex >= this.rows.length) {\n      this.selectedRowIndex = 0;\n    }\n    this.blurRow(this.rows[previousRowIndex]);\n    this.focusRow(this.rows[this.selectedRowIndex]);\n  }\n\n  private selectPreviousRow(): void {\n    if (this.rows.length === 0) {\n      return;\n    }\n    const previousRowIndex = this.selectedRowIndex;\n    this.selectedRowIndex--;\n    if (this.selectedRowIndex < 0) {\n      this.selectedRowIndex = this.rows.length - 1;\n    }\n    this.blurRow(this.rows[previousRowIndex]);\n    this.focusRow(this.rows[this.selectedRowIndex]);\n  }\n\n\n  private onClick(event: Event, startRow: Element, endRow: Element): void {\n    const tr = event.target as Element;\n    if (!tr) {\n      return;\n    }\n\n    const expanded = tr.getAttribute('aria-checked') === 'true';\n    this.toggle(startRow, endRow, tr, expanded);\n    event.preventDefault();\n  }\n\n  refresh(): void {\n    const timeRanges = this.calculateServiceWorkerUpdateRanges();\n    this.updateTimingTable(timeRanges);\n  }\n}\n\nexport const enum ServiceWorkerUpdateNames {\n  Install = 'Install',\n  Wait = 'Wait',\n  Activate = 'Activate',\n}\n\n\nexport interface ServiceWorkerUpdateRange {\n  id: string;\n  phase: ServiceWorkerUpdateNames;\n  start: number;\n  end: number;\n}\n"]}