{"version":3,"file":"ApplicationPanelTreeElement.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ApplicationPanelTreeElement.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAIhD,MAAM,OAAO,2BAA4B,SAAQ,EAAE,CAAC,WAAW,CAAC,WAAW;IACtD,cAAc,CAAiB;IAElD,YAAY,cAA8B,EAAE,KAAa,EAAE,UAAmB;QAC5E,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,EAAE,CAAC,SAAS,CAAC,iBAAiB,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,CAAC;IAC9D,CAAC;IAED,IAAI,OAAO;QACT,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC1C,CAAC;IAED,QAAQ,CAAC,cAAiC;QACxC,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO,KAAK,CAAC;SACd;QAED,MAAM,IAAI,GAAa,EAAE,CAAC;QAC1B,KAAK,IAAI,EAAE,GAAoC,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,MAAM,EAAE;YACvE,MAAM,GAAG,GAAG,EAAE,YAAY,2BAA2B,IAAI,EAAE,CAAC,OAAO,CAAC;YACpE,IAAI,CAAC,GAAG,EAAE;gBACR,MAAM;aACP;YACD,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChB;QACD,IAAI,CAAC,cAAc,CAAC,uBAAuB,CAAC,IAAI,CAAC,CAAC;QAElD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ,CAAC,IAA2B;QAClC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrC,CAAC;CACF;AAED,MAAM,OAAO,qCAAsC,SAAQ,2BAA2B;IACjE,eAAe,CAAmC;IAClD,YAAY,CAAS;IAC9B,YAAY,CAAc;IAEpC,YAAY,cAA8B,EAAE,YAAoB,EAAE,WAAmB,EAAE,eAAe,GAAG,KAAK;QAC5G,KAAK,CAAC,cAAc,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;QAC3C,IAAI,CAAC,eAAe;YAChB,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,WAAW,GAAG,WAAW,GAAG,UAAU,EAAE,eAAe,CAAC,CAAC;QAC/G,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;QACjC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,IAAI,OAAO;QACT,OAAO,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;IAC3C,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IAC3B,CAAC;IAED,QAAQ,CAAC,cAAiC;QACxC,KAAK,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;QAC/B,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC;QAC3E,OAAO,KAAK,CAAC;IACf,CAAC;IAED,QAAQ;QACN,KAAK,CAAC,QAAQ,EAAE,CAAC;QACjB,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE,EAAE;YAC9B,IAAI,CAAC,MAAM,EAAE,CAAC;SACf;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;IAED,UAAU;QACR,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAClC,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {ResourcesPanel} from './ResourcesPanel.js';\n\nexport class ApplicationPanelTreeElement extends UI.TreeOutline.TreeElement {\n  protected readonly resourcesPanel: ResourcesPanel;\n\n  constructor(resourcesPanel: ResourcesPanel, title: string, expandable: boolean) {\n    super(title, expandable);\n    this.resourcesPanel = resourcesPanel;\n    UI.ARIAUtils.setAccessibleName(this.listItemElement, title);\n  }\n\n  get itemURL(): string {\n    throw new Error('Unimplemented Method');\n  }\n\n  onselect(selectedByUser: boolean|undefined): boolean {\n    if (!selectedByUser) {\n      return false;\n    }\n\n    const path: string[] = [];\n    for (let el: UI.TreeOutline.TreeElement|null = this; el; el = el.parent) {\n      const url = el instanceof ApplicationPanelTreeElement && el.itemURL;\n      if (!url) {\n        break;\n      }\n      path.push(url);\n    }\n    this.resourcesPanel.setLastSelectedItemPath(path);\n\n    return false;\n  }\n\n  showView(view: UI.Widget.Widget|null): void {\n    this.resourcesPanel.showView(view);\n  }\n}\n\nexport class ExpandableApplicationPanelTreeElement extends ApplicationPanelTreeElement {\n  protected readonly expandedSetting: Common.Settings.Setting<boolean>;\n  protected readonly categoryName: string;\n  protected categoryLink: string|null;\n\n  constructor(resourcesPanel: ResourcesPanel, categoryName: string, settingsKey: string, settingsDefault = false) {\n    super(resourcesPanel, categoryName, false);\n    this.expandedSetting =\n        Common.Settings.Settings.instance().createSetting('resources' + settingsKey + 'Expanded', settingsDefault);\n    this.categoryName = categoryName;\n    this.categoryLink = null;\n  }\n\n  get itemURL(): string {\n    return 'category://' + this.categoryName;\n  }\n\n  setLink(link: string): void {\n    this.categoryLink = link;\n  }\n\n  onselect(selectedByUser: boolean|undefined): boolean {\n    super.onselect(selectedByUser);\n    this.resourcesPanel.showCategoryView(this.categoryName, this.categoryLink);\n    return false;\n  }\n\n  onattach(): void {\n    super.onattach();\n    if (this.expandedSetting.get()) {\n      this.expand();\n    }\n  }\n\n  onexpand(): void {\n    this.expandedSetting.set(true);\n  }\n\n  oncollapse(): void {\n    this.expandedSetting.set(false);\n  }\n}\n"]}