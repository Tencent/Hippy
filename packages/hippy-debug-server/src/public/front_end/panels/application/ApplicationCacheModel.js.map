{"version":3,"file":"ApplicationCacheModel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ApplicationCacheModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n * 1. Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY GOOGLE INC. AND ITS CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL GOOGLE INC.\n * OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js'; // eslint-disable-line no-unused-vars\nimport * as SDK from '../../core/sdk/sdk.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class ApplicationCacheModel extends SDK.SDKModel.SDKModel {\n  _agent: ProtocolProxyApi.ApplicationCacheApi;\n  _statuses: Map<string, number>;\n  _manifestURLsByFrame: Map<string, string>;\n  _onLine: boolean;\n  constructor(target: SDK.Target.Target) {\n    super(target);\n\n    target.registerApplicationCacheDispatcher(new ApplicationCacheDispatcher(this));\n    this._agent = target.applicationCacheAgent();\n    this._agent.invoke_enable();\n\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      throw new Error('Target must provide an ResourceTreeModel');\n    }\n    resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameNavigated, this._frameNavigatedCallback, this);\n    resourceTreeModel.addEventListener(SDK.ResourceTreeModel.Events.FrameDetached, this._frameDetached, this);\n\n    this._statuses = new Map();\n    this._manifestURLsByFrame = new Map();\n\n    this._mainFrameNavigated();\n    this._onLine = true;\n  }\n\n  _frameNavigatedCallback(event: Common.EventTarget.EventTargetEvent): void {\n    this._frameNavigated(event);\n  }\n\n  async _frameNavigated(event: Common.EventTarget.EventTargetEvent): Promise<void> {\n    const frame = (event.data as SDK.ResourceTreeModel.ResourceTreeFrame);\n    if (frame.isMainFrame()) {\n      this._mainFrameNavigated();\n      return;\n    }\n\n    const frameId = frame.id;\n    const manifestURL = await this._agent.invoke_getManifestForFrame({frameId});\n    if (manifestURL !== null && !manifestURL) {\n      this._frameManifestRemoved(frameId);\n    }\n  }\n\n  _frameDetached(event: Common.EventTarget.EventTargetEvent): void {\n    const frame = (event.data.frame as SDK.ResourceTreeModel.ResourceTreeFrame);\n    this._frameManifestRemoved(frame.id);\n  }\n\n  reset(): void {\n    this._statuses.clear();\n    this._manifestURLsByFrame.clear();\n    this.dispatchEventToListeners(Events.FrameManifestsReset);\n  }\n\n  async _mainFrameNavigated(): Promise<void> {\n    const framesWithManifests = await this._agent.invoke_getFramesWithManifests();\n    if (framesWithManifests.getError()) {\n      return;\n    }\n    for (const frame of framesWithManifests.frameIds) {\n      this._frameManifestUpdated(frame.frameId, frame.manifestURL, frame.status);\n    }\n  }\n\n  _frameManifestUpdated(frameId: string, manifestURL: string, status: number): void {\n    if (status === UNCACHED) {\n      this._frameManifestRemoved(frameId);\n      return;\n    }\n\n    if (!manifestURL) {\n      return;\n    }\n\n    const recordedManifestURL = this._manifestURLsByFrame.get(frameId);\n    if (recordedManifestURL && manifestURL !== recordedManifestURL) {\n      this._frameManifestRemoved(frameId);\n    }\n\n    const statusChanged = this._statuses.get(frameId) !== status;\n    this._statuses.set(frameId, status);\n\n    if (!this._manifestURLsByFrame.has(frameId)) {\n      this._manifestURLsByFrame.set(frameId, manifestURL);\n      this.dispatchEventToListeners(Events.FrameManifestAdded, frameId);\n    }\n\n    if (statusChanged) {\n      this.dispatchEventToListeners(Events.FrameManifestStatusUpdated, frameId);\n    }\n  }\n\n  _frameManifestRemoved(frameId: string): void {\n    const removed = this._manifestURLsByFrame.delete(frameId);\n    this._statuses.delete(frameId);\n    if (removed) {\n      this.dispatchEventToListeners(Events.FrameManifestRemoved, frameId);\n    }\n  }\n\n  frameManifestURL(frameId: string): string {\n    return this._manifestURLsByFrame.get(frameId) || '';\n  }\n\n  frameManifestStatus(frameId: string): number {\n    return this._statuses.get(frameId) || UNCACHED;\n  }\n\n  get onLine(): boolean {\n    return this._onLine;\n  }\n\n  _statusUpdated(frameId: string, manifestURL: string, status: number): void {\n    this._frameManifestUpdated(frameId, manifestURL, status);\n  }\n\n  async requestApplicationCache(frameId: string): Promise<Protocol.ApplicationCache.ApplicationCache|null> {\n    const response = await this._agent.invoke_getApplicationCacheForFrame({frameId});\n    if (response.getError()) {\n      return null;\n    }\n    return response.applicationCache;\n  }\n\n  _networkStateUpdated(isNowOnline: boolean): void {\n    this._onLine = isNowOnline;\n    this.dispatchEventToListeners(Events.NetworkStateChanged, isNowOnline);\n  }\n}\n\nSDK.SDKModel.SDKModel.register(ApplicationCacheModel, {capabilities: SDK.Target.Capability.DOM, autostart: false});\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  FrameManifestStatusUpdated = 'FrameManifestStatusUpdated',\n  FrameManifestAdded = 'FrameManifestAdded',\n  FrameManifestRemoved = 'FrameManifestRemoved',\n  FrameManifestsReset = 'FrameManifestsReset',\n  NetworkStateChanged = 'NetworkStateChanged',\n}\n\nexport class ApplicationCacheDispatcher implements ProtocolProxyApi.ApplicationCacheDispatcher {\n  _applicationCacheModel: ApplicationCacheModel;\n  constructor(applicationCacheModel: ApplicationCacheModel) {\n    this._applicationCacheModel = applicationCacheModel;\n  }\n\n  applicationCacheStatusUpdated({frameId, manifestURL, status}:\n                                    Protocol.ApplicationCache.ApplicationCacheStatusUpdatedEvent): void {\n    this._applicationCacheModel._statusUpdated(frameId, manifestURL, status);\n  }\n\n  networkStateUpdated({isNowOnline}: Protocol.ApplicationCache.NetworkStateUpdatedEvent): void {\n    this._applicationCacheModel._networkStateUpdated(isNowOnline);\n  }\n}\n\nexport const UNCACHED = 0;\nexport const IDLE = 1;\nexport const CHECKING = 2;\nexport const DOWNLOADING = 3;\nexport const UPDATEREADY = 4;\nexport const OBSOLETE = 5;\n"]}