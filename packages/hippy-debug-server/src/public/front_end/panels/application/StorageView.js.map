{"version":3,"file":"StorageView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/StorageView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport {ApplicationCacheModel} from './ApplicationCacheModel.js';\nimport {DatabaseModel} from './DatabaseModel.js';\nimport {DOMStorageModel} from './DOMStorageModel.js';\nimport {IndexedDBModel} from './IndexedDBModel.js';\n\nconst UIStrings = {\n  /**\n   * @description Text in the Storage View that expresses the amout of used and available storage quota\n   * @example {1.5 MB} PH1\n   * @example {123.1 MB} PH2\n   */\n  storageQuotaUsed: '{PH1} used out of {PH2} storage quota',\n  /**\n   * @description Tooltip in the Storage View that expresses the precise amout of used and available storage quota\n   * @example {200} PH1\n   * @example {400} PH2\n   */\n  storageQuotaUsedWithBytes: '{PH1} bytes used out of {PH2} bytes storage quota',\n  /**\n   * @description Fragment indicating that a certain data size has been custom configured\n   * @example {1.5 MB} PH1\n   */\n  storageWithCustomMarker: '{PH1} (custom)',\n  /**\n   * @description Text in Application Panel Sidebar and title text of the Storage View of the Application panel\n   */\n  storageTitle: 'Storage',\n  /**\n   * @description Title text in Storage View of the Application panel\n   */\n  usage: 'Usage',\n  /**\n   * @description Unit for data size in DevTools\n   */\n  mb: 'MB',\n  /**\n   * @description Link to learn more about Progressive Web Apps\n   */\n  learnMore: 'Learn more',\n  /**\n   * @description Button text for the button in the Storage View of the Application panel for clearing site-specific storage\n   */\n  clearSiteData: 'Clear site data',\n  /**\n   * @description Category description in the Clear Storage section of the Storage View of the Application panel\n   */\n  application: 'Application',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  unregisterServiceWorker: 'Unregister service workers',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  localAndSessionStorage: 'Local and session storage',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  indexDB: 'IndexedDB',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  webSql: 'Web SQL',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  cookies: 'Cookies',\n  /**\n   * @description Category description in the Clear Storage section of the Storage View of the Application panel\n   */\n  cache: 'Cache',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  cacheStorage: 'Cache storage',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  applicationCache: 'Application cache',\n  /**\n   * @description Checkbox label in the Clear Storage section of the Storage View of the Application panel\n   */\n  includingThirdPartyCookies: 'including third-party cookies',\n  /**\n   * @description Text for error message in Application Quota Override\n   * @example {Image} PH1\n   */\n  sFailedToLoad: '{PH1} (failed to load)',\n  /**\n   * @description Text for error message in Application Quota Override\n   */\n  internalError: 'Internal error',\n  /**\n   * @description Text for error message in Application Quota Override\n   */\n  pleaseEnterANumber: 'Please enter a number',\n  /**\n   * @description Text for error message in Application Quota Override\n   */\n  numberMustBeNonNegative: 'Number must be non-negative',\n  /**\n   * @description Button text for the \"Clear site data\" button in the Storage View of the Application panel while the clearing action is pending\n   */\n  clearing: 'Clearing...',\n  /**\n   * @description Quota row title in Clear Storage View of the Application panel\n   */\n  storageQuotaIsLimitedIn: 'Storage quota is limited in Incognito mode',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  fileSystem: 'File System',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  other: 'Other',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  storageUsage: 'Storage usage',\n  /**\n   * @description Text in Application Panel Sidebar of the Application panel\n   */\n  serviceWorkers: 'Service Workers',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/StorageView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\n/**\n * @implements {SDK.TargetManager.Observer}\n */\nexport class StorageView extends UI.ThrottledWidget.ThrottledWidget {\n  private pieColors: Map<Protocol.Storage.StorageType, string>;\n  private reportView: UI.ReportView.ReportView;\n  private target: SDK.Target.Target|null;\n  private securityOrigin: string|null;\n  private settings: Map<Protocol.Storage.StorageType, Common.Settings.Setting<boolean>>;\n  private includeThirdPartyCookiesSetting: Common.Settings.Setting<boolean>;\n  private quotaRow: HTMLElement;\n  private quotaUsage: number|null;\n  private pieChart: PerfUI.PieChart.PieChart;\n  private previousOverrideFieldValue: string;\n  private quotaOverrideCheckbox: UI.UIUtils.CheckboxLabel;\n  private quotaOverrideControlRow: HTMLElement;\n  private quotaOverrideEditor: HTMLInputElement;\n  private quotaOverrideErrorMessage: HTMLElement;\n  private clearButton: HTMLButtonElement;\n\n  constructor() {\n    super(true, 1000);\n    this.registerRequiredCSS('panels/application/storageView.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('clear-storage-container');\n    this.pieColors = new Map([\n      [Protocol.Storage.StorageType.Appcache, 'rgb(110, 161, 226)'],        // blue\n      [Protocol.Storage.StorageType.Cache_storage, 'rgb(229, 113, 113)'],   // red\n      [Protocol.Storage.StorageType.Cookies, 'rgb(239, 196, 87)'],          // yellow\n      [Protocol.Storage.StorageType.Indexeddb, 'rgb(155, 127, 230)'],       // purple\n      [Protocol.Storage.StorageType.Local_storage, 'rgb(116, 178, 102)'],   // green\n      [Protocol.Storage.StorageType.Service_workers, 'rgb(255, 167, 36)'],  // orange\n      [Protocol.Storage.StorageType.Websql, 'rgb(203, 220, 56)'],           // lime\n    ]);\n\n    // TODO(crbug.com/1156978): Replace UI.ReportView.ReportView with ReportView.ts web component.\n    this.reportView = new UI.ReportView.ReportView(i18nString(UIStrings.storageTitle));\n    this.reportView.registerRequiredCSS('panels/application/storageView.css', {enableLegacyPatching: false});\n    this.reportView.element.classList.add('clear-storage-header');\n    this.reportView.show(this.contentElement);\n    /** @type {?SDK.Target.Target} */\n    this.target = null;\n    /** @type {?string} */\n    this.securityOrigin = null;\n\n    this.settings = new Map();\n    for (const type of AllStorageTypes) {\n      this.settings.set(type, Common.Settings.Settings.instance().createSetting('clear-storage-' + type, true));\n    }\n\n    this.includeThirdPartyCookiesSetting =\n        Common.Settings.Settings.instance().createSetting('clear-storage-include-third-party-cookies', false);\n\n    const quota = this.reportView.appendSection(i18nString(UIStrings.usage));\n    this.quotaRow = quota.appendSelectableRow();\n    this.quotaRow.classList.add('quota-usage-row');\n    const learnMoreRow = quota.appendRow();\n    const learnMore = UI.XLink.XLink.create(\n        'https://developer.chrome.com/docs/devtools/progressive-web-apps#opaque-responses',\n        i18nString(UIStrings.learnMore));\n    learnMoreRow.appendChild(learnMore);\n    this.quotaUsage = null;\n    this.pieChart = new PerfUI.PieChart.PieChart();\n    this.populatePieChart(0, []);\n    const usageBreakdownRow = quota.appendRow();\n    usageBreakdownRow.classList.add('usage-breakdown-row');\n    usageBreakdownRow.appendChild(this.pieChart);\n\n    this.previousOverrideFieldValue = '';\n    const quotaOverrideCheckboxRow = quota.appendRow();\n    this.quotaOverrideCheckbox = UI.UIUtils.CheckboxLabel.create('Simulate custom storage quota', false, '');\n    quotaOverrideCheckboxRow.appendChild(this.quotaOverrideCheckbox);\n    this.quotaOverrideCheckbox.checkboxElement.addEventListener('click', this.onClickCheckbox.bind(this), false);\n    this.quotaOverrideControlRow = quota.appendRow();\n    /** @type {!HTMLInputElement} */\n    this.quotaOverrideEditor =\n        this.quotaOverrideControlRow.createChild('input', 'quota-override-notification-editor') as HTMLInputElement;\n    this.quotaOverrideControlRow.appendChild(UI.UIUtils.createLabel(i18nString(UIStrings.mb)));\n    this.quotaOverrideControlRow.classList.add('hidden');\n    this.quotaOverrideEditor.addEventListener('keyup', event => {\n      if (event.key === 'Enter') {\n        this.applyQuotaOverrideFromInputField();\n        event.consume(true);\n      }\n    });\n    this.quotaOverrideEditor.addEventListener('focusout', event => {\n      this.applyQuotaOverrideFromInputField();\n      event.consume(true);\n    });\n\n    const errorMessageRow = quota.appendRow();\n    this.quotaOverrideErrorMessage = errorMessageRow.createChild('div', 'quota-override-error');\n\n    const clearButtonSection = this.reportView.appendSection('', 'clear-storage-button').appendRow();\n    this.clearButton = UI.UIUtils.createTextButton(i18nString(UIStrings.clearSiteData), this.clear.bind(this));\n    this.clearButton.id = 'storage-view-clear-button';\n    clearButtonSection.appendChild(this.clearButton);\n\n    const includeThirdPartyCookiesCheckbox = UI.SettingsUI.createSettingCheckbox(\n        i18nString(UIStrings.includingThirdPartyCookies), this.includeThirdPartyCookiesSetting, true);\n    includeThirdPartyCookiesCheckbox.classList.add('include-third-party-cookies');\n    clearButtonSection.appendChild(includeThirdPartyCookiesCheckbox);\n\n    const application = this.reportView.appendSection(i18nString(UIStrings.application));\n    this.appendItem(\n        application, i18nString(UIStrings.unregisterServiceWorker), Protocol.Storage.StorageType.Service_workers);\n    application.markFieldListAsGroup();\n\n    const storage = this.reportView.appendSection(i18nString(UIStrings.storageTitle));\n    this.appendItem(storage, i18nString(UIStrings.localAndSessionStorage), Protocol.Storage.StorageType.Local_storage);\n    this.appendItem(storage, i18nString(UIStrings.indexDB), Protocol.Storage.StorageType.Indexeddb);\n    this.appendItem(storage, i18nString(UIStrings.webSql), Protocol.Storage.StorageType.Websql);\n    this.appendItem(storage, i18nString(UIStrings.cookies), Protocol.Storage.StorageType.Cookies);\n    storage.markFieldListAsGroup();\n\n    const caches = this.reportView.appendSection(i18nString(UIStrings.cache));\n    this.appendItem(caches, i18nString(UIStrings.cacheStorage), Protocol.Storage.StorageType.Cache_storage);\n    this.appendItem(caches, i18nString(UIStrings.applicationCache), Protocol.Storage.StorageType.Appcache);\n    caches.markFieldListAsGroup();\n\n    SDK.TargetManager.TargetManager.instance().observeTargets(this);\n  }\n\n  private appendItem(section: UI.ReportView.Section, title: string, settingName: Protocol.Storage.StorageType): void {\n    const row = section.appendRow();\n    const setting = this.settings.get(settingName);\n    if (setting) {\n      row.appendChild(UI.SettingsUI.createSettingCheckbox(title, setting, true));\n    }\n  }\n\n  targetAdded(target: SDK.Target.Target): void {\n    if (this.target) {\n      return;\n    }\n    this.target = target;\n    const securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager) as\n        SDK.SecurityOriginManager.SecurityOriginManager;\n    this.updateOrigin(\n        securityOriginManager.mainSecurityOrigin(), securityOriginManager.unreachableMainSecurityOrigin());\n    securityOriginManager.addEventListener(\n        SDK.SecurityOriginManager.Events.MainSecurityOriginChanged, this.originChanged, this);\n  }\n\n  targetRemoved(target: SDK.Target.Target): void {\n    if (this.target !== target) {\n      return;\n    }\n    const securityOriginManager = target.model(SDK.SecurityOriginManager.SecurityOriginManager) as\n        SDK.SecurityOriginManager.SecurityOriginManager;\n    securityOriginManager.removeEventListener(\n        SDK.SecurityOriginManager.Events.MainSecurityOriginChanged, this.originChanged, this);\n  }\n\n  private originChanged(event: Common.EventTarget.EventTargetEvent): void {\n    const mainOrigin = /** *@type {string} */ (event.data.mainSecurityOrigin);\n    const unreachableMainOrigin = /** @type {string} */ (event.data.unreachableMainSecurityOrigin);\n    this.updateOrigin(mainOrigin, unreachableMainOrigin);\n  }\n\n  private updateOrigin(mainOrigin: string, unreachableMainOrigin: string|null): void {\n    const oldOrigin = this.securityOrigin;\n    if (unreachableMainOrigin) {\n      this.securityOrigin = unreachableMainOrigin;\n      this.reportView.setSubtitle(i18nString(UIStrings.sFailedToLoad, {PH1: unreachableMainOrigin}));\n    } else {\n      this.securityOrigin = mainOrigin;\n      this.reportView.setSubtitle(mainOrigin);\n    }\n\n    if (oldOrigin !== this.securityOrigin) {\n      this.quotaOverrideControlRow.classList.add('hidden');\n      this.quotaOverrideCheckbox.checkboxElement.checked = false;\n      this.quotaOverrideErrorMessage.textContent = '';\n    }\n    this.doUpdate();\n  }\n\n  private async applyQuotaOverrideFromInputField(): Promise<void> {\n    if (!this.target || !this.securityOrigin) {\n      this.quotaOverrideErrorMessage.textContent = i18nString(UIStrings.internalError);\n      return;\n    }\n    this.quotaOverrideErrorMessage.textContent = '';\n    const editorString = this.quotaOverrideEditor.value;\n    if (editorString === '') {\n      await this.clearQuotaForOrigin(this.target, this.securityOrigin);\n      this.previousOverrideFieldValue = '';\n      return;\n    }\n    const quota = parseFloat(editorString);\n    if (!Number.isFinite(quota)) {\n      this.quotaOverrideErrorMessage.textContent = i18nString(UIStrings.pleaseEnterANumber);\n      return;\n    }\n    if (quota < 0) {\n      this.quotaOverrideErrorMessage.textContent = i18nString(UIStrings.numberMustBeNonNegative);\n      return;\n    }\n    const bytesPerMB = 1000 * 1000;\n    const quotaInBytes = Math.round(quota * bytesPerMB);\n    const quotaFieldValue = `${quotaInBytes / bytesPerMB}`;\n    this.quotaOverrideEditor.value = quotaFieldValue;\n    this.previousOverrideFieldValue = quotaFieldValue;\n    await this.target.storageAgent().invoke_overrideQuotaForOrigin(\n        {origin: this.securityOrigin, quotaSize: quotaInBytes});\n  }\n\n  private async clearQuotaForOrigin(target: SDK.Target.Target, origin: string): Promise<void> {\n    await target.storageAgent().invoke_overrideQuotaForOrigin({origin});\n  }\n\n  private async onClickCheckbox(): Promise<void> {\n    if (this.quotaOverrideControlRow.classList.contains('hidden')) {\n      this.quotaOverrideControlRow.classList.remove('hidden');\n      this.quotaOverrideCheckbox.checkboxElement.checked = true;\n      this.quotaOverrideEditor.value = this.previousOverrideFieldValue;\n      this.quotaOverrideEditor.focus();\n    } else if (this.target && this.securityOrigin) {\n      this.quotaOverrideControlRow.classList.add('hidden');\n      this.quotaOverrideCheckbox.checkboxElement.checked = false;\n      await this.clearQuotaForOrigin(this.target, this.securityOrigin);\n      this.quotaOverrideErrorMessage.textContent = '';\n    }\n  }\n\n  private clear(): void {\n    if (!this.securityOrigin) {\n      return;\n    }\n    const selectedStorageTypes = [];\n    for (const type of this.settings.keys()) {\n      const setting = this.settings.get(type);\n      if (setting && setting.get()) {\n        selectedStorageTypes.push(type);\n      }\n    }\n\n    if (this.target) {\n      const includeThirdPartyCookies = this.includeThirdPartyCookiesSetting.get();\n      StorageView.clear(this.target, this.securityOrigin, selectedStorageTypes, includeThirdPartyCookies);\n    }\n\n    this.clearButton.disabled = true;\n    const label = this.clearButton.textContent;\n    this.clearButton.textContent = i18nString(UIStrings.clearing);\n    setTimeout(() => {\n      this.clearButton.disabled = false;\n      this.clearButton.textContent = label;\n      this.clearButton.focus();\n    }, 500);\n  }\n\n  static clear(\n      target: SDK.Target.Target, securityOrigin: string, selectedStorageTypes: string[],\n      includeThirdPartyCookies: boolean): void {\n    target.storageAgent().invoke_clearDataForOrigin(\n        {origin: securityOrigin, storageTypes: selectedStorageTypes.join(',')});\n\n    const set = new Set(selectedStorageTypes);\n    const hasAll = set.has(Protocol.Storage.StorageType.All);\n    if (set.has(Protocol.Storage.StorageType.Cookies) || hasAll) {\n      const cookieModel = target.model(SDK.CookieModel.CookieModel);\n      if (cookieModel) {\n        cookieModel.clear(undefined, includeThirdPartyCookies ? undefined : securityOrigin);\n      }\n    }\n\n    if (set.has(Protocol.Storage.StorageType.Indexeddb) || hasAll) {\n      for (const target of SDK.TargetManager.TargetManager.instance().targets()) {\n        const indexedDBModel = target.model(IndexedDBModel);\n        if (indexedDBModel) {\n          indexedDBModel.clearForOrigin(securityOrigin);\n        }\n      }\n    }\n\n    if (set.has(Protocol.Storage.StorageType.Local_storage) || hasAll) {\n      const storageModel = target.model(DOMStorageModel);\n      if (storageModel) {\n        storageModel.clearForOrigin(securityOrigin);\n      }\n    }\n\n    if (set.has(Protocol.Storage.StorageType.Websql) || hasAll) {\n      const databaseModel = target.model(DatabaseModel);\n      if (databaseModel) {\n        databaseModel.disable();\n        databaseModel.enable();\n      }\n    }\n\n    if (set.has(Protocol.Storage.StorageType.Cache_storage) || hasAll) {\n      const target = SDK.TargetManager.TargetManager.instance().mainTarget();\n      const model = target && target.model(SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel);\n      if (model) {\n        model.clearForOrigin(securityOrigin);\n      }\n    }\n\n    if (set.has(Protocol.Storage.StorageType.Appcache) || hasAll) {\n      const appcacheModel = target.model(ApplicationCacheModel);\n      if (appcacheModel) {\n        appcacheModel.reset();\n      }\n    }\n  }\n\n  async doUpdate(): Promise<void> {\n    if (!this.securityOrigin || !this.target) {\n      this.quotaRow.textContent = '';\n      this.populatePieChart(0, []);\n      return;\n    }\n\n    const securityOrigin = /** @type {string} */ (this.securityOrigin);\n    const response = await this.target.storageAgent().invoke_getUsageAndQuota({origin: securityOrigin});\n    this.quotaRow.textContent = '';\n    if (response.getError()) {\n      this.populatePieChart(0, []);\n      return;\n    }\n    const quotaOverridden = response.overrideActive;\n    const quotaAsString = Platform.NumberUtilities.bytesToString(response.quota);\n    const usageAsString = Platform.NumberUtilities.bytesToString(response.usage);\n    const formattedQuotaAsString = i18nString(UIStrings.storageWithCustomMarker, {PH1: quotaAsString});\n    const quota =\n        quotaOverridden ? UI.Fragment.Fragment.build`<b>${formattedQuotaAsString}</b>`.element() : quotaAsString;\n    const element =\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.storageQuotaUsed, {PH1: usageAsString, PH2: quota});\n    this.quotaRow.appendChild(element);\n    UI.Tooltip.Tooltip.install(\n        this.quotaRow,\n        i18nString(\n            UIStrings.storageQuotaUsedWithBytes,\n            {PH1: response.usage.toLocaleString(), PH2: response.quota.toLocaleString()}));\n\n    if (!response.overrideActive && response.quota < 125829120) {  // 120 MB\n      UI.Tooltip.Tooltip.install(this.quotaRow, i18nString(UIStrings.storageQuotaIsLimitedIn));\n      this.quotaRow.appendChild(UI.Icon.Icon.create('smallicon-info'));\n    }\n\n    if (this.quotaUsage === null || this.quotaUsage !== response.usage) {\n      this.quotaUsage = response.usage;\n      /** @type {!Array<!PerfUI.PieChart.Slice>} */\n      const slices = [];\n      for (const usageForType of response.usageBreakdown.sort((a, b) => b.usage - a.usage)) {\n        const value = usageForType.usage;\n        if (!value) {\n          continue;\n        }\n        const title = this.getStorageTypeName(usageForType.storageType);\n        const color = this.pieColors.get(usageForType.storageType) || '#ccc';\n        slices.push({value, color, title});\n      }\n      this.populatePieChart(response.usage, slices);\n    }\n\n    this.update();\n  }\n\n  private populatePieChart(total: number, slices: PerfUI.PieChart.Slice[]): void {\n    this.pieChart.data = {\n      chartName: i18nString(UIStrings.storageUsage),\n      size: 110,\n      formatter: Platform.NumberUtilities.bytesToString,\n      showLegend: true,\n      total,\n      slices,\n    };\n  }\n\n  private getStorageTypeName(type: Protocol.Storage.StorageType): string {\n    switch (type) {\n      case Protocol.Storage.StorageType.File_systems:\n        return i18nString(UIStrings.fileSystem);\n      case Protocol.Storage.StorageType.Websql:\n        return i18nString(UIStrings.webSql);\n      case Protocol.Storage.StorageType.Appcache:\n        return i18nString(UIStrings.application);\n      case Protocol.Storage.StorageType.Indexeddb:\n        return i18nString(UIStrings.indexDB);\n      case Protocol.Storage.StorageType.Cache_storage:\n        return i18nString(UIStrings.cacheStorage);\n      case Protocol.Storage.StorageType.Service_workers:\n        return i18nString(UIStrings.serviceWorkers);\n      default:\n        return i18nString(UIStrings.other);\n    }\n  }\n}\n\nexport const AllStorageTypes = [\n  Protocol.Storage.StorageType.Appcache,\n  Protocol.Storage.StorageType.Cache_storage,\n  Protocol.Storage.StorageType.Cookies,\n  Protocol.Storage.StorageType.Indexeddb,\n  Protocol.Storage.StorageType.Local_storage,\n  Protocol.Storage.StorageType.Service_workers,\n  Protocol.Storage.StorageType.Websql,\n];\n\nlet actionDelegateInstance: ActionDelegate;\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!actionDelegateInstance || forceNew) {\n      actionDelegateInstance = new ActionDelegate();\n    }\n\n    return actionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    switch (actionId) {\n      case 'resources.clear':\n        return this.handleClear(false);\n      case 'resources.clear-incl-third-party-cookies':\n        return this.handleClear(true);\n    }\n    return false;\n  }\n\n  private handleClear(includeThirdPartyCookies: boolean): boolean {\n    const target = SDK.TargetManager.TargetManager.instance().mainTarget();\n    if (!target) {\n      return false;\n    }\n    const resourceTreeModel = target.model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (!resourceTreeModel) {\n      return false;\n    }\n    const securityOrigin = resourceTreeModel.getMainSecurityOrigin();\n    if (!securityOrigin) {\n      return false;\n    }\n\n    StorageView.clear(target, securityOrigin, AllStorageTypes, includeThirdPartyCookies);\n    return true;\n  }\n}\n"]}