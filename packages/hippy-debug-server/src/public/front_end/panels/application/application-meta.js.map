{"version":3,"file":"application-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/application-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAC7C,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,WAAW,EAAE,aAAa;IAC1B;;MAEE;IACF,eAAe,EAAE,kBAAkB;IACnC;;MAEE;IACF,GAAG,EAAE,KAAK;IACV;;MAEE;IACF,aAAa,EAAE,iBAAiB;IAChC;;MAEE;IACF,gCAAgC,EAAE,iDAAiD;IACnF;;MAEE;IACF,oBAAoB,EAAE,wBAAwB;IAC9C;;MAEE;IACF,mBAAmB,EAAE,uBAAuB;CAC7C,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,wCAAwC,EAAE,SAAS,CAAC,CAAC;AAC9F,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACxF,IAAI,qBAAmD,CAAC;AAExD,KAAK,UAAU,mBAAmB;IAChC,IAAI,CAAC,qBAAqB,EAAE;QAC1B,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,oBAAoB,CAAC,CAAC;QAC9E,qBAAqB,GAAG,MAAM,MAAM,CAAC,kBAAkB,CAAC,CAAC;KAC1D;IACD,OAAO,qBAAqB,CAAC;AAC/B,CAAC;AAED,SAAS,yBAAyB,CAAc,gBAA2D;IACzG,IAAI,qBAAqB,KAAK,SAAS,EAAE;QACvC,OAAO,EAAE,CAAC;KACX;IACD,OAAO,gBAAgB,CAAC,qBAAqB,CAAC,CAAC;AACjD,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,qBAAyC;IACjD,EAAE,EAAE,WAAW;IACf,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;IAC5C,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IACxD,KAAK,EAAE,EAAE;IACT,KAAK,CAAC,QAAQ;QACZ,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,cAAc,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IAC5D,CAAC;IACD,IAAI,EAAE,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;CACtC,CAAC,CAAC;AAEH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,SAAS;IACxD,QAAQ,EAAE,iBAAiB;IAC3B,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IAC9C,KAAK,CAAC,kBAAkB;QACtB,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACzD,CAAC;CACF,CAAC,CAAC;AAEH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,SAAS;IACxD,QAAQ,EAAE,0CAA0C;IACpD,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,gCAAgC,CAAC;IACjE,KAAK,CAAC,kBAAkB;QACtB,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,WAAW,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACzD,CAAC;CACF,CAAC,CAAC;AAGH,EAAE,CAAC,kBAAkB,CAAC,uBAAuB,CAAC;IAC5C,QAAQ,EAAE,qCAAqC;IAC/C,SAAS,6DAA2D;IACpE,UAAU,EAAE,IAAI;IAChB,gBAAgB,2DAA0D;IAC1E,kBAAkB,EAAE,IAAI;IACxB,YAAY;QACV,OAAO,yBAAyB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,CAAC,CAAC;IACzG,CAAC;IACD,KAAK,CAAC,kBAAkB;QACtB,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,qBAAqB,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACnE,CAAC;IACD,QAAQ,EAAE,EAAE,CAAC,kBAAkB,CAAC,cAAc,CAAC,mBAAmB;IAClE,OAAO,EAAE;QACP;YACE,KAAK,EAAE,IAAI;YACX,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,oBAAoB,CAAC;SACtD;QACD;YACE,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,mBAAmB,CAAC;SACrD;KACF;IACD,QAAQ,EAAE;QACR;YACE,QAAQ,oCAA8C;YACtD,QAAQ,EAAE,QAAQ;SACnB;QACD;YACE,QAAQ,iBAAqC;YAC7C,QAAQ,EAAE,QAAQ;SACnB;KACF;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC/B,YAAY;QACV,OAAO;YACL,GAAG,CAAC,QAAQ,CAAC,QAAQ;SACtB,CAAC;IACJ,CAAC;IACD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,iBAAiB;IAClE,KAAK,CAAC,YAAY;QAChB,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,cAAc,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;IAC9D,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC/B,YAAY;QACV,OAAO;YACL,GAAG,CAAC,MAAM,CAAC,eAAe;SAC3B,CAAC;IACJ,CAAC;IACD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,iBAAiB;IAClE,KAAK,CAAC,YAAY;QAChB,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,cAAc,CAAC,uBAAuB,CAAC,QAAQ,EAAE,CAAC;IACrE,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC/B,YAAY;QACV,OAAO;YACL,GAAG,CAAC,iBAAiB,CAAC,iBAAiB;SACxC,CAAC;IACJ,CAAC;IACD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,iBAAiB;IAClE,KAAK,CAAC,YAAY;QAChB,MAAM,SAAS,GAAG,MAAM,mBAAmB,EAAE,CAAC;QAC9C,OAAO,SAAS,CAAC,cAAc,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;IAClE,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Resources from './application.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  application: 'Application',\n  /**\n  *@description Command for showing the 'Application' tool\n  */\n  showApplication: 'Show Application',\n  /**\n  *@description A tag of Application Panel that can be searched in the command menu\n  */\n  pwa: 'pwa',\n  /**\n  *@description Text of button in Clear Storage View of the Application panel\n  */\n  clearSiteData: 'Clear site data',\n  /**\n  *@description Title of an action that clears all site data including 3rd party cookies\n  */\n  clearSiteDataIncludingThirdparty: 'Clear site data (including third-party cookies)',\n  /**\n  *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n  */\n  startRecordingEvents: 'Start recording events',\n  /**\n  *@description Title of an action under the Background Services category that can be invoked through the Command Menu\n  */\n  stopRecordingEvents: 'Stop recording events',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/application-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedResourcesModule: (typeof Resources|undefined);\n\nasync function loadResourcesModule(): Promise<typeof Resources> {\n  if (!loadedResourcesModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/application');\n    loadedResourcesModule = await import('./application.js');\n  }\n  return loadedResourcesModule;\n}\n\nfunction maybeRetrieveContextTypes<T = unknown>(getClassCallBack: (elementsModule: typeof Resources) => T[]): T[] {\n  if (loadedResourcesModule === undefined) {\n    return [];\n  }\n  return getClassCallBack(loadedResourcesModule);\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.PANEL,\n  id: 'resources',\n  title: i18nLazyString(UIStrings.application),\n  commandPrompt: i18nLazyString(UIStrings.showApplication),\n  order: 70,\n  async loadView() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.ResourcesPanel.instance();\n  },\n  tags: [i18nLazyString(UIStrings.pwa)],\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear',\n  title: i18nLazyString(UIStrings.clearSiteData),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return Resources.StorageView.ActionDelegate.instance();\n  },\n});\n\nUI.ActionRegistration.registerActionExtension({\n  category: UI.ActionRegistration.ActionCategory.RESOURCES,\n  actionId: 'resources.clear-incl-third-party-cookies',\n  title: i18nLazyString(UIStrings.clearSiteDataIncludingThirdparty),\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return Resources.StorageView.ActionDelegate.instance();\n  },\n});\n\n\nUI.ActionRegistration.registerActionExtension({\n  actionId: 'background-service.toggle-recording',\n  iconClass: UI.ActionRegistration.IconClass.LARGEICON_START_RECORDING,\n  toggleable: true,\n  toggledIconClass: UI.ActionRegistration.IconClass.LARGEICON_STOP_RECORDING,\n  toggleWithRedColor: true,\n  contextTypes() {\n    return maybeRetrieveContextTypes(Resources => [Resources.BackgroundServiceView.BackgroundServiceView]);\n  },\n  async loadActionDelegate() {\n    const Resources = await loadResourcesModule();\n    return Resources.BackgroundServiceView.ActionDelegate.instance();\n  },\n  category: UI.ActionRegistration.ActionCategory.BACKGROUND_SERVICES,\n  options: [\n    {\n      value: true,\n      title: i18nLazyString(UIStrings.startRecordingEvents),\n    },\n    {\n      value: false,\n      title: i18nLazyString(UIStrings.stopRecordingEvents),\n    },\n  ],\n  bindings: [\n    {\n      platform: UI.ActionRegistration.Platforms.WindowsLinux,\n      shortcut: 'Ctrl+E',\n    },\n    {\n      platform: UI.ActionRegistration.Platforms.Mac,\n      shortcut: 'Meta+E',\n    },\n  ],\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.Resource.Resource,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.ResourceRevealer.instance();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.Cookie.CookieReference,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.CookieReferenceRevealer.instance();\n  },\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      SDK.ResourceTreeModel.ResourceTreeFrame,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.APPLICATION_PANEL,\n  async loadRevealer() {\n    const Resources = await loadResourcesModule();\n    return Resources.ResourcesPanel.FrameDetailsRevealer.instance();\n  },\n});\n"]}