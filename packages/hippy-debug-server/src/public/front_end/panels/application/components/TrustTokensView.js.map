{"version":3,"file":"TrustTokensView.js","sourceRoot":"","sources":["../../../../../../../front_end/panels/application/components/TrustTokensView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nimport * as DataGrid from '../../../ui/components/data_grid/data_grid.js';\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as IconButton from '../../../ui/components/icon_button/icon_button.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport type * as Protocol from '../../../generated/protocol.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for the issuer of an item\n  */\n  issuer: 'Issuer',\n  /**\n  *@description Column header for Trust Token table\n  */\n  storedTokenCount: 'Stored token count',\n  /**\n  *@description Hover text for an info icon in the Trust Token panel\n  */\n  allStoredTrustTokensAvailableIn: 'All stored Trust Tokens available in this browser instance.',\n  /**\n   * @description Text shown instead of a table when the table would be empty.\n   */\n  noTrustTokensStored: 'No Trust Tokens are currently stored.',\n  /**\n   * @description Each row in the Trust Token table has a delete button. This is the text shown\n   * when hovering over this button. The placeholder is a normal URL, indicating the site which\n   * provided the Trust Tokens that will be deleted when the button is clicked.\n   * @example {https://google.com} PH1\n   */\n  deleteTrustTokens: 'Delete all stored Trust Tokens issued by {PH1}.',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/components/TrustTokensView.ts', UIStrings);\nexport const i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface TrustTokensViewData {\n  tokens: Protocol.Storage.TrustTokens[];\n  deleteClickHandler: (issuerOrigin: string) => void;\n}\n\nexport class TrustTokensView extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private tokens: Protocol.Storage.TrustTokens[] = [];\n  private deleteClickHandler: (issuerOrigin: string) => void = () => {};\n\n  connectedCallback(): void {\n    this.render();\n  }\n\n  set data(data: TrustTokensViewData) {\n    this.tokens = data.tokens;\n    this.deleteClickHandler = data.deleteClickHandler;\n    this.render();\n  }\n\n  private render(): void {\n    LitHtml.render(\n        LitHtml.html`\n      <style>\n        :host {\n          padding: 20px;\n        }\n\n        .heading {\n          font-size: 15px;\n        }\n\n        devtools-data-grid-controller {\n          border: 1px solid var(--color-details-hairline);\n          margin-top: 20px;\n        }\n\n        .info-icon {\n          vertical-align: text-bottom;\n          height: 14px;\n        }\n\n        .no-tt-message {\n          margin-top: 20px;\n        }\n      </style>\n      <div>\n        <span class=\"heading\">Trust Tokens</span>\n        <${IconButton.Icon.Icon.litTagName} class=\"info-icon\" title=${\n            i18nString(UIStrings.allStoredTrustTokensAvailableIn)}\n          .data=${\n            {iconName: 'ic_info_black_18dp', color: 'var(--color-link)', width: '14px'} as\n            IconButton.Icon.IconWithName}>\n        </${IconButton.Icon.Icon.litTagName}>\n        ${this.renderGridOrNoDataMessage()}\n      </div>\n    `,\n        this.shadow);\n  }\n\n  private renderGridOrNoDataMessage(): LitHtml.TemplateResult {\n    if (this.tokens.length === 0) {\n      return LitHtml.html`<div class=\"no-tt-message\">${i18nString(UIStrings.noTrustTokensStored)}</div>`;\n    }\n\n    const gridData: DataGrid.DataGridController.DataGridControllerData = {\n      columns: [\n        {\n          id: 'issuer',\n          title: i18nString(UIStrings.issuer),\n          widthWeighting: 10,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'count',\n          title: i18nString(UIStrings.storedTokenCount),\n          widthWeighting: 5,\n          hideable: false,\n          visible: true,\n          sortable: true,\n        },\n        {\n          id: 'delete-button',\n          title: '',\n          widthWeighting: 1,\n          hideable: false,\n          visible: true,\n          sortable: false,\n        },\n      ],\n      rows: this.buildRowsFromTokens(),\n      initialSort: {\n        columnId: 'issuer',\n        direction: DataGrid.DataGridUtils.SortDirection.ASC,\n      },\n    };\n\n    return LitHtml.html`\n      <${DataGrid.DataGridController.DataGridController.litTagName} .data=${\n        gridData as DataGrid.DataGridController.DataGridControllerData}></${\n        DataGrid.DataGridController.DataGridController.litTagName}>\n    `;\n  }\n\n  private buildRowsFromTokens(): DataGrid.DataGridUtils.Row[] {\n    const tokens = this.tokens.filter(token => token.count > 0);\n    return tokens.map(token => ({\n                        cells: [\n                          {\n                            columnId: 'delete-button',\n                            value: removeTrailingSlash(token.issuerOrigin),\n                            renderer: this.deleteButtonRenderer.bind(this),\n                          },\n                          {columnId: 'issuer', value: removeTrailingSlash(token.issuerOrigin)},\n                          {columnId: 'count', value: token.count},\n                        ],\n                      }));\n  }\n\n  private deleteButtonRenderer(issuer: DataGrid.DataGridUtils.CellValue): LitHtml.TemplateResult {\n    // clang-format off\n    return LitHtml.html`\n      <style>\n        .delete-button {\n          width: 16px;\n          height: 16px;\n          background: transparent;\n          overflow: hidden;\n          border: none;\n          padding: 0;\n          outline: none;\n          cursor: pointer;\n        }\n\n        .delete-button:hover devtools-icon {\n          --icon-color: var(--color-text-primary);\n        }\n\n        .delete-button:focus devtools-icon {\n          --icon-color: var(--color-text-secondary);\n        }\n\n        .button-container {\n          display: block;\n          text-align: center;\n        }\n      </style>\n      <!-- Wrap the button in a container, otherwise we can't center it inside the column. -->\n      <span class=\"button-container\">\n        <button class=\"delete-button\"\n          title=${i18nString(UIStrings.deleteTrustTokens, {PH1: issuer as string})}\n          @click=${(): void => this.deleteClickHandler(issuer as string)}>\n          <${IconButton.Icon.Icon.litTagName} .data=${\n        {iconName: 'trash_bin_icon', color: 'var(--color-text-secondary)', width: '9px', height: '14px'} as\n        IconButton.Icon.IconWithName}>\n          </${IconButton.Icon.Icon.litTagName}>\n        </button>\n      </span>`;\n    // clang-format on\n  }\n}\n\nfunction removeTrailingSlash(s: string): string {\n  return s.replace(/\\/$/, '');\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-trust-tokens-storage-view', TrustTokensView);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-trust-tokens-storage-view': TrustTokensView;\n  }\n}\n"]}