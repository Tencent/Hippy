{"version":3,"file":"ServiceWorkerCacheViews.js","sourceRoot":"","sources":["../../../../../../front_end/panels/application/ServiceWorkerCacheViews.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport * as Network from '../network/network.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Application Panel Sidebar of the Application panel\n  */\n  cache: 'Cache',\n  /**\n  *@description Text to refresh the page\n  */\n  refresh: 'Refresh',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon delete button in the Service Worker Cache Views of the Application panel\n  */\n  deleteSelected: 'Delete Selected',\n  /**\n  *@description Text in Service Worker Cache Views of the Application panel\n  */\n  filterByPath: 'Filter by Path',\n  /**\n  *@description Text in Service Worker Cache Views of the Application panel\n  */\n  selectACacheEntryAboveToPreview: 'Select a cache entry above to preview',\n  /**\n  *@description Text for the name of something\n  */\n  name: 'Name',\n  /**\n  *@description Text in Service Worker Cache Views of the Application panel\n  */\n  timeCached: 'Time Cached',\n  /**\n  * @description Tooltip text that appears when hovering over the vary header column in the Service Worker Cache Views of the Application panel\n  */\n  varyHeaderWarning: '⚠️ Set ignoreVary to true when matching this entry',\n  /**\n  *@description Text used to show that data was retrieved from ServiceWorker Cache\n  */\n  serviceWorkerCache: '`Service Worker` Cache',\n  /**\n  *@description Span text content in Service Worker Cache Views of the Application panel\n  *@example {2} PH1\n  */\n  matchingEntriesS: 'Matching entries: {PH1}',\n  /**\n  *@description Span text content in Indexed DBViews of the Application panel\n  *@example {2} PH1\n  */\n  totalEntriesS: 'Total entries: {PH1}',\n  /**\n  *@description Text for network request headers\n  */\n  headers: 'Headers',\n  /**\n  *@description Text for previewing items\n  */\n  preview: 'Preview',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/application/ServiceWorkerCacheViews.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class ServiceWorkerCacheView extends UI.View.SimpleView {\n  _model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel;\n  _entriesForTest: Protocol.CacheStorage.DataEntry[]|null;\n  _splitWidget: UI.SplitWidget.SplitWidget;\n  _previewPanel: UI.Widget.VBox;\n  _preview: UI.Widget.Widget|null;\n  _cache: SDK.ServiceWorkerCacheModel.Cache;\n  _dataGrid: DataGrid.DataGrid.DataGridImpl<DataGridNode>|null;\n  _refreshThrottler: Common.Throttler.Throttler;\n  _refreshButton: UI.Toolbar.ToolbarButton;\n  _deleteSelectedButton: UI.Toolbar.ToolbarButton;\n  _entryPathFilter: string;\n  _returnCount: number|null;\n  _summaryBarElement: Element|null;\n  _loadingPromise: Promise<{\n    entries: Array<Protocol.CacheStorage.DataEntry>,\n    returnCount: number,\n  }>|null;\n  constructor(model: SDK.ServiceWorkerCacheModel.ServiceWorkerCacheModel, cache: SDK.ServiceWorkerCacheModel.Cache) {\n    super(i18nString(UIStrings.cache));\n    this.registerRequiredCSS('panels/application/serviceWorkerCacheViews.css', {enableLegacyPatching: false});\n\n    this._model = model;\n    this._entriesForTest = null;\n\n    this.element.classList.add('service-worker-cache-data-view');\n    this.element.classList.add('storage-view');\n\n    const editorToolbar = new UI.Toolbar.Toolbar('data-view-toolbar', this.element);\n    this._splitWidget = new UI.SplitWidget.SplitWidget(false, false);\n    this._splitWidget.show(this.element);\n\n    this._previewPanel = new UI.Widget.VBox();\n    const resizer = this._previewPanel.element.createChild('div', 'cache-preview-panel-resizer');\n    this._splitWidget.setMainWidget(this._previewPanel);\n    this._splitWidget.installResizer(resizer);\n\n    this._preview = null;\n\n    this._cache = cache;\n    this._dataGrid = null;\n    this._refreshThrottler = new Common.Throttler.Throttler(300);\n    this._refreshButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.refresh), 'largeicon-refresh');\n    this._refreshButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._refreshButtonClicked, this);\n    editorToolbar.appendToolbarItem(this._refreshButton);\n\n    this._deleteSelectedButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.deleteSelected), 'largeicon-delete');\n    this._deleteSelectedButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      this._deleteButtonClicked(null);\n    });\n    editorToolbar.appendToolbarItem(this._deleteSelectedButton);\n\n    const entryPathFilterBox = new UI.Toolbar.ToolbarInput(i18nString(UIStrings.filterByPath), '', 1);\n    editorToolbar.appendToolbarItem(entryPathFilterBox);\n    const entryPathFilterThrottler = new Common.Throttler.Throttler(300);\n    this._entryPathFilter = '';\n    entryPathFilterBox.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, () => {\n      entryPathFilterThrottler.schedule(() => {\n        this._entryPathFilter = entryPathFilterBox.value();\n        return this._updateData(true);\n      });\n    });\n    this._returnCount = (null as number | null);\n    this._summaryBarElement = (null as Element | null);\n    this._loadingPromise = null;\n\n    this.update(cache);\n  }\n\n  _resetDataGrid(): void {\n    if (this._dataGrid) {\n      this._dataGrid.asWidget().detach();\n    }\n    this._dataGrid = this._createDataGrid();\n    const dataGridWidget = this._dataGrid.asWidget();\n    this._splitWidget.setSidebarWidget(dataGridWidget);\n    dataGridWidget.setMinimumSize(0, 250);\n  }\n\n  wasShown(): void {\n    this._model.addEventListener(\n        SDK.ServiceWorkerCacheModel.Events.CacheStorageContentUpdated, this._cacheContentUpdated, this);\n    this._updateData(true);\n  }\n\n  willHide(): void {\n    this._model.removeEventListener(\n        SDK.ServiceWorkerCacheModel.Events.CacheStorageContentUpdated, this._cacheContentUpdated, this);\n  }\n\n  _showPreview(preview: UI.Widget.Widget|null): void {\n    if (preview && this._preview === preview) {\n      return;\n    }\n    if (this._preview) {\n      this._preview.detach();\n    }\n    if (!preview) {\n      preview = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.selectACacheEntryAboveToPreview));\n    }\n    this._preview = preview;\n    this._preview.show(this._previewPanel.element);\n  }\n\n  _createDataGrid(): DataGrid.DataGrid.DataGridImpl<DataGridNode> {\n    const columns = ([\n      {id: 'number', title: '#', sortable: false, width: '3px'},\n      {id: 'name', title: i18nString(UIStrings.name), weight: 4, sortable: true},\n      {\n        id: 'responseType',\n        title: i18n.i18n.lockedString('Response-Type'),\n        weight: 1,\n        align: DataGrid.DataGrid.Align.Right,\n        sortable: true,\n      },\n      {id: 'contentType', title: i18n.i18n.lockedString('Content-Type'), weight: 1, sortable: true},\n      {\n        id: 'contentLength',\n        title: i18n.i18n.lockedString('Content-Length'),\n        weight: 1,\n        align: DataGrid.DataGrid.Align.Right,\n        sortable: true,\n      },\n      {\n        id: 'responseTime',\n        title: i18nString(UIStrings.timeCached),\n        width: '12em',\n        weight: 1,\n        align: DataGrid.DataGrid.Align.Right,\n        sortable: true,\n      },\n      {id: 'varyHeader', title: i18n.i18n.lockedString('Vary Header'), weight: 1, sortable: true},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    const dataGrid = new DataGrid.DataGrid.DataGridImpl({\n      displayName: i18nString(UIStrings.serviceWorkerCache),\n      columns,\n      deleteCallback: this._deleteButtonClicked.bind(this),\n      refreshCallback: this._updateData.bind(this, true),\n      editCallback: undefined,\n    });\n\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this._sortingChanged, this);\n\n    dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, event => {\n      this._previewCachedResponse(event.data.data);\n    }, this);\n    dataGrid.setStriped(true);\n    return dataGrid;\n  }\n\n  _sortingChanged(): void {\n    if (!this._dataGrid) {\n      return;\n    }\n\n    const dataGrid = this._dataGrid;\n\n    const accending = dataGrid.isSortOrderAscending();\n    const columnId = dataGrid.sortColumnId();\n    let comparator: (arg0: DataGridNode, arg1: DataGridNode) => number;\n    if (columnId === 'name') {\n      comparator = (a: DataGridNode, b: DataGridNode): number => a._name.localeCompare(b._name);\n    } else if (columnId === 'contentType') {\n      comparator = (a: DataGridNode, b: DataGridNode): number => a.data.mimeType.localeCompare(b.data.mimeType);\n    } else if (columnId === 'contentLength') {\n      comparator = (a: DataGridNode, b: DataGridNode): number => a.data.resourceSize - b.data.resourceSize;\n    } else if (columnId === 'responseTime') {\n      comparator = (a: DataGridNode, b: DataGridNode): number => a.data.endTime - b.data.endTime;\n    } else if (columnId === 'responseType') {\n      comparator = (a: DataGridNode, b: DataGridNode): number => a._responseType.localeCompare(b._responseType);\n    } else if (columnId === 'varyHeader') {\n      comparator = (a: DataGridNode, b: DataGridNode): number => a._varyHeader.localeCompare(b._varyHeader);\n    }\n\n    const children = dataGrid.rootNode().children.slice();\n    dataGrid.rootNode().removeChildren();\n    children.sort((a, b) => {\n      const result = comparator((a as DataGridNode), (b as DataGridNode));\n      return accending ? result : -result;\n    });\n    children.forEach(child => dataGrid.rootNode().appendChild(child));\n  }\n\n  async _deleteButtonClicked(node: DataGrid.DataGrid.DataGridNode<DataGridNode>|null): Promise<void> {\n    if (!node) {\n      node = this._dataGrid && this._dataGrid.selectedNode;\n      if (!node) {\n        return;\n      }\n    }\n    await this._model.deleteCacheEntry(this._cache, (node.data.url() as string));\n    node.remove();\n  }\n\n  update(cache: SDK.ServiceWorkerCacheModel.Cache): void {\n    this._cache = cache;\n    this._resetDataGrid();\n    this._updateData(true);\n  }\n\n  _updateSummaryBar(): void {\n    if (!this._summaryBarElement) {\n      this._summaryBarElement = this.element.createChild('div', 'cache-storage-summary-bar');\n    }\n    this._summaryBarElement.removeChildren();\n\n    const span = this._summaryBarElement.createChild('span');\n    if (this._entryPathFilter) {\n      span.textContent = i18nString(UIStrings.matchingEntriesS, {PH1: this._returnCount});\n    } else {\n      span.textContent = i18nString(UIStrings.totalEntriesS, {PH1: this._returnCount});\n    }\n  }\n\n  _updateDataCallback(\n      this: ServiceWorkerCacheView, skipCount: number, entries: Protocol.CacheStorage.DataEntry[],\n      returnCount: number): void {\n    if (!this._dataGrid) {\n      return;\n    }\n    const selected = this._dataGrid.selectedNode && this._dataGrid.selectedNode.data.url();\n    this._refreshButton.setEnabled(true);\n    this._entriesForTest = entries;\n    this._returnCount = returnCount;\n    this._updateSummaryBar();\n\n    const oldEntries = new Map<string, DataGridNode>();\n    const rootNode = this._dataGrid.rootNode();\n    for (const node of rootNode.children) {\n      oldEntries.set(node.data.url, (node as DataGridNode));\n    }\n    rootNode.removeChildren();\n    let selectedNode: DataGridNode|null = null;\n    for (let i = 0; i < entries.length; ++i) {\n      const entry = entries[i];\n      let node = oldEntries.get(entry.requestURL);\n      if (!node || node.data.responseTime !== entry.responseTime) {\n        node = new DataGridNode(i, this._createRequest(entry), entry.responseType);\n        node.selectable = true;\n      } else {\n        node.data.number = i;\n      }\n      rootNode.appendChild(node);\n      if (entry.requestURL === selected) {\n        selectedNode = node;\n      }\n    }\n    if (!selectedNode) {\n      this._showPreview(null);\n    } else {\n      selectedNode.revealAndSelect();\n    }\n    this._updatedForTest();\n  }\n\n  async _updateData(force: boolean): Promise<{\n    entries: Protocol.CacheStorage.DataEntry[],\n    returnCount: number,\n  }|undefined> {\n    if (!force && this._loadingPromise) {\n      return this._loadingPromise;\n    }\n    this._refreshButton.setEnabled(false);\n\n    if (this._loadingPromise) {\n      return this._loadingPromise;\n    }\n\n    this._loadingPromise = new Promise(resolve => {\n      this._model.loadAllCacheData(\n          this._cache, this._entryPathFilter, (entries: Protocol.CacheStorage.DataEntry[], returnCount: number) => {\n            resolve({entries, returnCount});\n          });\n    });\n\n    const {entries, returnCount} = await this._loadingPromise;\n    this._updateDataCallback(0, entries, returnCount);\n    this._loadingPromise = null;\n    return;\n  }\n\n  _refreshButtonClicked(_event: Common.EventTarget.EventTargetEvent): void {\n    this._updateData(true);\n  }\n\n  _cacheContentUpdated(event: Common.EventTarget.EventTargetEvent): void {\n    const nameAndOrigin = event.data;\n    if (this._cache.securityOrigin !== nameAndOrigin.origin || this._cache.cacheName !== nameAndOrigin.cacheName) {\n      return;\n    }\n    this._refreshThrottler.schedule(() => Promise.resolve(this._updateData(true)), true);\n  }\n\n  async _previewCachedResponse(request: SDK.NetworkRequest.NetworkRequest): Promise<void> {\n    let preview = networkRequestToPreview.get(request);\n    if (!preview) {\n      preview = new RequestView(request);\n      networkRequestToPreview.set(request, preview);\n    }\n\n    // It is possible that table selection changes before the preview opens.\n    if (this._dataGrid && this._dataGrid.selectedNode && request === this._dataGrid.selectedNode.data) {\n      this._showPreview(preview);\n    }\n  }\n\n  _createRequest(entry: Protocol.CacheStorage.DataEntry): SDK.NetworkRequest.NetworkRequest {\n    const request =\n        new SDK.NetworkRequest.NetworkRequest('cache-storage-' + entry.requestURL, entry.requestURL, '', '', '', null);\n    request.requestMethod = entry.requestMethod;\n    request.setRequestHeaders(entry.requestHeaders);\n    request.statusCode = entry.responseStatus;\n    request.statusText = entry.responseStatusText;\n    request.protocol = new Common.ParsedURL.ParsedURL(entry.requestURL).scheme;\n    request.responseHeaders = entry.responseHeaders;\n    request.setRequestHeadersText('');\n    request.endTime = entry.responseTime;\n\n    let header = entry.responseHeaders.find(header => header.name.toLowerCase() === 'content-type');\n    const contentType = header ? header.value : SDK.NetworkRequest.MIME_TYPE.PLAIN;\n    request.mimeType = contentType as SDK.NetworkRequest.MIME_TYPE;\n\n    header = entry.responseHeaders.find(header => header.name.toLowerCase() === 'content-length');\n    request.resourceSize = (header && Number(header.value)) || 0;\n\n    let resourceType = Common.ResourceType.ResourceType.fromMimeType(contentType);\n    if (!resourceType) {\n      resourceType =\n          Common.ResourceType.ResourceType.fromURL(entry.requestURL) || Common.ResourceType.resourceTypes.Other;\n    }\n    request.setResourceType(resourceType);\n    request.setContentDataProvider(this._requestContent.bind(this, request));\n    return request;\n  }\n\n  async _requestContent(request: SDK.NetworkRequest.NetworkRequest): Promise<SDK.NetworkRequest.ContentData> {\n    const isText = request.resourceType().isTextType();\n    const contentData: SDK.NetworkRequest.ContentData = {error: null, content: null, encoded: !isText};\n    const response = await this._cache.requestCachedResponse(request.url(), request.requestHeaders());\n    if (response) {\n      contentData.content = isText ? window.atob(response.body) : response.body;\n    }\n    return contentData;\n  }\n\n  _updatedForTest(): void {\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly _previewSymbol = Symbol('preview');\n}\n\nconst networkRequestToPreview = new WeakMap<SDK.NetworkRequest.NetworkRequest, RequestView>();\n\n\nexport class DataGridNode extends DataGrid.DataGrid.DataGridNode<DataGridNode> {\n  _number: number;\n  _name: string;\n  _request: SDK.NetworkRequest.NetworkRequest;\n  _responseType: Protocol.CacheStorage.CachedResponseType;\n  _varyHeader: string;\n\n  constructor(\n      number: number, request: SDK.NetworkRequest.NetworkRequest,\n      responseType: Protocol.CacheStorage.CachedResponseType) {\n    super(request);\n    this._number = number;\n    const parsed = new Common.ParsedURL.ParsedURL(request.url());\n    if (parsed.isValid) {\n      this._name = Platform.StringUtilities.trimURL(request.url(), parsed.domain());\n    } else {\n      this._name = request.url();\n    }\n    this._request = request;\n    this._responseType = responseType;\n    this._varyHeader = request.responseHeaders.find(header => header.name.toLowerCase() === 'vary')?.value || '';\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    let value;\n    let tooltip = this._request.url();\n    if (columnId === 'number') {\n      value = String(this._number);\n    } else if (columnId === 'name') {\n      value = this._name;\n    } else if (columnId === 'responseType') {\n      if (this._responseType === 'opaqueResponse') {\n        value = 'opaque';\n      } else if (this._responseType === 'opaqueRedirect') {\n        value = 'opaqueredirect';\n      } else {\n        value = this._responseType;\n      }\n    } else if (columnId === 'contentType') {\n      value = this._request.mimeType;\n    } else if (columnId === 'contentLength') {\n      value = (this._request.resourceSize | 0).toLocaleString('en-US');\n    } else if (columnId === 'responseTime') {\n      value = new Date(this._request.endTime * 1000).toLocaleString();\n    } else if (columnId === 'varyHeader') {\n      value = this._varyHeader;\n      if (this._varyHeader) {\n        tooltip = i18nString(UIStrings.varyHeaderWarning);\n      }\n    }\n    DataGrid.DataGrid.DataGridImpl.setElementText(cell, value || '', true);\n    UI.Tooltip.Tooltip.install(cell, tooltip);\n    return cell;\n  }\n}\n\nexport class RequestView extends UI.Widget.VBox {\n  _tabbedPane: UI.TabbedPane.TabbedPane;\n  _resourceViewTabSetting: Common.Settings.Setting<string>;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n\n    this._tabbedPane = new UI.TabbedPane.TabbedPane();\n    this._tabbedPane.addEventListener(UI.TabbedPane.Events.TabSelected, this._tabSelected, this);\n    this._resourceViewTabSetting = Common.Settings.Settings.instance().createSetting('cacheStorageViewTab', 'preview');\n\n    this._tabbedPane.appendTab(\n        'headers', i18nString(UIStrings.headers), new Network.RequestHeadersView.RequestHeadersView(request));\n    this._tabbedPane.appendTab(\n        'preview', i18nString(UIStrings.preview), new Network.RequestPreviewView.RequestPreviewView(request));\n    this._tabbedPane.show(this.element);\n  }\n\n  wasShown(): void {\n    super.wasShown();\n    this._selectTab();\n  }\n\n  _selectTab(tabId?: string): void {\n    if (!tabId) {\n      tabId = this._resourceViewTabSetting.get();\n    }\n    if (tabId && !this._tabbedPane.selectTab(tabId)) {\n      this._tabbedPane.selectTab('headers');\n    }\n  }\n\n  _tabSelected(event: Common.EventTarget.EventTargetEvent): void {\n    if (!event.data.isUserGesture) {\n      return;\n    }\n    this._resourceViewTabSetting.set(event.data.tabId);\n  }\n}\n"]}