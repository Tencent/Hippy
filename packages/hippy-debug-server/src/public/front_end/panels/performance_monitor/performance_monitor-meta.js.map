{"version":3,"file":"performance_monitor-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/performance_monitor/performance_monitor-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,kBAAkB,EAAE,qBAAqB;IACzC;;KAEC;IACD,WAAW,EAAE,aAAa;IAC1B;;KAEC;IACD,aAAa,EAAE,gBAAgB;IAC/B;;KAEC;IACD,OAAO,EAAE,SAAS;IAClB;;KAEC;IACD,QAAQ,EAAE,UAAU;IACpB;;KAEC;IACD,OAAO,EAAE,SAAS;IAClB;;MAEE;IACF,sBAAsB,EAAE,0BAA0B;CACnD,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,wDAAwD,EAAE,SAAS,CAAC,CAAC;AAC9G,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,8BAAqE,CAAC;AAE1E,KAAK,UAAU,4BAA4B;IACzC,IAAI,CAAC,8BAA8B,EAAE;QACnC,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,4BAA4B,CAAC,CAAC;QACtF,8BAA8B,GAAG,MAAM,MAAM,CAAC,0BAA0B,CAAC,CAAC;KAC3E;IACD,OAAO,8BAA8B,CAAC;AACxC,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,qBAAqB;IACzB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,kBAAkB,CAAC;IACnD,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,sBAAsB,CAAC;IAC/D,WAAW,6BAA0C;IACrD,KAAK,EAAE,GAAG;IACV,KAAK,CAAC,QAAQ;QACZ,MAAM,kBAAkB,GAAG,MAAM,4BAA4B,EAAE,CAAC;QAChE,OAAO,kBAAkB,CAAC,kBAAkB,CAAC,sBAAsB,CAAC,QAAQ,EAAE,CAAC;IACjF,CAAC;IACD,IAAI,EAAE;QACJ,cAAc,CAAC,SAAS,CAAC,WAAW,CAAC;QACrC,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;QACvC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;QACjC,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC;QAClC,cAAc,CAAC,SAAS,CAAC,OAAO,CAAC;KAClC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as PerformanceMonitor from './performance_monitor.js';\n\nconst UIStrings = {\n  /**\n  *@description Title of the 'Performance monitor' tool in the bottom drawer\n  */\n  performanceMonitor: 'Performance monitor',\n  /**\n *@description A tag of Performance Monitor that can be searched in the command menu\n */\n  performance: 'performance',\n  /**\n *@description A tag of Performance Monitor that can be searched in the command menu\n */\n  systemMonitor: 'system monitor',\n  /**\n *@description A tag of Performance Monitor that can be searched in the command menu\n */\n  monitor: 'monitor',\n  /**\n *@description A tag of Performance Monitor that can be searched in the command menu\n */\n  activity: 'activity',\n  /**\n *@description A tag of Performance Monitor that can be searched in the command menu\n */\n  metrics: 'metrics',\n  /**\n  *@description Command for showing the 'Performance monitor' tool in the bottom drawer\n  */\n  showPerformanceMonitor: 'Show Performance monitor',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('panels/performance_monitor/performance_monitor-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedPerformanceMonitorModule: (typeof PerformanceMonitor|undefined);\n\nasync function loadPerformanceMonitorModule(): Promise<typeof PerformanceMonitor> {\n  if (!loadedPerformanceMonitorModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/performance_monitor');\n    loadedPerformanceMonitorModule = await import('./performance_monitor.js');\n  }\n  return loadedPerformanceMonitorModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'performance.monitor',\n  title: i18nLazyString(UIStrings.performanceMonitor),\n  commandPrompt: i18nLazyString(UIStrings.showPerformanceMonitor),\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  order: 100,\n  async loadView() {\n    const PerformanceMonitor = await loadPerformanceMonitorModule();\n    return PerformanceMonitor.PerformanceMonitor.PerformanceMonitorImpl.instance();\n  },\n  tags: [\n    i18nLazyString(UIStrings.performance),\n    i18nLazyString(UIStrings.systemMonitor),\n    i18nLazyString(UIStrings.monitor),\n    i18nLazyString(UIStrings.activity),\n    i18nLazyString(UIStrings.metrics),\n  ],\n});\n"]}