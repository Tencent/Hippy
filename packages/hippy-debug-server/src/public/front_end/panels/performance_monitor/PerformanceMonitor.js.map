{"version":3,"file":"PerformanceMonitor.js","sourceRoot":"","sources":["../../../../../../front_end/panels/performance_monitor/PerformanceMonitor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as ThemeSupport from '../../ui/legacy/theme_support/theme_support.js';\n\nconst UIStrings = {\n  /**\n  *@description Aria accessible name in Performance Monitor of the Performance monitor tab\n  */\n  graphsDisplayingARealtimeViewOf: 'Graphs displaying a real-time view of performance metrics',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  paused: 'Paused',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  cpuUsage: 'CPU usage',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  jsHeapSize: 'JS heap size',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  domNodes: 'DOM Nodes',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  jsEventListeners: 'JS event listeners',\n  /**\n  *@description Text for documents, a type of resources\n  */\n  documents: 'Documents',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  documentFrames: 'Document Frames',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  layoutsSec: 'Layouts / sec',\n  /**\n  *@description Text in Performance Monitor of the Performance monitor tab\n  */\n  styleRecalcsSec: 'Style recalcs / sec',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/performance_monitor/PerformanceMonitor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet performanceMonitorImplInstance: PerformanceMonitorImpl;\n\n\nexport class PerformanceMonitorImpl extends UI.Widget.HBox implements\n    SDK.TargetManager.SDKModelObserver<SDK.PerformanceMetricsModel.PerformanceMetricsModel> {\n  _metricsBuffer: {timestamp: number, metrics: Map<string, number>}[];\n  _pixelsPerMs: number;\n  _pollIntervalMs: number;\n  _scaleHeight: number;\n  _graphHeight: number;\n  _gridColor: string;\n  _controlPane: ControlPane;\n  _canvas: HTMLCanvasElement;\n  _animationId!: number;\n  _width!: number;\n  _height!: number;\n  _model?: SDK.PerformanceMetricsModel.PerformanceMetricsModel|null;\n  _startTimestamp?: number;\n  _pollTimer?: number;\n\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/performance_monitor/performanceMonitor.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('perfmon-pane');\n    this._metricsBuffer = [];\n    /** @const */\n    this._pixelsPerMs = 10 / 1000;\n    /** @const */\n    this._pollIntervalMs = 500;\n    /** @const */\n    this._scaleHeight = 16;\n    /** @const */\n    this._graphHeight = 90;\n    this._gridColor = ThemeSupport.ThemeSupport.instance().patchColorText(\n        'rgba(0, 0, 0, 0.08)', ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n    this._controlPane = new ControlPane(this.contentElement);\n    const chartContainer = this.contentElement.createChild('div', 'perfmon-chart-container');\n    this._canvas = chartContainer.createChild('canvas') as HTMLCanvasElement;\n    this._canvas.tabIndex = -1;\n    UI.ARIAUtils.setAccessibleName(this._canvas, i18nString(UIStrings.graphsDisplayingARealtimeViewOf));\n    this.contentElement.createChild('div', 'perfmon-chart-suspend-overlay fill').createChild('div').textContent =\n        i18nString(UIStrings.paused);\n    this._controlPane.addEventListener(Events.MetricChanged, this._recalcChartHeight, this);\n    SDK.TargetManager.TargetManager.instance().observeModels(SDK.PerformanceMetricsModel.PerformanceMetricsModel, this);\n  }\n\n  static instance(opts = {forceNew: null}): PerformanceMonitorImpl {\n    const {forceNew} = opts;\n    if (!performanceMonitorImplInstance || forceNew) {\n      performanceMonitorImplInstance = new PerformanceMonitorImpl();\n    }\n\n    return performanceMonitorImplInstance;\n  }\n\n  wasShown(): void {\n    if (!this._model) {\n      return;\n    }\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this._suspendStateChanged, this);\n    this._model.enable();\n    this._suspendStateChanged();\n  }\n\n  willHide(): void {\n    if (!this._model) {\n      return;\n    }\n    SDK.TargetManager.TargetManager.instance().removeEventListener(\n        SDK.TargetManager.Events.SuspendStateChanged, this._suspendStateChanged, this);\n    this._stopPolling();\n    this._model.disable();\n  }\n\n  modelAdded(model: SDK.PerformanceMetricsModel.PerformanceMetricsModel): void {\n    if (this._model) {\n      return;\n    }\n    this._model = model;\n    if (this.isShowing()) {\n      this.wasShown();\n    }\n  }\n\n  modelRemoved(model: SDK.PerformanceMetricsModel.PerformanceMetricsModel): void {\n    if (this._model !== model) {\n      return;\n    }\n    if (this.isShowing()) {\n      this.willHide();\n    }\n    this._model = null;\n  }\n\n  _suspendStateChanged(): void {\n    const suspended = SDK.TargetManager.TargetManager.instance().allTargetsSuspended();\n    if (suspended) {\n      this._stopPolling();\n    } else {\n      this._startPolling();\n    }\n    this.contentElement.classList.toggle('suspended', suspended);\n  }\n\n  _startPolling(): void {\n    this._startTimestamp = 0;\n    this._pollTimer = window.setInterval(() => this._poll(), this._pollIntervalMs);\n    this.onResize();\n    const animate = (): void => {\n      this._draw();\n      this._animationId = this.contentElement.window().requestAnimationFrame(() => {\n        animate();\n      });\n    };\n    animate();\n  }\n\n  _stopPolling(): void {\n    window.clearInterval(this._pollTimer);\n    this.contentElement.window().cancelAnimationFrame(this._animationId);\n    this._metricsBuffer = [];\n  }\n\n  async _poll(): Promise<void> {\n    if (!this._model) {\n      return;\n    }\n    const data = await this._model.requestMetrics();\n    const timestamp = data.timestamp;\n    const metrics = data.metrics;\n    this._metricsBuffer.push({timestamp, metrics: metrics});\n    const millisPerWidth = this._width / this._pixelsPerMs;\n    // Multiply by 2 as the pollInterval has some jitter and to have some extra samples if window is resized.\n    const maxCount = Math.ceil(millisPerWidth / this._pollIntervalMs * 2);\n    if (this._metricsBuffer.length > maxCount * 2)  // Multiply by 2 to have a hysteresis.\n    {\n      this._metricsBuffer.splice(0, this._metricsBuffer.length - maxCount);\n    }\n    this._controlPane.updateMetrics(metrics);\n  }\n\n  _draw(): void {\n    const ctx = this._canvas.getContext('2d') as CanvasRenderingContext2D;\n    ctx.save();\n    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);\n    ctx.clearRect(0, 0, this._width, this._height);\n    ctx.save();\n    ctx.translate(0, this._scaleHeight);  // Reserve space for the scale bar.\n    for (const chartInfo of this._controlPane.charts()) {\n      if (!this._controlPane.isActive(chartInfo.metrics[0].name)) {\n        continue;\n      }\n      this._drawChart(ctx, chartInfo, this._graphHeight);\n      ctx.translate(0, this._graphHeight);\n    }\n    ctx.restore();\n    this._drawHorizontalGrid(ctx);\n    ctx.restore();\n  }\n\n  _drawHorizontalGrid(ctx: CanvasRenderingContext2D): void {\n    const labelDistanceSeconds = 10;\n    const lightGray = ThemeSupport.ThemeSupport.instance().patchColorText(\n        'rgba(0, 0, 0, 0.02)', ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n    ctx.font = '10px ' + Host.Platform.fontFamily();\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().patchColorText(\n        'rgba(0, 0, 0, 0.55)', ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n    const currentTime = Date.now() / 1000;\n    for (let sec = Math.ceil(currentTime);; --sec) {\n      const x = this._width - ((currentTime - sec) * 1000 - this._pollIntervalMs) * this._pixelsPerMs;\n      if (x < -50) {\n        break;\n      }\n      ctx.beginPath();\n      ctx.moveTo(x, 0);\n      ctx.lineTo(x, this._height);\n      if (sec >= 0 && sec % labelDistanceSeconds === 0) {\n        ctx.fillText(new Date(sec * 1000).toLocaleTimeString(), x + 4, 12);\n      }\n      ctx.strokeStyle = sec % labelDistanceSeconds ? lightGray : this._gridColor;\n      ctx.stroke();\n    }\n  }\n\n  _drawChart(ctx: CanvasRenderingContext2D, chartInfo: ChartInfo, height: number): void {\n    ctx.save();\n    ctx.rect(0, 0, this._width, height);\n    ctx.clip();\n    const bottomPadding = 8;\n    const extraSpace = 1.05;\n    const max = this._calcMax(chartInfo) * extraSpace;\n    const stackedChartBaseLandscape = chartInfo.stacked ? new Map() : null;\n    const paths = [];\n    for (let i = chartInfo.metrics.length - 1; i >= 0; --i) {\n      const metricInfo = chartInfo.metrics[i];\n      paths.push({\n        path: this._buildMetricPath(\n            chartInfo, metricInfo, height - bottomPadding, max, i ? stackedChartBaseLandscape : null),\n        color: metricInfo.color,\n      });\n    }\n    const backgroundColor = Common.Color.Color.parse(\n        ThemeSupport.ThemeSupport.instance().patchColorText('white', ThemeSupport.ThemeSupport.ColorUsage.Background));\n    if (backgroundColor) {\n      for (const path of paths.reverse()) {\n        const color = path.color;\n        ctx.save();\n        const parsedColor = Common.Color.Color.parse(color);\n        if (!parsedColor) {\n          continue;\n        }\n        ctx.fillStyle = backgroundColor.blendWith(parsedColor.setAlpha(0.2)).asString(null) || '';\n        ctx.fill(path.path);\n        ctx.strokeStyle = color;\n        ctx.lineWidth = 0.5;\n        ctx.stroke(path.path);\n        ctx.restore();\n      }\n    }\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().patchColorText(\n        'rgba(0, 0, 0, 0.55)', ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n    ctx.font = `10px  ${Host.Platform.fontFamily()}`;\n    ctx.fillText(chartInfo.title, 8, 10);\n    this._drawVerticalGrid(ctx, height - bottomPadding, max, chartInfo);\n    ctx.restore();\n  }\n\n  _calcMax(chartInfo: ChartInfo): number {\n    if (chartInfo.max) {\n      return chartInfo.max;\n    }\n    const width = this._width;\n    const startTime = performance.now() - this._pollIntervalMs - width / this._pixelsPerMs;\n    let max: number = -Infinity;\n    for (const metricInfo of chartInfo.metrics) {\n      for (let i = this._metricsBuffer.length - 1; i >= 0; --i) {\n        const metrics = this._metricsBuffer[i];\n        const value = metrics.metrics.get(metricInfo.name);\n        if (value !== undefined) {\n          max = Math.max(max, value);\n        }\n        if (metrics.timestamp < startTime) {\n          break;\n        }\n      }\n    }\n    if (!this._metricsBuffer.length) {\n      return 10;\n    }\n\n    const base10 = Math.pow(10, Math.floor(Math.log10(max)));\n    max = Math.ceil(max / base10 / 2) * base10 * 2;\n\n    const alpha = 0.2;\n    chartInfo.currentMax = max * alpha + (chartInfo.currentMax || max) * (1 - alpha);\n    return chartInfo.currentMax;\n  }\n\n  _drawVerticalGrid(ctx: CanvasRenderingContext2D, height: number, max: number, info: ChartInfo): void {\n    let base = Math.pow(10, Math.floor(Math.log10(max)));\n    const firstDigit = Math.floor(max / base);\n    if (firstDigit !== 1 && firstDigit % 2 === 1) {\n      base *= 2;\n    }\n    let scaleValue = Math.floor(max / base) * base;\n\n    const span = max;\n    const topPadding = 18;\n    const visibleHeight = height - topPadding;\n    ctx.fillStyle = ThemeSupport.ThemeSupport.instance().patchColorText(\n        'rgba(0, 0, 0, 0.55)', ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n    ctx.strokeStyle = this._gridColor;\n    ctx.beginPath();\n    for (let i = 0; i < 2; ++i) {\n      const y = calcY(scaleValue);\n      const labelText = MetricIndicator._formatNumber(scaleValue, info);\n      ctx.moveTo(0, y);\n      ctx.lineTo(4, y);\n      ctx.moveTo(ctx.measureText(labelText).width + 12, y);\n      ctx.lineTo(this._width, y);\n      ctx.fillText(labelText, 8, calcY(scaleValue) + 3);\n      scaleValue /= 2;\n    }\n    ctx.stroke();\n    ctx.beginPath();\n    ctx.moveTo(0, height + 0.5);\n    ctx.lineTo(this._width, height + 0.5);\n    ctx.strokeStyle = ThemeSupport.ThemeSupport.instance().patchColorText(\n        'rgba(0, 0, 0, 0.2)', ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n    ctx.stroke();\n    function calcY(value: number): number {\n      return Math.round(height - visibleHeight * value / span) + 0.5;\n    }\n  }\n\n  _buildMetricPath(\n      chartInfo: ChartInfo, metricInfo: MetricInfo, height: number, scaleMax: number,\n      stackedChartBaseLandscape: Map<number, number>|null): Path2D {\n    const path = new Path2D();\n    const topPadding = 18;\n    const visibleHeight = height - topPadding;\n    if (visibleHeight < 1) {\n      return path;\n    }\n    const span = scaleMax;\n    const metricName = metricInfo.name;\n    const pixelsPerMs = this._pixelsPerMs;\n    const startTime = performance.now() - this._pollIntervalMs - this._width / pixelsPerMs;\n    const smooth = chartInfo.smooth;\n\n    let x = 0;\n    let lastY = 0;\n    let lastX = 0;\n    if (this._metricsBuffer.length) {\n      x = (this._metricsBuffer[0].timestamp - startTime) * pixelsPerMs;\n      path.moveTo(x, calcY(0));\n      path.lineTo(this._width + 5, calcY(0));\n      lastY = calcY(\n          (this._metricsBuffer[this._metricsBuffer.length - 1] as {\n            metrics: Map<string, number>,\n          }).metrics.get(metricName) ||\n          0);\n      lastX = this._width + 5;\n      path.lineTo(lastX, lastY);\n    }\n    for (let i = this._metricsBuffer.length - 1; i >= 0; --i) {\n      const metrics = this._metricsBuffer[i];\n      const timestamp = metrics.timestamp;\n      let value: number = metrics.metrics.get(metricName) || 0;\n      if (stackedChartBaseLandscape) {\n        value += stackedChartBaseLandscape.get(timestamp) || 0;\n        value = Platform.NumberUtilities.clamp(value, 0, 1);\n        stackedChartBaseLandscape.set(timestamp, value);\n      }\n      const y = calcY(value);\n      x = (timestamp - startTime) * pixelsPerMs;\n      if (smooth) {\n        const midX = (lastX + x) / 2;\n        path.bezierCurveTo(midX, lastY, midX, y, x, y);\n      } else {\n        path.lineTo(x, lastY);\n        path.lineTo(x, y);\n      }\n      lastX = x;\n      lastY = y;\n      if (timestamp < startTime) {\n        break;\n      }\n    }\n    return path;\n\n    function calcY(value: number): number {\n      return Math.round(height - visibleHeight * value / span) + 0.5;\n    }\n  }\n\n  onResize(): void {\n    super.onResize();\n    this._width = this._canvas.offsetWidth;\n    this._canvas.width = Math.round(this._width * window.devicePixelRatio);\n    this._recalcChartHeight();\n  }\n\n  _recalcChartHeight(): void {\n    let height = this._scaleHeight;\n    for (const chartInfo of this._controlPane.charts()) {\n      if (this._controlPane.isActive(chartInfo.metrics[0].name)) {\n        height += this._graphHeight;\n      }\n    }\n    this._height = Math.ceil(height * window.devicePixelRatio);\n    this._canvas.height = this._height;\n    this._canvas.style.height = `${this._height / window.devicePixelRatio}px`;\n  }\n}\n\nexport const enum Format {\n  Percent = 'Percent',\n  Bytes = 'Bytes',\n}\n\nexport class ControlPane extends Common.ObjectWrapper.ObjectWrapper {\n  element: Element;\n  _enabledChartsSetting: Common.Settings.Setting<string[]>;\n  _enabledCharts: Set<string>;\n  _chartsInfo: ChartInfo[];\n  _indicators: Map<string, MetricIndicator>;\n\n  constructor(parent: Element) {\n    super();\n    this.element = parent.createChild('div', 'perfmon-control-pane');\n\n    this._enabledChartsSetting = Common.Settings.Settings.instance().createSetting(\n        'perfmonActiveIndicators2', ['TaskDuration', 'JSHeapTotalSize', 'Nodes']);\n    this._enabledCharts = new Set(this._enabledChartsSetting.get());\n\n    const defaults = {\n      color: undefined,\n      format: undefined,\n      currentMax: undefined,\n      max: undefined,\n      smooth: undefined,\n      stacked: undefined,\n    };\n\n    this._chartsInfo = [\n      {\n        ...defaults,\n        title: i18nString(UIStrings.cpuUsage),\n        metrics: [\n          {name: 'TaskDuration', color: '#999'},\n          {name: 'ScriptDuration', color: 'orange'},\n          {name: 'LayoutDuration', color: 'blueviolet'},\n          {name: 'RecalcStyleDuration', color: 'violet'},\n        ],\n        format: Format.Percent,\n        smooth: true,\n        stacked: true,\n        color: 'red',\n        max: 1,\n        currentMax: undefined,\n      },\n      {\n        ...defaults,\n        title: i18nString(UIStrings.jsHeapSize),\n        metrics: [{name: 'JSHeapTotalSize', color: '#99f'}, {name: 'JSHeapUsedSize', color: 'blue'}],\n        format: Format.Bytes,\n        color: 'blue',\n      },\n      {...defaults, title: i18nString(UIStrings.domNodes), metrics: [{name: 'Nodes', color: 'green'}]},\n      {\n        ...defaults,\n        title: i18nString(UIStrings.jsEventListeners),\n        metrics: [{name: 'JSEventListeners', color: 'yellowgreen'}],\n      },\n      {...defaults, title: i18nString(UIStrings.documents), metrics: [{name: 'Documents', color: 'darkblue'}]},\n      {...defaults, title: i18nString(UIStrings.documentFrames), metrics: [{name: 'Frames', color: 'darkcyan'}]},\n      {...defaults, title: i18nString(UIStrings.layoutsSec), metrics: [{name: 'LayoutCount', color: 'hotpink'}]},\n      {\n        ...defaults,\n        title: i18nString(UIStrings.styleRecalcsSec),\n        metrics: [{name: 'RecalcStyleCount', color: 'deeppink'}],\n      },\n    ];\n    for (const info of this._chartsInfo) {\n      if (info.color) {\n        info.color = ThemeSupport.ThemeSupport.instance().patchColorText(\n            info.color, ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n      }\n      for (const metric of info.metrics) {\n        metric.color = ThemeSupport.ThemeSupport.instance().patchColorText(\n            metric.color, ThemeSupport.ThemeSupport.ColorUsage.Foreground);\n      }\n    }\n\n    this._indicators = new Map();\n    for (const chartInfo of this._chartsInfo) {\n      const chartName = chartInfo.metrics[0].name;\n      const active = this._enabledCharts.has(chartName);\n      const indicator = new MetricIndicator(this.element, chartInfo, active, this._onToggle.bind(this, chartName));\n      this._indicators.set(chartName, indicator);\n    }\n  }\n\n  _onToggle(chartName: string, active: boolean): void {\n    if (active) {\n      this._enabledCharts.add(chartName);\n    } else {\n      this._enabledCharts.delete(chartName);\n    }\n    this._enabledChartsSetting.set(Array.from(this._enabledCharts));\n    this.dispatchEventToListeners(Events.MetricChanged);\n  }\n\n  charts(): ChartInfo[] {\n    return this._chartsInfo;\n  }\n\n  isActive(metricName: string): boolean {\n    return this._enabledCharts.has(metricName);\n  }\n\n  updateMetrics(metrics: Map<string, number>): void {\n    for (const name of this._indicators.keys()) {\n      const metric = metrics.get(name);\n      if (metric !== undefined) {\n        const indicator = this._indicators.get(name);\n        if (indicator) {\n          indicator.setValue(metric);\n        }\n      }\n    }\n  }\n}\n\nexport const enum Events {\n  MetricChanged = 'MetricChanged',\n}\n\nlet numberFormatter: Intl.NumberFormat;\nlet percentFormatter: Intl.NumberFormat;\n\nexport class MetricIndicator {\n  _info: ChartInfo;\n  _active: boolean;\n  _onToggle: (arg0: boolean) => void;\n  element: HTMLElement;\n  _swatchElement: UI.Icon.Icon;\n  _valueElement: HTMLElement;\n\n  constructor(parent: Element, info: ChartInfo, active: boolean, onToggle: (arg0: boolean) => void) {\n    const color = info.color || info.metrics[0].color;\n    this._info = info;\n    this._active = active;\n    this._onToggle = onToggle;\n    this.element = parent.createChild('div', 'perfmon-indicator') as HTMLElement;\n    this._swatchElement = UI.Icon.Icon.create('smallicon-checkmark-square', 'perfmon-indicator-swatch');\n    this._swatchElement.style.backgroundColor = color;\n    this.element.appendChild(this._swatchElement);\n    this.element.createChild('div', 'perfmon-indicator-title').textContent = info.title;\n    this._valueElement = this.element.createChild('div', 'perfmon-indicator-value') as HTMLElement;\n    this._valueElement.style.color = color;\n    this.element.addEventListener('click', () => this._toggleIndicator());\n    this.element.addEventListener('keypress', event => this._handleKeypress(event));\n    this.element.classList.toggle('active', active);\n    UI.ARIAUtils.markAsCheckbox(this.element);\n    UI.ARIAUtils.setChecked(this.element, this._active);\n    this.element.tabIndex = 0;\n  }\n\n  static _formatNumber(value: number, info: ChartInfo): string {\n    if (!numberFormatter) {\n      numberFormatter = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1});\n      percentFormatter = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1, style: 'percent'});\n    }\n    switch (info.format) {\n      case Format.Percent:\n        return percentFormatter.format(value);\n      case Format.Bytes:\n        return Platform.NumberUtilities.bytesToString(value);\n      default:\n        return numberFormatter.format(value);\n    }\n  }\n\n  setValue(value: number): void {\n    this._valueElement.textContent = MetricIndicator._formatNumber(value, this._info);\n  }\n\n  _toggleIndicator(): void {\n    this._active = !this._active;\n    this.element.classList.toggle('active', this._active);\n    UI.ARIAUtils.setChecked(this.element, this._active);\n    this._onToggle(this._active);\n  }\n\n  _handleKeypress(event: Event): void {\n    const keyboardEvent = event as KeyboardEvent;\n    if (keyboardEvent.key === ' ' || keyboardEvent.key === 'Enter') {\n      this._toggleIndicator();\n    }\n  }\n}\n\nexport const format = new Intl.NumberFormat('en-US', {maximumFractionDigits: 1});\nexport interface MetricInfo {\n  name: string;\n  color: string;\n}\nexport interface ChartInfo {\n  title: string;\n  metrics: {name: string, color: string}[];\n  max?: number;\n  currentMax?: number;\n  format?: Format;\n  smooth?: boolean;\n  color?: string;\n  stacked?: boolean;\n}\n"]}