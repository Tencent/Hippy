{"version":3,"file":"issues-meta.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/issues-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,+CAA+C,CAAC;AAC/E,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,MAAM,EAAE,QAAQ;IAChB;;MAEE;IACF,UAAU,EAAE,aAAa;IACzB;;MAEE;IACF,aAAa,EAAE,gBAAgB;IAC/B;;MAEE;IACF,iBAAiB,EAAE,qBAAqB;CACzC,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,8BAA8B,EAAE,SAAS,CAAC,CAAC;AACpF,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AACxF,IAAI,kBAA6C,CAAC;AAElD,KAAK,UAAU,gBAAgB;IAC7B,IAAI,CAAC,kBAAkB,EAAE;QACvB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,eAAe,CAAC,CAAC;QACzE,kBAAkB,GAAG,MAAM,MAAM,CAAC,aAAa,CAAC,CAAC;KAClD;IACD,OAAO,kBAAkB,CAAC;AAC5B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,aAAa;IACjB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,MAAM,CAAC;IACvC,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC;IACnD,KAAK,EAAE,GAAG;IACV,WAAW,6BAA0C;IACrD,KAAK,CAAC,QAAQ;QACZ,MAAM,MAAM,GAAG,MAAM,gBAAgB,EAAE,CAAC;QACxC,OAAO,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;IACjD,CAAC;CACF,CAAC,CAAC;AAEH,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,qBAAqB;IACzB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,aAAa,CAAC;IAC9C,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,iBAAiB,CAAC;IAC1D,KAAK,EAAE,GAAG;IACV,WAAW,6BAA0C;IACrD,KAAK,CAAC,QAAQ;QACZ,MAAM,MAAM,GAAG,MAAM,gBAAgB,EAAE,CAAC;QACxC,OAAO,MAAM,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;IAC/D,CAAC;IACD,UAAU,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,mBAAmB;CAC5D,CAAC,CAAC;AAEH,MAAM,CAAC,QAAQ,CAAC,gBAAgB,CAAC;IAC/B,YAAY;QACV,OAAO;YACL,aAAa,CAAC,KAAK,CAAC,KAAK;SAC1B,CAAC;IACJ,CAAC;IACD,WAAW,EAAE,MAAM,CAAC,QAAQ,CAAC,mBAAmB,CAAC,WAAW;IAC5D,KAAK,CAAC,YAAY;QAChB,MAAM,MAAM,GAAG,MAAM,gBAAgB,EAAE,CAAC;QACxC,OAAO,MAAM,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;IACvD,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as Root from '../../core/root/root.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Issues from './issues.js';\n\nimport * as i18n from '../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Label for the issues pane\n  */\n  issues: 'Issues',\n  /**\n  *@description Command for showing the 'Issues' tool\n  */\n  showIssues: 'Show Issues',\n  /**\n  *@description Title for a tab drawer listing CSP Violations\n  */\n  cspViolations: 'CSP Violations',\n  /**\n  *@description Command for showing the 'CSP Violations' tool\n  */\n  showCspViolations: 'Show CSP Violations',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/issues-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\nlet loadedIssuesModule: (typeof Issues|undefined);\n\nasync function loadIssuesModule(): Promise<typeof Issues> {\n  if (!loadedIssuesModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('panels/issues');\n    loadedIssuesModule = await import('./issues.js');\n  }\n  return loadedIssuesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'issues-pane',\n  title: i18nLazyString(UIStrings.issues),\n  commandPrompt: i18nLazyString(UIStrings.showIssues),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Issues = await loadIssuesModule();\n    return Issues.IssuesPane.IssuesPane.instance();\n  },\n});\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'csp-violations-pane',\n  title: i18nLazyString(UIStrings.cspViolations),\n  commandPrompt: i18nLazyString(UIStrings.showCspViolations),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const Issues = await loadIssuesModule();\n    return Issues.CSPViolationsView.CSPViolationsView.instance();\n  },\n  experiment: Root.Runtime.ExperimentName.CSP_VIOLATIONS_VIEW,\n});\n\nCommon.Revealer.registerRevealer({\n  contextTypes() {\n    return [\n      IssuesManager.Issue.Issue,\n    ];\n  },\n  destination: Common.Revealer.RevealerDestination.ISSUES_VIEW,\n  async loadRevealer() {\n    const Issues = await loadIssuesModule();\n    return Issues.IssueRevealer.IssueRevealer.instance();\n  },\n});\n"]}