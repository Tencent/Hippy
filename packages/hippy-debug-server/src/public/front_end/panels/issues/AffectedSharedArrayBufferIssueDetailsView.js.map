{"version":3,"file":"AffectedSharedArrayBufferIssueDetailsView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as Platform from '../../core/platform/platform.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport {AffectedResourcesView} from './AffectedResourcesView.js';\nimport type {AggregatedIssue} from './IssueAggregator.js';\nimport type {IssueView} from './IssueView.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for number of affected resources indication in issue view\n  */\n  nViolations: '{n, plural, =1 {# violation} other {# violations}}',\n  /**\n  *@description Value for the status column in SharedArrayBuffer issues\n  */\n  warning: 'warning',\n  /**\n  *@description The kind of resolution for a mixed content issue\n  */\n  blocked: 'blocked',\n  /**\n  *@description Value for the 'Trigger' column in the SAB affected resources list\n  */\n  instantiation: 'Instantiation',\n  /**\n  *@description Tooltip for the 'Trigger' column in the SAB affected resources list\n  */\n  aSharedarraybufferWas: 'A `SharedArrayBuffer` was instantiated in a context that is not cross-origin isolated',\n  /**\n  *@description Value for the 'Trigger' column in the SAB affected resources list\n  */\n  transfer: 'Transfer',\n  /**\n  *@description Tooltip for the 'Trigger' column in the SAB affected resources list\n  */\n  sharedarraybufferWasTransferedTo: '`SharedArrayBuffer` was transfered to a context that is not cross-origin isolated',\n  /**\n  *@description Header for the source location column\n  */\n  sourceLocation: 'Source Location',\n  /**\n  *@description Title for the 'Trigger' column in the SAB affected resources list\n  */\n  trigger: 'Trigger',\n  /**\n  *@description Title for the status column in the SAB affected resources list\n  */\n  status: 'Status',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class AffectedSharedArrayBufferIssueDetailsView extends AffectedResourcesView {\n  private issue: AggregatedIssue;\n\n  constructor(parentView: IssueView, issue: AggregatedIssue) {\n    super(parentView);\n    this.issue = issue;\n  }\n\n  protected getResourceNameWithCount(count: number): Platform.UIString.LocalizedString {\n    return i18nString(UIStrings.nViolations, {n: count});\n  }\n\n  private appendStatus(element: HTMLElement, isWarning: boolean): void {\n    const status = document.createElement('td');\n    if (isWarning) {\n      status.classList.add('affected-resource-report-only-status');\n      status.textContent = i18nString(UIStrings.warning);\n    } else {\n      status.classList.add('affected-resource-blocked-status');\n      status.textContent = i18nString(UIStrings.blocked);\n    }\n    element.appendChild(status);\n  }\n\n  private appendType(element: HTMLElement, type: Protocol.Audits.SharedArrayBufferIssueType): void {\n    const status = document.createElement('td');\n    switch (type) {\n      case Protocol.Audits.SharedArrayBufferIssueType.CreationIssue:\n        status.textContent = i18nString(UIStrings.instantiation);\n        UI.Tooltip.Tooltip.install(status, i18nString(UIStrings.aSharedarraybufferWas));\n        break;\n      case Protocol.Audits.SharedArrayBufferIssueType.TransferIssue:\n        status.textContent = i18nString(UIStrings.transfer);\n        UI.Tooltip.Tooltip.install(status, i18nString(UIStrings.sharedarraybufferWasTransferedTo));\n        break;\n    }\n    element.appendChild(status);\n  }\n\n  private appendDetails(sabIssues: Iterable<IssuesManager.SharedArrayBufferIssue.SharedArrayBufferIssue>): void {\n    const header = document.createElement('tr');\n    this.appendColumnTitle(header, i18nString(UIStrings.sourceLocation));\n    this.appendColumnTitle(header, i18nString(UIStrings.trigger));\n    this.appendColumnTitle(header, i18nString(UIStrings.status));\n\n    this.affectedResources.appendChild(header);\n    let count = 0;\n    for (const sabIssue of sabIssues) {\n      count++;\n      this.appendDetail(sabIssue);\n    }\n    this.updateAffectedResourceCount(count);\n  }\n\n  private appendDetail(sabIssue: IssuesManager.SharedArrayBufferIssue.SharedArrayBufferIssue): void {\n    const element = document.createElement('tr');\n    element.classList.add('affected-resource-directive');\n\n    const sabIssueDetails = sabIssue.details();\n    const location = IssuesManager.Issue.toZeroBasedLocation(sabIssueDetails.sourceCodeLocation);\n    this.appendSourceLocation(element, location, sabIssue.model()?.getTargetIfNotDisposed());\n    this.appendType(element, sabIssueDetails.type);\n    this.appendStatus(element, sabIssueDetails.isWarning);\n\n    this.affectedResources.appendChild(element);\n  }\n\n  update(): void {\n    this.clear();\n    this.appendDetails(this.issue.getSharedArrayBufferIssues());\n  }\n}\n"]}