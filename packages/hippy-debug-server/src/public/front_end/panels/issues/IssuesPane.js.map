{"version":3,"file":"IssuesPane.js","sourceRoot":"","sources":["../../../../../../front_end/panels/issues/IssuesPane.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,aAAa,MAAM,+CAA+C,CAAC;AAC/E,OAAO,KAAK,YAAY,MAAM,oDAAoD,CAAC;AACnF,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAGhD,OAAO,EAAkC,eAAe,EAAC,MAAM,sBAAsB,CAAC;AACtF,OAAO,EAAC,SAAS,EAAC,MAAM,gBAAgB,CAAC;AAEzC,MAAM,SAAS,GAAG;IAChB;;OAEG;IACH,yBAAyB,EAAE,8BAA8B;IACzD;;OAEG;IACH,YAAY,EAAE,eAAe;IAC7B;;OAEG;IACH,cAAc,EAAE,iBAAiB;IACjC;;OAEG;IACH,QAAQ,EAAE,WAAW;IACrB;;OAEG;IACH,qBAAqB,EAAE,yBAAyB;IAChD;;OAEG;IACH,kBAAkB,EAAE,sBAAsB;IAC1C;;OAEG;IACH,KAAK,EAAE,OAAO;IACd;;;;OAIG;IACH,eAAe,EAAE,mBAAmB;IACpC;;;OAGG;IACH,IAAI,EAAE,+BAA+B;IACrC;;OAEG;IACH,yBAAyB,EAAE,oDAAoD;IAC/E;;OAEG;IACH,eAAe,EAAE,mBAAmB;IACpC;;OAEG;IACH,2BAA2B,EAAE,mDAAmD;IAChF;;OAEG;IACH,6BAA6B,EAAE,mCAAmC;IAClE;;OAEG;IACH,0BAA0B,EAAE,gDAAgD;IAC5E;;OAEG;IACH,qBAAqB,EAAE,2BAA2B;IAClD;;;OAGG;IACH,oBAAoB,EAAE,6BAA6B;IACnD;;;;OAIG;IACH,UAAU,EAAE,aAAa;CAC1B,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,6BAA6B,EAAE,SAAS,CAAC,CAAC;AACnF,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAEtE,MAAM,iBAAkB,SAAQ,EAAE,CAAC,WAAW,CAAC,WAAW;IAChD,QAAQ,CAAoC;IAC5C,MAAM,CAAoB;IAElC,YAAY,QAA2C;QACrD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QAEjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IACvD,CAAC;IAED,eAAe;QACb,QAAQ,IAAI,CAAC,QAAQ,EAAE;YACrB,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,yBAAyB;gBAC9D,OAAO,UAAU,CAAC,SAAS,CAAC,yBAAyB,CAAC,CAAC;YACzD,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,YAAY;gBACjD,OAAO,UAAU,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;YAC5C,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,cAAc;gBACnD,OAAO,UAAU,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YAC9C,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,OAAO;gBAC5C,OAAO,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;YACxC,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,qBAAqB;gBAC1D,OAAO,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YACrD,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,kBAAkB;gBACvD,OAAO,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YAClD,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,eAAe;gBACpD,OAAO,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC;YAC/C,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI;gBACzC,OAAO,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YACpC,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,oBAAoB;gBACzD,OAAO,UAAU,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;YACpD,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,UAAU;gBAC/C,OAAO,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAC1C,KAAK,aAAa,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK;gBAC1C,OAAO,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACtC;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,YAAY;QAClB,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE/B,MAAM,KAAK,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC7B,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC3C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAE1B,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;CACF;AAED,MAAM,UAAU,+BAA+B;IAC7C,OAAO,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,aAAa,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;AAC3F,CAAC;AAED,IAAI,kBAA8B,CAAC;AAEnC,MAAM,OAAO,UAAW,SAAQ,EAAE,CAAC,MAAM,CAAC,IAAI;IACpC,aAAa,CAA4D;IACzE,UAAU,CAAyB;IACnC,sBAAsB,CAAyC;IAC/D,UAAU,CAAqC;IAC/C,kBAAkB,CAAiB;IACnC,aAAa,CAA4C;IACzD,UAAU,CAAkB;IAC5B,sBAAsB,GAAkB,OAAO,CAAC,OAAO,EAAE,CAAC;IAElE;QACE,KAAK,CAAC,IAAI,CAAC,CAAC;QACZ,IAAI,CAAC,mBAAmB,CAAC,8BAA8B,EAAE,EAAC,oBAAoB,EAAE,KAAK,EAAC,CAAC,CAAC;QACxF,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAEjD,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;QAEnC,IAAI,CAAC,cAAc,EAAE,CAAC;QAEtB,IAAI,CAAC,UAAU,GAAG,IAAI,EAAE,CAAC,WAAW,CAAC,mBAAmB,EAAE,CAAC;QAC3D,IAAI,CAAC,UAAU,CAAC,mBAAmB,CAAC,8BAA8B,EAAE,EAAC,oBAAoB,EAAE,KAAK,EAAC,CAAC,CAAC;QACnG,IAAI,CAAC,UAAU,CAAC,+BAA+B,CAAC,IAAI,CAAC,CAAC;QACtD,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QACvD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAEzD,IAAI,CAAC,kBAAkB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACxD,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAC;QAC/D,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEzD,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;QAC1E,IAAI,CAAC,UAAU,GAAG,IAAI,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1D,IAAI,CAAC,UAAU,CAAC,gBAAgB,wDAA+C,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACxG,IAAI,CAAC,UAAU,CAAC,gBAAgB,gDAA2C,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;QAClG,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,EAAE;YACtD,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;SACrC;QACD,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,kBAAkB,EAAE,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;QACpH,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAAiC,EAAC,QAAQ,EAAE,IAAI,EAAC;QAC/D,MAAM,EAAC,QAAQ,EAAC,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,kBAAkB,IAAI,QAAQ,EAAE;YACnC,kBAAkB,GAAG,IAAI,UAAU,EAAE,CAAC;SACvC;QAED,OAAO,kBAAkB,CAAC;IAC5B,CAAC;IAED,mCAAmC;QACjC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAEO,cAAc;QACpB,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,EAAE,0BAA0B,CAAC,CAAC;QAC5F,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,qBAAqB,EAAE,gBAAgB,CAAC,CAAC;QAChE,MAAM,YAAY,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,sBAAsB,EAAE,gBAAgB,CAAC,CAAC;QAEtF,MAAM,sBAAsB,GAAG,+BAA+B,EAAE,CAAC;QACjE,MAAM,uBAAuB,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,sBAAsB,CACjE,sBAAsB,EAAE,UAAU,CAAC,SAAS,CAAC,yBAAyB,CAAC,EAAE,UAAU,CAAC,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC;QACpH,uDAAuD;QACvD,uBAAuB,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC1C,YAAY,CAAC,iBAAiB,CAAC,uBAAuB,CAAC,CAAC;QACxD,sBAAsB,CAAC,iBAAiB,CAAC,GAAG,EAAE;YAC5C,IAAI,CAAC,UAAU,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QAEH,MAAM,iBAAiB,GAAG,aAAa,CAAC,KAAK,CAAC,8BAA8B,EAAE,CAAC;QAC/E,IAAI,CAAC,sBAAsB,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,sBAAsB,CAC/D,iBAAiB,EAAE,UAAU,CAAC,SAAS,CAAC,2BAA2B,CAAC,EACpE,UAAU,CAAC,SAAS,CAAC,6BAA6B,CAAC,CAAC,CAAC;QACzD,YAAY,CAAC,iBAAiB,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;QAC5D,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;QAExE,YAAY,CAAC,eAAe,EAAE,CAAC;QAC/B,MAAM,YAAY,GAAG,IAAI,YAAY,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;QAClE,YAAY,CAAC,IAAI,GAAG;YAClB,eAAe,EAAE,GAAS,EAAE;gBAC1B,MAAM,gBAAgB,GAAG,YAAY,CAAC,YAAY,CAAC,yBAAyB,CACxE,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,CAAC;gBACjE,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;YAC7D,CAAC;YACD,WAAW,+BAAkD;YAC7D,aAAa,EAAE,aAAa,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE;SACpE,CAAC;QACF,YAAY,CAAC,EAAE,GAAG,wBAAwB,CAAC;QAC3C,MAAM,iBAAiB,GAAG,IAAI,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACnE,YAAY,CAAC,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;QAElD,OAAO,EAAC,gBAAgB,EAAC,CAAC;IAC5B,CAAC;IAEO,YAAY,CAAC,KAA0C;QAC7D,MAAM,KAAK,GAAG,KAAK,CAAC,IAAuB,CAAC;QAC5C,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;IACtC,CAAC;IAEO,uBAAuB,CAAC,KAAsB;QACpD,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC;IACpG,CAAC;IAED,kEAAkE;IAC1D,KAAK,CAAC,eAAe,CAAC,KAAsB;QAClD,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;QAClD,IAAI,CAAC,SAAS,EAAE;YACd,MAAM,WAAW,GAAG,KAAK,CAAC,cAAc,EAAE,CAAC;YAC3C,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO,CAAC,IAAI,CAAC,4CAA4C,EAAE,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;gBACzE,OAAO;aACR;YACD,MAAM,mBAAmB,GACrB,MAAM,aAAa,CAAC,wBAAwB,CAAC,kCAAkC,CAAC,WAAW,CAAC,CAAC;YACjG,SAAS,GAAG,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,EAAE,mBAAmB,CAAC,CAAC;YAC5D,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,SAAS,CAAC,CAAC;YAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;YAC9C,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBACrC,IAAI,CAAC,YAAY,SAAS,IAAI,CAAC,YAAY,SAAS,EAAE;oBACpD,OAAO,CAAC,CAAC,aAAa,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,aAAa,EAAE,CAAC,CAAC;iBAC3D;gBACD,OAAO,CAAC,KAAK,CAAC,0EAA0E,CAAC,CAAC;gBAC1F,OAAO,CAAC,CAAC;YACX,CAAC,CAAC,CAAC;SACJ;QACD,SAAS,CAAC,MAAM,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,kBAAkB,CAAC,KAAsB;QAC/C,IAAI,CAAC,+BAA+B,EAAE,CAAC,GAAG,EAAE,EAAE;YAC5C,OAAO,IAAI,CAAC,UAAU,CAAC;SACxB;QAED,MAAM,QAAQ,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAC9C,IAAI,IAAI,EAAE;YACR,OAAO,IAAI,CAAC;SACb;QAED,MAAM,OAAO,GAAG,IAAI,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YAC5C,IAAI,CAAC,YAAY,iBAAiB,IAAI,CAAC,YAAY,iBAAiB,EAAE;gBACpE,OAAO,CAAC,CAAC,eAAe,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,eAAe,EAAE,CAAC,CAAC;aAC/D;YACD,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC1C,OAAO,OAAO,CAAC;IACjB,CAAC;IAEO,UAAU,CAAC,KAA+C;QAChE,KAAK,MAAM,IAAI,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE;YACjC,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;SAC9C;QACD,KAAK,CAAC,KAAK,EAAE,CAAC;IAChB,CAAC;IAEO,UAAU;QAChB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACpC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACjC,IAAI,IAAI,CAAC,UAAU,EAAE;YACnB,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,EAAE,EAAE;gBACtD,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;aACrC;SACF;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEO,YAAY;QAClB,IAAI,CAAC,uCAAuC,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC,CAAC;IACpF,CAAC;IAEO,uCAAuC,CAAC,WAAmB;QACjE,IAAI,WAAW,GAAG,CAAC,EAAE;YACnB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,KAAK,CAAC;YACvC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;YAC/C,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,CAAC;YAChD,IAAI,UAAU,EAAE;gBACd,UAAU,CAAC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;gBACzC,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC;aAC3D;SACF;aAAM;YACL,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC;YACtC,IAAI,IAAI,CAAC,sBAAsB,EAAE;gBAC/B,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;aACzE;YACD,+CAA+C;YAC/C,MAAM,uBAAuB,GAAG,IAAI,CAAC,aAAa,CAAC,uBAAuB,EAAE,GAAG,CAAC,CAAC;YACjF,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAG,uBAAuB,CAAC,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,0BAA0B,CAAC,CAAC,CAAC;gBAClD,UAAU,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAC5G,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,GAAG,MAAM,CAAC;SAChD;IACH,CAAC;IAED,YAAY,CAAC,IAAY;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAC5C,IAAI,SAAS,EAAE;YACb,SAAS,CAAC,MAAM,EAAE,CAAC;YACnB,SAAS,CAAC,MAAM,EAAE,CAAC;YACnB,SAAS,CAAC,MAAM,EAAE,CAAC;SACpB;IACH,CAAC;CACF","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as IssuesManager from '../../models/issues_manager/issues_manager.js';\nimport * as IssueCounter from '../../ui/components/issue_counter/issue_counter.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {AggregatedIssue} from './IssueAggregator.js';\nimport {Events as IssueAggregatorEvents, IssueAggregator} from './IssueAggregator.js';\nimport {IssueView} from './IssueView.js';\n\nconst UIStrings = {\n  /**\n   * @description Category title for a group of cross origin embedder policy (COEP) issues\n   */\n  crossOriginEmbedderPolicy: 'Cross Origin Embedder Policy',\n  /**\n   * @description Category title for a group of mixed content issues\n   */\n  mixedContent: 'Mixed Content',\n  /**\n   * @description Category title for a group of SameSite cookie issues\n   */\n  samesiteCookie: 'SameSite Cookie',\n  /**\n   * @description Category title for a group of heavy ads issues\n   */\n  heavyAds: 'Heavy Ads',\n  /**\n   * @description Category title for a group of content security policy (CSP) issues\n   */\n  contentSecurityPolicy: 'Content Security Policy',\n  /**\n   * @description Category title for a group of trusted web activity issues\n   */\n  trustedWebActivity: 'Trusted Web Activity',\n  /**\n   * @description Text for other types of items\n   */\n  other: 'Other',\n  /**\n   * @description Category title for the different 'low text contrast' issues. Low text contrast refers\n   *              to the difference between the color of a text and the background color where that text\n   *              appears.\n   */\n  lowTextContrast: 'Low Text Contrast',\n  /**\n   * @description Category title for the different 'Cross-Origin Resource Sharing' (CORS) issues. CORS\n   *              refers to one origin (e.g 'a.com') loading resources from another origin (e.g. 'b.com').\n   */\n  cors: 'Cross Origin Resource Sharing',\n  /**\n   * @description Title for a checkbox which toggles grouping by category in the issues tab\n   */\n  groupDisplayedIssuesUnder: 'Group displayed issues under associated categories',\n  /**\n   * @description Label for a checkbox which toggles grouping by category in the issues tab\n   */\n  groupByCategory: 'Group by category',\n  /**\n   * @description Title for a checkbox. Whether the issues tab should include third-party issues or not.\n   */\n  includeCookieIssuesCausedBy: 'Include cookie Issues caused by third-party sites',\n  /**\n   * @description Label for a checkbox. Whether the issues tab should include third-party issues or not.\n   */\n  includeThirdpartyCookieIssues: 'Include third-party cookie issues',\n  /**\n   * @description Label on the issues tab\n   */\n  onlyThirdpartyCookieIssues: 'Only third-party cookie issues detected so far',\n  /**\n   * @description Label in the issues panel\n   */\n  noIssuesDetectedSoFar: 'No issues detected so far',\n  /**\n   * @description Category title for the different 'Attribution Reporting API' issues. The\n   * Attribution Reporting API is a newly proposed web API (see https://github.com/WICG/conversion-measurement-api).\n   */\n  attributionReporting: 'Attribution Reporting `API`',\n  /**\n   * @description Category title for the different 'Quirks Mode' issues. Quirks Mode refers\n   *              to the legacy browser modes that displays web content according to outdated\n   *              browser behaviors.\n   */\n  quirksMode: 'Quirks Mode',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/issues/IssuesPane.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nclass IssueCategoryView extends UI.TreeOutline.TreeElement {\n  private category: IssuesManager.Issue.IssueCategory;\n  private issues: AggregatedIssue[];\n\n  constructor(category: IssuesManager.Issue.IssueCategory) {\n    super();\n    this.category = category;\n    this.issues = [];\n\n    this.toggleOnClick = true;\n    this.listItemElement.classList.add('issue-category');\n  }\n\n  getCategoryName(): string {\n    switch (this.category) {\n      case IssuesManager.Issue.IssueCategory.CrossOriginEmbedderPolicy:\n        return i18nString(UIStrings.crossOriginEmbedderPolicy);\n      case IssuesManager.Issue.IssueCategory.MixedContent:\n        return i18nString(UIStrings.mixedContent);\n      case IssuesManager.Issue.IssueCategory.SameSiteCookie:\n        return i18nString(UIStrings.samesiteCookie);\n      case IssuesManager.Issue.IssueCategory.HeavyAd:\n        return i18nString(UIStrings.heavyAds);\n      case IssuesManager.Issue.IssueCategory.ContentSecurityPolicy:\n        return i18nString(UIStrings.contentSecurityPolicy);\n      case IssuesManager.Issue.IssueCategory.TrustedWebActivity:\n        return i18nString(UIStrings.trustedWebActivity);\n      case IssuesManager.Issue.IssueCategory.LowTextContrast:\n        return i18nString(UIStrings.lowTextContrast);\n      case IssuesManager.Issue.IssueCategory.Cors:\n        return i18nString(UIStrings.cors);\n      case IssuesManager.Issue.IssueCategory.AttributionReporting:\n        return i18nString(UIStrings.attributionReporting);\n      case IssuesManager.Issue.IssueCategory.QuirksMode:\n        return i18nString(UIStrings.quirksMode);\n      case IssuesManager.Issue.IssueCategory.Other:\n        return i18nString(UIStrings.other);\n    }\n  }\n\n  onattach(): void {\n    this.appendHeader();\n  }\n\n  private appendHeader(): void {\n    const header = document.createElement('div');\n    header.classList.add('header');\n\n    const title = document.createElement('div');\n    title.classList.add('title');\n    title.textContent = this.getCategoryName();\n    header.appendChild(title);\n\n    this.listItemElement.appendChild(header);\n  }\n}\n\nexport function getGroupIssuesByCategorySetting(): Common.Settings.Setting<boolean> {\n  return Common.Settings.Settings.instance().createSetting('groupIssuesByCategory', false);\n}\n\nlet issuesPaneInstance: IssuesPane;\n\nexport class IssuesPane extends UI.Widget.VBox {\n  private categoryViews: Map<IssuesManager.Issue.IssueCategory, IssueCategoryView>;\n  private issueViews: Map<string, IssueView>;\n  private showThirdPartyCheckbox: UI.Toolbar.ToolbarSettingCheckbox|null;\n  private issuesTree: UI.TreeOutline.TreeOutlineInShadow;\n  private noIssuesMessageDiv: HTMLDivElement;\n  private issuesManager: IssuesManager.IssuesManager.IssuesManager;\n  private aggregator: IssueAggregator;\n  private issueViewUpdatePromise: Promise<void> = Promise.resolve();\n\n  private constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/issues/issuesPane.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('issues-pane');\n\n    this.categoryViews = new Map();\n    this.issueViews = new Map();\n    this.showThirdPartyCheckbox = null;\n\n    this.createToolbars();\n\n    this.issuesTree = new UI.TreeOutline.TreeOutlineInShadow();\n    this.issuesTree.registerRequiredCSS('panels/issues/issuesTree.css', {enableLegacyPatching: false});\n    this.issuesTree.setShowSelectionOnKeyboardFocus(true);\n    this.issuesTree.contentElement.classList.add('issues');\n    this.contentElement.appendChild(this.issuesTree.element);\n\n    this.noIssuesMessageDiv = document.createElement('div');\n    this.noIssuesMessageDiv.classList.add('issues-pane-no-issues');\n    this.contentElement.appendChild(this.noIssuesMessageDiv);\n\n    this.issuesManager = IssuesManager.IssuesManager.IssuesManager.instance();\n    this.aggregator = new IssueAggregator(this.issuesManager);\n    this.aggregator.addEventListener(IssueAggregatorEvents.AggregatedIssueUpdated, this.issueUpdated, this);\n    this.aggregator.addEventListener(IssueAggregatorEvents.FullUpdateRequired, this.fullUpdate, this);\n    for (const issue of this.aggregator.aggregatedIssues()) {\n      this.scheduleIssueViewUpdate(issue);\n    }\n    this.issuesManager.addEventListener(IssuesManager.IssuesManager.Events.IssuesCountUpdated, this.updateCounts, this);\n    this.updateCounts();\n  }\n\n  static instance(opts: {forceNew: boolean|null} = {forceNew: null}): IssuesPane {\n    const {forceNew} = opts;\n    if (!issuesPaneInstance || forceNew) {\n      issuesPaneInstance = new IssuesPane();\n    }\n\n    return issuesPaneInstance;\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this.issuesTree.element];\n  }\n\n  private createToolbars(): {toolbarContainer: Element} {\n    const toolbarContainer = this.contentElement.createChild('div', 'issues-toolbar-container');\n    new UI.Toolbar.Toolbar('issues-toolbar-left', toolbarContainer);\n    const rightToolbar = new UI.Toolbar.Toolbar('issues-toolbar-right', toolbarContainer);\n\n    const groupByCategorySetting = getGroupIssuesByCategorySetting();\n    const groupByCategoryCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        groupByCategorySetting, i18nString(UIStrings.groupDisplayedIssuesUnder), i18nString(UIStrings.groupByCategory));\n    // Hide the option to toggle category grouping for now.\n    groupByCategoryCheckbox.setVisible(false);\n    rightToolbar.appendToolbarItem(groupByCategoryCheckbox);\n    groupByCategorySetting.addChangeListener(() => {\n      this.fullUpdate();\n    });\n\n    const thirdPartySetting = IssuesManager.Issue.getShowThirdPartyIssuesSetting();\n    this.showThirdPartyCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        thirdPartySetting, i18nString(UIStrings.includeCookieIssuesCausedBy),\n        i18nString(UIStrings.includeThirdpartyCookieIssues));\n    rightToolbar.appendToolbarItem(this.showThirdPartyCheckbox);\n    this.setDefaultFocusedElement(this.showThirdPartyCheckbox.inputElement);\n\n    rightToolbar.appendSeparator();\n    const issueCounter = new IssueCounter.IssueCounter.IssueCounter();\n    issueCounter.data = {\n      tooltipCallback: (): void => {\n        const issueEnumeration = IssueCounter.IssueCounter.getIssueCountsEnumeration(\n            IssuesManager.IssuesManager.IssuesManager.instance(), false);\n        UI.Tooltip.Tooltip.install(issueCounter, issueEnumeration);\n      },\n      displayMode: IssueCounter.IssueCounter.DisplayMode.ShowAlways,\n      issuesManager: IssuesManager.IssuesManager.IssuesManager.instance(),\n    };\n    issueCounter.id = 'console-issues-counter';\n    const issuesToolbarItem = new UI.Toolbar.ToolbarItem(issueCounter);\n    rightToolbar.appendToolbarItem(issuesToolbarItem);\n\n    return {toolbarContainer};\n  }\n\n  private issueUpdated(event: Common.EventTarget.EventTargetEvent): void {\n    const issue = event.data as AggregatedIssue;\n    this.scheduleIssueViewUpdate(issue);\n  }\n\n  private scheduleIssueViewUpdate(issue: AggregatedIssue): void {\n    this.issueViewUpdatePromise = this.issueViewUpdatePromise.then(() => this.updateIssueView(issue));\n  }\n\n  /** Don't call directly. Use `scheduleIssueViewUpdate` instead. */\n  private async updateIssueView(issue: AggregatedIssue): Promise<void> {\n    let issueView = this.issueViews.get(issue.code());\n    if (!issueView) {\n      const description = issue.getDescription();\n      if (!description) {\n        console.warn('Could not find description for issue code:', issue.code());\n        return;\n      }\n      const markdownDescription =\n          await IssuesManager.MarkdownIssueDescription.createIssueDescriptionFromMarkdown(description);\n      issueView = new IssueView(this, issue, markdownDescription);\n      this.issueViews.set(issue.code(), issueView);\n      const parent = this.getIssueViewParent(issue);\n      parent.appendChild(issueView, (a, b) => {\n        if (a instanceof IssueView && b instanceof IssueView) {\n          return a.getIssueTitle().localeCompare(b.getIssueTitle());\n        }\n        console.error('The issues tree should only contain IssueView objects as direct children');\n        return 0;\n      });\n    }\n    issueView.update();\n    this.updateCounts();\n  }\n\n  private getIssueViewParent(issue: AggregatedIssue): UI.TreeOutline.TreeOutline|UI.TreeOutline.TreeElement {\n    if (!getGroupIssuesByCategorySetting().get()) {\n      return this.issuesTree;\n    }\n\n    const category = issue.getCategory();\n    const view = this.categoryViews.get(category);\n    if (view) {\n      return view;\n    }\n\n    const newView = new IssueCategoryView(category);\n    this.issuesTree.appendChild(newView, (a, b) => {\n      if (a instanceof IssueCategoryView && b instanceof IssueCategoryView) {\n        return a.getCategoryName().localeCompare(b.getCategoryName());\n      }\n      return 0;\n    });\n    this.categoryViews.set(category, newView);\n    return newView;\n  }\n\n  private clearViews(views: Map<unknown, UI.TreeOutline.TreeElement>): void {\n    for (const view of views.values()) {\n      view.parent && view.parent.removeChild(view);\n    }\n    views.clear();\n  }\n\n  private fullUpdate(): void {\n    this.clearViews(this.categoryViews);\n    this.clearViews(this.issueViews);\n    if (this.aggregator) {\n      for (const issue of this.aggregator.aggregatedIssues()) {\n        this.scheduleIssueViewUpdate(issue);\n      }\n    }\n    this.updateCounts();\n  }\n\n  private updateCounts(): void {\n    this.showIssuesTreeOrNoIssuesDetectedMessage(this.issuesManager.numberOfIssues());\n  }\n\n  private showIssuesTreeOrNoIssuesDetectedMessage(issuesCount: number): void {\n    if (issuesCount > 0) {\n      this.issuesTree.element.hidden = false;\n      this.noIssuesMessageDiv.style.display = 'none';\n      const firstChild = this.issuesTree.firstChild();\n      if (firstChild) {\n        firstChild.select(/* omitFocus= */ true);\n        this.setDefaultFocusedElement(firstChild.listItemElement);\n      }\n    } else {\n      this.issuesTree.element.hidden = true;\n      if (this.showThirdPartyCheckbox) {\n        this.setDefaultFocusedElement(this.showThirdPartyCheckbox.inputElement);\n      }\n      // We alreay know that issesCount is zero here.\n      const hasOnlyThirdPartyIssues = this.issuesManager.numberOfAllStoredIssues() > 0;\n      this.noIssuesMessageDiv.textContent = hasOnlyThirdPartyIssues ? i18nString(UIStrings.onlyThirdpartyCookieIssues) :\n                                                                      i18nString(UIStrings.noIssuesDetectedSoFar);\n      this.noIssuesMessageDiv.style.display = 'flex';\n    }\n  }\n\n  revealByCode(code: string): void {\n    const issueView = this.issueViews.get(code);\n    if (issueView) {\n      issueView.expand();\n      issueView.reveal();\n      issueView.select();\n    }\n  }\n}\n"]}