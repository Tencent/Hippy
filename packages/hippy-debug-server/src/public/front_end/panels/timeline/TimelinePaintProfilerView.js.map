{"version":3,"file":"TimelinePaintProfilerView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelinePaintProfilerView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as SDK from '../../core/sdk/sdk.js'; // eslint-disable-line no-unused-vars\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as LayerViewer from '../layer_viewer/layer_viewer.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class TimelinePaintProfilerView extends UI.SplitWidget.SplitWidget {\n  _frameModel: TimelineModel.TimelineFrameModel.TimelineFrameModel;\n  _logAndImageSplitWidget: UI.SplitWidget.SplitWidget;\n  _imageView: TimelinePaintImageView;\n  _paintProfilerView: LayerViewer.PaintProfilerView.PaintProfilerView;\n  _logTreeView: LayerViewer.PaintProfilerView.PaintProfilerCommandLogView;\n  _needsUpdateWhenVisible: boolean;\n  _pendingSnapshot: SDK.PaintProfiler.PaintProfilerSnapshot|null;\n  _event: SDK.TracingModel.Event|null;\n  _paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel|null;\n  _lastLoadedSnapshot: SDK.PaintProfiler.PaintProfilerSnapshot|null;\n  constructor(frameModel: TimelineModel.TimelineFrameModel.TimelineFrameModel) {\n    super(false, false);\n    this.element.classList.add('timeline-paint-profiler-view');\n    this.setSidebarSize(60);\n    this.setResizable(false);\n\n    this._frameModel = frameModel;\n    this._logAndImageSplitWidget = new UI.SplitWidget.SplitWidget(true, false);\n    this._logAndImageSplitWidget.element.classList.add('timeline-paint-profiler-log-split');\n    this.setMainWidget(this._logAndImageSplitWidget);\n    this._imageView = new TimelinePaintImageView();\n    this._logAndImageSplitWidget.setMainWidget(this._imageView);\n\n    this._paintProfilerView =\n        new LayerViewer.PaintProfilerView.PaintProfilerView(this._imageView.showImage.bind(this._imageView));\n    this._paintProfilerView.addEventListener(\n        LayerViewer.PaintProfilerView.Events.WindowChanged, this._onWindowChanged, this);\n    this.setSidebarWidget(this._paintProfilerView);\n\n    this._logTreeView = new LayerViewer.PaintProfilerView.PaintProfilerCommandLogView();\n    this._logAndImageSplitWidget.setSidebarWidget(this._logTreeView);\n\n    this._needsUpdateWhenVisible = false;\n    this._pendingSnapshot = null;\n    this._event = null;\n    this._paintProfilerModel = null;\n    this._lastLoadedSnapshot = null;\n  }\n\n  wasShown(): void {\n    if (this._needsUpdateWhenVisible) {\n      this._needsUpdateWhenVisible = false;\n      this._update();\n    }\n  }\n\n  setSnapshot(snapshot: SDK.PaintProfiler.PaintProfilerSnapshot): void {\n    this._releaseSnapshot();\n    this._pendingSnapshot = snapshot;\n    this._event = null;\n    this._updateWhenVisible();\n  }\n\n  setEvent(paintProfilerModel: SDK.PaintProfiler.PaintProfilerModel, event: SDK.TracingModel.Event): boolean {\n    this._releaseSnapshot();\n    this._paintProfilerModel = paintProfilerModel;\n    this._pendingSnapshot = null;\n    this._event = event;\n\n    this._updateWhenVisible();\n    if (this._event.name === TimelineModel.TimelineModel.RecordType.Paint) {\n      return Boolean(TimelineModel.TimelineModel.TimelineData.forEvent(event).picture);\n    }\n    if (this._event.name === TimelineModel.TimelineModel.RecordType.RasterTask) {\n      return this._frameModel.hasRasterTile(this._event);\n    }\n    return false;\n  }\n\n  _updateWhenVisible(): void {\n    if (this.isShowing()) {\n      this._update();\n    } else {\n      this._needsUpdateWhenVisible = true;\n    }\n  }\n\n  _update(): void {\n    this._logTreeView.setCommandLog([]);\n    this._paintProfilerView.setSnapshotAndLog(null, [], null);\n\n    let snapshotPromise: Promise<{\n      rect: Protocol.DOM.Rect | null,\n      snapshot: SDK.PaintProfiler.PaintProfilerSnapshot,\n    }|null>;\n    if (this._pendingSnapshot) {\n      snapshotPromise = Promise.resolve({rect: null, snapshot: this._pendingSnapshot});\n    } else if (this._event && this._event.name === TimelineModel.TimelineModel.RecordType.Paint) {\n      const picture =\n          (TimelineModel.TimelineModel.TimelineData.forEvent(this._event).picture as SDK.TracingModel.ObjectSnapshot);\n      snapshotPromise =\n          picture.objectPromise()\n              .then(\n                  data =>\n                      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n                  // @ts-expect-error\n                  (this._paintProfilerModel as SDK.PaintProfiler.PaintProfilerModel).loadSnapshot(data['skp64']))\n              .then(snapshot => snapshot && {rect: null, snapshot: snapshot});\n    } else if (this._event && this._event.name === TimelineModel.TimelineModel.RecordType.RasterTask) {\n      snapshotPromise = this._frameModel.rasterTilePromise(this._event);\n    } else {\n      console.assert(false, 'Unexpected event type or no snapshot');\n      return;\n    }\n    snapshotPromise.then(snapshotWithRect => {\n      this._releaseSnapshot();\n      if (!snapshotWithRect) {\n        this._imageView.showImage();\n        return;\n      }\n      const snapshot = snapshotWithRect.snapshot;\n      this._lastLoadedSnapshot = snapshot;\n      this._imageView.setMask(snapshotWithRect.rect);\n      snapshot.commandLog().then(log => onCommandLogDone.call(this, snapshot, snapshotWithRect.rect, log || []));\n    });\n\n    function onCommandLogDone(\n        this: TimelinePaintProfilerView, snapshot: SDK.PaintProfiler.PaintProfilerSnapshot,\n        clipRect: Protocol.DOM.Rect|null, log?: SDK.PaintProfiler.PaintProfilerLogItem[]): void {\n      this._logTreeView.setCommandLog(log || []);\n      this._paintProfilerView.setSnapshotAndLog(snapshot, log || [], clipRect);\n    }\n  }\n\n  _releaseSnapshot(): void {\n    if (!this._lastLoadedSnapshot) {\n      return;\n    }\n    this._lastLoadedSnapshot.release();\n    this._lastLoadedSnapshot = null;\n  }\n\n  _onWindowChanged(): void {\n    this._logTreeView.updateWindow(this._paintProfilerView.selectionWindow());\n  }\n}\n\nexport class TimelinePaintImageView extends UI.Widget.Widget {\n  _imageContainer: HTMLElement;\n  _imageElement: HTMLImageElement;\n  _maskElement: HTMLElement;\n  _transformController: LayerViewer.TransformController.TransformController;\n  _maskRectangle?: Protocol.DOM.Rect|null;\n  constructor() {\n    super(true);\n    this.registerRequiredCSS('panels/timeline/timelinePaintProfiler.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('fill', 'paint-profiler-image-view');\n    this._imageContainer = this.contentElement.createChild('div', 'paint-profiler-image-container');\n    this._imageElement = (this._imageContainer.createChild('img') as HTMLImageElement);\n    this._maskElement = this._imageContainer.createChild('div');\n    this._imageElement.addEventListener('load', this._updateImagePosition.bind(this), false);\n    this._transformController =\n        new LayerViewer.TransformController.TransformController((this.contentElement as HTMLElement), true);\n    this._transformController.addEventListener(\n        LayerViewer.TransformController.Events.TransformChanged, this._updateImagePosition, this);\n  }\n\n  onResize(): void {\n    if (this._imageElement.src) {\n      this._updateImagePosition();\n    }\n  }\n\n  _updateImagePosition(): void {\n    const width = this._imageElement.naturalWidth;\n    const height = this._imageElement.naturalHeight;\n    const clientWidth = this.contentElement.clientWidth;\n    const clientHeight = this.contentElement.clientHeight;\n\n    const paddingFraction = 0.1;\n    const paddingX = clientWidth * paddingFraction;\n    const paddingY = clientHeight * paddingFraction;\n    const scaleX = (clientWidth - paddingX) / width;\n    const scaleY = (clientHeight - paddingY) / height;\n    const scale = Math.min(scaleX, scaleY);\n\n    if (this._maskRectangle) {\n      const style = this._maskElement.style;\n      style.width = width + 'px';\n      style.height = height + 'px';\n      style.borderLeftWidth = this._maskRectangle.x + 'px';\n      style.borderTopWidth = this._maskRectangle.y + 'px';\n      style.borderRightWidth = (width - this._maskRectangle.x - this._maskRectangle.width) + 'px';\n      style.borderBottomWidth = (height - this._maskRectangle.y - this._maskRectangle.height) + 'px';\n    }\n    this._transformController.setScaleConstraints(0.5, 10 / scale);\n    let matrix = new WebKitCSSMatrix()\n                     .scale(this._transformController.scale(), this._transformController.scale())\n                     .translate(clientWidth / 2, clientHeight / 2)\n                     .scale(scale, scale)\n                     .translate(-width / 2, -height / 2);\n    const bounds = UI.Geometry.boundsForTransformedPoints(matrix, [0, 0, 0, width, height, 0]);\n    this._transformController.clampOffsets(\n        paddingX - bounds.maxX, clientWidth - paddingX - bounds.minX, paddingY - bounds.maxY,\n        clientHeight - paddingY - bounds.minY);\n    matrix = new WebKitCSSMatrix()\n                 .translate(this._transformController.offsetX(), this._transformController.offsetY())\n                 .multiply(matrix);\n    this._imageContainer.style.webkitTransform = matrix.toString();\n  }\n\n  showImage(imageURL?: string): void {\n    this._imageContainer.classList.toggle('hidden', !imageURL);\n    if (imageURL) {\n      this._imageElement.src = imageURL;\n    }\n  }\n\n  setMask(maskRectangle: Protocol.DOM.Rect|null): void {\n    this._maskRectangle = maskRectangle;\n    this._maskElement.classList.toggle('hidden', !maskRectangle);\n  }\n}\n"]}