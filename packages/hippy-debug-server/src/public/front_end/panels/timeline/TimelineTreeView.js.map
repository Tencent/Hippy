{"version":3,"file":"TimelineTreeView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/TimelineTreeView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Platform from '../../core/platform/platform.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as TimelineModel from '../../models/timeline_model/timeline_model.js';\nimport * as DataGrid from '../../ui/legacy/components/data_grid/data_grid.js';\nimport * as Components from '../../ui/legacy/components/utils/utils.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nimport type {PerformanceModel} from './PerformanceModel.js'; // eslint-disable-line no-unused-vars\nimport {TimelineRegExp} from './TimelineFilters.js';\nimport type {TimelineSelection} from './TimelinePanel.js'; // eslint-disable-line no-unused-vars\nimport {TimelineUIUtils} from './TimelineUIUtils.js';\n\nconst UIStrings = {\n  /**\n  *@description Text for the performance of something\n  */\n  performance: 'Performance',\n  /**\n  *@description Text to filter result items\n  */\n  filter: 'Filter',\n  /**\n  *@description Time of a single activity, as opposed to the total time\n  */\n  selfTime: 'Self Time',\n  /**\n  *@description Text for the total time of something\n  */\n  totalTime: 'Total Time',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  activity: 'Activity',\n  /**\n  *@description Text of a DOM element in Timeline Tree View of the Performance panel\n  */\n  selectItemForDetails: 'Select item for details.',\n  /**\n  * @description This message is presented as a tooltip when developers investigate the performance\n  * of a page. The tooltip alerts developers that some parts of code in execution were not optimized\n  * (made to run faster) and that associated timing information must be considered with this in\n  * mind. The placeholder text is the reason the code was not optimized.\n  * @example {Optimized too many times} PH1\n  */\n  notOptimizedS: 'Not optimized: {PH1}',\n  /**\n  *@description Time in miliseconds\n  *@example {30.1} PH1\n  */\n  fms: '{PH1} ms',\n  /**\n  *@description Number followed by percent sign\n  *@example {20} PH1\n  */\n  percentPlaceholder: '{PH1} %',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  chromeExtensionsOverhead: '[`Chrome` extensions overhead]',\n  /**\n   * @description Text in Timeline Tree View of the Performance panel. The text is presented\n   * when developers investigate the performance of a page. 'V8 Runtime' labels the time\n   * spent in (i.e. runtime) the V8 JavaScript engine.\n   */\n  vRuntime: '[`V8` Runtime]',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  unattributed: '[unattributed]',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  javascript: 'JavaScript',\n  /**\n  *@description Text that refers to one or a group of webpages\n  */\n  page: 'Page',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  noGrouping: 'No Grouping',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  groupByActivity: 'Group by Activity',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  groupByCategory: 'Group by Category',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  groupByDomain: 'Group by Domain',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  groupByFrame: 'Group by Frame',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  groupBySubdomain: 'Group by Subdomain',\n  /**\n  *@description Text in Timeline Tree View of the Performance panel\n  */\n  groupByUrl: 'Group by URL',\n  /**\n  *@description Aria-label for grouping combo box in Timeline Details View\n  */\n  groupBy: 'Group by',\n  /**\n  *@description Aria-label for filter bar in Call Tree view\n  */\n  filterCallTree: 'Filter call tree',\n  /**\n  *@description Aria-label for the filter bar in Bottom-Up view\n  */\n  filterBottomup: 'Filter bottom-up',\n  /**\n  * @description Title of the sidebar pane in the Performance panel which shows the stack (call\n  * stack) where the program spent the most time (out of all the call stacks) while executing.\n  */\n  heaviestStack: 'Heaviest stack',\n  /**\n  * @description Tooltip for the the Heaviest stack sidebar toggle in the Timeline Tree View of the\n  * Performance panel. Command to open/show the sidebar.\n  */\n  showHeaviestStack: 'Show Heaviest stack',\n  /**\n  * @description Tooltip for the the Heaviest stack sidebar toggle in the Timeline Tree View of the\n  * Performance panel. Command to close/hide the sidebar.\n  */\n  hideHeaviestStack: 'Hide Heaviest stack',\n  /**\n  *@description Data grid name for Timeline Stack data grids\n  */\n  timelineStack: 'Timeline Stack',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/timeline/TimelineTreeView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class TimelineTreeView extends UI.Widget.VBox implements UI.SearchableView.Searchable {\n  _model: PerformanceModel|null;\n  _track: TimelineModel.TimelineModel.Track|null;\n  _tree: TimelineModel.TimelineProfileTree.Node|null;\n  _searchResults: TimelineModel.TimelineProfileTree.Node[];\n  linkifier!: Components.Linkifier.Linkifier;\n  dataGrid!: DataGrid.SortableDataGrid.SortableDataGrid<GridNode>;\n  _lastHoveredProfileNode!: TimelineModel.TimelineProfileTree.Node|null;\n  _textFilter!: TimelineRegExp;\n  _taskFilter!: TimelineModel.TimelineModelFilter.ExclusiveNameFilter;\n  _startTime!: number;\n  _endTime!: number;\n  splitWidget!: UI.SplitWidget.SplitWidget;\n  detailsView!: UI.Widget.Widget;\n  _searchableView!: UI.SearchableView.SearchableView;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _currentThreadSetting?: Common.Settings.Setting<any>;\n  _lastSelectedNode?: TimelineModel.TimelineProfileTree.Node|null;\n  _textFilterUI?: UI.Toolbar.ToolbarInput;\n  _root?: TimelineModel.TimelineProfileTree.Node;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _currentResult?: any;\n\n  constructor() {\n    super();\n    this._model = null;\n    this._track = null;\n    this._tree = null;\n    this.element.classList.add('timeline-tree-view');\n\n    this._searchResults = [];\n  }\n\n  static eventNameForSorting(event: SDK.TracingModel.Event): string {\n    if (event.name === TimelineModel.TimelineModel.RecordType.JSFrame) {\n      const data = event.args['data'];\n      return data['functionName'] + '@' + (data['scriptId'] || data['url'] || '');\n    }\n    return event.name + ':@' + TimelineModel.TimelineProfileTree.eventURL(event);\n  }\n\n  setSearchableView(searchableView: UI.SearchableView.SearchableView): void {\n    this._searchableView = searchableView;\n  }\n\n  setModel(model: PerformanceModel|null, track: TimelineModel.TimelineModel.Track|null): void {\n    this._model = model;\n    this._track = track;\n    this.refreshTree();\n  }\n\n  getToolbarInputAccessiblePlaceHolder(): string {\n    return '';\n  }\n\n  model(): PerformanceModel|null {\n    return this._model;\n  }\n\n  init(): void {\n    this.linkifier = new Components.Linkifier.Linkifier();\n\n    this._taskFilter =\n        new TimelineModel.TimelineModelFilter.ExclusiveNameFilter([TimelineModel.TimelineModel.RecordType.Task]);\n    this._textFilter = new TimelineRegExp();\n\n    this._currentThreadSetting = Common.Settings.Settings.instance().createSetting('timelineTreeCurrentThread', 0);\n    this._currentThreadSetting.addChangeListener(this.refreshTree, this);\n\n    const columns = ([] as DataGrid.DataGrid.ColumnDescriptor[]);\n    this.populateColumns(columns);\n\n    this.splitWidget = new UI.SplitWidget.SplitWidget(true, true, 'timelineTreeViewDetailsSplitWidget');\n    const mainView = new UI.Widget.VBox();\n    const toolbar = new UI.Toolbar.Toolbar('', mainView.element);\n    toolbar.makeWrappable(true);\n    this.populateToolbar(toolbar);\n\n    this.dataGrid = new DataGrid.SortableDataGrid.SortableDataGrid({\n      displayName: i18nString(UIStrings.performance),\n      columns,\n      refreshCallback: undefined,\n      editCallback: undefined,\n      deleteCallback: undefined,\n    });\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SortingChanged, this._sortingChanged, this);\n    this.dataGrid.element.addEventListener('mousemove', this._onMouseMove.bind(this), true);\n    this.dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    this.dataGrid.setRowContextMenuCallback(this._onContextMenu.bind(this));\n    this.dataGrid.asWidget().show(mainView.element);\n    this.dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this._updateDetailsForSelection, this);\n\n    this.detailsView = new UI.Widget.VBox();\n    this.detailsView.element.classList.add('timeline-details-view', 'timeline-details-view-body');\n    this.splitWidget.setMainWidget(mainView);\n    this.splitWidget.setSidebarWidget(this.detailsView);\n    this.splitWidget.hideSidebar();\n    this.splitWidget.show(this.element);\n    this.splitWidget.addEventListener(UI.SplitWidget.Events.ShowModeChanged, this._onShowModeChanged, this);\n\n    this._lastSelectedNode;\n  }\n\n  lastSelectedNode(): TimelineModel.TimelineProfileTree.Node|null|undefined {\n    return this._lastSelectedNode;\n  }\n\n  updateContents(selection: TimelineSelection): void {\n    this.setRange(selection.startTime(), selection.endTime());\n  }\n\n  setRange(startTime: number, endTime: number): void {\n    this._startTime = startTime;\n    this._endTime = endTime;\n    this.refreshTree();\n  }\n\n  filters(): TimelineModel.TimelineModelFilter.TimelineModelFilter[] {\n    return [this._taskFilter, this._textFilter, ...(this._model ? this._model.filters() : [])];\n  }\n\n  filtersWithoutTextFilter(): TimelineModel.TimelineModelFilter.TimelineModelFilter[] {\n    return [this._taskFilter, ...(this._model ? this._model.filters() : [])];\n  }\n\n  textFilter(): TimelineRegExp {\n    return this._textFilter;\n  }\n\n  _exposePercentages(): boolean {\n    return false;\n  }\n\n  populateToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    const textFilterUI =\n        new UI.Toolbar.ToolbarInput(i18nString(UIStrings.filter), this.getToolbarInputAccessiblePlaceHolder());\n    textFilterUI.addEventListener(UI.Toolbar.ToolbarInput.Event.TextChanged, () => {\n      const searchQuery = textFilterUI.value();\n      this._textFilter.setRegExp(searchQuery ? createPlainTextSearchRegex(searchQuery, 'i') : null);\n      this.refreshTree();\n    }, this);\n    this._textFilterUI = textFilterUI;\n    toolbar.appendToolbarItem(textFilterUI);\n  }\n\n  _modelEvents(): SDK.TracingModel.Event[] {\n    return this._track ? this._track.syncEvents() : [];\n  }\n\n  _onHover(_node: TimelineModel.TimelineProfileTree.Node|null): void {\n  }\n\n  _appendContextMenuItems(_contextMenu: UI.ContextMenu.ContextMenu, _node: TimelineModel.TimelineProfileTree.Node):\n      void {\n  }\n\n  _linkifyLocation(event: SDK.TracingModel.Event): Element|null {\n    if (!this._model) {\n      return null;\n    }\n    const target = this._model.timelineModel().targetByEvent(event);\n    if (!target) {\n      return null;\n    }\n    const frame = TimelineModel.TimelineProfileTree.eventStackFrame(event);\n    if (!frame) {\n      return null;\n    }\n    return this.linkifier.maybeLinkifyConsoleCallFrame(target, frame);\n  }\n\n  selectProfileNode(treeNode: TimelineModel.TimelineProfileTree.Node, suppressSelectedEvent: boolean): void {\n    const pathToRoot = [];\n    let node: (TimelineModel.TimelineProfileTree.Node|null)|TimelineModel.TimelineProfileTree.Node = treeNode;\n    for (; node; node = node.parent) {\n      pathToRoot.push(node);\n    }\n    for (let i = pathToRoot.length - 1; i > 0; --i) {\n      const gridNode = this.dataGridNodeForTreeNode(pathToRoot[i]);\n      if (gridNode && gridNode.dataGrid) {\n        gridNode.expand();\n      }\n    }\n    const gridNode = this.dataGridNodeForTreeNode(treeNode);\n    if (gridNode && gridNode.dataGrid) {\n      gridNode.reveal();\n      gridNode.select(suppressSelectedEvent);\n    }\n  }\n\n  refreshTree(): void {\n    this.linkifier.reset();\n    this.dataGrid.rootNode().removeChildren();\n    if (!this._model) {\n      this._updateDetailsForSelection();\n      return;\n    }\n    this._root = this._buildTree();\n    const children = this._root.children();\n    let maxSelfTime = 0;\n    let maxTotalTime = 0;\n    const totalUsedTime = this._root.totalTime - this._root.selfTime;\n    for (const child of children.values()) {\n      maxSelfTime = Math.max(maxSelfTime, child.selfTime);\n      maxTotalTime = Math.max(maxTotalTime, child.totalTime);\n    }\n    for (const child of children.values()) {\n      // Exclude the idle time off the total calculation.\n      const gridNode = new TreeGridNode(child, totalUsedTime, maxSelfTime, maxTotalTime, this);\n      this.dataGrid.insertChild(gridNode);\n    }\n    this._sortingChanged();\n    this._updateDetailsForSelection();\n    if (this._searchableView) {\n      this._searchableView.refreshSearch();\n    }\n    const rootNode = this.dataGrid.rootNode();\n    if (rootNode.children.length > 0) {\n      rootNode.children[0].select(/* supressSelectedEvent */ true);\n    }\n  }\n\n  _buildTree(): TimelineModel.TimelineProfileTree.Node {\n    throw new Error('Not Implemented');\n  }\n\n  buildTopDownTree(doNotAggregate: boolean, groupIdCallback: ((arg0: SDK.TracingModel.Event) => string)|null):\n      TimelineModel.TimelineProfileTree.Node {\n    return new TimelineModel.TimelineProfileTree.TopDownRootNode(\n        this._modelEvents(), this.filters(), this._startTime, this._endTime, doNotAggregate, groupIdCallback);\n  }\n\n  populateColumns(columns: DataGrid.DataGrid.ColumnDescriptor[]): void {\n    columns.push(\n        ({id: 'self', title: i18nString(UIStrings.selfTime), width: '120px', fixedWidth: true, sortable: true} as\n         DataGrid.DataGrid.ColumnDescriptor));\n    columns.push(\n        ({id: 'total', title: i18nString(UIStrings.totalTime), width: '120px', fixedWidth: true, sortable: true} as\n         DataGrid.DataGrid.ColumnDescriptor));\n    columns.push(\n        ({id: 'activity', title: i18nString(UIStrings.activity), disclosure: true, sortable: true} as\n         DataGrid.DataGrid.ColumnDescriptor));\n  }\n\n  _sortingChanged(): void {\n    const columnId = this.dataGrid.sortColumnId();\n    if (!columnId) {\n      return;\n    }\n    let sortFunction;\n    switch (columnId) {\n      case 'startTime':\n        sortFunction = compareStartTime;\n        break;\n      case 'self':\n        sortFunction = compareNumericField.bind(null, 'selfTime');\n        break;\n      case 'total':\n        sortFunction = compareNumericField.bind(null, 'totalTime');\n        break;\n      case 'activity':\n        sortFunction = compareName;\n        break;\n      default:\n        console.assert(false, 'Unknown sort field: ' + columnId);\n        return;\n    }\n    this.dataGrid.sortNodes(sortFunction, !this.dataGrid.isSortOrderAscending());\n\n    function compareNumericField(\n        field: string, a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      const nodeA = (a as TreeGridNode);\n      const nodeB = (b as TreeGridNode);\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      return (nodeA._profileNode as any)[field] - (nodeB._profileNode as any)[field];\n    }\n\n    function compareStartTime(\n        a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      const nodeA = (a as TreeGridNode);\n      const nodeB = (b as TreeGridNode);\n      const eventA = (nodeA._profileNode.event as SDK.TracingModel.Event);\n      const eventB = (nodeB._profileNode.event as SDK.TracingModel.Event);\n      return eventA.startTime - eventB.startTime;\n    }\n\n    function compareName(\n        a: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>,\n        b: DataGrid.SortableDataGrid.SortableDataGridNode<GridNode>): number {\n      const nodeA = (a as TreeGridNode);\n      const nodeB = (b as TreeGridNode);\n      const eventA = (nodeA._profileNode.event as SDK.TracingModel.Event);\n      const eventB = (nodeB._profileNode.event as SDK.TracingModel.Event);\n      const nameA = TimelineTreeView.eventNameForSorting(eventA);\n      const nameB = TimelineTreeView.eventNameForSorting(eventB);\n      return nameA.localeCompare(nameB);\n    }\n  }\n\n  _onShowModeChanged(): void {\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.OnlyMain) {\n      return;\n    }\n    this._lastSelectedNode = undefined;\n    this._updateDetailsForSelection();\n  }\n\n  _updateDetailsForSelection(): void {\n    const selectedNode = this.dataGrid.selectedNode ? (this.dataGrid.selectedNode as TreeGridNode)._profileNode : null;\n    if (selectedNode === this._lastSelectedNode) {\n      return;\n    }\n    this._lastSelectedNode = selectedNode;\n    if (this.splitWidget.showMode() === UI.SplitWidget.ShowMode.OnlyMain) {\n      return;\n    }\n    this.detailsView.detachChildWidgets();\n    this.detailsView.element.removeChildren();\n    if (selectedNode && this._showDetailsForNode(selectedNode)) {\n      return;\n    }\n    const banner = this.detailsView.element.createChild('div', 'full-widget-dimmed-banner');\n    UI.UIUtils.createTextChild(banner, i18nString(UIStrings.selectItemForDetails));\n  }\n\n  _showDetailsForNode(_node: TimelineModel.TimelineProfileTree.Node): boolean {\n    return false;\n  }\n\n  _onMouseMove(event: Event): void {\n    const gridNode = event.target && (event.target instanceof Node) ?\n        (this.dataGrid.dataGridNodeFromNode((event.target as Node))) :\n        null;\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-expect-error\n    const profileNode = gridNode && gridNode._profileNode;\n    if (profileNode === this._lastHoveredProfileNode) {\n      return;\n    }\n    this._lastHoveredProfileNode = profileNode;\n    this._onHover(profileNode);\n  }\n\n  _onContextMenu(contextMenu: UI.ContextMenu.ContextMenu, eventGridNode: DataGrid.DataGrid.DataGridNode<GridNode>):\n      void {\n    const gridNode = (eventGridNode as GridNode);\n    if (gridNode._linkElement && !contextMenu.containsTarget(gridNode._linkElement)) {\n      contextMenu.appendApplicableItems(gridNode._linkElement);\n    }\n    const profileNode = gridNode._profileNode;\n    if (profileNode) {\n      this._appendContextMenuItems(contextMenu, profileNode);\n    }\n  }\n\n  dataGridNodeForTreeNode(treeNode: TimelineModel.TimelineProfileTree.Node): GridNode|null {\n    return profileNodeToTreeGridNode.get(treeNode) || null;\n  }\n\n  // UI.SearchableView.Searchable implementation\n\n  searchCanceled(): void {\n    this._searchResults = [];\n    this._currentResult = 0;\n  }\n\n  performSearch(searchConfig: UI.SearchableView.SearchConfig, _shouldJump: boolean, _jumpBackwards?: boolean): void {\n    this._searchResults = [];\n    this._currentResult = 0;\n    if (!this._root) {\n      return;\n    }\n    const searchRegex = searchConfig.toSearchRegex();\n    this._searchResults = this._root.searchTree(event => TimelineUIUtils.testContentMatching(event, searchRegex));\n    this._searchableView.updateSearchMatchesCount(this._searchResults.length);\n  }\n\n  jumpToNextSearchResult(): void {\n    if (!this._searchResults.length) {\n      return;\n    }\n    this.selectProfileNode(this._searchResults[this._currentResult], false);\n    this._currentResult = Platform.NumberUtilities.mod(this._currentResult + 1, this._searchResults.length);\n  }\n\n  jumpToPreviousSearchResult(): void {\n    if (!this._searchResults.length) {\n      return;\n    }\n    this.selectProfileNode(this._searchResults[this._currentResult], false);\n    this._currentResult = Platform.NumberUtilities.mod(this._currentResult - 1, this._searchResults.length);\n  }\n\n  supportsCaseSensitiveSearch(): boolean {\n    return true;\n  }\n\n  supportsRegexSearch(): boolean {\n    return true;\n  }\n}\n\nexport class GridNode extends DataGrid.SortableDataGrid.SortableDataGridNode<GridNode> {\n  _populated: boolean;\n  _profileNode: TimelineModel.TimelineProfileTree.Node;\n  _treeView: TimelineTreeView;\n  _grandTotalTime: number;\n  _maxSelfTime: number;\n  _maxTotalTime: number;\n  _linkElement: Element|null;\n\n  constructor(\n      profileNode: TimelineModel.TimelineProfileTree.Node, grandTotalTime: number, maxSelfTime: number,\n      maxTotalTime: number, treeView: TimelineTreeView) {\n    super(null, false);\n    this._populated = false;\n    this._profileNode = profileNode;\n    this._treeView = treeView;\n    this._grandTotalTime = grandTotalTime;\n    this._maxSelfTime = maxSelfTime;\n    this._maxTotalTime = maxTotalTime;\n    this._linkElement = null;\n  }\n\n  createCell(columnId: string): HTMLElement {\n    if (columnId === 'activity') {\n      return this._createNameCell(columnId);\n    }\n    return this._createValueCell(columnId) || super.createCell(columnId);\n  }\n\n  _createNameCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    const container = cell.createChild('div', 'name-container');\n    const iconContainer = container.createChild('div', 'activity-icon-container');\n    const icon = iconContainer.createChild('div', 'activity-icon');\n    const name = container.createChild('div', 'activity-name');\n    const event = this._profileNode.event;\n    if (this._profileNode.isGroupNode()) {\n      const treeView = (this._treeView as AggregatedTimelineTreeView);\n      const info = treeView._displayInfoForGroupNode(this._profileNode);\n      name.textContent = info.name;\n      icon.style.backgroundColor = info.color;\n      if (info.icon) {\n        iconContainer.insertBefore(info.icon, icon);\n      }\n    } else if (event) {\n      const data = event.args['data'];\n      const deoptReason = data && data['deoptReason'];\n      if (deoptReason) {\n        container.createChild('div', 'activity-warning').title =\n            i18nString(UIStrings.notOptimizedS, {PH1: deoptReason});\n      }\n\n      name.textContent = TimelineUIUtils.eventTitle(event);\n      this._linkElement = this._treeView._linkifyLocation(event);\n      if (this._linkElement) {\n        container.createChild('div', 'activity-link').appendChild(this._linkElement);\n      }\n      const eventStyle = TimelineUIUtils.eventStyle(event);\n      const eventCategory = eventStyle.category;\n      UI.ARIAUtils.setAccessibleName(icon, eventCategory.title);\n      icon.style.backgroundColor = eventCategory.color;\n    }\n    return cell;\n  }\n\n  _createValueCell(columnId: string): HTMLElement|null {\n    if (columnId !== 'self' && columnId !== 'total' && columnId !== 'startTime') {\n      return null;\n    }\n\n    let showPercents = false;\n    let value: number;\n    let maxTime: number|undefined;\n    let event: SDK.TracingModel.Event|null;\n    switch (columnId) {\n      case 'startTime':\n        event = this._profileNode.event;\n        if (!this._treeView._model) {\n          throw new Error('Unable to find model for tree view');\n        }\n        value = (event ? event.startTime : 0) - this._treeView._model.timelineModel().minimumRecordTime();\n        break;\n      case 'self':\n        value = this._profileNode.selfTime;\n        maxTime = this._maxSelfTime;\n        showPercents = true;\n        break;\n      case 'total':\n        value = this._profileNode.totalTime;\n        maxTime = this._maxTotalTime;\n        showPercents = true;\n        break;\n      default:\n        return null;\n    }\n    const cell = this.createTD(columnId);\n    cell.className = 'numeric-column';\n    const textDiv = cell.createChild('div');\n    textDiv.createChild('span').textContent = i18nString(UIStrings.fms, {PH1: value.toFixed(1)});\n\n    if (showPercents && this._treeView._exposePercentages()) {\n      textDiv.createChild('span', 'percent-column').textContent =\n          i18nString(UIStrings.percentPlaceholder, {PH1: (value / this._grandTotalTime * 100).toFixed(1)});\n    }\n    if (maxTime) {\n      textDiv.classList.add('background-percent-bar');\n      cell.createChild('div', 'background-bar-container').createChild('div', 'background-bar').style.width =\n          (value * 100 / maxTime).toFixed(1) + '%';\n    }\n    return cell;\n  }\n}\n\nexport class TreeGridNode extends GridNode {\n  constructor(\n      profileNode: TimelineModel.TimelineProfileTree.Node, grandTotalTime: number, maxSelfTime: number,\n      maxTotalTime: number, treeView: TimelineTreeView) {\n    super(profileNode, grandTotalTime, maxSelfTime, maxTotalTime, treeView);\n    this.setHasChildren(this._profileNode.hasChildren());\n    profileNodeToTreeGridNode.set(profileNode, this);\n  }\n\n  populate(): void {\n    if (this._populated) {\n      return;\n    }\n    this._populated = true;\n    if (!this._profileNode.children) {\n      return;\n    }\n    for (const node of this._profileNode.children().values()) {\n      const gridNode =\n          new TreeGridNode(node, this._grandTotalTime, this._maxSelfTime, this._maxTotalTime, this._treeView);\n      this.insertChildOrdered(gridNode);\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly _gridNodeSymbol = Symbol('treeGridNode');\n}\n\nconst profileNodeToTreeGridNode = new WeakMap<TimelineModel.TimelineProfileTree.Node, TreeGridNode>();\n\nexport class AggregatedTimelineTreeView extends TimelineTreeView {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _groupBySetting: Common.Settings.Setting<any>;\n  _stackView: TimelineStackView;\n  _productByURLCache: Map<string, string>;\n  _colorByURLCache: Map<string, string>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _executionContextNamesByOrigin: Map<any, any>;\n\n  constructor() {\n    super();\n    this._groupBySetting = Common.Settings.Settings.instance().createSetting(\n        'timelineTreeGroupBy', AggregatedTimelineTreeView.GroupBy.None);\n    this._groupBySetting.addChangeListener(this.refreshTree.bind(this));\n    this.init();\n    this._stackView = new TimelineStackView(this);\n    this._stackView.addEventListener(\n        TimelineStackView.Events.SelectionChanged, this._onStackViewSelectionChanged, this);\n    this._productByURLCache = new Map();\n    this._colorByURLCache = new Map();\n    this._executionContextNamesByOrigin = new Map();\n  }\n\n  setModel(model: PerformanceModel|null, track: TimelineModel.TimelineModel.Track|null): void {\n    super.setModel(model, track);\n  }\n\n  updateContents(selection: TimelineSelection): void {\n    this._updateExtensionResolver();\n    super.updateContents(selection);\n    const rootNode = this.dataGrid.rootNode();\n    if (rootNode.children.length) {\n      rootNode.children[0].select(/* suppressSelectedEvent */ true);\n    }\n  }\n\n  _updateExtensionResolver(): void {\n    this._executionContextNamesByOrigin = new Map();\n    for (const runtimeModel of SDK.TargetManager.TargetManager.instance().models(SDK.RuntimeModel.RuntimeModel)) {\n      for (const context of runtimeModel.executionContexts()) {\n        this._executionContextNamesByOrigin.set(context.origin, context.name);\n      }\n    }\n  }\n\n  _beautifyDomainName(this: AggregatedTimelineTreeView, name: string): string {\n    if (AggregatedTimelineTreeView._isExtensionInternalURL(name)) {\n      name = i18nString(UIStrings.chromeExtensionsOverhead);\n    } else if (AggregatedTimelineTreeView._isV8NativeURL(name)) {\n      name = i18nString(UIStrings.vRuntime);\n    } else if (name.startsWith('chrome-extension')) {\n      name = this._executionContextNamesByOrigin.get(name) || name;\n    }\n    return name;\n  }\n\n  _displayInfoForGroupNode(node: TimelineModel.TimelineProfileTree.Node): {\n    name: string,\n    color: string,\n    icon: (Element|undefined),\n  } {\n    const categories = TimelineUIUtils.categories();\n    const color =\n        node.id ? TimelineUIUtils.eventColor((node.event as SDK.TracingModel.Event)) : categories['other'].color;\n    const unattributed = i18nString(UIStrings.unattributed);\n\n    const id = typeof node.id === 'symbol' ? undefined : node.id;\n\n    switch (this._groupBySetting.get()) {\n      case AggregatedTimelineTreeView.GroupBy.Category: {\n        const category = id ? categories[id] || categories['other'] : {title: unattributed, color: unattributed};\n        return {name: category.title, color: category.color, icon: undefined};\n      }\n\n      case AggregatedTimelineTreeView.GroupBy.Domain:\n      case AggregatedTimelineTreeView.GroupBy.Subdomain: {\n        const domainName = id ? this._beautifyDomainName(id) : undefined;\n        return {name: domainName || unattributed, color: color, icon: undefined};\n      }\n\n      case AggregatedTimelineTreeView.GroupBy.EventName: {\n        if (!node.event) {\n          throw new Error('Unable to find event for group by operation');\n        }\n        const name = node.event.name === TimelineModel.TimelineModel.RecordType.JSFrame ?\n            i18nString(UIStrings.javascript) :\n            TimelineUIUtils.eventTitle(node.event);\n        return {\n          name: name,\n          color: node.event.name === TimelineModel.TimelineModel.RecordType.JSFrame ?\n              TimelineUIUtils.eventStyle(node.event).category.color :\n              color,\n          icon: undefined,\n        };\n      }\n\n      case AggregatedTimelineTreeView.GroupBy.URL:\n        break;\n\n      case AggregatedTimelineTreeView.GroupBy.Frame: {\n        if (!this._model) {\n          throw new Error('Unable to find model for group by frame operation');\n        }\n        const frame = id ? this._model.timelineModel().pageFrameById(id) : undefined;\n        const frameName = frame ? TimelineUIUtils.displayNameForFrame(frame, 80) : i18nString(UIStrings.page);\n        return {name: frameName, color: color, icon: undefined};\n      }\n\n      default:\n        console.assert(false, 'Unexpected grouping type');\n    }\n    return {name: id || unattributed, color: color, icon: undefined};\n  }\n\n  populateToolbar(toolbar: UI.Toolbar.Toolbar): void {\n    super.populateToolbar(toolbar);\n    const groupBy = AggregatedTimelineTreeView.GroupBy;\n    const options = [\n      {label: i18nString(UIStrings.noGrouping), value: groupBy.None},\n      {label: i18nString(UIStrings.groupByActivity), value: groupBy.EventName},\n      {label: i18nString(UIStrings.groupByCategory), value: groupBy.Category},\n      {label: i18nString(UIStrings.groupByDomain), value: groupBy.Domain},\n      {label: i18nString(UIStrings.groupByFrame), value: groupBy.Frame},\n      {label: i18nString(UIStrings.groupBySubdomain), value: groupBy.Subdomain},\n      {label: i18nString(UIStrings.groupByUrl), value: groupBy.URL},\n    ];\n    toolbar.appendToolbarItem(\n        new UI.Toolbar.ToolbarSettingComboBox(options, this._groupBySetting, i18nString(UIStrings.groupBy)));\n    toolbar.appendSpacer();\n    toolbar.appendToolbarItem(this.splitWidget.createShowHideSidebarButton(\n        i18nString(UIStrings.showHeaviestStack), i18nString(UIStrings.hideHeaviestStack)));\n  }\n\n  _buildHeaviestStack(treeNode: TimelineModel.TimelineProfileTree.Node): TimelineModel.TimelineProfileTree.Node[] {\n    console.assert(Boolean(treeNode.parent), 'Attempt to build stack for tree root');\n    let result: TimelineModel.TimelineProfileTree.Node[] = [];\n    // Do not add root to the stack, as it's the tree itself.\n    for (let node: TimelineModel.TimelineProfileTree.Node = treeNode; node && node.parent; node = node.parent) {\n      result.push(node);\n    }\n    result = result.reverse();\n    for (let node: TimelineModel.TimelineProfileTree.Node = treeNode;\n         node && node.children() && node.children().size;) {\n      const children = Array.from(node.children().values());\n      node = children.reduce((a, b) => a.totalTime > b.totalTime ? a : b);\n      result.push(node);\n    }\n    return result;\n  }\n\n  _exposePercentages(): boolean {\n    return true;\n  }\n\n  _onStackViewSelectionChanged(): void {\n    const treeNode = this._stackView.selectedTreeNode();\n    if (treeNode) {\n      this.selectProfileNode(treeNode, true);\n    }\n  }\n\n  _showDetailsForNode(node: TimelineModel.TimelineProfileTree.Node): boolean {\n    const stack = this._buildHeaviestStack(node);\n    this._stackView.setStack(stack, node);\n    this._stackView.show(this.detailsView.element);\n    return true;\n  }\n\n  _groupingFunction(groupBy: string): ((arg0: SDK.TracingModel.Event) => string)|null {\n    const GroupBy = AggregatedTimelineTreeView.GroupBy;\n    switch (groupBy) {\n      case GroupBy.None:\n        return null;\n      case GroupBy.EventName:\n        return (event: SDK.TracingModel.Event): string => TimelineUIUtils.eventStyle(event).title;\n      case GroupBy.Category:\n        return (event: SDK.TracingModel.Event): string => TimelineUIUtils.eventStyle(event).category.name;\n      case GroupBy.Subdomain:\n        return this._domainByEvent.bind(this, false);\n      case GroupBy.Domain:\n        return this._domainByEvent.bind(this, true);\n      case GroupBy.URL:\n        return (event: SDK.TracingModel.Event): string => TimelineModel.TimelineProfileTree.eventURL(event) || '';\n      case GroupBy.Frame:\n        return (event: SDK.TracingModel.Event): string =>\n                   TimelineModel.TimelineModel.TimelineData.forEvent(event).frameId;\n      default:\n        console.assert(false, `Unexpected aggregation setting: ${groupBy}`);\n        return null;\n    }\n  }\n\n  _domainByEvent(groupSubdomains: boolean, event: SDK.TracingModel.Event): string {\n    const url = TimelineModel.TimelineProfileTree.eventURL(event);\n    if (!url) {\n      return '';\n    }\n    if (AggregatedTimelineTreeView._isExtensionInternalURL(url)) {\n      return AggregatedTimelineTreeView._extensionInternalPrefix;\n    }\n    if (AggregatedTimelineTreeView._isV8NativeURL(url)) {\n      return AggregatedTimelineTreeView._v8NativePrefix;\n    }\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(url);\n    if (!parsedURL) {\n      return '';\n    }\n    if (parsedURL.scheme === 'chrome-extension') {\n      return parsedURL.scheme + '://' + parsedURL.host;\n    }\n    if (!groupSubdomains) {\n      return parsedURL.host;\n    }\n    if (/^[.0-9]+$/.test(parsedURL.host)) {\n      return parsedURL.host;\n    }\n    const domainMatch = /([^.]*\\.)?[^.]*$/.exec(parsedURL.host);\n    return domainMatch && domainMatch[0] || '';\n  }\n\n  _appendContextMenuItems(contextMenu: UI.ContextMenu.ContextMenu, node: TimelineModel.TimelineProfileTree.Node): void {\n    if (this._groupBySetting.get() !== AggregatedTimelineTreeView.GroupBy.Frame) {\n      return;\n    }\n    if (!node.isGroupNode()) {\n      return;\n    }\n    if (!this._model) {\n      return;\n    }\n    const frame = this._model.timelineModel().pageFrameById((node.id as string));\n    if (!frame || !frame.ownerNode) {\n      return;\n    }\n    contextMenu.appendApplicableItems(frame.ownerNode);\n  }\n\n  static _isExtensionInternalURL(url: string): boolean {\n    return url.startsWith(AggregatedTimelineTreeView._extensionInternalPrefix);\n  }\n\n  static _isV8NativeURL(url: string): boolean {\n    return url.startsWith(AggregatedTimelineTreeView._v8NativePrefix);\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly _extensionInternalPrefix = 'extensions::';\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly _v8NativePrefix = 'native ';\n}\nexport namespace AggregatedTimelineTreeView {\n  // TODO(crbug.com/1167717): Make this a const enum again\n  // eslint-disable-next-line rulesdir/const_enum\n  export enum GroupBy {\n    None = 'None',\n    EventName = 'EventName',\n    Category = 'Category',\n    Domain = 'Domain',\n    Subdomain = 'Subdomain',\n    URL = 'URL',\n    Frame = 'Frame',\n  }\n}\n\nexport class CallTreeTimelineTreeView extends AggregatedTimelineTreeView {\n  constructor() {\n    super();\n    this.dataGrid.markColumnAsSortedBy('total', DataGrid.DataGrid.Order.Descending);\n  }\n\n  getToolbarInputAccessiblePlaceHolder(): string {\n    return i18nString(UIStrings.filterCallTree);\n  }\n\n  _buildTree(): TimelineModel.TimelineProfileTree.Node {\n    const grouping = this._groupBySetting.get();\n    return this.buildTopDownTree(false, this._groupingFunction(grouping));\n  }\n}\n\nexport class BottomUpTimelineTreeView extends AggregatedTimelineTreeView {\n  constructor() {\n    super();\n    this.dataGrid.markColumnAsSortedBy('self', DataGrid.DataGrid.Order.Descending);\n  }\n\n  getToolbarInputAccessiblePlaceHolder(): string {\n    return i18nString(UIStrings.filterBottomup);\n  }\n\n  _buildTree(): TimelineModel.TimelineProfileTree.Node {\n    return new TimelineModel.TimelineProfileTree.BottomUpRootNode(\n        this._modelEvents(), this.textFilter(), this.filtersWithoutTextFilter(), this._startTime, this._endTime,\n        this._groupingFunction(this._groupBySetting.get()));\n  }\n}\n\nexport class TimelineStackView extends UI.Widget.VBox {\n  _treeView: TimelineTreeView;\n  _dataGrid: DataGrid.ViewportDataGrid.ViewportDataGrid<unknown>;\n\n  constructor(treeView: TimelineTreeView) {\n    super();\n    const header = this.element.createChild('div', 'timeline-stack-view-header');\n    header.textContent = i18nString(UIStrings.heaviestStack);\n    this._treeView = treeView;\n    const columns = ([\n      {id: 'total', title: i18nString(UIStrings.totalTime), fixedWidth: true, width: '110px'},\n      {id: 'activity', title: i18nString(UIStrings.activity)},\n    ] as DataGrid.DataGrid.ColumnDescriptor[]);\n    this._dataGrid = new DataGrid.ViewportDataGrid.ViewportDataGrid({\n      displayName: i18nString(UIStrings.timelineStack),\n      columns,\n      deleteCallback: undefined,\n      editCallback: undefined,\n      refreshCallback: undefined,\n    });\n    this._dataGrid.setResizeMethod(DataGrid.DataGrid.ResizeMethod.Last);\n    this._dataGrid.addEventListener(DataGrid.DataGrid.Events.SelectedNode, this._onSelectionChanged, this);\n    this._dataGrid.asWidget().show(this.element);\n  }\n\n  setStack(stack: TimelineModel.TimelineProfileTree.Node[], selectedNode: TimelineModel.TimelineProfileTree.Node):\n      void {\n    const rootNode = this._dataGrid.rootNode();\n    rootNode.removeChildren();\n    let nodeToReveal: GridNode|null = null;\n    const totalTime = Math.max.apply(Math, stack.map(node => node.totalTime));\n    for (const node of stack) {\n      const gridNode = new GridNode(node, totalTime, totalTime, totalTime, this._treeView);\n      rootNode.appendChild(gridNode);\n      if (node === selectedNode) {\n        nodeToReveal = gridNode;\n      }\n    }\n    if (nodeToReveal) {\n      nodeToReveal.revealAndSelect();\n    }\n  }\n\n  selectedTreeNode(): TimelineModel.TimelineProfileTree.Node|null {\n    const selectedNode = this._dataGrid.selectedNode;\n    return selectedNode && (selectedNode as GridNode)._profileNode;\n  }\n\n  _onSelectionChanged(): void {\n    this.dispatchEventToListeners(TimelineStackView.Events.SelectionChanged);\n  }\n}\n\nexport namespace TimelineStackView {\n  // TODO(crbug.com/1167717): Make this a const enum again\n  // eslint-disable-next-line rulesdir/const_enum\n  export enum Events {\n    SelectionChanged = 'SelectionChanged',\n  }\n}\n"]}