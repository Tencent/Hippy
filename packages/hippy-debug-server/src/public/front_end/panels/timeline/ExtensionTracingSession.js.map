{"version":3,"file":"ExtensionTracingSession.js","sourceRoot":"","sources":["../../../../../../front_end/panels/timeline/ExtensionTracingSession.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAS7B,OAAO,EAAC,cAAc,EAAC,MAAM,qBAAqB,CAAC,CAAE,qCAAqC;AAE1F,MAAM,OAAO,uBAAuB;IAClC,SAAS,CAA2D;IACpE,iBAAiB,CAAmB;IACpC,mBAAmB,CAAc;IACjC,kBAAkB,CAAgB;IAClC,WAAW,CAAS;IAEpB,YAAY,QAAkE,EAAE,gBAAkC;QAChH,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC1B,IAAI,CAAC,iBAAiB,GAAG,gBAAgB,CAAC;QAC1C,IAAI,CAAC,kBAAkB,GAAG,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC9C,IAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACvB,CAAC;IAED,cAAc;IACd,CAAC;IAED,iBAAiB;IACjB,CAAC;IAED,eAAe,CAAC,SAAkB;IAClC,CAAC;IAED,eAAe,CAAC,YAAgD;QAC9D,IAAI,CAAC,YAAY,EAAE;YACjB,OAAO;SACR;QACD,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE,EAAE,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC5G,IAAI,CAAC,mBAAmB,EAAE,CAAC;IAC7B,CAAC;IAED,QAAQ,CAAC,GAAW,EAAE,sBAA8B;QAClD,IAAI,CAAC,GAAG,EAAE;YACR,IAAI,CAAC,mBAAmB,EAAE,CAAC;YAC3B,OAAO;SACR;QACD,IAAI,CAAC,WAAW,GAAG,sBAAsB,CAAC;QAC1C,cAAc,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IACxC,CAAC;IAED,KAAK;QACH,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAED,IAAI;QACF,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;QACtB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;CACF","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as SDK from '../../core/sdk/sdk.js';                        // eslint-disable-line no-unused-vars\nimport type * as Extensions from '../../models/extensions/extensions.js'; // eslint-disable-line no-unused-vars\n\nimport type {PerformanceModel} from './PerformanceModel.js'; // eslint-disable-line no-unused-vars\nimport type {Client} from './TimelineLoader.js';\nimport {TimelineLoader} from './TimelineLoader.js';  // eslint-disable-line no-unused-vars\n\nexport class ExtensionTracingSession implements Extensions.ExtensionTraceProvider.TracingSession, Client {\n  _provider: Extensions.ExtensionTraceProvider.ExtensionTraceProvider;\n  _performanceModel: PerformanceModel;\n  _completionCallback!: () => void;\n  _completionPromise: Promise<void>;\n  _timeOffset: number;\n\n  constructor(provider: Extensions.ExtensionTraceProvider.ExtensionTraceProvider, performanceModel: PerformanceModel) {\n    this._provider = provider;\n    this._performanceModel = performanceModel;\n    this._completionPromise = new Promise(fulfill => {\n      this._completionCallback = fulfill;\n    });\n    this._timeOffset = 0;\n  }\n\n  loadingStarted(): void {\n  }\n\n  processingStarted(): void {\n  }\n\n  loadingProgress(_progress?: number): void {\n  }\n\n  loadingComplete(tracingModel: SDK.TracingModel.TracingModel|null): void {\n    if (!tracingModel) {\n      return;\n    }\n    this._performanceModel.addExtensionEvents(this._provider.longDisplayName(), tracingModel, this._timeOffset);\n    this._completionCallback();\n  }\n\n  complete(url: string, timeOffsetMicroseconds: number): void {\n    if (!url) {\n      this._completionCallback();\n      return;\n    }\n    this._timeOffset = timeOffsetMicroseconds;\n    TimelineLoader.loadFromURL(url, this);\n  }\n\n  start(): void {\n    this._provider.start(this);\n  }\n\n  stop(): Promise<void> {\n    this._provider.stop();\n    return this._completionPromise;\n  }\n}\n"]}