{"version":3,"file":"CSSOverviewPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport type {ContrastIssue} from './CSSOverviewCompletedView.js';\nimport {CSSOverviewCompletedView} from './CSSOverviewCompletedView.js';\nimport {Events, OverviewController} from './CSSOverviewController.js';\nimport type {GlobalStyleStats} from './CSSOverviewModel.js';\nimport {CSSOverviewModel} from './CSSOverviewModel.js';\nimport {CSSOverviewProcessingView} from './CSSOverviewProcessingView.js';\nimport {CSSOverviewStartView} from './CSSOverviewStartView.js';\nimport type {UnusedDeclaration} from './CSSOverviewUnusedDeclarations.js';\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet CSSOverviewPanelInstance: CSSOverviewPanel;\n\nexport class CSSOverviewPanel extends UI.Panel.Panel {\n  _model: CSSOverviewModel;\n  _controller: OverviewController;\n  _startView: CSSOverviewStartView;\n  _processingView: CSSOverviewProcessingView;\n  _completedView: CSSOverviewCompletedView;\n  _backgroundColors?: Map<string, Set<number>>;\n  _textColors?: Map<string, Set<number>>;\n  _fillColors?: Map<string, Set<number>>;\n  _borderColors?: Map<string, Set<number>>;\n  _fontInfo?: Map<string, Map<string, Map<string, number[]>>>;\n  _mediaQueries?: Map<string, Protocol.CSS.CSSMedia[]>;\n  _unusedDeclarations?: Map<string, UnusedDeclaration[]>;\n  _elementCount?: number;\n  _cancelled?: boolean;\n  _globalStyleStats?: GlobalStyleStats;\n  _textColorContrastIssues?: Map<string, ContrastIssue[]>;\n\n  private constructor() {\n    super('css_overview');\n    this.registerRequiredCSS('panels/css_overview/cssOverview.css', {enableLegacyPatching: false});\n    this.element.classList.add('css-overview-panel');\n\n    const [model] = SDK.TargetManager.TargetManager.instance().models(CSSOverviewModel);\n    this._model = (model as CSSOverviewModel);\n\n    this._controller = new OverviewController();\n    this._startView = new CSSOverviewStartView(this._controller);\n    this._processingView = new CSSOverviewProcessingView(this._controller);\n    this._completedView = new CSSOverviewCompletedView(this._controller, model.target());\n\n    this._controller.addEventListener(Events.RequestOverviewStart, _event => {\n      Host.userMetrics.actionTaken(Host.UserMetrics.Action.CaptureCssOverviewClicked);\n      this._startOverview();\n    }, this);\n    this._controller.addEventListener(Events.RequestOverviewCancel, this._cancelOverview, this);\n    this._controller.addEventListener(Events.OverviewCompleted, this._overviewCompleted, this);\n    this._controller.addEventListener(Events.Reset, this._reset, this);\n    this._controller.addEventListener(Events.RequestNodeHighlight, this._requestNodeHighlight, this);\n\n    this._reset();\n  }\n\n  static instance(): CSSOverviewPanel {\n    if (!CSSOverviewPanelInstance) {\n      CSSOverviewPanelInstance = new CSSOverviewPanel();\n    }\n    return CSSOverviewPanelInstance;\n  }\n\n  _reset(): void {\n    this._backgroundColors = new Map();\n    this._textColors = new Map();\n    this._fillColors = new Map();\n    this._borderColors = new Map();\n    this._fontInfo = new Map();\n    this._mediaQueries = new Map();\n    this._unusedDeclarations = new Map();\n    this._elementCount = 0;\n    this._cancelled = false;\n    this._globalStyleStats = {\n      styleRules: 0,\n      inlineStyles: 0,\n      externalSheets: 0,\n      stats: {\n        // Simple.\n        type: 0,\n        class: 0,\n        id: 0,\n        universal: 0,\n        attribute: 0,\n\n        // Non-simple.\n        nonSimple: 0,\n      },\n    };\n    this._renderInitialView();\n  }\n\n  _requestNodeHighlight(evt: Common.EventTarget.EventTargetEvent): void {\n    this._model.highlightNode((evt.data as number));\n  }\n\n  _renderInitialView(): void {\n    this._processingView.hideWidget();\n    this._completedView.hideWidget();\n\n    this._startView.show(this.contentElement);\n  }\n\n  _renderOverviewStartedView(): void {\n    this._startView.hideWidget();\n    this._completedView.hideWidget();\n\n    this._processingView.show(this.contentElement);\n  }\n\n  _renderOverviewCompletedView(): void {\n    this._startView.hideWidget();\n    this._processingView.hideWidget();\n\n    this._completedView.show(this.contentElement);\n    this._completedView.setOverviewData({\n      backgroundColors: (this._backgroundColors as Map<string, Set<number>>),\n      textColors: (this._textColors as Map<string, Set<number>>),\n      textColorContrastIssues: (this._textColorContrastIssues as Map<string, ContrastIssue[]>),\n      fillColors: (this._fillColors as Map<string, Set<number>>),\n      borderColors: (this._borderColors as Map<string, Set<number>>),\n      globalStyleStats: this._globalStyleStats as GlobalStyleStats,\n      fontInfo: (this._fontInfo as Map<string, Map<string, Map<string, number[]>>>),\n      elementCount: (this._elementCount as number),\n      mediaQueries: (this._mediaQueries as Map<string, Protocol.CSS.CSSMedia[]>),\n      unusedDeclarations: (this._unusedDeclarations as Map<string, UnusedDeclaration[]>),\n    });\n  }\n\n  async _startOverview(): Promise<void> {\n    this._renderOverviewStartedView();\n\n    const [globalStyleStats, { elementCount, backgroundColors, textColors, textColorContrastIssues, fillColors, borderColors, fontInfo, unusedDeclarations }, mediaQueries] = await Promise.all([\n      this._model.getGlobalStylesheetStats(),\n      this._model.getNodeStyleStats(),\n      this._model.getMediaQueries(),\n    ]);\n\n    if (elementCount) {\n      this._elementCount = elementCount;\n    }\n\n    if (globalStyleStats) {\n      this._globalStyleStats = globalStyleStats;\n    }\n\n    if (mediaQueries) {\n      this._mediaQueries = mediaQueries;\n    }\n\n    if (backgroundColors) {\n      this._backgroundColors = backgroundColors;\n    }\n\n    if (textColors) {\n      this._textColors = textColors;\n    }\n\n    if (textColorContrastIssues) {\n      this._textColorContrastIssues = textColorContrastIssues;\n    }\n\n    if (fillColors) {\n      this._fillColors = fillColors;\n    }\n\n    if (borderColors) {\n      this._borderColors = borderColors;\n    }\n\n    if (fontInfo) {\n      this._fontInfo = fontInfo;\n    }\n\n    if (unusedDeclarations) {\n      this._unusedDeclarations = unusedDeclarations;\n    }\n\n    this._controller.dispatchEventToListeners(Events.OverviewCompleted);\n  }\n\n  _getStyleValue(styles: Protocol.CSS.CSSComputedStyleProperty[], name: string): string|undefined {\n    const item = styles.filter(style => style.name === name);\n    if (!item.length) {\n      return;\n    }\n\n    return item[0].value;\n  }\n\n  _cancelOverview(): void {\n    this._cancelled = true;\n  }\n\n  _overviewCompleted(): void {\n    this._renderOverviewCompletedView();\n  }\n}\n"]}