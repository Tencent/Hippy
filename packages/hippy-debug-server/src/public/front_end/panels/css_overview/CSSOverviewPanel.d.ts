import type * as Common from '../../core/common/common.js';
import * as UI from '../../ui/legacy/legacy.js';
import type * as Protocol from '../../generated/protocol.js';
import type { ContrastIssue } from './CSSOverviewCompletedView.js';
import { CSSOverviewCompletedView } from './CSSOverviewCompletedView.js';
import { OverviewController } from './CSSOverviewController.js';
import type { GlobalStyleStats } from './CSSOverviewModel.js';
import { CSSOverviewModel } from './CSSOverviewModel.js';
import { CSSOverviewProcessingView } from './CSSOverviewProcessingView.js';
import { CSSOverviewStartView } from './CSSOverviewStartView.js';
import type { UnusedDeclaration } from './CSSOverviewUnusedDeclarations.js';
export declare class CSSOverviewPanel extends UI.Panel.Panel {
    _model: CSSOverviewModel;
    _controller: OverviewController;
    _startView: CSSOverviewStartView;
    _processingView: CSSOverviewProcessingView;
    _completedView: CSSOverviewCompletedView;
    _backgroundColors?: Map<string, Set<number>>;
    _textColors?: Map<string, Set<number>>;
    _fillColors?: Map<string, Set<number>>;
    _borderColors?: Map<string, Set<number>>;
    _fontInfo?: Map<string, Map<string, Map<string, number[]>>>;
    _mediaQueries?: Map<string, Protocol.CSS.CSSMedia[]>;
    _unusedDeclarations?: Map<string, UnusedDeclaration[]>;
    _elementCount?: number;
    _cancelled?: boolean;
    _globalStyleStats?: GlobalStyleStats;
    _textColorContrastIssues?: Map<string, ContrastIssue[]>;
    private constructor();
    static instance(): CSSOverviewPanel;
    _reset(): void;
    _requestNodeHighlight(evt: Common.EventTarget.EventTargetEvent): void;
    _renderInitialView(): void;
    _renderOverviewStartedView(): void;
    _renderOverviewCompletedView(): void;
    _startOverview(): Promise<void>;
    _getStyleValue(styles: Protocol.CSS.CSSComputedStyleProperty[], name: string): string | undefined;
    _cancelOverview(): void;
    _overviewCompleted(): void;
}
