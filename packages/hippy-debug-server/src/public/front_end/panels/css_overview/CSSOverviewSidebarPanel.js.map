{"version":3,"file":"CSSOverviewSidebarPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewSidebarPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Label for the 'Clear overview' button in the CSS Overview report\n  */\n  clearOverview: 'Clear overview',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/css_overview/CSSOverviewSidebarPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class CSSOverviewSidebarPanel extends UI.Widget.VBox {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static get ITEM_CLASS_NAME(): string {\n    return 'overview-sidebar-panel-item';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static get SELECTED(): string {\n    return 'selected';\n  }\n\n  constructor() {\n    super(true);\n\n    this.registerRequiredCSS('panels/css_overview/cssOverviewSidebarPanel.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('overview-sidebar-panel');\n    this.contentElement.addEventListener('click', this._onItemClick.bind(this));\n\n    // Clear overview.\n    const clearResultsButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clearOverview), 'largeicon-clear');\n    clearResultsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, this._reset, this);\n\n    // Toolbar.\n    const toolbarElement = this.contentElement.createChild('div', 'overview-toolbar');\n    const toolbar = new UI.Toolbar.Toolbar('', toolbarElement);\n    toolbar.appendToolbarItem(clearResultsButton);\n  }\n\n  addItem(name: string, id: string): void {\n    const item = this.contentElement.createChild('div', CSSOverviewSidebarPanel.ITEM_CLASS_NAME);\n    item.textContent = name;\n    item.dataset.id = id;\n  }\n\n  _reset(): void {\n    this.dispatchEventToListeners(SidebarEvents.Reset);\n  }\n\n  _deselectAllItems(): void {\n    const items = this.contentElement.querySelectorAll(`.${CSSOverviewSidebarPanel.ITEM_CLASS_NAME}`);\n    items.forEach(item => {\n      item.classList.remove(CSSOverviewSidebarPanel.SELECTED);\n    });\n  }\n\n  _onItemClick(event: Event): void {\n    const target = (event.composedPath()[0] as HTMLElement);\n    if (!target.classList.contains(CSSOverviewSidebarPanel.ITEM_CLASS_NAME)) {\n      return;\n    }\n\n    const {id} = target.dataset;\n    if (!id) {\n      return;\n    }\n    this.select(id);\n    this.dispatchEventToListeners(SidebarEvents.ItemSelected, id);\n  }\n\n  select(id: string): void {\n    const target = this.contentElement.querySelector(`[data-id=${CSS.escape(id)}]`);\n    if (!target) {\n      return;\n    }\n\n    if (target.classList.contains(CSSOverviewSidebarPanel.SELECTED)) {\n      return;\n    }\n\n    this._deselectAllItems();\n    target.classList.add(CSSOverviewSidebarPanel.SELECTED);\n  }\n}\n\nexport const enum SidebarEvents {\n  ItemSelected = 'ItemSelected',\n  Reset = 'Reset',\n}\n"]}