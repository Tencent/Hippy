{"version":3,"file":"CSSOverviewController.js","sourceRoot":"","sources":["../../../../../../front_end/panels/css_overview/CSSOverviewController.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AACtD,OAAO,KAAK,GAAG,MAAM,uBAAuB,CAAC;AAE7C,MAAM,OAAO,kBAAmB,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAa;IACxE,UAAU,CAAS;IACnB;QACE,KAAK,EAAE,CAAC;QAER,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC;QAC5E,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,gBAAgB,CACvD,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,mBAAmB,EAAE,IAAI,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;IAC3F,CAAC;IAED,0BAA0B;QACxB,IAAI,IAAI,CAAC,UAAU,KAAK,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,EAAE;YACjF,OAAO;SACR;QAED,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,YAAY,EAAE,CAAC;QAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC9C,CAAC;CACF;AAED,MAAM,CAAC,MAAM,MAAM,GAAG;IACpB,oBAAoB,EAAE,MAAM,CAAC,sBAAsB,CAAC;IACpD,oBAAoB,EAAE,MAAM,CAAC,sBAAsB,CAAC;IACpD,aAAa,EAAE,MAAM,CAAC,eAAe,CAAC;IACtC,qBAAqB,EAAE,MAAM,CAAC,uBAAuB,CAAC;IACtD,iBAAiB,EAAE,MAAM,CAAC,mBAAmB,CAAC;IAC9C,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC;CACvB,CAAC","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as SDK from '../../core/sdk/sdk.js';\n\nexport class OverviewController extends Common.ObjectWrapper.ObjectWrapper {\n  currentUrl: string;\n  constructor() {\n    super();\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    SDK.TargetManager.TargetManager.instance().addEventListener(\n        SDK.TargetManager.Events.InspectedURLChanged, this._checkUrlAndResetIfChanged, this);\n  }\n\n  _checkUrlAndResetIfChanged(): void {\n    if (this.currentUrl === SDK.TargetManager.TargetManager.instance().inspectedURL()) {\n      return;\n    }\n\n    this.currentUrl = SDK.TargetManager.TargetManager.instance().inspectedURL();\n    this.dispatchEventToListeners(Events.Reset);\n  }\n}\n\nexport const Events = {\n  RequestOverviewStart: Symbol('RequestOverviewStart'),\n  RequestNodeHighlight: Symbol('RequestNodeHighlight'),\n  PopulateNodes: Symbol('PopulateNodes'),\n  RequestOverviewCancel: Symbol('RequestOverviewCancel'),\n  OverviewCompleted: Symbol('OverviewCompleted'),\n  Reset: Symbol('Reset'),\n};\n"]}