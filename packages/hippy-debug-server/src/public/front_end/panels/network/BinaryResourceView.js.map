{"version":3,"file":"BinaryResourceView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/BinaryResourceView.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';  // eslint-disable-line no-unused-vars\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js'; // eslint-disable-line no-unused-vars\nimport * as SourceFrame from '../../ui/legacy/components/source_frame/source_frame.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  * @description Text in Binary Resource View of the Network panel. Shown to the user as a status\n  * message after the current text has been copied to the clipboard. Base64 is a format for encoding\n  * data.\n  */\n  copiedAsBase: 'Copied as `Base64`',\n  /**\n  *@description Text in Binary Resource View of the Network panel\n  */\n  hexViewer: '`Hex` Viewer',\n  /**\n  * @description Text in Binary Resource View of the Network panel. Shown to the user as a status\n  * message after the current text has been copied to the clipboard. Hex is short for hexadecimal,\n  * and is a format for encoding data.\n  */\n  copiedAsHex: 'Copied as `Hex`',\n  /**\n  *@description Text in Binary Resource View of the Network panel. Shown to the user as a status\n  * message after the current text has been copied to the clipboard. UTF-8 is a format for encoding data.\n  */\n  copiedAsUtf: 'Copied as `UTF-8`',\n  /**\n  *@description Screen reader label for a select box that chooses how to display binary data in the Network panel\n  */\n  binaryViewType: 'Binary view type',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon copy button in the Binary Resource View of the Network panel\n  */\n  copyToClipboard: 'Copy to clipboard',\n  /**\n  * @description A context menu command in the Binary Resource View of the Network panel, for\n  * copying to the clipboard. Base64 is a format for encoding data.\n  */\n  copyAsBase: 'Copy as `Base64`',\n  /**\n  *@description A context menu command in the Binary Resource View of the Network panel, for copying\n  * to the clipboard. Hex is short for hexadecimal, and is a format for encoding data.\n  */\n  copyAsHex: 'Copy as `Hex`',\n  /**\n  *@description A context menu command in the Binary Resource View of the Network panel, for copying\n  *to the clipboard. UTF-8 is a format for encoding data.\n  */\n  copyAsUtf: 'Copy as `UTF-8`',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/BinaryResourceView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class BinaryResourceView extends UI.Widget.VBox {\n  _binaryResourceViewFactory: SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory;\n  _toolbar: UI.Toolbar.Toolbar;\n  _binaryViewObjects: BinaryViewObject[];\n  _binaryViewTypeSetting: Common.Settings.Setting<string>;\n  _binaryViewTypeCombobox: UI.Toolbar.ToolbarComboBox;\n  _copiedText: UI.Toolbar.ToolbarText;\n  _addFadeoutSettimeoutId: number|null;\n  _lastView: UI.Widget.Widget|null;\n\n  constructor(base64content: string, contentUrl: string, resourceType: Common.ResourceType.ResourceType) {\n    super();\n    this.registerRequiredCSS('panels/network/binaryResourceView.css', {enableLegacyPatching: false});\n\n    this._binaryResourceViewFactory =\n        new SourceFrame.BinaryResourceViewFactory.BinaryResourceViewFactory(base64content, contentUrl, resourceType);\n\n    this._toolbar = new UI.Toolbar.Toolbar('binary-view-toolbar', this.element);\n\n    this._binaryViewObjects = [\n      new BinaryViewObject(\n          'base64', i18n.i18n.lockedString('Base64'), i18nString(UIStrings.copiedAsBase),\n          this._binaryResourceViewFactory.createBase64View.bind(this._binaryResourceViewFactory),\n          this._binaryResourceViewFactory.base64.bind(this._binaryResourceViewFactory)),\n      new BinaryViewObject(\n          'hex', i18nString(UIStrings.hexViewer), i18nString(UIStrings.copiedAsHex),\n          this._binaryResourceViewFactory.createHexView.bind(this._binaryResourceViewFactory),\n          this._binaryResourceViewFactory.hex.bind(this._binaryResourceViewFactory)),\n      new BinaryViewObject(\n          'utf8', i18n.i18n.lockedString('UTF-8'), i18nString(UIStrings.copiedAsUtf),\n          this._binaryResourceViewFactory.createUtf8View.bind(this._binaryResourceViewFactory),\n          this._binaryResourceViewFactory.utf8.bind(this._binaryResourceViewFactory)),\n    ];\n    this._binaryViewTypeSetting = Common.Settings.Settings.instance().createSetting('binaryViewType', 'hex');\n    this._binaryViewTypeCombobox =\n        new UI.Toolbar.ToolbarComboBox(this._binaryViewTypeChanged.bind(this), i18nString(UIStrings.binaryViewType));\n    for (const viewObject of this._binaryViewObjects) {\n      this._binaryViewTypeCombobox.addOption(\n          this._binaryViewTypeCombobox.createOption(viewObject.label, viewObject.type));\n    }\n    this._toolbar.appendToolbarItem(this._binaryViewTypeCombobox);\n\n    const copyButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.copyToClipboard), 'largeicon-copy');\n    copyButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      this._copySelectedViewToClipboard();\n    }, this);\n    this._toolbar.appendToolbarItem(copyButton);\n\n    this._copiedText = new UI.Toolbar.ToolbarText();\n    this._copiedText.element.classList.add('binary-view-copied-text');\n    this._toolbar.element.appendChild(this._copiedText.element);\n\n    this._addFadeoutSettimeoutId = null;\n\n    this._lastView = null;\n    this._updateView();\n  }\n\n  _getCurrentViewObject(): BinaryViewObject|null {\n    const filter = (obj: BinaryViewObject): boolean => obj.type === this._binaryViewTypeSetting.get();\n    const binaryViewObject = this._binaryViewObjects.find(filter);\n    console.assert(\n        Boolean(binaryViewObject),\n        `No binary view found for binary view type found in setting 'binaryViewType': ${\n            this._binaryViewTypeSetting.get()}`);\n    return binaryViewObject || null;\n  }\n\n  async _copySelectedViewToClipboard(): Promise<void> {\n    const viewObject = this._getCurrentViewObject();\n    if (!viewObject) {\n      return;\n    }\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText((await viewObject.content()).content);\n    this._copiedText.setText(viewObject.copiedMessage);\n    this._copiedText.element.classList.remove('fadeout');\n    function addFadeoutClass(this: BinaryResourceView): void {\n      this._copiedText.element.classList.add('fadeout');\n    }\n    if (this._addFadeoutSettimeoutId) {\n      clearTimeout(this._addFadeoutSettimeoutId);\n      this._addFadeoutSettimeoutId = null;\n    }\n    this._addFadeoutSettimeoutId = window.setTimeout(addFadeoutClass.bind(this), 2000);\n  }\n\n  wasShown(): void {\n    this._updateView();\n  }\n\n  _updateView(): void {\n    const newViewObject = this._getCurrentViewObject();\n    if (!newViewObject) {\n      return;\n    }\n\n    const newView = newViewObject.getView();\n    if (newView === this._lastView) {\n      return;\n    }\n\n    if (this._lastView) {\n      this._lastView.detach();\n    }\n    this._lastView = newView;\n\n    newView.show(this.element, this._toolbar.element);\n    this._binaryViewTypeCombobox.selectElement().value = this._binaryViewTypeSetting.get();\n  }\n\n  _binaryViewTypeChanged(): void {\n    const selectedOption = (this._binaryViewTypeCombobox.selectedOption() as HTMLOptionElement | null);\n    if (!selectedOption) {\n      return;\n    }\n    const newViewType = selectedOption.value;\n    if (this._binaryViewTypeSetting.get() === newViewType) {\n      return;\n    }\n    this._binaryViewTypeSetting.set(newViewType);\n    this._updateView();\n  }\n\n  addCopyToContextMenu(contextMenu: UI.ContextMenu.ContextMenu, submenuItemText: string): void {\n    const copyMenu = contextMenu.clipboardSection().appendSubMenuItem(submenuItemText);\n    const footerSection = copyMenu.footerSection();\n\n    footerSection.appendItem(i18nString(UIStrings.copyAsBase), async () => {\n      const content = await this._binaryResourceViewFactory.base64();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(content.content);\n    });\n    footerSection.appendItem(i18nString(UIStrings.copyAsHex), async () => {\n      const content = await this._binaryResourceViewFactory.hex();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(content.content);\n    });\n    footerSection.appendItem(i18nString(UIStrings.copyAsUtf), async () => {\n      const content = await this._binaryResourceViewFactory.utf8();\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.copyText(content.content);\n    });\n  }\n}\n\nexport class BinaryViewObject {\n  type: string;\n  label: string;\n  copiedMessage: string;\n  content: () => Promise<TextUtils.ContentProvider.DeferredContent>;\n  _createViewFn: () => UI.Widget.Widget;\n  _view: UI.Widget.Widget|null;\n\n  constructor(\n      type: string, label: string, copiedMessage: string, createViewFn: () => UI.Widget.Widget,\n      deferredContent: () => Promise<TextUtils.ContentProvider.DeferredContent>) {\n    this.type = type;\n    this.label = label;\n    this.copiedMessage = copiedMessage;\n    this.content = deferredContent;\n    this._createViewFn = createViewFn;\n\n    this._view = null;\n  }\n\n  getView(): UI.Widget.Widget {\n    if (!this._view) {\n      this._view = this._createViewFn();\n    }\n    return this._view;\n  }\n}\n"]}