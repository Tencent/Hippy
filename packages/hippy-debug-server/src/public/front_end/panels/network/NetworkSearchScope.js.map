{"version":3,"file":"NetworkSearchScope.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkSearchScope.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js'; // eslint-disable-line no-unused-vars\nimport * as i18n from '../../core/i18n/i18n.js';\nimport type * as SDK from '../../core/sdk/sdk.js'; // eslint-disable-line no-unused-vars\nimport * as Logs from '../../models/logs/logs.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js'; // eslint-disable-line no-unused-vars\nimport type * as Search from '../search/search.js';                      // eslint-disable-line no-unused-vars\n\nconst UIStrings = {\n  /**\n  *@description Text for web URLs\n  */\n  url: 'URL',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkSearchScope.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport class NetworkSearchScope implements Search.SearchConfig.SearchScope {\n  performIndexing(progress: Common.Progress.Progress): void {\n    queueMicrotask(() => {\n      progress.done();\n    });\n  }\n\n  async performSearch(\n      searchConfig: Search.SearchConfig.SearchConfig, progress: Common.Progress.Progress,\n      searchResultCallback: (arg0: Search.SearchConfig.SearchResult) => void,\n      searchFinishedCallback: (arg0: boolean) => void): Promise<void> {\n    const promises = [];\n    const requests = Logs.NetworkLog.NetworkLog.instance().requests().filter(\n        request => searchConfig.filePathMatchesFileQuery(request.url()));\n    progress.setTotalWork(requests.length);\n    for (const request of requests) {\n      const promise = this._searchRequest(searchConfig, request, progress);\n      promises.push(promise);\n    }\n    const resultsWithNull = await Promise.all(promises);\n    const results = (resultsWithNull.filter(result => result !== null) as NetworkSearchResult[]);\n    if (progress.isCanceled()) {\n      searchFinishedCallback(false);\n      return;\n    }\n    for (const result of results.sort((r1, r2) => r1.label().localeCompare(r2.label()))) {\n      if (result.matchesCount() > 0) {\n        searchResultCallback(result);\n      }\n    }\n    progress.done();\n    searchFinishedCallback(true);\n  }\n\n  async _searchRequest(\n      searchConfig: Search.SearchConfig.SearchConfig, request: SDK.NetworkRequest.NetworkRequest,\n      progress: Common.Progress.Progress): Promise<NetworkSearchResult|null> {\n    let bodyMatches: TextUtils.ContentProvider.SearchMatch[] = [];\n    if (request.contentType().isTextType()) {\n      bodyMatches =\n          await request.searchInContent(searchConfig.query(), !searchConfig.ignoreCase(), searchConfig.isRegex());\n    }\n    if (progress.isCanceled()) {\n      return null;\n    }\n    const locations = [];\n    if (stringMatchesQuery(request.url())) {\n      locations.push(UIRequestLocation.urlMatch(request));\n    }\n    for (const header of request.requestHeaders()) {\n      if (headerMatchesQuery(header)) {\n        locations.push(UIRequestLocation.requestHeaderMatch(request, header));\n      }\n    }\n    for (const header of request.responseHeaders) {\n      if (headerMatchesQuery(header)) {\n        locations.push(UIRequestLocation.responseHeaderMatch(request, header));\n      }\n    }\n    for (const match of bodyMatches) {\n      locations.push(UIRequestLocation.bodyMatch(request, match));\n    }\n    progress.worked();\n    return new NetworkSearchResult(request, locations);\n\n    function headerMatchesQuery(header: SDK.NetworkRequest.NameValue): boolean {\n      return stringMatchesQuery(`${header.name}: ${header.value}`);\n    }\n\n    function stringMatchesQuery(string: string): boolean {\n      const flags = searchConfig.ignoreCase() ? 'i' : '';\n      const regExps = searchConfig.queries().map(query => new RegExp(query, flags));\n      let pos = 0;\n      for (const regExp of regExps) {\n        const match = string.substr(pos).match(regExp);\n        if (!match || !match.index) {\n          return false;\n        }\n        pos += match.index + match[0].length;\n      }\n      return true;\n    }\n  }\n\n  stopSearch(): void {\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum UIHeaderSection {\n  General = 'General',\n  Request = 'Request',\n  Response = 'Response',\n}\n\ninterface UIHeaderLocation {\n  section: UIHeaderSection;\n  header: SDK.NetworkRequest.NameValue|null;\n}\n\nexport class UIRequestLocation {\n  request: SDK.NetworkRequest.NetworkRequest;\n  header: UIHeaderLocation|null;\n  searchMatch: TextUtils.ContentProvider.SearchMatch|null;\n  isUrlMatch: boolean;\n\n  private constructor(\n      request: SDK.NetworkRequest.NetworkRequest, header: UIHeaderLocation|null,\n      searchMatch: TextUtils.ContentProvider.SearchMatch|null, urlMatch: boolean) {\n    this.request = request;\n    this.header = header;\n    this.searchMatch = searchMatch;\n    this.isUrlMatch = urlMatch;\n  }\n\n  static requestHeaderMatch(request: SDK.NetworkRequest.NetworkRequest, header: SDK.NetworkRequest.NameValue|null):\n      UIRequestLocation {\n    return new UIRequestLocation(request, {section: UIHeaderSection.Request, header}, null, false);\n  }\n\n  static responseHeaderMatch(request: SDK.NetworkRequest.NetworkRequest, header: SDK.NetworkRequest.NameValue|null):\n      UIRequestLocation {\n    return new UIRequestLocation(request, {section: UIHeaderSection.Response, header}, null, false);\n  }\n\n  static bodyMatch(request: SDK.NetworkRequest.NetworkRequest, searchMatch: TextUtils.ContentProvider.SearchMatch|null):\n      UIRequestLocation {\n    return new UIRequestLocation(request, null, searchMatch, false);\n  }\n\n  static urlMatch(request: SDK.NetworkRequest.NetworkRequest): UIRequestLocation {\n    return new UIRequestLocation(request, null, null, true);\n  }\n\n  static header(request: SDK.NetworkRequest.NetworkRequest, section: UIHeaderSection, name: string): UIRequestLocation {\n    return new UIRequestLocation(request, {section, header: {name, value: ''}}, null, true);\n  }\n}\n\nexport class NetworkSearchResult implements Search.SearchConfig.SearchResult {\n  _request: SDK.NetworkRequest.NetworkRequest;\n  _locations: UIRequestLocation[];\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest, locations: UIRequestLocation[]) {\n    this._request = request;\n    this._locations = locations;\n  }\n\n  matchesCount(): number {\n    return this._locations.length;\n  }\n\n  label(): string {\n    return this._request.displayName;\n  }\n\n  description(): string {\n    const parsedUrl = this._request.parsedURL;\n    if (!parsedUrl) {\n      return this._request.url();\n    }\n    return parsedUrl.urlWithoutScheme();\n  }\n\n  matchLineContent(index: number): string {\n    const location = this._locations[index];\n    if (location.isUrlMatch) {\n      return this._request.url();\n    }\n    const header = location?.header?.header;\n    if (header) {\n      return header.value;\n    }\n    return (location.searchMatch as TextUtils.ContentProvider.SearchMatch).lineContent;\n  }\n\n  matchRevealable(index: number): Object {\n    return this._locations[index];\n  }\n\n  matchLabel(index: number): string {\n    const location = this._locations[index];\n    if (location.isUrlMatch) {\n      return i18nString(UIStrings.url);\n    }\n    const header = location?.header?.header;\n    if (header) {\n      return `${header.name}:`;\n    }\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // @ts-expect-error\n    return (location.searchMatch as TextUtils.ContentProvider.SearchMatch).lineNumber + 1;\n  }\n}\n"]}