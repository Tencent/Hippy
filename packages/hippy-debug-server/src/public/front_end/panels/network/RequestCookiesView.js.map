{"version":3,"file":"RequestCookiesView.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/RequestCookiesView.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Protocol from '../../generated/protocol.js';\nimport * as CookieTable from '../../ui/legacy/components/cookie_table/cookie_table.js';  // eslint-disable-line no-unused-vars\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Request Cookies View of the Network panel\n  */\n  thisRequestHasNoCookies: 'This request has no cookies.',\n  /**\n  * @description Title for a table which shows all of the cookies associated with a selected network\n  * request, in the Network panel. Noun phrase.\n  */\n  requestCookies: 'Request Cookies',\n  /**\n  *@description Tooltip to explain what request cookies are\n  */\n  cookiesThatWereSentToTheServerIn: 'Cookies that were sent to the server in the \\'cookie\\' header of the request',\n  /**\n  *@description Label for showing request cookies that were not actually sent\n  */\n  showFilteredOutRequestCookies: 'show filtered out request cookies',\n  /**\n  *@description Text in Request Headers View of the Network Panel\n  */\n  noRequestCookiesWereSent: 'No request cookies were sent.',\n  /**\n  *@description Text in Request Cookies View of the Network panel\n  */\n  responseCookies: 'Response Cookies',\n  /**\n  *@description Tooltip to explain what response cookies are\n  */\n  cookiesThatWereReceivedFromThe:\n      'Cookies that were received from the server in the \\'`set-cookie`\\' header of the response',\n  /**\n  *@description Label for response cookies with invalid syntax\n  */\n  malformedResponseCookies: 'Malformed Response Cookies',\n  /**\n  * @description Tooltip to explain what malformed response cookies are. Malformed cookies are\n  * cookies that did not match the expected format and could not be interpreted, and are invalid.\n  */\n  cookiesThatWereReceivedFromTheServer:\n      'Cookies that were received from the server in the \\'`set-cookie`\\' header of the response but were malformed',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/RequestCookiesView.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class RequestCookiesView extends UI.Widget.Widget {\n  _request: SDK.NetworkRequest.NetworkRequest;\n  _showFilteredOutCookiesSetting: Common.Settings.Setting<boolean>;\n  _emptyWidget: UI.EmptyWidget.EmptyWidget;\n  _requestCookiesTitle: HTMLElement;\n  _requestCookiesEmpty: HTMLElement;\n  _requestCookiesTable: CookieTable.CookiesTable.CookiesTable;\n  _responseCookiesTitle: HTMLElement;\n  _responseCookiesTable: CookieTable.CookiesTable.CookiesTable;\n  _malformedResponseCookiesTitle: HTMLElement;\n  _malformedResponseCookiesList: HTMLElement;\n\n  constructor(request: SDK.NetworkRequest.NetworkRequest) {\n    super();\n    this.registerRequiredCSS('panels/network/requestCookiesView.css', {enableLegacyPatching: false});\n    this.element.classList.add('request-cookies-view');\n\n    this._request = request;\n    this._showFilteredOutCookiesSetting = Common.Settings.Settings.instance().createSetting(\n        'show-filtered-out-request-cookies', /* defaultValue */ false);\n\n    this._emptyWidget = new UI.EmptyWidget.EmptyWidget(i18nString(UIStrings.thisRequestHasNoCookies));\n    this._emptyWidget.show(this.element);\n\n    this._requestCookiesTitle = this.element.createChild('div');\n    const titleText = this._requestCookiesTitle.createChild('span', 'request-cookies-title');\n    titleText.textContent = i18nString(UIStrings.requestCookies);\n    UI.Tooltip.Tooltip.install(titleText, i18nString(UIStrings.cookiesThatWereSentToTheServerIn));\n\n    const requestCookiesCheckbox =\n        (UI.SettingsUI.createSettingCheckbox(\n             i18nString(UIStrings.showFilteredOutRequestCookies), this._showFilteredOutCookiesSetting, true) as\n         UI.UIUtils.CheckboxLabel);\n    requestCookiesCheckbox.checkboxElement.addEventListener('change', () => {\n      this._refreshRequestCookiesView();\n    });\n    this._requestCookiesTitle.appendChild(requestCookiesCheckbox);\n\n    this._requestCookiesEmpty = this.element.createChild('div', 'cookies-panel-item');\n    this._requestCookiesEmpty.textContent = i18nString(UIStrings.noRequestCookiesWereSent);\n\n    this._requestCookiesTable = new CookieTable.CookiesTable.CookiesTable(/* renderInline */ true);\n    this._requestCookiesTable.contentElement.classList.add('cookie-table', 'cookies-panel-item');\n    this._requestCookiesTable.show(this.element);\n\n    this._responseCookiesTitle = this.element.createChild('div', 'request-cookies-title');\n    this._responseCookiesTitle.textContent = i18nString(UIStrings.responseCookies);\n    this._responseCookiesTitle.title = i18nString(UIStrings.cookiesThatWereReceivedFromThe);\n\n    this._responseCookiesTable = new CookieTable.CookiesTable.CookiesTable(/* renderInline */ true);\n    this._responseCookiesTable.contentElement.classList.add('cookie-table', 'cookies-panel-item');\n    this._responseCookiesTable.show(this.element);\n\n    this._malformedResponseCookiesTitle = this.element.createChild('div', 'request-cookies-title');\n    this._malformedResponseCookiesTitle.textContent = i18nString(UIStrings.malformedResponseCookies);\n    UI.Tooltip.Tooltip.install(\n        this._malformedResponseCookiesTitle, i18nString(UIStrings.cookiesThatWereReceivedFromTheServer));\n\n    this._malformedResponseCookiesList = this.element.createChild('div');\n  }\n\n  _getRequestCookies(): {\n    requestCookies: Array<SDK.Cookie.Cookie>,\n    requestCookieToBlockedReasons: Map<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>,\n  } {\n    const requestCookieToBlockedReasons = new Map<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>();\n    const requestCookies = this._request.includedRequestCookies().slice();\n\n    if (this._showFilteredOutCookiesSetting.get()) {\n      for (const blockedCookie of this._request.blockedRequestCookies()) {\n        requestCookieToBlockedReasons.set(blockedCookie.cookie, blockedCookie.blockedReasons.map(blockedReason => {\n          return {\n            attribute: SDK.NetworkRequest.cookieBlockedReasonToAttribute(blockedReason),\n            uiString: SDK.NetworkRequest.cookieBlockedReasonToUiString(blockedReason),\n          };\n        }));\n        requestCookies.push(blockedCookie.cookie);\n      }\n    }\n\n    return {requestCookies, requestCookieToBlockedReasons};\n  }\n\n  _getResponseCookies(): {\n    responseCookies: Array<SDK.Cookie.Cookie>,\n    responseCookieToBlockedReasons: Map<SDK.Cookie.Cookie, Array<SDK.CookieModel.BlockedReason>>,\n    malformedResponseCookies: Array<SDK.NetworkRequest.BlockedSetCookieWithReason>,\n  } {\n    let responseCookies: SDK.Cookie.Cookie[] = [];\n    const responseCookieToBlockedReasons = new Map<SDK.Cookie.Cookie, SDK.CookieModel.BlockedReason[]>();\n    const malformedResponseCookies: SDK.NetworkRequest.BlockedSetCookieWithReason[] = [];\n\n    if (this._request.responseCookies.length) {\n      const blockedCookieLines: (string|null)[] =\n          this._request.blockedResponseCookies().map(blockedCookie => blockedCookie.cookieLine);\n      responseCookies = this._request.responseCookies.filter(cookie => {\n        // remove the regular cookies that would overlap with blocked cookies\n        const index = blockedCookieLines.indexOf(cookie.getCookieLine());\n        if (index !== -1) {\n          blockedCookieLines[index] = null;\n          return false;\n        }\n        return true;\n      });\n\n      for (const blockedCookie of this._request.blockedResponseCookies()) {\n        const parsedCookies = SDK.CookieParser.CookieParser.parseSetCookie(blockedCookie.cookieLine);\n        if (parsedCookies && !parsedCookies.length ||\n            blockedCookie.blockedReasons.includes(Protocol.Network.SetCookieBlockedReason.SyntaxError)) {\n          malformedResponseCookies.push(blockedCookie);\n          continue;\n        }\n\n        let cookie: SDK.Cookie.Cookie|(SDK.Cookie.Cookie | null) = blockedCookie.cookie;\n        if (!cookie && parsedCookies) {\n          cookie = parsedCookies[0];\n        }\n        if (cookie) {\n          responseCookieToBlockedReasons.set(cookie, blockedCookie.blockedReasons.map(blockedReason => {\n            return {\n              attribute: SDK.NetworkRequest.setCookieBlockedReasonToAttribute(blockedReason),\n              uiString: SDK.NetworkRequest.setCookieBlockedReasonToUiString(blockedReason),\n            };\n          }));\n          responseCookies.push(cookie);\n        }\n      }\n    }\n\n    return {responseCookies, responseCookieToBlockedReasons, malformedResponseCookies};\n  }\n\n  _refreshRequestCookiesView(): void {\n    if (!this.isShowing()) {\n      return;\n    }\n\n    const gotCookies = this._request.hasRequestCookies() || this._request.responseCookies.length;\n    if (gotCookies) {\n      this._emptyWidget.hideWidget();\n    } else {\n      this._emptyWidget.showWidget();\n    }\n\n    const {requestCookies, requestCookieToBlockedReasons} = this._getRequestCookies();\n    const {responseCookies, responseCookieToBlockedReasons, malformedResponseCookies} = this._getResponseCookies();\n\n    if (requestCookies.length) {\n      this._requestCookiesTitle.classList.remove('hidden');\n      this._requestCookiesEmpty.classList.add('hidden');\n      this._requestCookiesTable.showWidget();\n      this._requestCookiesTable.setCookies(requestCookies, requestCookieToBlockedReasons);\n\n    } else if (this._request.blockedRequestCookies().length) {\n      this._requestCookiesTitle.classList.remove('hidden');\n      this._requestCookiesEmpty.classList.remove('hidden');\n      this._requestCookiesTable.hideWidget();\n\n    } else {\n      this._requestCookiesTitle.classList.add('hidden');\n      this._requestCookiesEmpty.classList.add('hidden');\n      this._requestCookiesTable.hideWidget();\n    }\n\n    if (responseCookies.length) {\n      this._responseCookiesTitle.classList.remove('hidden');\n      this._responseCookiesTable.showWidget();\n      this._responseCookiesTable.setCookies(responseCookies, responseCookieToBlockedReasons);\n    } else {\n      this._responseCookiesTitle.classList.add('hidden');\n      this._responseCookiesTable.hideWidget();\n    }\n\n    if (malformedResponseCookies.length) {\n      this._malformedResponseCookiesTitle.classList.remove('hidden');\n      this._malformedResponseCookiesList.classList.remove('hidden');\n\n      this._malformedResponseCookiesList.removeChildren();\n      for (const malformedCookie of malformedResponseCookies) {\n        const listItem = this._malformedResponseCookiesList.createChild('span', 'cookie-line source-code');\n        const icon = UI.Icon.Icon.create('smallicon-error', 'cookie-warning-icon');\n        listItem.appendChild(icon);\n        UI.UIUtils.createTextChild(listItem, malformedCookie.cookieLine);\n        listItem.title =\n            SDK.NetworkRequest.setCookieBlockedReasonToUiString(Protocol.Network.SetCookieBlockedReason.SyntaxError);\n      }\n    } else {\n      this._malformedResponseCookiesTitle.classList.add('hidden');\n      this._malformedResponseCookiesList.classList.add('hidden');\n    }\n  }\n\n  wasShown(): void {\n    this._request.addEventListener(\n        SDK.NetworkRequest.Events.RequestHeadersChanged, this._refreshRequestCookiesView, this);\n    this._request.addEventListener(\n        SDK.NetworkRequest.Events.ResponseHeadersChanged, this._refreshRequestCookiesView, this);\n\n    this._refreshRequestCookiesView();\n  }\n\n  willHide(): void {\n    this._request.removeEventListener(\n        SDK.NetworkRequest.Events.RequestHeadersChanged, this._refreshRequestCookiesView, this);\n    this._request.removeEventListener(\n        SDK.NetworkRequest.Events.ResponseHeadersChanged, this._refreshRequestCookiesView, this);\n  }\n}\n"]}