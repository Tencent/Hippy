{"version":3,"file":"NetworkPanel.js","sourceRoot":"","sources":["../../../../../../front_end/panels/network/NetworkPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2007, 2008 Apple Inc.  All rights reserved.\n * Copyright (C) 2008, 2009 Anthony Ricaud <rik@webkit.org>\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as SDK from '../../core/sdk/sdk.js';\nimport * as Bindings from '../../models/bindings/bindings.js';\nimport * as Logs from '../../models/logs/logs.js';\nimport * as Workspace from '../../models/workspace/workspace.js';\nimport * as IconButton from '../../ui/components/icon_button/icon_button.js';\nimport * as PerfUI from '../../ui/legacy/components/perf_ui/perf_ui.js';\nimport * as UI from '../../ui/legacy/legacy.js';\nimport * as MobileThrottling from '../mobile_throttling/mobile_throttling.js';\nimport * as Search from '../search/search.js';\n\nimport {BlockedURLsPane} from './BlockedURLsPane.js';\nimport {Events} from './NetworkDataGridNode.js';\nimport type {Tabs as NetworkItemViewTabs} from './NetworkItemView.js';\nimport {NetworkItemView} from './NetworkItemView.js';  // eslint-disable-line no-unused-vars\nimport type {FilterType} from './NetworkLogView.js';\nimport {NetworkLogView} from './NetworkLogView.js';  // eslint-disable-line no-unused-vars\nimport {NetworkOverview} from './NetworkOverview.js';\nimport type {UIRequestLocation} from './NetworkSearchScope.js';\nimport {NetworkSearchScope} from './NetworkSearchScope.js';  // eslint-disable-line no-unused-vars\nimport type {NetworkTimeCalculator} from './NetworkTimeCalculator.js';\nimport {NetworkTransferTimeCalculator} from './NetworkTimeCalculator.js';  // eslint-disable-line no-unused-vars\n\nconst UIStrings = {\n  /**\n  *@description Text to close something\n  */\n  close: 'Close',\n  /**\n  *@description Title of a search bar or tool\n  */\n  search: 'Search',\n  /**\n  *@description Text to clear content\n  */\n  clear: 'Clear',\n  /**\n  *@description Tooltip text that appears on the setting to preserve log when hovering over the item\n  */\n  doNotClearLogOnPageReload: 'Do not clear log on page reload / navigation',\n  /**\n  *@description Text to preserve the log after refreshing\n  */\n  preserveLog: 'Preserve log',\n  /**\n  *@description Text to disable cache while DevTools is open\n  */\n  disableCacheWhileDevtoolsIsOpen: 'Disable cache (while DevTools is open)',\n  /**\n  *@description Text in Network Config View of the Network panel\n  */\n  disableCache: 'Disable cache',\n  /**\n  *@description Tooltip text that appears when hovering over the largeicon settings gear in show settings pane setting in network panel of the network panel\n  */\n  networkSettings: 'Network settings',\n  /**\n  *@description Tooltip for expanding network request row setting\n  */\n  showMoreInformationInRequestRows: 'Show more information in request rows',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  useLargeRequestRows: 'Use large request rows',\n  /**\n  *@description Tooltip text for network request overview setting\n  */\n  showOverviewOfNetworkRequests: 'Show overview of network requests',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  showOverview: 'Show overview',\n  /**\n  *@description Tooltip for group by frame network setting\n  */\n  groupRequestsByTopLevelRequest: 'Group requests by top level request frame',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  groupByFrame: 'Group by frame',\n  /**\n  *@description Tooltip for capture screenshot network setting\n  */\n  captureScreenshotsWhenLoadingA: 'Capture screenshots when loading a page',\n  /**\n  *@description Text to take screenshots\n  */\n  captureScreenshots: 'Capture screenshots',\n  /**\n  * @description Tooltip text that appears when hovering over the largeicon load button in the\n  * Network Panel. This action prompts the user to select a HAR file to upload to DevTools.\n  */\n  importHarFile: 'Import `HAR` file...',\n  /**\n  * @description Tooltip text that appears when hovering over the largeicon download button in the\n  * Network Panel. HAR is a file format (HTTP Archive) and should not be translated. This action\n  * triggers the download of a HAR file.\n  */\n  exportHar: 'Export `HAR`...',\n  /**\n  *@description Text for throttling the network\n  */\n  throttling: 'Throttling',\n  /**\n  *@description Text in Network Panel of the Network panel\n  *@example {Ctrl + R} PH1\n  */\n  hitSToReloadAndCaptureFilmstrip: 'Hit {PH1} to reload and capture filmstrip.',\n  /**\n  *@description A context menu item in the Network Panel of the Network panel\n  */\n  revealInNetworkPanel: 'Reveal in Network panel',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  recordingFrames: 'Recording frames...',\n  /**\n  *@description Text in Network Panel of the Network panel\n  */\n  fetchingFrames: 'Fetching frames...',\n  /**\n   * @description Text of a button in the Network panel's toolbar that open Network Conditions panel in the drawer.\n   */\n  moreNetworkConditions: 'More network conditions…',\n};\nconst str_ = i18n.i18n.registerUIStrings('panels/network/NetworkPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet networkPanelInstance: NetworkPanel;\n\nexport class NetworkPanel extends UI.Panel.Panel implements UI.ContextMenu.Provider, UI.View.ViewLocationResolver {\n  _networkLogShowOverviewSetting: Common.Settings.Setting<boolean>;\n  _networkLogLargeRowsSetting: Common.Settings.Setting<boolean>;\n  _networkRecordFilmStripSetting: Common.Settings.Setting<boolean>;\n  _toggleRecordAction: UI.ActionRegistration.Action;\n  _pendingStopTimer!: number|undefined;\n  _networkItemView: NetworkItemView|null;\n  _filmStripView: PerfUI.FilmStripView.FilmStripView|null;\n  _filmStripRecorder: FilmStripRecorder|null;\n  _currentRequest: SDK.NetworkRequest.NetworkRequest|null;\n  _panelToolbar: UI.Toolbar.Toolbar;\n  _rightToolbar: UI.Toolbar.Toolbar;\n  _filterBar: UI.FilterBar.FilterBar;\n  _settingsPane: UI.Widget.HBox;\n  _showSettingsPaneSetting: Common.Settings.Setting<boolean>;\n  _filmStripPlaceholderElement: HTMLElement;\n  _overviewPane: PerfUI.TimelineOverviewPane.TimelineOverviewPane;\n  _networkOverview: NetworkOverview;\n  _overviewPlaceholderElement: HTMLElement;\n  _calculator: NetworkTransferTimeCalculator;\n  _splitWidget: UI.SplitWidget.SplitWidget;\n  _sidebarLocation: UI.View.TabbedViewLocation;\n  _progressBarContainer: HTMLDivElement;\n  _networkLogView: NetworkLogView;\n  _fileSelectorElement: HTMLElement;\n  _detailsWidget: UI.Widget.VBox;\n  _closeButtonElement: HTMLDivElement;\n  _preserveLogSetting: Common.Settings.Setting<boolean>;\n  _recordLogSetting: Common.Settings.Setting<boolean>;\n  _throttlingSelect: UI.Toolbar.ToolbarComboBox;\n\n  constructor() {\n    super('network');\n    this.registerRequiredCSS('panels/network/networkPanel.css', {enableLegacyPatching: false});\n\n    this._networkLogShowOverviewSetting =\n        Common.Settings.Settings.instance().createSetting('networkLogShowOverview', true);\n    this._networkLogLargeRowsSetting = Common.Settings.Settings.instance().createSetting('networkLogLargeRows', false);\n    this._networkRecordFilmStripSetting =\n        Common.Settings.Settings.instance().createSetting('networkRecordFilmStripSetting', false);\n    this._toggleRecordAction =\n        (UI.ActionRegistry.ActionRegistry.instance().action('network.toggle-recording') as\n         UI.ActionRegistration.Action);\n    this._networkItemView = null;\n    this._filmStripView = null;\n    this._filmStripRecorder = null;\n    this._currentRequest = null;\n\n    const panel = new UI.Widget.VBox();\n\n    const networkToolbarContainer = panel.contentElement.createChild('div', 'network-toolbar-container');\n    this._panelToolbar = new UI.Toolbar.Toolbar('', networkToolbarContainer);\n    this._panelToolbar.makeWrappable(true);\n    this._rightToolbar = new UI.Toolbar.Toolbar('', networkToolbarContainer);\n\n    this._filterBar = new UI.FilterBar.FilterBar('networkPanel', true);\n    this._filterBar.show(panel.contentElement);\n    this._filterBar.addEventListener(UI.FilterBar.FilterBar.Events.Changed, this._handleFilterChanged.bind(this));\n\n    this._settingsPane = new UI.Widget.HBox();\n    this._settingsPane.element.classList.add('network-settings-pane');\n    this._settingsPane.show(panel.contentElement);\n    this._showSettingsPaneSetting =\n        Common.Settings.Settings.instance().createSetting('networkShowSettingsToolbar', false);\n    this._showSettingsPaneSetting.addChangeListener(this._updateSettingsPaneVisibility.bind(this));\n    this._updateSettingsPaneVisibility();\n\n    this._filmStripPlaceholderElement = panel.contentElement.createChild('div', 'network-film-strip-placeholder');\n\n    // Create top overview component.\n    this._overviewPane = new PerfUI.TimelineOverviewPane.TimelineOverviewPane('network');\n    this._overviewPane.addEventListener(\n        PerfUI.TimelineOverviewPane.Events.WindowChanged, this._onWindowChanged.bind(this));\n    this._overviewPane.element.id = 'network-overview-panel';\n    this._networkOverview = new NetworkOverview();\n    this._overviewPane.setOverviewControls([this._networkOverview]);\n    this._overviewPlaceholderElement = panel.contentElement.createChild('div');\n\n    this._calculator = new NetworkTransferTimeCalculator();\n\n    this._splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'networkPanelSplitViewState');\n    this._splitWidget.hideMain();\n    this._splitWidget.show(panel.contentElement);\n\n    panel.setDefaultFocusedChild(this._filterBar);\n\n    const initialSidebarWidth = 225;\n    const splitWidget = new UI.SplitWidget.SplitWidget(true, false, 'networkPanelSidebarState', initialSidebarWidth);\n    splitWidget.hideSidebar();\n    splitWidget.enableShowModeSaving();\n    splitWidget.show(this.element);\n    this._sidebarLocation = UI.ViewManager.ViewManager.instance().createTabbedLocation(async () => {\n      UI.ViewManager.ViewManager.instance().showView('network');\n      splitWidget.showBoth();\n    }, 'network-sidebar', true);\n    const tabbedPane = this._sidebarLocation.tabbedPane();\n    tabbedPane.setMinimumSize(100, 25);\n    tabbedPane.element.classList.add('network-tabbed-pane');\n    tabbedPane.element.addEventListener('keydown', event => {\n      if (event.key !== 'Escape') {\n        return;\n      }\n      splitWidget.hideSidebar();\n      event.consume();\n    });\n    const closeSidebar = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.close), 'largeicon-delete');\n    closeSidebar.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => splitWidget.hideSidebar());\n    tabbedPane.rightToolbar().appendToolbarItem(closeSidebar);\n    splitWidget.setSidebarWidget(tabbedPane);\n    splitWidget.setMainWidget(panel);\n    splitWidget.setDefaultFocusedChild(panel);\n    this.setDefaultFocusedChild(splitWidget);\n\n    this._progressBarContainer = document.createElement('div');\n\n    this._networkLogView =\n        new NetworkLogView(this._filterBar, this._progressBarContainer, this._networkLogLargeRowsSetting);\n    this._splitWidget.setSidebarWidget(this._networkLogView);\n    this._fileSelectorElement =\n        (UI.UIUtils.createFileSelectorElement(this._networkLogView.onLoadFromFile.bind(this._networkLogView)) as\n         HTMLElement);\n    panel.element.appendChild(this._fileSelectorElement);\n\n    this._detailsWidget = new UI.Widget.VBox();\n    this._detailsWidget.element.classList.add('network-details-view');\n    this._splitWidget.setMainWidget(this._detailsWidget);\n\n    this._closeButtonElement = document.createElement('div', {is: 'dt-close-button'});\n    this._closeButtonElement.addEventListener('click', async () => {\n      const action = UI.ActionRegistry.ActionRegistry.instance().action('network.hide-request-details');\n      if (action) {\n        await action.execute();\n      }\n    }, false);\n    this._closeButtonElement.style.margin = '0 5px';\n\n    this._networkLogShowOverviewSetting.addChangeListener(this._toggleShowOverview, this);\n    this._networkLogLargeRowsSetting.addChangeListener(this._toggleLargerRequests, this);\n    this._networkRecordFilmStripSetting.addChangeListener(this._toggleRecordFilmStrip, this);\n\n    this._preserveLogSetting = Common.Settings.Settings.instance().moduleSetting('network_log.preserve-log');\n    this._recordLogSetting = Common.Settings.Settings.instance().moduleSetting('network_log.record-log');\n    this._recordLogSetting.addChangeListener(({data}) => this._toggleRecord(data));\n\n    this._throttlingSelect = this._createThrottlingConditionsSelect();\n    this._setupToolbarButtons(splitWidget);\n\n    this._toggleRecord(this._recordLogSetting.get());\n    this._toggleShowOverview();\n    this._toggleLargerRequests();\n    this._toggleRecordFilmStrip();\n    this._updateUI();\n\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.WillReloadPage, this._willReloadPage,\n        this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.ResourceTreeModel.ResourceTreeModel, SDK.ResourceTreeModel.Events.Load, this._load, this);\n    this._networkLogView.addEventListener(Events.RequestSelected, this._onRequestSelected, this);\n    this._networkLogView.addEventListener(Events.RequestActivated, this._onRequestActivated, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestAdded, this._onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(\n        Logs.NetworkLog.Events.RequestUpdated, this._onUpdateRequest, this);\n    Logs.NetworkLog.NetworkLog.instance().addEventListener(Logs.NetworkLog.Events.Reset, this._onNetworkLogReset, this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): NetworkPanel {\n    const {forceNew} = opts;\n    if (!networkPanelInstance || forceNew) {\n      networkPanelInstance = new NetworkPanel();\n    }\n\n    return networkPanelInstance;\n  }\n\n  static revealAndFilter(filters: {\n    filterType: FilterType|null,\n    filterValue: string,\n  }[]): void {\n    const panel = NetworkPanel._instance();\n    let filterString = '';\n    for (const filter of filters) {\n      if (filter.filterType) {\n        filterString += `${filter.filterType}:${filter.filterValue} `;\n      } else {\n        filterString += `${filter.filterValue} `;\n      }\n    }\n    panel._networkLogView.setTextFilterValue(filterString);\n    UI.ViewManager.ViewManager.instance().showView('network');\n  }\n\n  static async selectAndShowRequest(\n      request: SDK.NetworkRequest.NetworkRequest, tab: NetworkItemViewTabs, options?: FilterOptions): Promise<void> {\n    const panel = NetworkPanel._instance();\n    await panel.selectAndActivateRequest(request, tab, options);\n  }\n\n  static _instance(): NetworkPanel {\n    return NetworkPanel.instance();\n  }\n\n  throttlingSelectForTest(): UI.Toolbar.ToolbarComboBox {\n    return this._throttlingSelect;\n  }\n\n  _onWindowChanged(event: Common.EventTarget.EventTargetEvent): void {\n    const startTime = Math.max(this._calculator.minimumBoundary(), event.data.startTime / 1000);\n    const endTime = Math.min(this._calculator.maximumBoundary(), event.data.endTime / 1000);\n    this._networkLogView.setWindow(startTime, endTime);\n  }\n\n  async _searchToggleClick(_event: Common.EventTarget.EventTargetEvent): Promise<void> {\n    const action = UI.ActionRegistry.ActionRegistry.instance().action('network.search');\n    if (action) {\n      await action.execute();\n    }\n  }\n\n  _setupToolbarButtons(splitWidget: UI.SplitWidget.SplitWidget): void {\n    const searchToggle = new UI.Toolbar.ToolbarToggle(i18nString(UIStrings.search), 'largeicon-search');\n    function updateSidebarToggle(): void {\n      const isSidebarShowing = splitWidget.showMode() !== UI.SplitWidget.ShowMode.OnlyMain;\n      searchToggle.setToggled(isSidebarShowing);\n      if (!isSidebarShowing) {\n        (searchToggle.element as HTMLElement).focus();\n      }\n    }\n    this._panelToolbar.appendToolbarItem(UI.Toolbar.Toolbar.createActionButton(this._toggleRecordAction));\n    const clearButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.clear), 'largeicon-clear');\n    clearButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click, () => Logs.NetworkLog.NetworkLog.instance().reset(true), this);\n    this._panelToolbar.appendToolbarItem(clearButton);\n    this._panelToolbar.appendSeparator();\n\n    this._panelToolbar.appendToolbarItem(this._filterBar.filterButton());\n    updateSidebarToggle();\n    splitWidget.addEventListener(UI.SplitWidget.Events.ShowModeChanged, updateSidebarToggle);\n    searchToggle.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, event => {\n      this._searchToggleClick(event);\n    });\n    this._panelToolbar.appendToolbarItem(searchToggle);\n    this._panelToolbar.appendSeparator();\n\n    this._panelToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this._preserveLogSetting, i18nString(UIStrings.doNotClearLogOnPageReload), i18nString(UIStrings.preserveLog)));\n\n    this._panelToolbar.appendSeparator();\n    const disableCacheCheckbox = new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('cacheDisabled'),\n        i18nString(UIStrings.disableCacheWhileDevtoolsIsOpen), i18nString(UIStrings.disableCache));\n    this._panelToolbar.appendToolbarItem(disableCacheCheckbox);\n\n    this._panelToolbar.appendToolbarItem(this._throttlingSelect);\n\n    const networkConditionsIcon = new IconButton.Icon.Icon();\n    networkConditionsIcon.data = {\n      iconName: 'network_conditions_icon',\n      color: 'rgb(110 110 110)',\n      width: '18px',\n      height: '18px',\n    };\n    const networkConditionsButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.moreNetworkConditions), networkConditionsIcon);\n    networkConditionsButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      UI.ViewManager.ViewManager.instance().showView('network.config');\n    }, this);\n    this._panelToolbar.appendToolbarItem(networkConditionsButton);\n\n    this._rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarItem(this._progressBarContainer));\n    this._rightToolbar.appendSeparator();\n    this._rightToolbar.appendToolbarItem(new UI.Toolbar.ToolbarSettingToggle(\n        this._showSettingsPaneSetting, 'largeicon-settings-gear', i18nString(UIStrings.networkSettings)));\n\n    const settingsToolbarLeft = new UI.Toolbar.Toolbar('', this._settingsPane.element);\n    settingsToolbarLeft.makeVertical();\n    settingsToolbarLeft.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this._networkLogLargeRowsSetting, i18nString(UIStrings.showMoreInformationInRequestRows),\n        i18nString(UIStrings.useLargeRequestRows)));\n    settingsToolbarLeft.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this._networkLogShowOverviewSetting, i18nString(UIStrings.showOverviewOfNetworkRequests),\n        i18nString(UIStrings.showOverview)));\n\n    const settingsToolbarRight = new UI.Toolbar.Toolbar('', this._settingsPane.element);\n    settingsToolbarRight.makeVertical();\n    settingsToolbarRight.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        Common.Settings.Settings.instance().moduleSetting('network.group-by-frame'),\n        i18nString(UIStrings.groupRequestsByTopLevelRequest), i18nString(UIStrings.groupByFrame)));\n    settingsToolbarRight.appendToolbarItem(new UI.Toolbar.ToolbarSettingCheckbox(\n        this._networkRecordFilmStripSetting, i18nString(UIStrings.captureScreenshotsWhenLoadingA),\n        i18nString(UIStrings.captureScreenshots)));\n\n    this._panelToolbar.appendSeparator();\n    const importHarButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.importHarFile), 'largeicon-load');\n    importHarButton.addEventListener(\n        UI.Toolbar.ToolbarButton.Events.Click, () => this._fileSelectorElement.click(), this);\n    this._panelToolbar.appendToolbarItem(importHarButton);\n    const exportHarButton = new UI.Toolbar.ToolbarButton(i18nString(UIStrings.exportHar), 'largeicon-download');\n    exportHarButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, _event => {\n      this._networkLogView.exportAll();\n    }, this);\n    this._panelToolbar.appendToolbarItem(exportHarButton);\n  }\n\n  _updateSettingsPaneVisibility(): void {\n    this._settingsPane.element.classList.toggle('hidden', !this._showSettingsPaneSetting.get());\n  }\n\n  _createThrottlingConditionsSelect(): UI.Toolbar.ToolbarComboBox {\n    const toolbarItem = new UI.Toolbar.ToolbarComboBox(null, i18nString(UIStrings.throttling));\n    toolbarItem.setMaxWidth(160);\n    MobileThrottling.ThrottlingManager.throttlingManager().decorateSelectWithNetworkThrottling(\n        toolbarItem.selectElement());\n    return toolbarItem;\n  }\n\n  _toggleRecord(toggled: boolean): void {\n    this._toggleRecordAction.setToggled(toggled);\n    if (this._recordLogSetting.get() !== toggled) {\n      this._recordLogSetting.set(toggled);\n    }\n\n    this._networkLogView.setRecording(toggled);\n    if (!toggled && this._filmStripRecorder) {\n      this._filmStripRecorder.stopRecording(this._filmStripAvailable.bind(this));\n    }\n  }\n\n  _filmStripAvailable(filmStripModel: SDK.FilmStripModel.FilmStripModel|null): void {\n    if (!filmStripModel) {\n      return;\n    }\n    const calculator = this._networkLogView.timeCalculator();\n    if (this._filmStripView) {\n      this._filmStripView.setModel(\n          filmStripModel, calculator.minimumBoundary() * 1000, calculator.boundarySpan() * 1000);\n    }\n    this._networkOverview.setFilmStripModel(filmStripModel);\n    const timestamps = filmStripModel.frames().map(mapTimestamp);\n\n    function mapTimestamp(frame: SDK.FilmStripModel.Frame): number {\n      return frame.timestamp / 1000;\n    }\n\n    this._networkLogView.addFilmStripFrames(timestamps);\n  }\n\n  _onNetworkLogReset(event: Common.EventTarget.EventTargetEvent): void {\n    const {clearIfPreserved} = event.data;\n    BlockedURLsPane.reset();\n    if (!this._preserveLogSetting.get() || clearIfPreserved) {\n      this._calculator.reset();\n      this._overviewPane.reset();\n    }\n    if (this._filmStripView) {\n      this._resetFilmStripView();\n    }\n  }\n\n  _willReloadPage(_event: Common.EventTarget.EventTargetEvent): void {\n    if (this._pendingStopTimer) {\n      clearTimeout(this._pendingStopTimer);\n      delete this._pendingStopTimer;\n    }\n    if (this.isShowing() && this._filmStripRecorder) {\n      this._filmStripRecorder.startRecording();\n    }\n  }\n\n  _load(_event: Common.EventTarget.EventTargetEvent): void {\n    if (this._filmStripRecorder && this._filmStripRecorder.isRecording()) {\n      this._pendingStopTimer = window.setTimeout(this._stopFilmStripRecording.bind(this), displayScreenshotDelay);\n    }\n  }\n\n  _stopFilmStripRecording(): void {\n    if (this._filmStripRecorder) {\n      this._filmStripRecorder.stopRecording(this._filmStripAvailable.bind(this));\n    }\n    delete this._pendingStopTimer;\n  }\n\n  _toggleLargerRequests(): void {\n    this._updateUI();\n  }\n\n  _toggleShowOverview(): void {\n    const toggled = this._networkLogShowOverviewSetting.get();\n    if (toggled) {\n      this._overviewPane.show(this._overviewPlaceholderElement);\n    } else {\n      this._overviewPane.detach();\n    }\n    this.doResize();\n  }\n\n  _toggleRecordFilmStrip(): void {\n    const toggled = this._networkRecordFilmStripSetting.get();\n    if (toggled && !this._filmStripRecorder) {\n      this._filmStripView = new PerfUI.FilmStripView.FilmStripView();\n      this._filmStripView.setMode(PerfUI.FilmStripView.Modes.FrameBased);\n      this._filmStripView.element.classList.add('network-film-strip');\n      this._filmStripRecorder = new FilmStripRecorder(this._networkLogView.timeCalculator(), this._filmStripView);\n      this._filmStripView.show(this._filmStripPlaceholderElement);\n      this._filmStripView.addEventListener(PerfUI.FilmStripView.Events.FrameSelected, this._onFilmFrameSelected, this);\n      this._filmStripView.addEventListener(PerfUI.FilmStripView.Events.FrameEnter, this._onFilmFrameEnter, this);\n      this._filmStripView.addEventListener(PerfUI.FilmStripView.Events.FrameExit, this._onFilmFrameExit, this);\n      this._resetFilmStripView();\n    }\n\n    if (!toggled && this._filmStripRecorder) {\n      if (this._filmStripView) {\n        this._filmStripView.detach();\n      }\n      this._filmStripView = null;\n      this._filmStripRecorder = null;\n    }\n  }\n\n  _resetFilmStripView(): void {\n    const reloadShortcut =\n        UI.ShortcutRegistry.ShortcutRegistry.instance().shortcutsForAction('inspector_main.reload')[0];\n\n    if (this._filmStripView) {\n      this._filmStripView.reset();\n      if (reloadShortcut) {\n        this._filmStripView.setStatusText(\n            i18nString(UIStrings.hitSToReloadAndCaptureFilmstrip, {PH1: reloadShortcut.title()}));\n      }\n    }\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return this._networkLogView.elementsToRestoreScrollPositionsFor();\n  }\n\n  wasShown(): void {\n    UI.Context.Context.instance().setFlavor(NetworkPanel, this);\n\n    // Record the network tool load time after the panel has loaded.\n    Host.userMetrics.panelLoaded('network', 'DevTools.Launch.Network');\n  }\n\n  willHide(): void {\n    UI.Context.Context.instance().setFlavor(NetworkPanel, null);\n  }\n\n  revealAndHighlightRequest(request: SDK.NetworkRequest.NetworkRequest): void {\n    this._hideRequestPanel();\n    if (request) {\n      this._networkLogView.revealAndHighlightRequest(request);\n    }\n  }\n\n  async selectAndActivateRequest(\n      request: SDK.NetworkRequest.NetworkRequest, shownTab?: NetworkItemViewTabs,\n      options?: FilterOptions): Promise<NetworkItemView|null> {\n    await UI.ViewManager.ViewManager.instance().showView('network');\n    this._networkLogView.selectRequest(request, options);\n    this._showRequestPanel(shownTab);\n    return this._networkItemView;\n  }\n\n  _handleFilterChanged(_event: Common.EventTarget.EventTargetEvent): void {\n    this._hideRequestPanel();\n  }\n\n  _onRowSizeChanged(_event: Common.EventTarget.EventTargetEvent): void {\n    this._updateUI();\n  }\n\n  _onRequestSelected(event: Common.EventTarget.EventTargetEvent): void {\n    const request = (event.data as SDK.NetworkRequest.NetworkRequest | null);\n    this._currentRequest = request;\n    this._networkOverview.setHighlightedRequest(request);\n    this._updateNetworkItemView();\n  }\n\n  _onRequestActivated(event: {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: any,\n  }): void {\n    const eventData = (event.data as {\n      showPanel: boolean,\n      tab: NetworkItemViewTabs,\n      takeFocus: (boolean | undefined),\n    });\n    if (eventData.showPanel) {\n      this._showRequestPanel(eventData.tab, /* takeFocus */ eventData.takeFocus);\n    } else {\n      this._hideRequestPanel();\n    }\n  }\n\n  _showRequestPanel(shownTab?: NetworkItemViewTabs, takeFocus?: boolean): void {\n    if (this._splitWidget.showMode() === UI.SplitWidget.ShowMode.Both && !shownTab && !takeFocus) {\n      // If panel is already shown, and we are not forcing a specific tab, return.\n      return;\n    }\n    this._clearNetworkItemView();\n    if (this._currentRequest) {\n      const networkItemView = this._createNetworkItemView(shownTab);\n      if (networkItemView && takeFocus) {\n        networkItemView.focus();\n      }\n    }\n    this._updateUI();\n  }\n\n  _hideRequestPanel(): void {\n    this._clearNetworkItemView();\n    this._splitWidget.hideMain();\n    this._updateUI();\n  }\n\n  _updateNetworkItemView(): void {\n    if (this._splitWidget.showMode() === UI.SplitWidget.ShowMode.Both) {\n      this._clearNetworkItemView();\n      this._createNetworkItemView();\n      this._updateUI();\n    }\n  }\n\n  _clearNetworkItemView(): void {\n    if (this._networkItemView) {\n      this._networkItemView.detach();\n      this._networkItemView = null;\n    }\n  }\n  _createNetworkItemView(initialTab?: NetworkItemViewTabs): NetworkItemView|undefined {\n    if (!this._currentRequest) {\n      return;\n    }\n    this._networkItemView =\n        new NetworkItemView(this._currentRequest, this._networkLogView.timeCalculator(), initialTab);\n    this._networkItemView.leftToolbar().appendToolbarItem(new UI.Toolbar.ToolbarItem(this._closeButtonElement));\n    this._networkItemView.show(this._detailsWidget.element);\n    this._splitWidget.showBoth();\n    return this._networkItemView;\n  }\n\n  _updateUI(): void {\n    if (this._detailsWidget) {\n      this._detailsWidget.element.classList.toggle(\n          'network-details-view-tall-header', this._networkLogLargeRowsSetting.get());\n    }\n    if (this._networkLogView) {\n      this._networkLogView.switchViewMode(!this._splitWidget.isResizable());\n    }\n  }\n\n  appendApplicableItems(this: NetworkPanel, event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object):\n      void {\n    function reveal(this: NetworkPanel, request: SDK.NetworkRequest.NetworkRequest): void {\n      UI.ViewManager.ViewManager.instance()\n          .showView('network')\n          .then(this._networkLogView.resetFilter.bind(this._networkLogView))\n          .then(this.revealAndHighlightRequest.bind(this, request));\n    }\n\n    function appendRevealItem(this: NetworkPanel, request: SDK.NetworkRequest.NetworkRequest): void {\n      contextMenu.revealSection().appendItem(i18nString(UIStrings.revealInNetworkPanel), reveal.bind(this, request));\n    }\n    if ((event.target as Node).isSelfOrDescendant(this.element)) {\n      return;\n    }\n\n    if (target instanceof SDK.Resource.Resource) {\n      const resource = (target as SDK.Resource.Resource);\n      if (resource.request) {\n        appendRevealItem.call(this, resource.request);\n      }\n      return;\n    }\n    if (target instanceof Workspace.UISourceCode.UISourceCode) {\n      const uiSourceCode = (target as Workspace.UISourceCode.UISourceCode);\n      const resource = Bindings.ResourceUtils.resourceForURL(uiSourceCode.url());\n      if (resource && resource.request) {\n        appendRevealItem.call(this, resource.request);\n      }\n      return;\n    }\n\n    if (!(target instanceof SDK.NetworkRequest.NetworkRequest)) {\n      return;\n    }\n    const request = (target as SDK.NetworkRequest.NetworkRequest);\n    if (this._networkItemView && this._networkItemView.isShowing() && this._networkItemView.request() === request) {\n      return;\n    }\n\n    appendRevealItem.call(this, request);\n  }\n\n  _onFilmFrameSelected(event: Common.EventTarget.EventTargetEvent): void {\n    const timestamp = (event.data as number);\n    this._overviewPane.setWindowTimes(0, timestamp);\n  }\n\n  _onFilmFrameEnter(event: Common.EventTarget.EventTargetEvent): void {\n    const timestamp = (event.data as number);\n    this._networkOverview.selectFilmStripFrame(timestamp);\n    this._networkLogView.selectFilmStripFrame(timestamp / 1000);\n  }\n\n  _onFilmFrameExit(_event: Common.EventTarget.EventTargetEvent): void {\n    this._networkOverview.clearFilmStripFrame();\n    this._networkLogView.clearFilmStripFrame();\n  }\n\n  _onUpdateRequest(event: Common.EventTarget.EventTargetEvent): void {\n    const request = (event.data as SDK.NetworkRequest.NetworkRequest);\n    this._calculator.updateBoundaries(request);\n    // FIXME: Unify all time units across the frontend!\n    this._overviewPane.setBounds(this._calculator.minimumBoundary() * 1000, this._calculator.maximumBoundary() * 1000);\n    this._networkOverview.updateRequest(request);\n    this._overviewPane.scheduleUpdate();\n  }\n\n  resolveLocation(locationName: string): UI.View.ViewLocation|null {\n    if (locationName === 'network-sidebar') {\n      return this._sidebarLocation;\n    }\n    return null;\n  }\n}\n\nexport const displayScreenshotDelay = 1000;\n\nlet contextMenuProviderInstance: ContextMenuProvider;\n\nexport class ContextMenuProvider implements UI.ContextMenu.Provider {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ContextMenuProvider {\n    const {forceNew} = opts;\n    if (!contextMenuProviderInstance || forceNew) {\n      contextMenuProviderInstance = new ContextMenuProvider();\n    }\n\n    return contextMenuProviderInstance;\n  }\n  appendApplicableItems(event: Event, contextMenu: UI.ContextMenu.ContextMenu, target: Object): void {\n    NetworkPanel._instance().appendApplicableItems(event, contextMenu, target);\n  }\n}\nlet requestRevealerInstance: RequestRevealer;\nexport class RequestRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): RequestRevealer {\n    const {forceNew} = opts;\n    if (!requestRevealerInstance || forceNew) {\n      requestRevealerInstance = new RequestRevealer();\n    }\n\n    return requestRevealerInstance;\n  }\n\n  reveal(request: Object): Promise<void> {\n    if (!(request instanceof SDK.NetworkRequest.NetworkRequest)) {\n      return Promise.reject(new Error('Internal error: not a network request'));\n    }\n    const panel = NetworkPanel._instance();\n    return UI.ViewManager.ViewManager.instance().showView('network').then(\n        panel.revealAndHighlightRequest.bind(panel, request));\n  }\n}\n\nexport class FilmStripRecorder implements SDK.TracingManager.TracingManagerClient {\n  _tracingManager: SDK.TracingManager.TracingManager|null;\n  _resourceTreeModel: SDK.ResourceTreeModel.ResourceTreeModel|null;\n  _timeCalculator: NetworkTimeCalculator;\n  _filmStripView: PerfUI.FilmStripView.FilmStripView;\n  _tracingModel: SDK.TracingModel.TracingModel|null;\n  _callback: ((arg0: SDK.FilmStripModel.FilmStripModel|null) => void)|null;\n\n  constructor(timeCalculator: NetworkTimeCalculator, filmStripView: PerfUI.FilmStripView.FilmStripView) {\n    this._tracingManager = null;\n    this._resourceTreeModel = null;\n    this._timeCalculator = timeCalculator;\n    this._filmStripView = filmStripView;\n    this._tracingModel = null;\n    this._callback = null;\n  }\n\n  traceEventsCollected(events: SDK.TracingManager.EventPayload[]): void {\n    if (this._tracingModel) {\n      this._tracingModel.addEvents(events);\n    }\n  }\n\n  tracingComplete(): void {\n    if (!this._tracingModel || !this._tracingManager) {\n      return;\n    }\n    this._tracingModel.tracingComplete();\n    this._tracingManager = null;\n    if (this._callback) {\n      this._callback(\n          new SDK.FilmStripModel.FilmStripModel(this._tracingModel, this._timeCalculator.minimumBoundary() * 1000));\n    }\n    this._callback = null;\n    if (this._resourceTreeModel) {\n      this._resourceTreeModel.resumeReload();\n    }\n    this._resourceTreeModel = null;\n  }\n\n  tracingBufferUsage(): void {\n  }\n\n  eventsRetrievalProgress(_progress: number): void {\n  }\n\n  startRecording(): void {\n    this._filmStripView.reset();\n    this._filmStripView.setStatusText(i18nString(UIStrings.recordingFrames));\n    const tracingManagers = SDK.TargetManager.TargetManager.instance().models(SDK.TracingManager.TracingManager);\n    if (this._tracingManager || !tracingManagers.length) {\n      return;\n    }\n\n    this._tracingManager = tracingManagers[0];\n    if (!this._tracingManager) {\n      return;\n    }\n    this._resourceTreeModel = this._tracingManager.target().model(SDK.ResourceTreeModel.ResourceTreeModel);\n    if (this._tracingModel) {\n      this._tracingModel.dispose();\n    }\n    this._tracingModel = new SDK.TracingModel.TracingModel(new Bindings.TempFile.TempFileBackingStorage());\n    this._tracingManager.start(this, '-*,disabled-by-default-devtools.screenshot', '');\n\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.FilmStripStartedRecording);\n  }\n\n  isRecording(): boolean {\n    return Boolean(this._tracingManager);\n  }\n\n  stopRecording(callback: (arg0: SDK.FilmStripModel.FilmStripModel|null) => void): void {\n    if (!this._tracingManager) {\n      return;\n    }\n\n    this._tracingManager.stop();\n    if (this._resourceTreeModel) {\n      this._resourceTreeModel.suspendReload();\n    }\n    this._callback = callback;\n    this._filmStripView.setStatusText(i18nString(UIStrings.fetchingFrames));\n  }\n}\n\nlet networkActionDelegateInstance: ActionDelegate;\n\nexport class ActionDelegate implements UI.ActionRegistration.ActionDelegate {\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): ActionDelegate {\n    const {forceNew} = opts;\n    if (!networkActionDelegateInstance || forceNew) {\n      networkActionDelegateInstance = new ActionDelegate();\n    }\n    return networkActionDelegateInstance;\n  }\n\n  handleAction(context: UI.Context.Context, actionId: string): boolean {\n    const panel = UI.Context.Context.instance().flavor(NetworkPanel);\n    console.assert(Boolean(panel && panel instanceof NetworkPanel));\n    if (!panel) {\n      return false;\n    }\n    switch (actionId) {\n      case 'network.toggle-recording': {\n        panel._toggleRecord(!panel._recordLogSetting.get());\n        return true;\n      }\n      case 'network.hide-request-details': {\n        if (!panel._networkItemView) {\n          return false;\n        }\n        panel._hideRequestPanel();\n        panel._networkLogView.resetFocus();\n        return true;\n      }\n      case 'network.search': {\n        const selection = UI.InspectorView.InspectorView.instance().element.window().getSelection();\n        if (selection) {\n          let queryCandidate = '';\n          if (selection.rangeCount) {\n            queryCandidate = selection.toString().replace(/\\r?\\n.*/, '');\n          }\n          SearchNetworkView.openSearch(queryCandidate);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n\nlet requestLocationRevealerInstance: RequestLocationRevealer;\n\nexport class RequestLocationRevealer implements Common.Revealer.Revealer {\n  static instance(opts: {\n    forceNew: boolean|null,\n  }|undefined = {forceNew: null}): RequestLocationRevealer {\n    const {forceNew} = opts;\n    if (!requestLocationRevealerInstance || forceNew) {\n      requestLocationRevealerInstance = new RequestLocationRevealer();\n    }\n    return requestLocationRevealerInstance;\n  }\n\n  async reveal(match: Object): Promise<void> {\n    const location = (match as UIRequestLocation);\n    const view = await NetworkPanel._instance().selectAndActivateRequest(location.request);\n    if (!view) {\n      return;\n    }\n    if (location.searchMatch) {\n      await view.revealResponseBody(location.searchMatch.lineNumber);\n    }\n    if (location.header) {\n      view.revealHeader(location.header.section, location.header.header?.name);\n    }\n  }\n}\n\nlet searchNetworkViewInstance: SearchNetworkView;\n\nexport class SearchNetworkView extends Search.SearchView.SearchView {\n  private constructor() {\n    super('network');\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): SearchNetworkView {\n    const {forceNew} = opts;\n    if (!searchNetworkViewInstance || forceNew) {\n      searchNetworkViewInstance = new SearchNetworkView();\n    }\n\n    return searchNetworkViewInstance;\n  }\n\n  static async openSearch(query: string, searchImmediately?: boolean): Promise<Search.SearchView.SearchView> {\n    await UI.ViewManager.ViewManager.instance().showView('network.search-network-tab');\n    const searchView = SearchNetworkView.instance();\n    searchView.toggle(query, Boolean(searchImmediately));\n    return searchView;\n  }\n\n  createScope(): Search.SearchConfig.SearchScope {\n    return new NetworkSearchScope();\n  }\n}\nexport interface FilterOptions {\n  clearFilter: boolean;\n}\n"]}