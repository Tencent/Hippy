{"version":3,"file":"RuntimeInstantiator.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/startup/RuntimeInstantiator.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AAEH,uDAAuD;AAEvD,OAAO,gCAAgC,CAAC;AAExC,OAAO,KAAK,UAAU,MAAM,yBAAyB,CAAC;AAEtD,uCAAuC;AACvC,aAAa;AACb,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,EAAE,CAAC;AAClC,aAAa;AACb,OAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,8EAA8E;AAC9E,aAAa;AACb,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,IAAI,EAAE,CAAC;AAChD,aAAa;AACb,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,IAAI,SAAS,CAAC;AAErE,MAAM,CAAC,KAAK,UAAU,gBAAgB,CAAC,QAAgB;IACrD,OAAO,CAAC,SAAS,CAAC,+BAA+B,CAAC,CAAC;IAEnD,MAAM,oBAAoB,GAEtB,EAAE,CAAC;IACP,mEAAmE;IACnE,aAAa;IACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACnD,mEAAmE;QACnE,aAAa;QACb,MAAM,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QACjC,oBAAoB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;KACrC;IAED,mEAAmE;IACnE,aAAa;IACb,MAAM,aAAa,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC;IACzD,MAAM,iBAAiB,GAAG,EAAE,CAAC;IAC7B,MAAM,eAAe,GAAG,EAAE,CAAC;IAC3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QAC7C,MAAM,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;QACpC,MAAM,IAAI,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;QAChC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,UAAU,CAAC,MAAM,CAAC,KAAK,WAAW,EAAE;YACtC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC5B;KACF;IAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE;QACjD,iBAAiB,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACrD,iBAAiB,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;KAChE;IACD,MAAM,eAAe,GAAG,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,IAAI,EAAE,iBAAiB,EAAC,CAAC,CAAC;IACjG,6CAA6C;IAC7C,IAAI,CAAC,OAAO,GAAG,eAAe,CAAC;IAC/B,IAAI,eAAe,EAAE;QACnB,MAAM,eAAe,CAAC,oBAAoB,CAAC,eAAe,CAAC,CAAC;KAC7D;IACD,UAAU,CAAC,OAAO,CAAC,yBAAyB,EAAE,CAAC;AACjD,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,WAAW,CAAC,OAAe;IAC/C,OAAO,gBAAgB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IAEvD,SAAS,eAAe;QACtB,aAAa;QACb,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;IAClC,CAAC;AACH,CAAC","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport '../../core/root/root-legacy.js';\n\nimport * as RootModule from '../../core/root/root.js';\n\n// Legacy runtime namespace definitions\n// @ts-ignore\nself.Runtime = self.Runtime || {};\n// @ts-ignore\nRuntime = Runtime || {};\n// The following two variables are initialized in `build_release_applications`\n// @ts-ignore\nRoot.allDescriptors = Root.allDescriptors || [];\n// @ts-ignore\nRoot.applicationDescriptor = Root.applicationDescriptor || undefined;\n\nexport async function startApplication(_appName: string): Promise<void> {\n  console.timeStamp('Root.Runtime.startApplication');\n\n  const allDescriptorsByName: {\n    [x: string]: RootModule.Runtime.ModuleDescriptor,\n  } = {};\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // @ts-ignore\n  for (let i = 0; i < Root.allDescriptors.length; ++i) {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // @ts-ignore\n    const d = Root.allDescriptors[i];\n    allDescriptorsByName[d['name']] = d;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // @ts-ignore\n  const configuration = Root.applicationDescriptor.modules;\n  const moduleDescriptors = [];\n  const coreModuleNames = [];\n  for (let i = 0; i < configuration.length; ++i) {\n    const descriptor = configuration[i];\n    const name = descriptor['name'];\n    moduleDescriptors.push(allDescriptorsByName[name]);\n    if (descriptor['type'] === 'autostart') {\n      coreModuleNames.push(name);\n    }\n  }\n\n  for (let i = 0; i < moduleDescriptors.length; ++i) {\n    moduleDescriptors[i].name = configuration[i]['name'];\n    moduleDescriptors[i].condition = configuration[i]['condition'];\n  }\n  const runtimeInstance = RootModule.Runtime.Runtime.instance({forceNew: true, moduleDescriptors});\n  // @ts-ignore Exposed for legacy layout tests\n  self.runtime = runtimeInstance;\n  if (coreModuleNames) {\n    await runtimeInstance.loadAutoStartModules(coreModuleNames);\n  }\n  RootModule.Runtime.appStartedPromiseCallback();\n}\n\nexport async function startWorker(appName: string): Promise<void> {\n  return startApplication(appName).then(sendWorkerReady);\n\n  function sendWorkerReady(): void {\n    // @ts-ignore\n    self.postMessage('workerReady');\n  }\n}\n"]}