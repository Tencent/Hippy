{"version":3,"file":"NodeConnectionsPanel.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/node_main/NodeConnectionsPanel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js';\nimport * as Host from '../../core/host/host.js';\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Text in Node Connections Panel of the Sources panel when debugging a Node.js app\n  */\n  nodejsDebuggingGuide: 'Node.js debugging guide',\n  /**\n  *@description Text in Node Connections Panel of the Sources panel when debugging a Node.js app\n  *@example {Node.js debugging guide} PH1\n  */\n  specifyNetworkEndpointAnd:\n      'Specify network endpoint and DevTools will connect to it automatically. Read {PH1} to learn more.',\n  /**\n  *@description Placeholder text content in Node Connections Panel of the Sources panel when debugging a Node.js app\n  */\n  noConnectionsSpecified: 'No connections specified',\n  /**\n  *@description Text of add network target button in Node Connections Panel of the Sources panel when debugging a Node.js app\n  */\n  addConnection: 'Add connection',\n  /**\n  *@description Text in Node Connections Panel of the Sources panel when debugging a Node.js app\n  */\n  networkAddressEgLocalhost: 'Network address (e.g. localhost:9229)',\n};\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/node_main/NodeConnectionsPanel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nlet nodeConnectionsPanelInstance: NodeConnectionsPanel;\n\nexport class NodeConnectionsPanel extends UI.Panel.Panel {\n  _config!: Adb.Config;\n  _networkDiscoveryView: NodeConnectionsView;\n  private constructor() {\n    super('node-connection');\n    this.registerRequiredCSS('entrypoints/node_main/nodeConnectionsPanel.css', {enableLegacyPatching: false});\n    this.contentElement.classList.add('node-panel');\n\n    const container = this.contentElement.createChild('div', 'node-panel-center');\n\n    const image = (container.createChild('img', 'node-panel-logo') as HTMLImageElement);\n    image.src = 'https://nodejs.org/static/images/logos/nodejs-new-pantone-black.svg';\n\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.DevicesDiscoveryConfigChanged, this._devicesDiscoveryConfigChanged, this);\n\n    this.contentElement.tabIndex = 0;\n    this.setDefaultFocusedElement(this.contentElement);\n\n    // Trigger notification once.\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(false);\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesUpdatesEnabled(true);\n\n    this._networkDiscoveryView = new NodeConnectionsView(config => {\n      this._config.networkDiscoveryConfig = config;\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.setDevicesDiscoveryConfig(this._config);\n    });\n    this._networkDiscoveryView.show(container);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): NodeConnectionsPanel {\n    const {forceNew} = opts;\n    if (!nodeConnectionsPanelInstance || forceNew) {\n      nodeConnectionsPanelInstance = new NodeConnectionsPanel();\n    }\n\n    return nodeConnectionsPanelInstance;\n  }\n\n  _devicesDiscoveryConfigChanged(event: Common.EventTarget.EventTargetEvent): void {\n    this._config = (event.data as Adb.Config);\n    this._networkDiscoveryView.discoveryConfigChanged(this._config.networkDiscoveryConfig);\n  }\n}\n\nexport class NodeConnectionsView extends UI.Widget.VBox implements UI.ListWidget.Delegate<Adb.PortForwardingRule> {\n  _callback: (arg0: Adb.NetworkDiscoveryConfig) => void;\n  _list: UI.ListWidget.ListWidget<Adb.PortForwardingRule>;\n  _editor: UI.ListWidget.Editor<Adb.PortForwardingRule>|null;\n  _networkDiscoveryConfig: {\n    address: string,\n  }[];\n  constructor(callback: (arg0: Adb.NetworkDiscoveryConfig) => void) {\n    super();\n    this._callback = callback;\n    this.element.classList.add('network-discovery-view');\n\n    const networkDiscoveryFooter = this.element.createChild('div', 'network-discovery-footer');\n    const documentationLink =\n        UI.XLink.XLink.create('https://nodejs.org/en/docs/inspector/', i18nString(UIStrings.nodejsDebuggingGuide));\n    networkDiscoveryFooter.appendChild(\n        i18n.i18n.getFormatLocalizedString(str_, UIStrings.specifyNetworkEndpointAnd, {PH1: documentationLink}));\n\n    this._list = new UI.ListWidget.ListWidget(this);\n    this._list.registerRequiredCSS('entrypoints/node_main/nodeConnectionsPanel.css', {enableLegacyPatching: false});\n    this._list.element.classList.add('network-discovery-list');\n    const placeholder = document.createElement('div');\n    placeholder.classList.add('network-discovery-list-empty');\n    placeholder.textContent = i18nString(UIStrings.noConnectionsSpecified);\n    this._list.setEmptyPlaceholder(placeholder);\n    this._list.show(this.element);\n    this._editor = null;\n\n    const addButton = UI.UIUtils.createTextButton(\n        i18nString(UIStrings.addConnection), this._addNetworkTargetButtonClicked.bind(this),\n        'add-network-target-button', true /* primary */);\n    this.element.appendChild(addButton);\n\n    this._networkDiscoveryConfig = [];\n\n    this.element.classList.add('node-frontend');\n  }\n\n  _update(): void {\n    const config = this._networkDiscoveryConfig.map(item => item.address);\n    this._callback.call(null, config);\n  }\n\n  _addNetworkTargetButtonClicked(): void {\n    this._list.addNewItem(this._networkDiscoveryConfig.length, {address: '', port: ''});\n  }\n\n  discoveryConfigChanged(networkDiscoveryConfig: Adb.NetworkDiscoveryConfig): void {\n    this._networkDiscoveryConfig = [];\n    this._list.clear();\n    for (const address of networkDiscoveryConfig) {\n      const item = {address: address, port: ''};\n      this._networkDiscoveryConfig.push(item);\n      this._list.appendItem(item, true);\n    }\n  }\n\n  renderItem(rule: Adb.PortForwardingRule, _editable: boolean): Element {\n    const element = document.createElement('div');\n    element.classList.add('network-discovery-list-item');\n    element.createChild('div', 'network-discovery-value network-discovery-address').textContent = rule.address;\n    return element;\n  }\n\n  removeItemRequested(rule: Adb.PortForwardingRule, index: number): void {\n    this._networkDiscoveryConfig.splice(index, 1);\n    this._list.removeItem(index);\n    this._update();\n  }\n\n  commitEdit(rule: Adb.PortForwardingRule, editor: UI.ListWidget.Editor<Adb.PortForwardingRule>, isNew: boolean): void {\n    rule.address = editor.control('address').value.trim();\n    if (isNew) {\n      this._networkDiscoveryConfig.push(rule);\n    }\n    this._update();\n  }\n\n  beginEdit(rule: Adb.PortForwardingRule): UI.ListWidget.Editor<Adb.PortForwardingRule> {\n    const editor = this._createEditor();\n    editor.control('address').value = rule.address;\n    return editor;\n  }\n\n  _createEditor(): UI.ListWidget.Editor<Adb.PortForwardingRule> {\n    if (this._editor) {\n      return this._editor;\n    }\n\n    const editor = new UI.ListWidget.Editor<Adb.PortForwardingRule>();\n    this._editor = editor;\n    const content = editor.contentElement();\n    const fields = content.createChild('div', 'network-discovery-edit-row');\n    const input =\n        editor.createInput('address', 'text', i18nString(UIStrings.networkAddressEgLocalhost), addressValidator);\n    fields.createChild('div', 'network-discovery-value network-discovery-address').appendChild(input);\n    return editor;\n\n    function addressValidator(_rule: Adb.PortForwardingRule, _index: number, input: HTMLInputElement|HTMLSelectElement):\n        UI.ListWidget.ValidatorResult {\n      const match = input.value.trim().match(/^([a-zA-Z0-9\\.\\-_]+):(\\d+)$/);\n      if (!match) {\n        return {\n          valid: false,\n          errorMessage: undefined,\n        };\n      }\n      const port = parseInt(match[2], 10);\n      return {\n        valid: port <= 65535,\n        errorMessage: undefined,\n      };\n    }\n  }\n}\n"]}