{"version":3,"file":"HTMLOutline.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/formatter_worker/HTMLOutline.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,QAAQ,MAAM,iCAAiC,CAAC;AAC5D,OAAO,KAAK,SAAS,MAAM,uCAAuC,CAAC;AAEnE,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AAQzD,MAAM,UAAU,WAAW,CAAC,OAAe,EAAE,aAGU;IACrD,MAAM,kBAAkB,GAAG,iBAAiB,CAAC;IAC7C,MAAM,kBAAkB,GAAG,iBAAiB,CAAC;IAE7C,MAAM,UAAU,GAAG,IAAI,SAAS,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,eAAe,CAAC,qBAAqB,CAAC,OAAO,CAAC,CAAC,CAAC;IAChH,OAAO,IAAI,EAAE;QACX,qCAAqC;QACrC,MAAM,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM;SACP;QACD,MAAM,WAAW,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,KAAK,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC;QACtF,UAAU,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;QAChC,MAAM,UAAU,GAAG,UAAU,CAAC,UAAU,EAAE,CAAC;QAC3C,MAAM,YAAY,GAAG,UAAU,CAAC,YAAY,EAAE,CAAC;QAC/C,sCAAsC;QACtC,MAAM,YAAY,GAAG,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;QACrF,IAAI,CAAC,YAAY,EAAE;YACjB,MAAM;SACP;QACD,MAAM,SAAS,GAAG,UAAU,CAAC,MAAM,EAAE,GAAG,YAAY,CAAC,KAAK,CAAC;QAC3D,UAAU,CAAC,OAAO,CAAC,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QACvD,MAAM,aAAa,GAAG,OAAO,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAChE,iBAAiB,CAAC,aAAa,EAAE,CAAC,EAAC,KAAK,EAAC,EAAE,EAAE;YAC3C,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACnB,IAAI,IAAI,CAAC,IAAI,KAAK,CAAC,EAAE;oBACnB,IAAI,CAAC,MAAM,IAAI,YAAY,CAAC;iBAC7B;gBACD,IAAI,CAAC,IAAI,IAAI,UAAU,CAAC;YAC1B,CAAC,CAAC,CAAC;YACH,aAAa,CAAC,EAAC,KAAK,EAAE,WAAW,EAAE,KAAK,EAAC,CAAC,CAAC;QAC7C,CAAC,CAAC,CAAC;KACJ;IACD,aAAa,CAAC,EAAC,KAAK,EAAE,EAAE,EAAE,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;AAChD,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\n\nimport {javaScriptOutline} from './JavaScriptOutline.js';\nexport interface Item {\n  title: string;\n  subtitle?: string;\n  line: number;\n  column: number;\n}\n\nexport function htmlOutline(content: string, chunkCallback: (arg0: {\n                                               chunk: Array<Item>,\n                                               isLastChunk: boolean,\n                                             }) => void): void {\n  const SCRIPT_OPENING_TAG = /<script[^>]*>/im;\n  const SCRIPT_CLOSING_TAG = /<\\/script\\s*>/im;\n\n  const textCursor = new TextUtils.TextCursor.TextCursor(Platform.StringUtilities.findLineEndingIndexes(content));\n  while (true) {\n    // Look for the opening <script> tag.\n    const openingMatch = SCRIPT_OPENING_TAG.exec(content.substring(textCursor.offset()));\n    if (!openingMatch) {\n      break;\n    }\n    const scriptStart = textCursor.offset() + openingMatch.index + openingMatch[0].length;\n    textCursor.advance(scriptStart);\n    const scriptLine = textCursor.lineNumber();\n    const scriptColumn = textCursor.columnNumber();\n    // Look for the closing </script> tag.\n    const closingMatch = SCRIPT_CLOSING_TAG.exec(content.substring(textCursor.offset()));\n    if (!closingMatch) {\n      break;\n    }\n    const scriptEnd = textCursor.offset() + closingMatch.index;\n    textCursor.advance(scriptEnd + closingMatch[0].length);\n    const scriptContent = content.substring(scriptStart, scriptEnd);\n    javaScriptOutline(scriptContent, ({chunk}) => {\n      chunk.forEach(item => {\n        if (item.line === 0) {\n          item.column += scriptColumn;\n        }\n        item.line += scriptLine;\n      });\n      chunkCallback({chunk, isLastChunk: false});\n    });\n  }\n  chunkCallback({chunk: [], isLastChunk: true});\n}\n"]}