{"version":3,"file":"JavaScriptOutline.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/formatter_worker/JavaScriptOutline.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Platform from '../../core/platform/platform.js';\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as AcornLoose from '../../third_party/acorn-loose/acorn-loose.js';\nimport * as Acorn from '../../third_party/acorn/acorn.js';\n\nimport {ECMA_VERSION} from './AcornTokenizer.js';\nimport {ESTreeWalker} from './ESTreeWalker.js';\nimport type {ChunkCallback} from './FormatterWorker.js';\n\nexport interface Item {\n  title: string;\n  subtitle?: string;\n  line: number;\n  column: number;\n}\n\nexport function javaScriptOutline(content: string, chunkCallback: ChunkCallback): void {\n  const chunkSize = 100000;\n  let chunk: Item[] = [];\n  let lastReportedOffset = 0;\n\n  let ast;\n  try {\n    ast = Acorn.parse(content, {ecmaVersion: ECMA_VERSION, ranges: false});\n  } catch (e) {\n    ast = AcornLoose.AcornLoose.parse(content, {ecmaVersion: ECMA_VERSION, ranges: false});\n  }\n\n  const contentLineEndings = Platform.StringUtilities.findLineEndingIndexes(content);\n  const textCursor = new TextUtils.TextCursor.TextCursor(contentLineEndings);\n  const walker = new ESTreeWalker(beforeVisit);\n\n  // @ts-ignore Technically, the acorn Node type is a subclass of Acorn.ESTree.Node.\n  // However, the acorn package currently exports its type without specifying\n  // this relationship. So while this is allowed on runtime, we can't properly\n  // typecheck it.\n  walker.walk(ast);\n\n  chunkCallback({chunk, isLastChunk: true});\n\n  function beforeVisit(node: Acorn.ESTree.Node): undefined {\n    if (node.type === 'ClassDeclaration') {\n      reportClass((node.id as Acorn.ESTree.Node));\n    } else if (node.type === 'VariableDeclarator' && node.init && isClassNode(node.init)) {\n      reportClass((node.id as Acorn.ESTree.Node));\n    } else if (node.type === 'AssignmentExpression' && isNameNode(node.left) && isClassNode(node.right)) {\n      reportClass((node.left as Acorn.ESTree.Node));\n    } else if (node.type === 'Property' && isNameNode(node.key) && isClassNode(node.value)) {\n      reportClass((node.key as Acorn.ESTree.Node));\n    } else if (node.type === 'FunctionDeclaration') {\n      reportFunction((node.id as Acorn.ESTree.Node), node);\n    } else if (node.type === 'VariableDeclarator' && node.init && isFunctionNode(node.init)) {\n      reportFunction((node.id as Acorn.ESTree.Node), (node.init as Acorn.ESTree.Node));\n    } else if (node.type === 'AssignmentExpression' && isNameNode(node.left) && isFunctionNode(node.right)) {\n      reportFunction((node.left as Acorn.ESTree.Node), (node.right as Acorn.ESTree.Node));\n    } else if (\n        (node.type === 'MethodDefinition' || node.type === 'Property') && isNameNode(node.key) &&\n        isFunctionNode(node.value)) {\n      const namePrefix = [];\n      if (node.kind === 'get' || node.kind === 'set') {\n        namePrefix.push(node.kind);\n      }\n      if ('static' in node && node.static) {\n        namePrefix.push('static');\n      }\n      reportFunction((node.key as Acorn.ESTree.Node), node.value, namePrefix.join(' '));\n    }\n\n    return undefined;\n  }\n\n  function reportClass(nameNode: Acorn.ESTree.Node): void {\n    const name = 'class ' + stringifyNameNode(nameNode);\n    textCursor.advance(nameNode.start);\n    addOutlineItem(name);\n  }\n\n  function reportFunction(nameNode: Acorn.ESTree.Node, functionNode: Acorn.ESTree.Node, namePrefix?: string): void {\n    let name = stringifyNameNode(nameNode);\n    const functionDeclarationNode = (functionNode as Acorn.ESTree.FunctionDeclaration);\n    if (functionDeclarationNode.generator) {\n      name = '*' + name;\n    }\n    if (namePrefix) {\n      name = namePrefix + ' ' + name;\n    }\n    if (functionDeclarationNode.async) {\n      name = 'async ' + name;\n    }\n\n    textCursor.advance(nameNode.start);\n    addOutlineItem(name, stringifyArguments((functionDeclarationNode.params as Acorn.ESTree.Node[])));\n  }\n\n  function isNameNode(node: Acorn.ESTree.Node): boolean {\n    if (!node) {\n      return false;\n    }\n    if (node.type === 'MemberExpression') {\n      return !node.computed && node.property.type === 'Identifier';\n    }\n    return node.type === 'Identifier';\n  }\n\n  function isFunctionNode(node: Acorn.ESTree.Node): boolean {\n    if (!node) {\n      return false;\n    }\n    return node.type === 'FunctionExpression' || node.type === 'ArrowFunctionExpression';\n  }\n\n  function isClassNode(node: Acorn.ESTree.Node): boolean {\n    return node !== undefined && node.type === 'ClassExpression';\n  }\n\n  function stringifyNameNode(node: Acorn.ESTree.Node): string {\n    if (node.type === 'MemberExpression') {\n      node = (node.property as Acorn.ESTree.Node);\n    }\n    console.assert(node.type === 'Identifier', 'Cannot extract identifier from unknown type: ' + node.type);\n    const identifier = (node as Acorn.ESTree.Identifier);\n    return identifier.name;\n  }\n\n  function stringifyArguments(params: Acorn.ESTree.Node[]): string {\n    const result = [];\n    for (const param of params) {\n      if (param.type === 'Identifier') {\n        result.push(param.name);\n      } else if (param.type === 'RestElement' && param.argument.type === 'Identifier') {\n        result.push('...' + param.argument.name);\n      } else {\n        console.error('Error: unexpected function parameter type: ' + param.type);\n      }\n    }\n    return '(' + result.join(', ') + ')';\n  }\n\n  function addOutlineItem(title: string, subtitle?: string): void {\n    const line = textCursor.lineNumber();\n    const column = textCursor.columnNumber();\n    chunk.push({title, subtitle, line, column});\n    if (textCursor.offset() - lastReportedOffset >= chunkSize) {\n      chunkCallback({chunk, isLastChunk: false});\n      chunk = [];\n      lastReportedOffset = textCursor.offset();\n    }\n  }\n}\n"]}