{"version":3,"file":"node_app-meta.js","sourceRoot":"","sources":["../../../../../../front_end/entrypoints/node_app/node_app-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAChD,OAAO,KAAK,EAAE,MAAM,2BAA2B,CAAC;AAKhD,MAAM,SAAS,GAAG;IAChB;;QAEI;IACJ,IAAI,EAAE,MAAM;IACZ;;OAEG;IACH,QAAQ,EAAE,MAAM;CACjB,CAAC;AAEF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,uCAAuC,EAAE,SAAS,CAAC,CAAC;AAC7F,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,mBAA+C,CAAC;AAEpD,KAAK,UAAU,cAAc;IAC3B,IAAI,CAAC,mBAAmB,EAAE;QACxB,8CAA8C;QAC9C,MAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;QACnE,mBAAmB,GAAG,MAAM,MAAM,CAAC,iCAAiC,CAAC,CAAC;KACvE;IACD,OAAO,mBAAmB,CAAC;AAC7B,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,uCAAkD;IAC1D,EAAE,EAAE,mBAAmB;IACvB,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,IAAI,CAAC;IACrC,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,QAAQ,CAAC;IACjD,KAAK,EAAE,CAAC;IACR,WAAW,6BAA0C;IACrD,KAAK,CAAC,QAAQ;QACZ,MAAM,OAAO,GAAG,MAAM,cAAc,EAAE,CAAC;QACvC,OAAO,OAAO,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,QAAQ,EAAE,CAAC;IAClE,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as i18n from '../../core/i18n/i18n.js';\nimport * as Root from '../../core/root/root.js';\nimport * as UI from '../../ui/legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as Sources from '../../panels/sources/sources.js';\n\nconst UIStrings = {\n  /**\n    *@description Title of the 'Node' tool in the Network Navigator View, which is part of the Sources tool\n    */\n  node: 'Node',\n  /**\n   *@description Command for showing the 'Node' tool in the Network Navigator View, which is part of the Sources tool\n   */\n  showNode: 'Node',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('entrypoints/node_app/node_app-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedSourcesModule: (typeof Sources|undefined);\n\nasync function loadHelpModule(): Promise<typeof Sources> {\n  if (!loadedSourcesModule) {\n    // Side-effect import resources in module.json\n    await Root.Runtime.Runtime.instance().loadModulePromise('sources');\n    loadedSourcesModule = await import('../../panels/sources/sources.js');\n  }\n  return loadedSourcesModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.NAVIGATOR_VIEW,\n  id: 'navigator-network',\n  title: i18nLazyString(UIStrings.node),\n  commandPrompt: i18nLazyString(UIStrings.showNode),\n  order: 2,\n  persistence: UI.ViewManager.ViewPersistence.PERMANENT,\n  async loadView() {\n    const Sources = await loadHelpModule();\n    return Sources.SourcesNavigator.NetworkNavigatorView.instance();\n  },\n});\n"]}