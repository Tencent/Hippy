{
  "core/common/ResourceType.ts | cspviolationreport": {
    "message": "CSPViolationReport"
  },
  "core/common/ResourceType.ts | css": {
    "message": "CSS"
  },
  "core/common/ResourceType.ts | doc": {
    "message": "Doc"
  },
  "core/common/ResourceType.ts | document": {
    "message": "Dokument"
  },
  "core/common/ResourceType.ts | documents": {
    "message": "Dokumente"
  },
  "core/common/ResourceType.ts | eventsource": {
    "message": "EventSource"
  },
  "core/common/ResourceType.ts | fetch": {
    "message": "Abrufen"
  },
  "core/common/ResourceType.ts | font": {
    "message": "Schriftart"
  },
  "core/common/ResourceType.ts | fonts": {
    "message": "Schriftarten"
  },
  "core/common/ResourceType.ts | image": {
    "message": "Bild"
  },
  "core/common/ResourceType.ts | images": {
    "message": "Bilder"
  },
  "core/common/ResourceType.ts | img": {
    "message": "Img"
  },
  "core/common/ResourceType.ts | js": {
    "message": "JS"
  },
  "core/common/ResourceType.ts | manifest": {
    "message": "Manifest"
  },
  "core/common/ResourceType.ts | media": {
    "message": "Medien"
  },
  "core/common/ResourceType.ts | other": {
    "message": "Sonstige"
  },
  "core/common/ResourceType.ts | ping": {
    "message": "Ping"
  },
  "core/common/ResourceType.ts | preflight": {
    "message": "Preflight"
  },
  "core/common/ResourceType.ts | script": {
    "message": "Skript"
  },
  "core/common/ResourceType.ts | scripts": {
    "message": "Skripts"
  },
  "core/common/ResourceType.ts | signedexchange": {
    "message": "SignedExchange"
  },
  "core/common/ResourceType.ts | stylesheet": {
    "message": "Stylesheet"
  },
  "core/common/ResourceType.ts | stylesheets": {
    "message": "Stylesheets"
  },
  "core/common/ResourceType.ts | texttrack": {
    "message": "TextTrack"
  },
  "core/common/ResourceType.ts | wasm": {
    "message": "Wasm"
  },
  "core/common/ResourceType.ts | webassembly": {
    "message": "WebAssembly"
  },
  "core/common/ResourceType.ts | webbundle": {
    "message": "WebBundle"
  },
  "core/common/ResourceType.ts | websocket": {
    "message": "WebSocket"
  },
  "core/common/ResourceType.ts | websockets": {
    "message": "WebSockets"
  },
  "core/common/ResourceType.ts | webtransport": {
    "message": "WebTransport"
  },
  "core/common/ResourceType.ts | ws": {
    "message": "WS"
  },
  "core/common/ResourceType.ts | xhrAndFetch": {
    "message": "XHR und Fetch"
  },
  "core/common/Revealer.ts | applicationPanel": {
    "message": "Anwendungsbereich"
  },
  "core/common/Revealer.ts | changesDrawer": {
    "message": "Ändert die Leiste"
  },
  "core/common/Revealer.ts | elementsPanel": {
    "message": "Bereich „Elemente“"
  },
  "core/common/Revealer.ts | issuesView": {
    "message": "Ansicht „Probleme“"
  },
  "core/common/Revealer.ts | networkPanel": {
    "message": "Netzwerkbereich"
  },
  "core/common/Revealer.ts | sourcesPanel": {
    "message": "Quellenbereich"
  },
  "core/common/Revealer.ts | stylesSidebar": {
    "message": "Seitenleiste „Stile“"
  },
  "core/common/SettingRegistration.ts | adorner": {
    "message": "Adorner"
  },
  "core/common/SettingRegistration.ts | appearance": {
    "message": "Darstellung"
  },
  "core/common/SettingRegistration.ts | console": {
    "message": "Konsole"
  },
  "core/common/SettingRegistration.ts | debugger": {
    "message": "Debugger"
  },
  "core/common/SettingRegistration.ts | elements": {
    "message": "Elemente"
  },
  "core/common/SettingRegistration.ts | extension": {
    "message": "Erweiterung"
  },
  "core/common/SettingRegistration.ts | global": {
    "message": "Global"
  },
  "core/common/SettingRegistration.ts | grid": {
    "message": "Raster"
  },
  "core/common/SettingRegistration.ts | memory": {
    "message": "Arbeitsspeicher"
  },
  "core/common/SettingRegistration.ts | mobile": {
    "message": "Mobil"
  },
  "core/common/SettingRegistration.ts | network": {
    "message": "Netz"
  },
  "core/common/SettingRegistration.ts | performance": {
    "message": "Leistung"
  },
  "core/common/SettingRegistration.ts | persistence": {
    "message": "Persistenz"
  },
  "core/common/SettingRegistration.ts | rendering": {
    "message": "Rendering"
  },
  "core/common/SettingRegistration.ts | sources": {
    "message": "Quellen"
  },
  "core/host/InspectorFrontendHost.ts | devtoolsS": {
    "message": "Entwicklertools – {PH1}"
  },
  "core/host/ResourceLoader.ts | cacheError": {
    "message": "Cache-Fehler"
  },
  "core/host/ResourceLoader.ts | certificateError": {
    "message": "Zertifikatfehler"
  },
  "core/host/ResourceLoader.ts | certificateManagerError": {
    "message": "Zertifikat-Managerfehler"
  },
  "core/host/ResourceLoader.ts | connectionError": {
    "message": "Verbindungsfehler"
  },
  "core/host/ResourceLoader.ts | decodingDataUrlFailed": {
    "message": "Fehler beim Decodieren der Daten-URL"
  },
  "core/host/ResourceLoader.ts | dnsResolverError": {
    "message": "DNS-Resolver-Fehler"
  },
  "core/host/ResourceLoader.ts | ftpError": {
    "message": "FTP-Fehler"
  },
  "core/host/ResourceLoader.ts | httpError": {
    "message": "HTTP-Fehler"
  },
  "core/host/ResourceLoader.ts | httpErrorStatusCodeSS": {
    "message": "HTTP-Fehler: Statuscode {PH1}, {PH2}"
  },
  "core/host/ResourceLoader.ts | invalidUrl": {
    "message": "URL ungültig"
  },
  "core/host/ResourceLoader.ts | signedExchangeError": {
    "message": "SignedExchange-Fehler"
  },
  "core/host/ResourceLoader.ts | systemError": {
    "message": "Systemfehler"
  },
  "core/host/ResourceLoader.ts | unknownError": {
    "message": "Unbekannter Fehler"
  },
  "core/sdk/CPUProfileDataModel.ts | devtoolsCpuProfileParserIsFixing": {
    "message": "DevTools: Der CPU-Profil-Parser behebt {PH1} fehlende Samples."
  },
  "core/sdk/CPUProfilerModel.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "core/sdk/CSSStyleSheetHeader.ts | couldNotFindTheOriginalStyle": {
    "message": "Ursprüngliches Stylesheet konnte nicht gefunden werden."
  },
  "core/sdk/CSSStyleSheetHeader.ts | thereWasAnErrorRetrievingThe": {
    "message": "Beim Abrufen der Quellenstile ist ein Fehler aufgetreten."
  },
  "core/sdk/CompilerSourceMappingContentProvider.ts | couldNotLoadContentForSS": {
    "message": "Inhalt für {PH1} ({PH2}) konnte nicht geladen werden"
  },
  "core/sdk/ConsoleModel.ts | failedToSaveToTempVariable": {
    "message": "Fehler beim Speichern der temporären Variable"
  },
  "core/sdk/ConsoleModel.ts | navigatedToS": {
    "message": "{PH1} aufgerufen"
  },
  "core/sdk/ConsoleModel.ts | profileSFinished": {
    "message": "Profil „{PH1}“ beendet."
  },
  "core/sdk/ConsoleModel.ts | profileSStarted": {
    "message": "Profil „{PH1}“ gestartet."
  },
  "core/sdk/DOMDebuggerModel.ts | animation": {
    "message": "Animation"
  },
  "core/sdk/DOMDebuggerModel.ts | animationFrameFired": {
    "message": "Animationsframe ausgelöst"
  },
  "core/sdk/DOMDebuggerModel.ts | cancelAnimationFrame": {
    "message": "Animationsframe abbrechen"
  },
  "core/sdk/DOMDebuggerModel.ts | canvas": {
    "message": "Canvas"
  },
  "core/sdk/DOMDebuggerModel.ts | clipboard": {
    "message": "Zwischenablage"
  },
  "core/sdk/DOMDebuggerModel.ts | closeAudiocontext": {
    "message": "AudioContext schließen"
  },
  "core/sdk/DOMDebuggerModel.ts | control": {
    "message": "Steuerung"
  },
  "core/sdk/DOMDebuggerModel.ts | createAudiocontext": {
    "message": "AudioContext erstellen"
  },
  "core/sdk/DOMDebuggerModel.ts | createCanvasContext": {
    "message": "Canvas-Kontext erstellen"
  },
  "core/sdk/DOMDebuggerModel.ts | device": {
    "message": "Gerät"
  },
  "core/sdk/DOMDebuggerModel.ts | domMutation": {
    "message": "DOM-Mutation"
  },
  "core/sdk/DOMDebuggerModel.ts | dragDrop": {
    "message": "Drag-and-drop"
  },
  "core/sdk/DOMDebuggerModel.ts | geolocation": {
    "message": "Standortbestimmung"
  },
  "core/sdk/DOMDebuggerModel.ts | keyboard": {
    "message": "Tastatur"
  },
  "core/sdk/DOMDebuggerModel.ts | load": {
    "message": "Laden"
  },
  "core/sdk/DOMDebuggerModel.ts | media": {
    "message": "Medien"
  },
  "core/sdk/DOMDebuggerModel.ts | mouse": {
    "message": "Maus"
  },
  "core/sdk/DOMDebuggerModel.ts | notification": {
    "message": "Benachrichtigung"
  },
  "core/sdk/DOMDebuggerModel.ts | parse": {
    "message": "Parsen"
  },
  "core/sdk/DOMDebuggerModel.ts | pictureinpicture": {
    "message": "Bild im Bild"
  },
  "core/sdk/DOMDebuggerModel.ts | pointer": {
    "message": "Zeiger"
  },
  "core/sdk/DOMDebuggerModel.ts | policyViolations": {
    "message": "Richtlinienverstöße"
  },
  "core/sdk/DOMDebuggerModel.ts | requestAnimationFrame": {
    "message": "Animationsframe anfordern"
  },
  "core/sdk/DOMDebuggerModel.ts | resumeAudiocontext": {
    "message": "AudioContext fortsetzen"
  },
  "core/sdk/DOMDebuggerModel.ts | script": {
    "message": "Skript"
  },
  "core/sdk/DOMDebuggerModel.ts | scriptBlockedByContentSecurity": {
    "message": "Skript wurde von einer Content Security Policy blockiert"
  },
  "core/sdk/DOMDebuggerModel.ts | scriptBlockedDueToContent": {
    "message": "Skript wurde aufgrund einer Content Security Policy-Anweisung blockiert: {PH1}"
  },
  "core/sdk/DOMDebuggerModel.ts | scriptFirstStatement": {
    "message": "Skript für erste Anweisung"
  },
  "core/sdk/DOMDebuggerModel.ts | setInnerhtml": {
    "message": "innerHTML festlegen"
  },
  "core/sdk/DOMDebuggerModel.ts | setTimeoutOrIntervalFired": {
    "message": "{PH1} gesendet"
  },
  "core/sdk/DOMDebuggerModel.ts | sinkViolations": {
    "message": "Senkenverstöße"
  },
  "core/sdk/DOMDebuggerModel.ts | suspendAudiocontext": {
    "message": "AudioContext sperren"
  },
  "core/sdk/DOMDebuggerModel.ts | timer": {
    "message": "Timer"
  },
  "core/sdk/DOMDebuggerModel.ts | touch": {
    "message": "Berühren"
  },
  "core/sdk/DOMDebuggerModel.ts | trustedTypeViolations": {
    "message": "Verstöße gegen vertrauenswürdige Typen"
  },
  "core/sdk/DOMDebuggerModel.ts | webaudio": {
    "message": "WebAudio"
  },
  "core/sdk/DOMDebuggerModel.ts | webglErrorFired": {
    "message": "WebGL-Fehler ausgelöst"
  },
  "core/sdk/DOMDebuggerModel.ts | webglErrorFiredS": {
    "message": "WebGL-Fehler ausgelöst ({PH1})"
  },
  "core/sdk/DOMDebuggerModel.ts | webglWarningFired": {
    "message": "WebGL-Warnung ausgelöst"
  },
  "core/sdk/DOMDebuggerModel.ts | window": {
    "message": "Fenster"
  },
  "core/sdk/DOMDebuggerModel.ts | xhr": {
    "message": "XHR"
  },
  "core/sdk/DebuggerModel.ts | block": {
    "message": "Block"
  },
  "core/sdk/DebuggerModel.ts | closure": {
    "message": "Abschluss"
  },
  "core/sdk/DebuggerModel.ts | expression": {
    "message": "Ausdruck"
  },
  "core/sdk/DebuggerModel.ts | global": {
    "message": "Global"
  },
  "core/sdk/DebuggerModel.ts | local": {
    "message": "Lokal"
  },
  "core/sdk/DebuggerModel.ts | module": {
    "message": "Modul"
  },
  "core/sdk/DebuggerModel.ts | script": {
    "message": "Skript"
  },
  "core/sdk/DebuggerModel.ts | withBlock": {
    "message": "With-Block"
  },
  "core/sdk/NetworkManager.ts | crossoriginReadBlockingCorb": {
    "message": "Cross-Origin Read Blocking (CORB) hat die ursprungsübergreifende Antwort {PH1} mit dem MIME-Typ {PH2} blockiert. Weitere Informationen finden Sie unter https://www.chromestatus.com/feature/5629709824032768."
  },
  "core/sdk/NetworkManager.ts | fastG": {
    "message": "Schnelles 3G"
  },
  "core/sdk/NetworkManager.ts | noThrottling": {
    "message": "Keine Drosselung"
  },
  "core/sdk/NetworkManager.ts | offline": {
    "message": "Offline"
  },
  "core/sdk/NetworkManager.ts | requestWasBlockedByDevtoolsS": {
    "message": "Anforderung wurde von Entwicklertools blockiert: „{PH1}“"
  },
  "core/sdk/NetworkManager.ts | sFailedLoadingSS": {
    "message": "{PH1} konnte nicht geladen werden: {PH2} „{PH3}“."
  },
  "core/sdk/NetworkManager.ts | sFinishedLoadingSS": {
    "message": "Laden von {PH1} beendet: {PH2} „{PH3}“."
  },
  "core/sdk/NetworkManager.ts | setcookieHeaderIsIgnoredIn": {
    "message": "Der Set-Cookie-Header wird in der Antwort der URL ignoriert: {PH1}. Die Länge des Cookies sollte kleiner oder gleich 4.096 Zeichen sein."
  },
  "core/sdk/NetworkManager.ts | slowG": {
    "message": "Langsames 3G"
  },
  "core/sdk/NetworkRequest.ts | anUnknownErrorWasEncounteredWhenTrying": {
    "message": "Beim Speichern dieses Cookies ist ein unbekannter Fehler aufgetreten."
  },
  "core/sdk/NetworkRequest.ts | binary": {
    "message": "(binär)"
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidDomain": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Domain-Attribut des Cookies in Bezug auf die aktuelle Host-URL ungültig war."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonInvalidPrefix": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Präfix „__Secure-“ oder „__Host-“ in seinem Namen verwendet und gegen die zusätzlichen Regeln verstoßen hat, die für Cookies mit diesen Präfixen gelten und in „https://tools.ietf.org/html/draft-west-cookie-prefixes-05“ definiert sind."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonOverwriteSecure": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie nicht über eine sichere Verbindung gesendet wurde und ein Cookie mit dem Attribut „Secure“ überschrieben hätte."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteNoneInsecure": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „SameSite=None“ hatte, aber nicht das Attribut „Secure“, das für die Verwendung von „SameSite=None“ erforderlich ist."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteStrictLax": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „{PH1}“ hatte, aber von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSameSiteUnspecifiedTreatedAsLax": {
    "message": "Dieser „Set-Cookie“-Header gab kein Attribut „SameSite“ an und war auf „SameSite=Lax,“ voreingestellt. Der Versuch, ein Cookie zu setzen, wurde blockiert, weil das Cookie von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war. Das „Set-Cookie“ muss erst mit „SameSite=None“ festgelegt worden sein, um eine websiteübergreifende Nutzung zu ermöglichen."
  },
  "core/sdk/NetworkRequest.ts | blockedReasonSecureOnly": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „Secure“ hatte, aber nicht über eine sichere Verbindung empfangen wurde."
  },
  "core/sdk/NetworkRequest.ts | domainMismatch": {
    "message": "Dieses Cookie wurde blockiert, weil weder die Domain der Anfrage-URL genau mit der Domain des Cookies übereinstimmte, noch die Domain der Anfrage-URL eine Subdomain des Domain-Attributwerts des Cookies war."
  },
  "core/sdk/NetworkRequest.ts | notOnPath": {
    "message": "Dieses Cookie wurde blockiert, weil sein Pfad keine exakte Übereinstimmung mit dem Pfad der Anforderungs-URL oder ein Superverzeichnis davon war."
  },
  "core/sdk/NetworkRequest.ts | samePartyFromCrossPartyContext": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameParty“ hatte, die Anfrage aber parteiübergreifend war. Die Anfrage wurde als parteiübergreifend betrachtet, weil die Domain der URL der Ressource und die Domains der umschließenden Frames/Dokumente der Ressource weder Inhaber noch Mitglieder desselben First-Party-Sets sind."
  },
  "core/sdk/NetworkRequest.ts | sameSiteLax": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Lax“ hatte und die Anfrage von einer anderen Website aus erfolgte und nicht von einer Navigation der obersten Ebene initiiert wurde."
  },
  "core/sdk/NetworkRequest.ts | sameSiteNoneInsecure": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=None“ hatte, aber nicht als „Secure“ gekennzeichnet war. Cookies ohne SameSite-Einschränkungen müssen als „Secure“ gekennzeichnet sein und über eine sichere Verbindung gesendet werden."
  },
  "core/sdk/NetworkRequest.ts | sameSiteStrict": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Strict“ hat und die Anfrage von einer anderen Website aus gestellt wurde. Dazu gehören auch Navigationsanfragen der obersten Ebene, die von anderen Websites initiiert wurden."
  },
  "core/sdk/NetworkRequest.ts | sameSiteUnspecifiedTreatedAsLax": {
    "message": "Dieses Cookie gab beim Speichern kein Attribut „SameSite“ an und wurde auf „SameSite=Lax“ voreingestellt. Es wurde blockiert, weil die Anfrage von einer anderen Website aus erfolgte und nicht von einer Navigation der obersten Ebene initiiert wurde. Das Cookie muss mit „SameSite=None“ festgelegt werden, um eine websiteübergreifende Nutzung zu ermöglichen."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteLax": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Lax“ hat, die Anfrage aber websiteübergreifend war und nicht von einer Navigation der obersten Ebene initiiert wurde. Diese Anfrage gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteStrict": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „SameSite=Strict“ hat, die Anfrage aber websiteübergreifend war. Dazu gehören auch Navigationsanfragen der obersten Ebene, die von anderen Websites initiiert wurden. Diese Anfrage gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | schemefulSameSiteUnspecifiedTreatedAsLax": {
    "message": "Dieses Cookie gab beim Speichern kein Attribut „SameSite“ an, wurde auf „SameSite=Lax\"“ voreingestellt und blockiert, weil die Anfrage websiteübergreifend erfolgte und nicht von einer Navigation der obersten Ebene initiiert wurde. Diese Anfrage gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | secureOnly": {
    "message": "Dieses Cookie wurde blockiert, weil es das Attribut „Secure“ hat und die Verbindung nicht sicher war."
  },
  "core/sdk/NetworkRequest.ts | theSchemeOfThisConnectionIsNot": {
    "message": "Im Schema dieser Verbindung dürfen keine Cookies gespeichert werden."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieDidntSpecifyASamesite": {
    "message": "Dieser „Set-Cookie“-Header gab kein Attribut „SameSite“ an und war auf „SameSite=Lax\"“ voreingestellt. Der Versuch, ein Cookie zu setzen, wurde blockiert, weil das Cookie von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war. Diese Antwort gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieHadInvalidSyntax": {
    "message": "Dieser „Set-Cookie“-Header hatte eine ungültige Syntax."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSameparty": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „SameParty“ hatte, die Anfrage aber parteiübergreifend war. Die Anfrage wurde als parteiübergreifend betrachtet, weil die Domain der URL der Ressource und die Domains der umschließenden Frames/Dokumente der Ressource weder Inhaber noch Mitglieder desselben First-Party-Sets sind."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamepartyAttribute": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „SameParty“ und noch andere widersprüchliche Attribute hatte. Chrome verlangt, dass Cookies, die das Attribut „SameParty“ verwenden, auch das Attribut „Secure“ haben und nicht auf „SameSite=Strict“ beschränkt sind."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedBecauseItHadTheSamesiteStrictLax": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde blockiert, weil das Cookie das Attribut „{PH1}“ hatte, aber von einer websiteübergreifenden Antwort kam, die nicht die Antwort auf eine Navigation der obersten Ebene war. Diese Antwort gilt als websiteübergreifend, da die URL ein anderes Schema als die aktuelle Website hat."
  },
  "core/sdk/NetworkRequest.ts | thisSetcookieWasBlockedDueToUser": {
    "message": "Dieser Versuch, ein Cookie über einen „Set-Cookie“-Header zu setzen, wurde aufgrund von Nutzereinstellungen blockiert."
  },
  "core/sdk/NetworkRequest.ts | unknownError": {
    "message": "Beim Senden dieses Cookies ist ein unbekannter Fehler aufgetreten."
  },
  "core/sdk/NetworkRequest.ts | userPreferences": {
    "message": "Dieses Cookie wurde aufgrund von Nutzereinstellungen blockiert."
  },
  "core/sdk/OverlayModel.ts | pausedInDebugger": {
    "message": "In Debugger pausiert"
  },
  "core/sdk/PageResourceLoader.ts | loadCanceledDueToLoadTimeout": {
    "message": "Ladevorgang wegen Zeitüberschreitung abgebrochen"
  },
  "core/sdk/PageResourceLoader.ts | loadCanceledDueToReloadOf": {
    "message": "Ladevorgang wegen Aktualisierung der geprüften Seite abgebrochen"
  },
  "core/sdk/Script.ts | scriptRemovedOrDeleted": {
    "message": "Skript entfernt oder gelöscht."
  },
  "core/sdk/Script.ts | unableToFetchScriptSource": {
    "message": "Skriptquelle kann nicht abgerufen werden."
  },
  "core/sdk/ServerTiming.ts | deprecatedSyntaxFoundPleaseUse": {
    "message": "Veraltete Syntax gefunden. Bitte verwenden Sie: <name>;dur=<duration>;desc=<description>"
  },
  "core/sdk/ServerTiming.ts | duplicateParameterSIgnored": {
    "message": "Doppelter Parameter „{PH1}“ ignoriert."
  },
  "core/sdk/ServerTiming.ts | extraneousTrailingCharacters": {
    "message": "Überflüssige nachgestellte Zeichen."
  },
  "core/sdk/ServerTiming.ts | noValueFoundForParameterS": {
    "message": "Für den Parameter „{PH1}“ wurde kein Wert gefunden."
  },
  "core/sdk/ServerTiming.ts | unableToParseSValueS": {
    "message": "„{PH1}“-Wert „{PH2}“ kann nicht geparst werden."
  },
  "core/sdk/ServerTiming.ts | unrecognizedParameterS": {
    "message": "Nicht erkannter Parameter „{PH1}“."
  },
  "core/sdk/ServiceWorkerCacheModel.ts | serviceworkercacheagentError": {
    "message": "ServiceWorkerCacheAgent-Fehler beim Löschen des Cache-Eintrags {PH1} im Cache: {PH2}"
  },
  "core/sdk/ServiceWorkerManager.ts | activated": {
    "message": "aktiviert"
  },
  "core/sdk/ServiceWorkerManager.ts | activating": {
    "message": "wird aktiviert"
  },
  "core/sdk/ServiceWorkerManager.ts | installed": {
    "message": "Installiert"
  },
  "core/sdk/ServiceWorkerManager.ts | installing": {
    "message": "Installation läuft"
  },
  "core/sdk/ServiceWorkerManager.ts | new": {
    "message": "neu"
  },
  "core/sdk/ServiceWorkerManager.ts | redundant": {
    "message": "redundant"
  },
  "core/sdk/ServiceWorkerManager.ts | running": {
    "message": "läuft"
  },
  "core/sdk/ServiceWorkerManager.ts | sSS": {
    "message": "{PH1} #{PH2} ({PH3})"
  },
  "core/sdk/ServiceWorkerManager.ts | starting": {
    "message": "wird gestartet"
  },
  "core/sdk/ServiceWorkerManager.ts | stopped": {
    "message": "angehalten"
  },
  "core/sdk/ServiceWorkerManager.ts | stopping": {
    "message": "Wird beendet"
  },
  "core/sdk/SourceMap.ts | couldNotLoadContentForSS": {
    "message": "Inhalt für {PH1}: {PH2} konnte nicht geladen werden"
  },
  "core/sdk/SourceMap.ts | couldNotParseContentForSS": {
    "message": "Konnte Inhalte für {PH1} nicht parsen: {PH2}"
  },
  "core/sdk/SourceMapManager.ts | devtoolsFailedToLoadSourcemapS": {
    "message": "Entwicklertools konnten Quellzuordnung nicht laden: {PH1}"
  },
  "core/sdk/sdk-meta.ts | achromatopsia": {
    "message": "Achromatopsie"
  },
  "core/sdk/sdk-meta.ts | blurredVision": {
    "message": "Verschwommenes Sehen"
  },
  "core/sdk/sdk-meta.ts | captureAsyncStackTraces": {
    "message": "Async-Stacktraces erfassen"
  },
  "core/sdk/sdk-meta.ts | deuteranopia": {
    "message": "Deuteranopie"
  },
  "core/sdk/sdk-meta.ts | disableAsyncStackTraces": {
    "message": "Async-Stacktraces deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableAvifFormat": {
    "message": "AVIF-Format deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableJavascript": {
    "message": "JavaScript deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableJpegXlFormat": {
    "message": "JPEG XL-Format deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableLocalFonts": {
    "message": "Lokale Schriftarten deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage deaktivieren"
  },
  "core/sdk/sdk-meta.ts | disableWebpFormat": {
    "message": "WebP-Format deaktivieren"
  },
  "core/sdk/sdk-meta.ts | doNotCaptureAsyncStackTraces": {
    "message": "Async-Stacktraces nicht erfassen"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAFocusedPage": {
    "message": "Fokussierte Seite nicht emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateAnyVisionDeficiency": {
    "message": "Keine Sehschwäche emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCss": {
    "message": "CSS „{PH1}“ nicht emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotEmulateCssMediaType": {
    "message": "CSS-Medientyp nicht emulieren"
  },
  "core/sdk/sdk-meta.ts | doNotExtendGridLines": {
    "message": "Rasterlinien nicht erweitern"
  },
  "core/sdk/sdk-meta.ts | doNotHighlightAdFrames": {
    "message": "Anzeigen-Frames nicht hervorheben"
  },
  "core/sdk/sdk-meta.ts | doNotPauseOnExceptions": {
    "message": "Bei Ausnahmen nicht anhalten"
  },
  "core/sdk/sdk-meta.ts | doNotPreserveLogUponNavigation": {
    "message": "Protokoll bei Navigation nicht beibehalten"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridNamedAreas": {
    "message": "Keine rasterbenannten Bereiche anzeigen"
  },
  "core/sdk/sdk-meta.ts | doNotShowGridTrackSizes": {
    "message": "Größen der Raster-Tracks nicht anzeigen"
  },
  "core/sdk/sdk-meta.ts | emulateAFocusedPage": {
    "message": "Fokussierte Seite emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateAchromatopsia": {
    "message": "Achromatopsie emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateBlurredVision": {
    "message": "Verschwommenes Sehen emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCss": {
    "message": "CSS-{PH1} emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaFeature": {
    "message": "CSS-Medienfunktion {PH1} emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssMediaType": {
    "message": "CSS-Medientyp emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssPrintMediaType": {
    "message": "CSS-Druckmedientyp emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateCssScreenMediaType": {
    "message": "CSS-Bildschirm-Medientyp emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateDeuteranopia": {
    "message": "Deuteranopie emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateProtanopia": {
    "message": "Protanopie emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateTritanopia": {
    "message": "Tritanopie emulieren"
  },
  "core/sdk/sdk-meta.ts | emulateVisionDeficiencies": {
    "message": "Sehschwächen emulieren"
  },
  "core/sdk/sdk-meta.ts | enableAvifFormat": {
    "message": "AVIF-Format aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableCache": {
    "message": "Cache aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableCustomFormatters": {
    "message": "Benutzerdefinierte Formatierer aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableJavascript": {
    "message": "JavaScript aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableJpegXlFormat": {
    "message": "JPEG XL-Format aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableLocalFonts": {
    "message": "Lokale Schriftarten aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage aktivieren"
  },
  "core/sdk/sdk-meta.ts | enableWebpFormat": {
    "message": "WebP-Format aktivieren"
  },
  "core/sdk/sdk-meta.ts | extendGridLines": {
    "message": "Gitterlinien erweitern"
  },
  "core/sdk/sdk-meta.ts | hideCoreWebVitalsOverlay": {
    "message": "Core Web Vitals-Overlay ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideFramesPerSecondFpsMeter": {
    "message": "Messtool für Bilder pro Sekunde (fps) ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideHittestBorders": {
    "message": "Grenzen der Treffertests ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideLayerBorders": {
    "message": "Ebenengrenzen ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideLayoutShiftRegions": {
    "message": "Layout Shift-Bereiche ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideLineLabels": {
    "message": "Zeilenlabels ausblenden"
  },
  "core/sdk/sdk-meta.ts | hidePaintFlashingRectangles": {
    "message": "Farblich blinkende Rechtecke ausblenden"
  },
  "core/sdk/sdk-meta.ts | hideScrollPerformanceBottlenecks": {
    "message": "Engpässe in der Scrollleistung ausblenden"
  },
  "core/sdk/sdk-meta.ts | highlightAdFrames": {
    "message": "Anzeigen-Frames hervorheben"
  },
  "core/sdk/sdk-meta.ts | noEmulation": {
    "message": "Keine Emulation"
  },
  "core/sdk/sdk-meta.ts | pauseOnExceptions": {
    "message": "Bei Ausnahmen anhalten"
  },
  "core/sdk/sdk-meta.ts | preserveLogUponNavigation": {
    "message": "Protokoll bei der Navigation beibehalten"
  },
  "core/sdk/sdk-meta.ts | print": {
    "message": "drucken"
  },
  "core/sdk/sdk-meta.ts | protanopia": {
    "message": "Protanopie"
  },
  "core/sdk/sdk-meta.ts | query": {
    "message": "Abfrage"
  },
  "core/sdk/sdk-meta.ts | screen": {
    "message": "Bildschirm"
  },
  "core/sdk/sdk-meta.ts | showAreaNames": {
    "message": "Bereichsnamen anzeigen"
  },
  "core/sdk/sdk-meta.ts | showCoreWebVitalsOverlay": {
    "message": "Core Web Vitals-Overlay anzeigen"
  },
  "core/sdk/sdk-meta.ts | showFramesPerSecondFpsMeter": {
    "message": "Messtool für Bilder pro Sekunde (FPS) anzeigen"
  },
  "core/sdk/sdk-meta.ts | showGridNamedAreas": {
    "message": "Rasterbenannte Bereiche anzeigen"
  },
  "core/sdk/sdk-meta.ts | showGridTrackSizes": {
    "message": "Größen der Raster-Tracks anzeigen"
  },
  "core/sdk/sdk-meta.ts | showHittestBorders": {
    "message": "Grenzen der Treffertests einblenden"
  },
  "core/sdk/sdk-meta.ts | showLayerBorders": {
    "message": "Ebenengrenzen einblenden"
  },
  "core/sdk/sdk-meta.ts | showLayoutShiftRegions": {
    "message": "Layout Shift-Bereiche anzeigen"
  },
  "core/sdk/sdk-meta.ts | showLineLabels": {
    "message": "Zeilenlabels anzeigen"
  },
  "core/sdk/sdk-meta.ts | showLineNames": {
    "message": "Zeilennamen anzeigen"
  },
  "core/sdk/sdk-meta.ts | showLineNumbers": {
    "message": "Zeilenzahlen anzeigen"
  },
  "core/sdk/sdk-meta.ts | showPaintFlashingRectangles": {
    "message": "Farblich blinkende Rechtecke anzeigen"
  },
  "core/sdk/sdk-meta.ts | showRulers": {
    "message": "Führungslinien anzeigen"
  },
  "core/sdk/sdk-meta.ts | showScrollPerformanceBottlenecks": {
    "message": "Engpässe in der Scrollleistung anzeigen"
  },
  "core/sdk/sdk-meta.ts | showTrackSizes": {
    "message": "Track-Größen anzeigen"
  },
  "core/sdk/sdk-meta.ts | tritanopia": {
    "message": "Tritanopie"
  },
  "entrypoints/inspector_main/InspectorMain.ts | javascriptIsDisabled": {
    "message": "JavaScript ist deaktiviert"
  },
  "entrypoints/inspector_main/InspectorMain.ts | main": {
    "message": "Hauptinhalt"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | coreWebVitals": {
    "message": "Core Web Vitals"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableAvifImageFormat": {
    "message": "AVIF-Bildformat deaktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableJpegXlImageFormat": {
    "message": "JPEG XL-Bildformat deaktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableLocalFonts": {
    "message": "Lokale Schriftarten deaktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disableWebpImageFormat": {
    "message": "WebP-Bildformat deaktivieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | disablesLocalSourcesInFontface": {
    "message": "Deaktiviert local()-Quellen in @font-face-Regeln. Neuladen der Seite zur Anwendung erforderlich."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulateAFocusedPage": {
    "message": "Fokussierte Seite emulieren"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | emulatesAFocusedPage": {
    "message": "Emuliert eine fokussierte Seite."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssColorgamutMediaFeature": {
    "message": "Erzwingt die CSS-color-gamut-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPreferscolorschemeMedia": {
    "message": "Erzwingt die CSS-prefers-color-scheme-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreduceddataMedia": {
    "message": "Erzwingt die CSS-prefers-reduced-data-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesCssPrefersreducedmotion": {
    "message": "Erzwingt die CSS-prefers-reduced-motion-Medienfunktion"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesMediaTypeForTestingPrint": {
    "message": "Erzwingt Medientyp zum Testen von Druck- und Bildschirmstilen"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | forcesVisionDeficiencyEmulation": {
    "message": "Erzwingt Sehschwäche-Emulation"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | frameRenderingStats": {
    "message": "Frame-Rendering-Statistiken"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightAdFrames": {
    "message": "Anzeigen-Frames hervorheben"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageBlueThat": {
    "message": "Hebt Bereiche der Seite, die verschoben wurden, in Blau hervor. Möglicherweise nicht geeignet für Personen, die zu lichtempfindlicher Epilepsie neigen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsAreasOfThePageGreen": {
    "message": "Hebt Bereiche der Seite in Grün hervor, die neu gezeichnet werden müssen. Möglicherweise nicht geeignet für Personen, die zu lichtempfindlicher Epilepsie neigen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsElementsTealThatCan": {
    "message": "Hebt Elemente (blaugrün) hervor, die das Scrollen verlangsamen können, einschließlich Touch- und Rad-Event-Handler und andere Hauptthread-Scrollsituationen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | highlightsFramesRedDetectedToBe": {
    "message": "Hebt Frames in Rot hervor, die als Werbung erkannt wurden."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | hittestBorders": {
    "message": "Grenzen der Treffertests"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layerBorders": {
    "message": "Ebenengrenzen"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | layoutShiftRegions": {
    "message": "Layout Shift-Bereiche"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | paintFlashing": {
    "message": "Paint flashen"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | plotsFrameThroughputDropped": {
    "message": "Stellt den Frame-Durchsatz, die Verteilung der verworfenen Frames und den GPU-Arbeitsspeicher dar."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | requiresAPageReloadToApplyAnd": {
    "message": "Neuladen der Seite zur Anwendung erforderlich und deaktiviert das Speichern im Cache für Bildanforderungen."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | scrollingPerformanceIssues": {
    "message": "Probleme mit der Scrollleistung"
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsAnOverlayWithCoreWebVitals": {
    "message": "Zeigt ein Overlay mit Core Web Vitals an."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsBordersAroundHittestRegions": {
    "message": "Zeigt Grenzen um Treffertest-Bereiche an."
  },
  "entrypoints/inspector_main/RenderingOptions.ts | showsLayerBordersOrangeoliveAnd": {
    "message": "Zeigt Ebenengrenzen (Orange/Oliv) und -Kacheln (Cyan) an."
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | autoOpenDevTools": {
    "message": "Entwicklertools für Pop-ups automatisch öffnen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | blockAds": {
    "message": "Werbung auf dieser Website blockieren"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | colorVisionDeficiency": {
    "message": "Farbsehschwäche"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaFeature": {
    "message": "CSS-Medienfunktion"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | cssMediaType": {
    "message": "CSS-Medientyp"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | disablePaused": {
    "message": "Pausierten Status-Overlay deaktivieren"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | doNotAutoOpen": {
    "message": "DevTools nicht automatisch für Popups öffnen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | forceAdBlocking": {
    "message": "Blockieren von Anzeigen auf dieser Website erzwingen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | fps": {
    "message": "fps"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | hardReloadPage": {
    "message": "Vollständiges Aktualisieren der Seite"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | layout": {
    "message": "Layout"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | paint": {
    "message": "zeichnen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | reloadPage": {
    "message": "Seite aktualisieren"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | rendering": {
    "message": "Rendering"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showAds": {
    "message": "Werbung auf dieser Website zeigen, falls zulässig"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | showRendering": {
    "message": "Rendering anzeigen"
  },
  "entrypoints/inspector_main/inspector_main-meta.ts | visionDeficiency": {
    "message": "Sehschwäche"
  },
  "entrypoints/js_app/JsMain.ts | main": {
    "message": "Hauptinhalt"
  },
  "entrypoints/main/MainImpl.ts | customizeAndControlDevtools": {
    "message": "Entwicklertools anpassen und steuern"
  },
  "entrypoints/main/MainImpl.ts | dockSide": {
    "message": "Seitliche fixieren"
  },
  "entrypoints/main/MainImpl.ts | dockToBottom": {
    "message": "Unten fixieren"
  },
  "entrypoints/main/MainImpl.ts | dockToLeft": {
    "message": "Links fixieren"
  },
  "entrypoints/main/MainImpl.ts | dockToRight": {
    "message": "Rechts fixieren"
  },
  "entrypoints/main/MainImpl.ts | focusDebuggee": {
    "message": "Fokus auf zu debuggende Komponente"
  },
  "entrypoints/main/MainImpl.ts | help": {
    "message": "Hilfe"
  },
  "entrypoints/main/MainImpl.ts | hideConsoleDrawer": {
    "message": "Konsolenleiste ausblenden"
  },
  "entrypoints/main/MainImpl.ts | moreTools": {
    "message": "Weitere Tools"
  },
  "entrypoints/main/MainImpl.ts | placementOfDevtoolsRelativeToThe": {
    "message": "Platzierung der Entwicklertools relativ zur Seite. ({PH1}, um die letzte Position wiederherzustellen)"
  },
  "entrypoints/main/MainImpl.ts | showConsoleDrawer": {
    "message": "Konsolenleiste anzeigen"
  },
  "entrypoints/main/MainImpl.ts | theSystempreferredColorSchemeHas": {
    "message": "Das vom System bevorzugte Farbschema hat sich geändert. Um diese Änderung in den Entwicklertools anzuwenden, führen Sie eine Aktualisierung durch."
  },
  "entrypoints/main/MainImpl.ts | undockIntoSeparateWindow": {
    "message": "In separatem Fenster anzeigen"
  },
  "entrypoints/main/main-meta.ts | asAuthored": {
    "message": "Wie erstellt"
  },
  "entrypoints/main/main-meta.ts | auto": {
    "message": "automatisch"
  },
  "entrypoints/main/main-meta.ts | bottom": {
    "message": "Unten"
  },
  "entrypoints/main/main-meta.ts | browserLanguage": {
    "message": "Browsersprache"
  },
  "entrypoints/main/main-meta.ts | cancelSearch": {
    "message": "Suche abbrechen"
  },
  "entrypoints/main/main-meta.ts | colorFormat": {
    "message": "Farbformat:"
  },
  "entrypoints/main/main-meta.ts | darkCapital": {
    "message": "Dunkel"
  },
  "entrypoints/main/main-meta.ts | darkLower": {
    "message": "dunkel"
  },
  "entrypoints/main/main-meta.ts | devtoolsDefault": {
    "message": "Entwicklertools (Standard)"
  },
  "entrypoints/main/main-meta.ts | dockToBottom": {
    "message": "Unten fixieren"
  },
  "entrypoints/main/main-meta.ts | dockToLeft": {
    "message": "Links fixieren"
  },
  "entrypoints/main/main-meta.ts | dockToRight": {
    "message": "Rechts fixieren"
  },
  "entrypoints/main/main-meta.ts | enableCtrlShortcutToSwitchPanels": {
    "message": "Tastenkombination Strg + 1 bis 9 zum Wechseln der Bereiche aktivieren"
  },
  "entrypoints/main/main-meta.ts | enableShortcutToSwitchPanels": {
    "message": "Tastenkombination ⌘ + 1 bis 9 zum Wechseln der Bereiche aktivieren"
  },
  "entrypoints/main/main-meta.ts | findNextResult": {
    "message": "Nächstes Ergebnis suchen"
  },
  "entrypoints/main/main-meta.ts | findPreviousResult": {
    "message": "Vorheriges Ergebnis suchen"
  },
  "entrypoints/main/main-meta.ts | focusDebuggee": {
    "message": "Fokus auf zu debuggende Komponente"
  },
  "entrypoints/main/main-meta.ts | horizontal": {
    "message": "horizontal"
  },
  "entrypoints/main/main-meta.ts | language": {
    "message": "Sprache:"
  },
  "entrypoints/main/main-meta.ts | left": {
    "message": "Links"
  },
  "entrypoints/main/main-meta.ts | lightCapital": {
    "message": "Hell"
  },
  "entrypoints/main/main-meta.ts | lightLower": {
    "message": "hell"
  },
  "entrypoints/main/main-meta.ts | nextPanel": {
    "message": "Nächster Bereich"
  },
  "entrypoints/main/main-meta.ts | panelLayout": {
    "message": "Bereichslayout:"
  },
  "entrypoints/main/main-meta.ts | previousPanel": {
    "message": "Vorheriges Steuerfeld"
  },
  "entrypoints/main/main-meta.ts | reloadDevtools": {
    "message": "Entwicklertools neu laden"
  },
  "entrypoints/main/main-meta.ts | resetZoomLevel": {
    "message": "Zoomstufe zurücksetzen"
  },
  "entrypoints/main/main-meta.ts | restoreLastDockPosition": {
    "message": "Letzte Dock-Position wiederherstellen"
  },
  "entrypoints/main/main-meta.ts | right": {
    "message": "Rechts"
  },
  "entrypoints/main/main-meta.ts | searchInPanel": {
    "message": "Im Bereich suchen"
  },
  "entrypoints/main/main-meta.ts | setColorFormatAsAuthored": {
    "message": "Farbformat wie erstellt festlegen"
  },
  "entrypoints/main/main-meta.ts | setColorFormatToHex": {
    "message": "Farbformat auf HEX setzen"
  },
  "entrypoints/main/main-meta.ts | setColorFormatToHsl": {
    "message": "Farbformat auf HSL setzen"
  },
  "entrypoints/main/main-meta.ts | setColorFormatToRgb": {
    "message": "Farbformat auf RGB setzen"
  },
  "entrypoints/main/main-meta.ts | switchToDarkTheme": {
    "message": "Zum dunklen Design wechseln"
  },
  "entrypoints/main/main-meta.ts | switchToLightTheme": {
    "message": "Zum hellen Design wechseln"
  },
  "entrypoints/main/main-meta.ts | switchToSystemPreferredColor": {
    "message": "Zu dem vom System bevorzugten Farbschema wechseln"
  },
  "entrypoints/main/main-meta.ts | systemPreference": {
    "message": "Systempräferenz"
  },
  "entrypoints/main/main-meta.ts | theme": {
    "message": "Design:"
  },
  "entrypoints/main/main-meta.ts | toggleDrawer": {
    "message": "Leiste ein-/ausblenden"
  },
  "entrypoints/main/main-meta.ts | undockIntoSeparateWindow": {
    "message": "In separatem Fenster anzeigen"
  },
  "entrypoints/main/main-meta.ts | undocked": {
    "message": "Nicht mehr angedockt"
  },
  "entrypoints/main/main-meta.ts | useAutomaticPanelLayout": {
    "message": "Automatisches Bereichslayout verwenden"
  },
  "entrypoints/main/main-meta.ts | useHorizontalPanelLayout": {
    "message": "Horizontales Bereichslayout verwenden"
  },
  "entrypoints/main/main-meta.ts | useVerticalPanelLayout": {
    "message": "Vertikales Bereichslayout verwenden"
  },
  "entrypoints/main/main-meta.ts | vertical": {
    "message": "vertikal"
  },
  "entrypoints/main/main-meta.ts | zoomIn": {
    "message": "Heranzoomen"
  },
  "entrypoints/main/main-meta.ts | zoomOut": {
    "message": "Herauszoomen"
  },
  "entrypoints/node_app/node_app-meta.ts | node": {
    "message": "Knoten"
  },
  "entrypoints/node_app/node_app-meta.ts | showNode": {
    "message": "Knoten"
  },
  "entrypoints/node_main/NodeConnectionsPanel.ts | addConnection": {
    "message": "Verbindung hinzufügen"
  },
  "entrypoints/node_main/NodeConnectionsPanel.ts | networkAddressEgLocalhost": {
    "message": "Netzwerkadresse (z. B. localhost:9229)"
  },
  "entrypoints/node_main/NodeConnectionsPanel.ts | noConnectionsSpecified": {
    "message": "Keine Verbindungen angegeben."
  },
  "entrypoints/node_main/NodeConnectionsPanel.ts | nodejsDebuggingGuide": {
    "message": "Leitfaden zum Node.js-Debugging"
  },
  "entrypoints/node_main/NodeConnectionsPanel.ts | specifyNetworkEndpointAnd": {
    "message": "Geben Sie den Netzwerk-Endpunkt an und DevTools stellt automatisch eine Verbindung zu ihm her. Weitere Informationen finden Sie unter {PH1}."
  },
  "entrypoints/node_main/NodeMain.ts | main": {
    "message": "Hauptinhalt"
  },
  "entrypoints/node_main/NodeMain.ts | nodejsS": {
    "message": "Node.js: {PH1}"
  },
  "entrypoints/node_main/node_main-meta.ts | connection": {
    "message": "Verbindung"
  },
  "entrypoints/node_main/node_main-meta.ts | node": {
    "message": "Knoten"
  },
  "entrypoints/node_main/node_main-meta.ts | showConnection": {
    "message": "Verbindung anzeigen"
  },
  "entrypoints/worker_app/WorkerMain.ts | main": {
    "message": "Hauptinhalt"
  },
  "models/bindings/ContentProviderBasedProject.ts | unknownErrorLoadingFile": {
    "message": "Unbekannter Fehler beim Laden der Datei"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | errorInDebuggerLanguagePlugin": {
    "message": "Fehler im Debugger für das Sprachen-Plug-in: {PH1}"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | failedToLoadDebugSymbolsFor": {
    "message": "[{PH1}] Fehler beim Laden der Debug-Symbole für {PH2} ({PH3})"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForButDidnt": {
    "message": "[{PH1}] Debug-Symbole für {PH2} geladen, aber keine Quelldateien gefunden"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadedDebugSymbolsForFound": {
    "message": "[{PH1}] Debug-Symbole für {PH2} geladen, {PH3} Quelldatei(en) gefunden"
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsFor": {
    "message": "[{PH1}] Fehlerbehebungssymbole für {PH2} werden geladen..."
  },
  "models/bindings/DebuggerLanguagePlugins.ts | loadingDebugSymbolsForVia": {
    "message": "[{PH1}] Fehlerbehebungssymbole für {PH2} werden über {PH3} geladen..."
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditCompileFailed": {
    "message": "LiveEdit-Kompilierung fehlgeschlagen: {PH1}"
  },
  "models/bindings/ResourceScriptMapping.ts | liveEditFailed": {
    "message": "LiveEdit fehlgeschlagen: {PH1}"
  },
  "models/har/Writer.ts | collectingContent": {
    "message": "Inhalt wird erfasst…"
  },
  "models/har/Writer.ts | writingFile": {
    "message": "Schreiben in Datei…"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyEval": {
    "message": "Content Security Policy – Eval"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicyInlineCode": {
    "message": "Content Security Policy – Inline-Code"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | contentSecurityPolicySource": {
    "message": "Content Security Policy – Zulassungslisten für Quellen"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesFixViolations": {
    "message": "Vertrauenswürdige Typen – Verstöße beheben"
  },
  "models/issues_manager/ContentSecurityPolicyIssue.ts | trustedTypesPolicyViolation": {
    "message": "Vertrauenswürdige Typen – Richtlinienverstoß"
  },
  "models/issues_manager/CorsIssue.ts | CORS": {
    "message": "Cross-Origin Resource Sharing (CORS)"
  },
  "models/issues_manager/CorsIssue.ts | corsForPrivateNetworksRfc": {
    "message": "CORS für private Netzwerke (RFC1918)"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | coopAndCoep": {
    "message": "COOP und COEP"
  },
  "models/issues_manager/CrossOriginEmbedderPolicyIssue.ts | samesiteAndSameorigin": {
    "message": "Same-Site und Same-Origin"
  },
  "models/issues_manager/DeprecationIssue.ts | userAgentReduction": {
    "message": "Verringerung der User-Agent-Strings"
  },
  "models/issues_manager/HeavyAdIssue.ts | handlingHeavyAdInterventions": {
    "message": "Handhabung umfangreicher Anzeigeninterventionen"
  },
  "models/issues_manager/LowTextContrastIssue.ts | colorAndContrastAccessibility": {
    "message": "Farb- und Kontrastbedienungshilfen"
  },
  "models/issues_manager/MixedContentIssue.ts | preventingMixedContent": {
    "message": "Gemischte Inhalte verhindern"
  },
  "models/issues_manager/QuirksModeIssue.ts | documentCompatibilityMode": {
    "message": "Modus für die Kompatibilität von Dokumenten"
  },
  "models/issues_manager/SameSiteCookieIssue.ts | aSecure": {
    "message": "sicher"
  },
  "models/issues_manager/SameSiteCookieIssue.ts | anInsecure": {
    "message": "an insecure"
  },
  "models/issues_manager/SameSiteCookieIssue.ts | howSchemefulSamesiteWorks": {
    "message": "So funktioniert die Schemeful-Same-Site-Kennzeichnung"
  },
  "models/issues_manager/SameSiteCookieIssue.ts | samesiteCookiesExplained": {
    "message": "Erläuterungen zu SameSite-Cookies"
  },
  "models/issues_manager/SharedArrayBufferIssue.ts | enablingSharedArrayBuffer": {
    "message": "SharedArrayBuffer aktivieren"
  },
  "models/issues_manager/TrustedWebActivityIssue.ts | changesToQualityCriteriaForPwas": {
    "message": "Änderungen der Qualitätskriterien für PWAs mit vertrauenswürdiger Web-Aktivität"
  },
  "models/logs/NetworkLog.ts | anonymous": {
    "message": "<anonym>"
  },
  "models/logs/logs-meta.ts | clear": {
    "message": "löschen"
  },
  "models/logs/logs-meta.ts | doNotPreserveLogOnPageReload": {
    "message": "Anmeldung beim Aktualisieren der Seite/Navigation nicht beibehalten"
  },
  "models/logs/logs-meta.ts | preserve": {
    "message": "beibehalten"
  },
  "models/logs/logs-meta.ts | preserveLog": {
    "message": "Preserve log"
  },
  "models/logs/logs-meta.ts | preserveLogOnPageReload": {
    "message": "Protokoll beim Aktualisieren/Navigieren der Seite beibehalten"
  },
  "models/logs/logs-meta.ts | recordNetworkLog": {
    "message": "Netzwerkprotokoll aufzeichnen"
  },
  "models/logs/logs-meta.ts | reset": {
    "message": "Zurücksetzen"
  },
  "models/persistence/Automapping.ts | theAttemptToBindSInTheWorkspace": {
    "message": "Der Versuch, „{PH1}“ im Arbeitsbereich zu binden, ist fehlgeschlagen, da dieser URI fehlerhaft ist."
  },
  "models/persistence/EditFileSystemView.ts | add": {
    "message": "Hinzufügen"
  },
  "models/persistence/EditFileSystemView.ts | enterAPath": {
    "message": "Pfad eingeben"
  },
  "models/persistence/EditFileSystemView.ts | enterAUniquePath": {
    "message": "Eindeutigen Pfad eingeben"
  },
  "models/persistence/EditFileSystemView.ts | excludedFolders": {
    "message": "Ausgeschlossene Ordner"
  },
  "models/persistence/EditFileSystemView.ts | folderPath": {
    "message": "Ordnerpfad"
  },
  "models/persistence/EditFileSystemView.ts | none": {
    "message": "Keiner"
  },
  "models/persistence/EditFileSystemView.ts | sViaDevtools": {
    "message": "{PH1} (über .devtools)"
  },
  "models/persistence/IsolatedFileSystem.ts | blobCouldNotBeLoaded": {
    "message": "Blob konnte nicht geladen werden."
  },
  "models/persistence/IsolatedFileSystem.ts | cantReadFileSS": {
    "message": "Datei kann nicht gelesen werden: {PH1}: {PH2}"
  },
  "models/persistence/IsolatedFileSystem.ts | fileSystemErrorS": {
    "message": "Dateisystemfehler: {PH1}"
  },
  "models/persistence/IsolatedFileSystem.ts | linkedToS": {
    "message": "Mit {PH1} verknüpft"
  },
  "models/persistence/IsolatedFileSystem.ts | unknownErrorReadingFileS": {
    "message": "Unbekannter Fehler beim Lesen der Datei: {PH1}"
  },
  "models/persistence/IsolatedFileSystemManager.ts | unableToAddFilesystemS": {
    "message": "Dateisystem kann nicht hinzugefügt werden: {PH1}"
  },
  "models/persistence/PersistenceActions.ts | openInContainingFolder": {
    "message": "In enthaltendem Ordner öffnen"
  },
  "models/persistence/PersistenceActions.ts | saveAs": {
    "message": "Speichern unter…"
  },
  "models/persistence/PersistenceActions.ts | saveForOverrides": {
    "message": "Für Überschreibungen speichern"
  },
  "models/persistence/PersistenceActions.ts | saveImage": {
    "message": "Bild speichern"
  },
  "models/persistence/PersistenceUtils.ts | linkedToS": {
    "message": "Mit {PH1} verknüpft"
  },
  "models/persistence/PersistenceUtils.ts | linkedToSourceMapS": {
    "message": "Mit Quellzuordnung verknüpft: {PH1}"
  },
  "models/persistence/PlatformFileSystem.ts | unableToReadFilesWithThis": {
    "message": "PlatformFileSystem kann keine Dateien lesen."
  },
  "models/persistence/WorkspaceSettingsTab.ts | addFolder": {
    "message": "Ordner hinzufügen…"
  },
  "models/persistence/WorkspaceSettingsTab.ts | folderExcludePattern": {
    "message": "Ausschlussmuster für den Ordner"
  },
  "models/persistence/WorkspaceSettingsTab.ts | mappingsAreInferredAutomatically": {
    "message": "Verknüpfungen werden automatisch abgeleitet."
  },
  "models/persistence/WorkspaceSettingsTab.ts | remove": {
    "message": "Entfernen"
  },
  "models/persistence/WorkspaceSettingsTab.ts | workspace": {
    "message": "Arbeitsbereich"
  },
  "models/persistence/persistence-meta.ts | disableOverrideNetworkRequests": {
    "message": "Überschreiben von Netzwerkanfragen deaktivieren"
  },
  "models/persistence/persistence-meta.ts | enableLocalOverrides": {
    "message": "Lokale Überschreibungen aktivieren"
  },
  "models/persistence/persistence-meta.ts | enableOverrideNetworkRequests": {
    "message": "Überschreiben von Netzwerkanfragen aktivieren"
  },
  "models/persistence/persistence-meta.ts | interception": {
    "message": "Abfangen"
  },
  "models/persistence/persistence-meta.ts | network": {
    "message": "Netzwerk"
  },
  "models/persistence/persistence-meta.ts | override": {
    "message": "überschreiben"
  },
  "models/persistence/persistence-meta.ts | request": {
    "message": "Anfrage"
  },
  "models/persistence/persistence-meta.ts | rewrite": {
    "message": "umschreiben"
  },
  "models/persistence/persistence-meta.ts | showWorkspace": {
    "message": "Arbeitsbereich anzeigen"
  },
  "models/persistence/persistence-meta.ts | workspace": {
    "message": "Arbeitsbereich"
  },
  "models/recorder/RecordingFileSystem.ts | defaultRecordingName": {
    "message": "Aufnahme läuft: # {nextId}"
  },
  "models/recorder/RecordingFileSystem.ts | linkedToS": {
    "message": "Mit {PH1} verknüpft"
  },
  "models/timeline_model/TimelineIRModel.ts | twoFlingsAtTheSameTimeSVsS": {
    "message": "Zwei Flings zur gleichen Zeit? {PH1} im Vergleich zu {PH2}"
  },
  "models/timeline_model/TimelineIRModel.ts | twoTouchesAtTheSameTimeSVsS": {
    "message": "Zweimal gleichzeitig tippen? {PH1} und {PH2}"
  },
  "models/timeline_model/TimelineJSProfile.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | dedicatedWorker": {
    "message": "Dediziert Worker"
  },
  "models/timeline_model/TimelineModel.ts | threadS": {
    "message": "Thread {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerS": {
    "message": "Worker — {PH1}"
  },
  "models/timeline_model/TimelineModel.ts | workerSS": {
    "message": "Worker: {PH1} – {PH2}"
  },
  "models/workspace/UISourceCode.ts | index": {
    "message": "(Index)"
  },
  "models/workspace/UISourceCode.ts | thisFileWasChangedExternally": {
    "message": "Diese Datei wurde extern geändert. Möchten Sie sie aktualisieren?"
  },
  "panels/accessibility/ARIAAttributesView.ts | ariaAttributes": {
    "message": "ARIA-Attribute"
  },
  "panels/accessibility/ARIAAttributesView.ts | noAriaAttributes": {
    "message": "Keine ARIA-Attribute"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | accessibilityTree": {
    "message": "Baumansicht für Barrierefreiheit"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | ignored": {
    "message": "Ignoriert"
  },
  "panels/accessibility/AXBreadcrumbsPane.ts | scrollIntoView": {
    "message": "In die Ansicht hineinscrollen"
  },
  "panels/accessibility/AccessibilityNodeView.ts | accessibilityNodeNotExposed": {
    "message": "Bedienungshilfenknoten nicht sichtbar"
  },
  "panels/accessibility/AccessibilityNodeView.ts | ancestorChildrenAreAll": {
    "message": "Alle dem Ancestor untergeordneten Elemente sind Präsentationselemente: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | computedProperties": {
    "message": "Berechnete Properties"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasEmptyAltText": {
    "message": "Alt-Text des Elements ist leer."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementHasPlaceholder": {
    "message": "Element hat {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsHiddenBy": {
    "message": "Element wird von aktivem modalen Dialogfeld verdeckt: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInAnInertSubTree": {
    "message": "Das Element ist eine inert-Unterstruktur von "
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsInert": {
    "message": "Das Element lautet inert."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotRendered": {
    "message": "Element ist nicht gerendert."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsNotVisible": {
    "message": "Element ist nicht sichtbar."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPlaceholder": {
    "message": "Das Element lautet {PH1}."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementIsPresentational": {
    "message": "Element ist ein Präsentationselement"
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementNotInteresting": {
    "message": "Element nicht relevant für Bedienungshilfen."
  },
  "panels/accessibility/AccessibilityNodeView.ts | elementsInheritsPresentational": {
    "message": "Das Element erbt die präsentierende Rolle von "
  },
  "panels/accessibility/AccessibilityNodeView.ts | invalidSource": {
    "message": "Ungültige Quelle."
  },
  "panels/accessibility/AccessibilityNodeView.ts | labelFor": {
    "message": "Label für "
  },
  "panels/accessibility/AccessibilityNodeView.ts | noAccessibilityNode": {
    "message": "Kein Bedienungshilfen-Knoten"
  },
  "panels/accessibility/AccessibilityNodeView.ts | noNodeWithThisId": {
    "message": "Kein Knoten mit dieser ID."
  },
  "panels/accessibility/AccessibilityNodeView.ts | noTextContent": {
    "message": "Kein Textinhalt."
  },
  "panels/accessibility/AccessibilityNodeView.ts | notSpecified": {
    "message": "Nicht angegeben"
  },
  "panels/accessibility/AccessibilityNodeView.ts | partOfLabelElement": {
    "message": "Teil des Labelelements: "
  },
  "panels/accessibility/AccessibilityNodeView.ts | placeholderIsPlaceholderOnAncestor": {
    "message": "{PH1} ist {PH2} bei Ancestor: "
  },
  "panels/accessibility/AccessibilityStrings.ts | aHumanreadableVersionOfTheValue": {
    "message": "Eine für Menschen lesbare Version des Werts eines Bereichs-Widgets (sofern erforderlich)."
  },
  "panels/accessibility/AccessibilityStrings.ts | activeDescendant": {
    "message": "Aktives untergeordnetes Element"
  },
  "panels/accessibility/AccessibilityStrings.ts | atomicLiveRegions": {
    "message": "Atom (Live-Regionen)"
  },
  "panels/accessibility/AccessibilityStrings.ts | busyLiveRegions": {
    "message": "Busy (Live-Bereiche)"
  },
  "panels/accessibility/AccessibilityStrings.ts | canSetValue": {
    "message": "Kann einen Wert festlegen"
  },
  "panels/accessibility/AccessibilityStrings.ts | checked": {
    "message": "Ausgewählt"
  },
  "panels/accessibility/AccessibilityStrings.ts | contents": {
    "message": "Inhalte"
  },
  "panels/accessibility/AccessibilityStrings.ts | controls": {
    "message": "Steuerelemente"
  },
  "panels/accessibility/AccessibilityStrings.ts | describedBy": {
    "message": "Beschrieben von"
  },
  "panels/accessibility/AccessibilityStrings.ts | description": {
    "message": "Beschreibung"
  },
  "panels/accessibility/AccessibilityStrings.ts | disabled": {
    "message": "Deaktiviert"
  },
  "panels/accessibility/AccessibilityStrings.ts | editable": {
    "message": "Bearbeitung möglich"
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichFormThe": {
    "message": "Element oder Elemente, die die Beschreibung dieses Elements bilden."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichMayFormThe": {
    "message": "Element oder Elemente, die den Namen dieses Elements bilden können."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhichShouldBe": {
    "message": "Element oder Elemente, die als Nachfolger dieses Elements betrachtet werden sollen, obwohl sie im DOM keine Nachfolger sind."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementOrElementsWhoseContentOr": {
    "message": "Element oder Elemente, deren Inhalt oder Präsenz von diesem Widget gesteuert wird."
  },
  "panels/accessibility/AccessibilityStrings.ts | elementToWhichTheUserMayChooseTo": {
    "message": "Element, zu dem der Nutzer möglicherweise nach diesem gehen möchte, statt zum nächsten Element in der DOM-Reihenfolge."
  },
  "panels/accessibility/AccessibilityStrings.ts | expanded": {
    "message": "Maximiert"
  },
  "panels/accessibility/AccessibilityStrings.ts | focusable": {
    "message": "fokussierbar"
  },
  "panels/accessibility/AccessibilityStrings.ts | focused": {
    "message": "Fokussiert"
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMaximumAllowed": {
    "message": "Maximal zulässiger Wert für ein Bereichs-Widget."
  },
  "panels/accessibility/AccessibilityStrings.ts | forARangeWidgetTheMinimumAllowed": {
    "message": "Der kleinste zulässige Wert in einem Bereichs-Widget."
  },
  "panels/accessibility/AccessibilityStrings.ts | fromAttribute": {
    "message": "Von Attribut"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromCaption": {
    "message": "Aus caption"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabel": {
    "message": "Aus label"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelFor": {
    "message": "Von label (for=-Attribut)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLabelWrapped": {
    "message": "Von label (umgebrochen)"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromLegend": {
    "message": "Aus legend"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromNativeHtml": {
    "message": "Von nativem HTML"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromPlaceholderAttribute": {
    "message": "Von Platzhalter-Attribut"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromRubyAnnotation": {
    "message": "Aus Ruby-Anmerkung"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromStyle": {
    "message": "Von Stil"
  },
  "panels/accessibility/AccessibilityStrings.ts | fromTitle": {
    "message": "Aus Titel"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasAutocomplete": {
    "message": "Hat automatische Vervollständigung"
  },
  "panels/accessibility/AccessibilityStrings.ts | hasPopup": {
    "message": "Enthält Pop-up-Fenster"
  },
  "panels/accessibility/AccessibilityStrings.ts | help": {
    "message": "Hilfe"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifAndHowThisElementCanBeEdited": {
    "message": "Gibt an, ob und wie dieses Element bearbeitet werden kann."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLive": {
    "message": "Gibt an, ob dieses Element Live-Updates erhalten darf und ob dem Nutzer bei Änderungen der gesamte Live-Bereich oder nur geänderte Knoten gezeigt werden sollen."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdates": {
    "message": "Wenn dieses Element Live-Updates erhalten kann, welche Art Update soll eine Benachrichtigung auslösen?"
  },
  "panels/accessibility/AccessibilityStrings.ts | ifThisElementMayReceiveLiveUpdatesThe": {
    "message": "Wenn dieses Element Live-Updates erhalten kann, das Stammelement der beinhaltenden Live-Region."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCanReceiveFocus": {
    "message": "Wenn „true“ festgelegt ist, ist dieses Element fokussierbar."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyCannot": {
    "message": "Wenn „true“ festgelegt ist, kann mit diesem Element zurzeit nicht interagiert werden."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementCurrentlyHas": {
    "message": "Wenn true festgelegt ist, befindet sich dieses Element derzeit im Fokus."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementMayBeInteracted": {
    "message": "Wenn „true“ festgelegt ist, kann mit diesem Element interagiert werden, aber sein Wert lässt sich nicht ändern."
  },
  "panels/accessibility/AccessibilityStrings.ts | ifTrueThisElementsUserentered": {
    "message": "Wenn „true“ festgelegt ist, erfüllt der vom Nutzer eingegebene Wert dieses Elements nicht die Validierungsanforderung."
  },
  "panels/accessibility/AccessibilityStrings.ts | implicit": {
    "message": "Implizit"
  },
  "panels/accessibility/AccessibilityStrings.ts | implicitValue": {
    "message": "Impliziter Wert."
  },
  "panels/accessibility/AccessibilityStrings.ts | indicatesThePurposeOfThisElement": {
    "message": "Gibt den Zweck dieses Elements an, z. B. die Begriffe der Benutzeroberfläche für ein Widget oder die Strukturrolle innerhalb eines Dokuments."
  },
  "panels/accessibility/AccessibilityStrings.ts | invalidUserEntry": {
    "message": "Ungültiger Nutzereintrag"
  },
  "panels/accessibility/AccessibilityStrings.ts | labeledBy": {
    "message": "Gekennzeichnet von"
  },
  "panels/accessibility/AccessibilityStrings.ts | level": {
    "message": "Stufe"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegion": {
    "message": "Live-Region"
  },
  "panels/accessibility/AccessibilityStrings.ts | liveRegionRoot": {
    "message": "Live-Regionsstamm"
  },
  "panels/accessibility/AccessibilityStrings.ts | maximumValue": {
    "message": "Höchstwert"
  },
  "panels/accessibility/AccessibilityStrings.ts | minimumValue": {
    "message": "Mindestwert"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiline": {
    "message": "Mehrzeilig"
  },
  "panels/accessibility/AccessibilityStrings.ts | multiselectable": {
    "message": "Mehrfachauswahl möglich"
  },
  "panels/accessibility/AccessibilityStrings.ts | orientation": {
    "message": "Ausrichtung"
  },
  "panels/accessibility/AccessibilityStrings.ts | pressed": {
    "message": "Gedrückt"
  },
  "panels/accessibility/AccessibilityStrings.ts | readonlyString": {
    "message": "Schreibgeschützt"
  },
  "panels/accessibility/AccessibilityStrings.ts | relatedElement": {
    "message": "Ähnliches Element"
  },
  "panels/accessibility/AccessibilityStrings.ts | relevantLiveRegions": {
    "message": "Relevant (Live-Regionen)"
  },
  "panels/accessibility/AccessibilityStrings.ts | requiredString": {
    "message": "Erforderlich"
  },
  "panels/accessibility/AccessibilityStrings.ts | role": {
    "message": "Rolle"
  },
  "panels/accessibility/AccessibilityStrings.ts | selectedString": {
    "message": "Ausgewählt"
  },
  "panels/accessibility/AccessibilityStrings.ts | theAccessibleDescriptionForThis": {
    "message": "Die barrierefreie Beschreibung für dieses Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedHelpTextForThis": {
    "message": "Der berechnete Hilfetext für dieses Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | theComputedNameOfThisElement": {
    "message": "Der berechnete Name dieses Elements."
  },
  "panels/accessibility/AccessibilityStrings.ts | theDescendantOfThisElementWhich": {
    "message": "Das untergeordnete Element zu diesem Element, das aktiv ist, also das Element, an das der Fokus delegiert werden sollte."
  },
  "panels/accessibility/AccessibilityStrings.ts | theHierarchicalLevelOfThis": {
    "message": "Die hierarchische Ebene dieses Elements."
  },
  "panels/accessibility/AccessibilityStrings.ts | theValueOfThisElementThisMayBe": {
    "message": "Der Wert dieses Elements; dieser kann je nach Element benutzerdefiniert oder entwicklerdefiniert sein."
  },
  "panels/accessibility/AccessibilityStrings.ts | value": {
    "message": "Wert"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueDescription": {
    "message": "Beschreibung des Werts"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromAttribute": {
    "message": "Wert vom Attribut"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromElementContents": {
    "message": "Wert aus Elementinhalten."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromFigcaptionElement": {
    "message": "Wert aus dem figcaption-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElement": {
    "message": "Wert aus dem label-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWithFor": {
    "message": "Wert aus dem label-Element mit einem for=-Attribut."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLabelElementWrapped": {
    "message": "Wert aus einem umschließenden label-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromLegendElement": {
    "message": "Wert aus dem legend-Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlRuby": {
    "message": "Wert aus einfachem HTML-Ruby-Vermerk."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromNativeHtmlUnknownSource": {
    "message": "Wert aus nativem HTML-Code (unbekannte Quelle)."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromPlaceholderAttribute": {
    "message": "Wert des Platzhalter-Attributs"
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromRelatedElement": {
    "message": "Wert von ähnlichem Element."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromStyle": {
    "message": "Wert aus Stil."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTableCaption": {
    "message": "Wert aus table caption."
  },
  "panels/accessibility/AccessibilityStrings.ts | valueFromTitleAttribute": {
    "message": "Wert aus Titelattribut."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAUserMaySelectMoreThanOne": {
    "message": "Legt fest, ob Nutzer mehr als eine Option aus diesem Widget auswählen können."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatPriorityOfLive": {
    "message": "Gibt an, ob für dieses Element Liveupdates erwartet werden und, falls ja, mit welcher Priorität"
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherAndWhatTypeOfAutocomplete": {
    "message": "Gibt an, ob dieses Element automatisch vervollständigte Vorschläge macht und, falls ja, welchen Typ."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheOptionRepresentedBy": {
    "message": "Gibt an, ob die durch dieses Element dargestellte Option derzeit ausgewählt ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherTheValueOfThisElementCan": {
    "message": "Gibt an, ob der Wert dieses Elements festgelegt werden kann."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisCheckboxRadioButtonOr": {
    "message": "Gibt an, ob dieses Kästchen, Optionsfeld oder Baumelement aktiviert, deaktiviert oder beides ist, z. B. sowohl mit aktivierten als auch deaktivierten untergeordneten Elementen."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementHasCausedSome": {
    "message": "Gibt an, ob dieses Element eine Art von Pop-up (z. B. ein Menü) erscheinen lässt."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementIsARequired": {
    "message": "Gibt an, ob dieses Element ein erforderliches Feld in einem Formular ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrAnother": {
    "message": "Anzeigen, ob dieses Element oder ein anderes von ihm gesteuertes Gruppierungselement maximiert ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisElementOrItsSubtree": {
    "message": "Gibt an, ob dieses Element oder seine Unterstruktur gerade aktualisiert wird und es sich daher möglicherweise in einem uneinheitlichen Zustand befindet."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisLinearElements": {
    "message": "Gibt an, ob die Ausrichtung dieses linearen Elements horizontal oder vertikal ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisTextBoxMayHaveMore": {
    "message": "Legt fest, ob für dieses Textfeld mehr als eine Zeile zulässig ist."
  },
  "panels/accessibility/AccessibilityStrings.ts | whetherThisToggleButtonIs": {
    "message": "Zeigt an, ob diese Ein-/Aus-Schaltfläche gedrückt ist."
  },
  "panels/accessibility/SourceOrderView.ts | noSourceOrderInformation": {
    "message": "Keine Informationen zur Quellenreihenfolge verfügbar"
  },
  "panels/accessibility/SourceOrderView.ts | showSourceOrder": {
    "message": "Quellenreihenfolge anzeigen"
  },
  "panels/accessibility/SourceOrderView.ts | sourceOrderViewer": {
    "message": "Viewer für Quellenreihenfolge"
  },
  "panels/accessibility/SourceOrderView.ts | thereMayBeADelayInDisplaying": {
    "message": "Es kann zu einer Verzögerung bei der Anzeige der Quellenreihenfolge für Elemente mit vielen untergeordneten Elementen kommen"
  },
  "panels/accessibility/accessibility-meta.ts | accessibility": {
    "message": "Zugänglichkeit"
  },
  "panels/accessibility/accessibility-meta.ts | shoAccessibility": {
    "message": "Bedienungshilfen anzeigen"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviewS": {
    "message": "Animationsvorschau {PH1}"
  },
  "panels/animation/AnimationTimeline.ts | animationPreviews": {
    "message": "Vorschauen auf Animationen"
  },
  "panels/animation/AnimationTimeline.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/animation/AnimationTimeline.ts | pause": {
    "message": "Pausieren"
  },
  "panels/animation/AnimationTimeline.ts | pauseAll": {
    "message": "Alle pausieren"
  },
  "panels/animation/AnimationTimeline.ts | pauseTimeline": {
    "message": "Zeitachse pausieren"
  },
  "panels/animation/AnimationTimeline.ts | playTimeline": {
    "message": "Zeitachse abspielen"
  },
  "panels/animation/AnimationTimeline.ts | playbackRatePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/animation/AnimationTimeline.ts | playbackRates": {
    "message": "Wiedergabegeschwindigkeit"
  },
  "panels/animation/AnimationTimeline.ts | replayTimeline": {
    "message": "Nochmal-Zeitachse"
  },
  "panels/animation/AnimationTimeline.ts | resumeAll": {
    "message": "Alle fortsetzen"
  },
  "panels/animation/AnimationTimeline.ts | selectAnEffectAboveToInspectAnd": {
    "message": "Wählen Sie zum Untersuchen und Ändern oben einen Effekt aus."
  },
  "panels/animation/AnimationTimeline.ts | setSpeedToS": {
    "message": "Geschwindigkeit auf {PH1} einstellen"
  },
  "panels/animation/AnimationTimeline.ts | waitingForAnimations": {
    "message": "Auf Animationen warten…"
  },
  "panels/animation/AnimationUI.ts | animationEndpointSlider": {
    "message": "Schieberegler für Endpunkt der Animation"
  },
  "panels/animation/AnimationUI.ts | animationKeyframeSlider": {
    "message": "Schieberegler für Animations-Keyframe"
  },
  "panels/animation/AnimationUI.ts | sSlider": {
    "message": "{PH1}-Schieberegler"
  },
  "panels/animation/animation-meta.ts | animations": {
    "message": "Animationen"
  },
  "panels/animation/animation-meta.ts | showAnimations": {
    "message": "Animationen anzeigen"
  },
  "panels/application/AppManifestView.ts | aUrlInTheManifestContainsA": {
    "message": "Eine URL im Manifest enthält Nutzernamen, Passwort oder Port"
  },
  "panels/application/AppManifestView.ts | actualHeightSpxOfSSDoesNotMatch": {
    "message": "Tatsächliche Höhe ({PH1} px) von {PH2} {PH3} stimmt nicht mit der angegebenen Höhe ({PH4} px) überein"
  },
  "panels/application/AppManifestView.ts | actualSizeSspxOfSSDoesNotMatch": {
    "message": "Originalgröße ({PH1} × {PH2}) px von {PH3} {PH4} entspricht nicht der festgelegten Größe ({PH5} × {PH6} px)"
  },
  "panels/application/AppManifestView.ts | actualWidthSpxOfSSDoesNotMatch": {
    "message": "Tatsächliche Breite ({PH1} px) von {PH2} {PH3} stimmt nicht mit der angegebenen Breite ({PH4} px) überein"
  },
  "panels/application/AppManifestView.ts | appManifest": {
    "message": "App-Manifest"
  },
  "panels/application/AppManifestView.ts | backgroundColor": {
    "message": "Hintergrundfarbe"
  },
  "panels/application/AppManifestView.ts | couldNotCheckServiceWorker": {
    "message": "service worker konnte ohne das Feld „start_url“ im Manifest nicht geprüft werden"
  },
  "panels/application/AppManifestView.ts | couldNotDownloadARequiredIcon": {
    "message": "Ein erforderliches Symbol konnte nicht aus dem Manifest heruntergeladen werden"
  },
  "panels/application/AppManifestView.ts | description": {
    "message": "Beschreibung"
  },
  "panels/application/AppManifestView.ts | descriptionMayBeTruncated": {
    "message": "Die Beschreibung kann abgeschnitten werden."
  },
  "panels/application/AppManifestView.ts | display": {
    "message": "Display"
  },
  "panels/application/AppManifestView.ts | documentationOnMaskableIcons": {
    "message": "Dokumentation zu maskierbaren Symbolen"
  },
  "panels/application/AppManifestView.ts | downloadedIconWasEmptyOr": {
    "message": "Heruntergeladenes Symbol war leer oder fehlerhaft"
  },
  "panels/application/AppManifestView.ts | errorsAndWarnings": {
    "message": "Fehler und Warnungen"
  },
  "panels/application/AppManifestView.ts | icon": {
    "message": "Symbol"
  },
  "panels/application/AppManifestView.ts | icons": {
    "message": "Symbole"
  },
  "panels/application/AppManifestView.ts | identity": {
    "message": "Identität"
  },
  "panels/application/AppManifestView.ts | imageFromS": {
    "message": "Bild von {PH1}"
  },
  "panels/application/AppManifestView.ts | installability": {
    "message": "Installierbarkeit"
  },
  "panels/application/AppManifestView.ts | manifestContainsDisplayoverride": {
    "message": "Manifest enthält das Feld „display_override“ und der erste unterstützte Anzeigemodus muss aus „standalone“, „fullscreen“ oder „minimal-ui“ sein"
  },
  "panels/application/AppManifestView.ts | manifestCouldNotBeFetchedIsEmpty": {
    "message": "Manifest konnte nicht abgerufen oder geparst werden oder ist leer"
  },
  "panels/application/AppManifestView.ts | manifestDisplayPropertyMustBeOne": {
    "message": "Die Property „display“ des Manifests muss entweder „standalone“, „fullscreen“ oder „minimal-ui“ sein"
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainANameOr": {
    "message": "Manifest enthält kein Feld „name“ oder „short_name“"
  },
  "panels/application/AppManifestView.ts | manifestDoesNotContainASuitable": {
    "message": "Das Manifest enthält kein passendes Symbol – das Format PNG, SVG oder WebP mit mindestens {PH1} px ist erforderlich, das Attribut sizes muss festgelegt werden und das Attribut purpose muss \"any\" und sollte nicht \"maskable\" enthalten."
  },
  "panels/application/AppManifestView.ts | manifestSpecifies": {
    "message": "Manifest gibt prefer_related_applications an: true"
  },
  "panels/application/AppManifestView.ts | manifestStartUrlIsNotValid": {
    "message": "Manifestbeginn URL ist ungültig"
  },
  "panels/application/AppManifestView.ts | name": {
    "message": "Name"
  },
  "panels/application/AppManifestView.ts | needHelpReadOurS": {
    "message": "Brauchen Sie Hilfe? Lesen Sie {PH1}."
  },
  "panels/application/AppManifestView.ts | noManifestDetected": {
    "message": "Kein Manifest erkannt"
  },
  "panels/application/AppManifestView.ts | noMatchingServiceWorkerDetected": {
    "message": "Keine passenden service worker gefunden. Versuchen Sie, die Seite zu aktualisieren, oder prüfen Sie, ob der Bereich für den service worker für die aktuelle Seite den Bereich und die Start-URL des Manifests umfasst."
  },
  "panels/application/AppManifestView.ts | noPlayStoreIdProvided": {
    "message": "Play Store-ID fehlt"
  },
  "panels/application/AppManifestView.ts | noSuppliedIconIsAtLeastSpxSquare": {
    "message": "Keines der bereitgestellten Symbole weist das Format PNG, SVG oder WebP mit mindestens {PH1} Pixel und nicht festgelegtem oder auf \"any\" gesetztem Attribut auf."
  },
  "panels/application/AppManifestView.ts | orientation": {
    "message": "Ausrichtung"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOffline": {
    "message": "Seite kann offline nicht geladen werden"
  },
  "panels/application/AppManifestView.ts | pageDoesNotWorkOfflineThePage": {
    "message": "Die Seite kann offline nicht geladen werden. Ab Chrome 93 ändern sich die Kriterien für die Installierbarkeit. Diese Website ist dann nicht mehr installierbar. Weitere Informationen finden Sie unter {PH1}."
  },
  "panels/application/AppManifestView.ts | pageHasNoManifestLinkUrl": {
    "message": "Die Seite hat kein Manifest <link> URL"
  },
  "panels/application/AppManifestView.ts | pageIsLoadedInAnIncognitoWindow": {
    "message": "Seite wird in einem Inkognitofenster geladen"
  },
  "panels/application/AppManifestView.ts | pageIsNotLoadedInTheMainFrame": {
    "message": "Seite wird nicht im Hauptframe geladen"
  },
  "panels/application/AppManifestView.ts | pageIsNotServedFromASecureOrigin": {
    "message": "Seite wird nicht von einer sicheren Quelle geladen"
  },
  "panels/application/AppManifestView.ts | preferrelatedapplicationsIsOnly": {
    "message": "prefer_related_applications wird nur für Chrome-Beta- und stabile Versionen unter Android unterstützt."
  },
  "panels/application/AppManifestView.ts | presentation": {
    "message": "Präsentation"
  },
  "panels/application/AppManifestView.ts | primaryIconasUsedByChrome": {
    "message": "Primäres Symbol wie von Chrome verwendet"
  },
  "panels/application/AppManifestView.ts | primaryManifestIconFromS": {
    "message": "Primäres Manifestsymbol von {PH1}"
  },
  "panels/application/AppManifestView.ts | sSDoesNotSpecifyItsSizeInThe": {
    "message": "{PH1} {PH2} gibt seine Größe im Manifest nicht an"
  },
  "panels/application/AppManifestView.ts | sSFailedToLoad": {
    "message": "{PH1} {PH2} konnte nicht geladen werden"
  },
  "panels/application/AppManifestView.ts | sSHeightDoesNotComplyWithRatioRequirement": {
    "message": "Die Höhe von {PH1} {PH2} darf nicht mehr als 2,3-mal so groß wie die Breite sein"
  },
  "panels/application/AppManifestView.ts | sSShouldHaveSquareIcon": {
    "message": "Die meisten Betriebssysteme erfordern quadratische Symbole. Nehmen Sie mindestens ein quadratisches Symbol in das Array auf."
  },
  "panels/application/AppManifestView.ts | sSShouldSpecifyItsSizeAs": {
    "message": "{PH1} {PH2} sollte seine Größe als {width}x{height} angeben"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtLeast320": {
    "message": "{PH1} {PH2}-Größe sollte mindestens 320 × 320 betragen"
  },
  "panels/application/AppManifestView.ts | sSSizeShouldBeAtMost3840": {
    "message": "Die Größe von {PH1} {PH2} sollte mindestens 3.840 × 3.840 Pixel betragen"
  },
  "panels/application/AppManifestView.ts | sSWidthDoesNotComplyWithRatioRequirement": {
    "message": "Die Breite von {PH1} {PH2} darf nicht mehr als 2,3-mal so groß wie die Höhe sein"
  },
  "panels/application/AppManifestView.ts | sSrcIsNotSet": {
    "message": "{PH1} src ist nicht festgelegt"
  },
  "panels/application/AppManifestView.ts | sUrlSFailedToParse": {
    "message": "{PH1}-URL „{PH2}“ konnte nicht geparst werden"
  },
  "panels/application/AppManifestView.ts | screenshot": {
    "message": "Screenshot"
  },
  "panels/application/AppManifestView.ts | screenshotS": {
    "message": "Screenshot {PH1}"
  },
  "panels/application/AppManifestView.ts | shortName": {
    "message": "Kurzname"
  },
  "panels/application/AppManifestView.ts | shortcutS": {
    "message": "Verknüpfung {PH1}"
  },
  "panels/application/AppManifestView.ts | shortcutSShouldIncludeAXPixel": {
    "message": "Verknüpfung {PH1} sollte ein Symbol mit 99 x 96 Pixel enthalten"
  },
  "panels/application/AppManifestView.ts | showOnlyTheMinimumSafeAreaFor": {
    "message": "Bei maskierbaren Symbolen nur den minimalen sicheren Bereich anzeigen"
  },
  "panels/application/AppManifestView.ts | startUrl": {
    "message": "Start-URL"
  },
  "panels/application/AppManifestView.ts | theAppIsAlreadyInstalled": {
    "message": "Die App ist bereits installiert"
  },
  "panels/application/AppManifestView.ts | thePlayStoreAppUrlAndPlayStoreId": {
    "message": "Die Play Store App-URL und die Play Store-ID stimmen nicht überein"
  },
  "panels/application/AppManifestView.ts | theSpecifiedApplicationPlatform": {
    "message": "Die angegebene Anwendungsplattform wird nicht von Android unterstützt"
  },
  "panels/application/AppManifestView.ts | themeColor": {
    "message": "Farbe des Designs"
  },
  "panels/application/ApplicationCacheItemsView.ts | appcache": {
    "message": "AppCache"
  },
  "panels/application/ApplicationCacheItemsView.ts | applicationCache": {
    "message": "Anwendungscache"
  },
  "panels/application/ApplicationCacheItemsView.ts | deleteString": {
    "message": "Löschen"
  },
  "panels/application/ApplicationCacheItemsView.ts | noApplicationCacheInformation": {
    "message": "Keine Informationen zum Application Cache verfügbar."
  },
  "panels/application/ApplicationCacheItemsView.ts | offline": {
    "message": "Offline"
  },
  "panels/application/ApplicationCacheItemsView.ts | online": {
    "message": "Online"
  },
  "panels/application/ApplicationCacheItemsView.ts | resource": {
    "message": "Ressource"
  },
  "panels/application/ApplicationCacheItemsView.ts | sizeString": {
    "message": "Größe"
  },
  "panels/application/ApplicationCacheItemsView.ts | typeString": {
    "message": "Typ"
  },
  "panels/application/ApplicationPanelCacheSection.ts | backForwardCache": {
    "message": "Back-Forward-Cache"
  },
  "panels/application/ApplicationPanelCacheSection.ts | cacheStorage": {
    "message": "Cache-Speicher"
  },
  "panels/application/ApplicationPanelCacheSection.ts | delete": {
    "message": "Löschen"
  },
  "panels/application/ApplicationPanelCacheSection.ts | refreshCaches": {
    "message": "Caches aktualisieren"
  },
  "panels/application/ApplicationPanelSidebar.ts | application": {
    "message": "App"
  },
  "panels/application/ApplicationPanelSidebar.ts | applicationCache": {
    "message": "Anwendungscache"
  },
  "panels/application/ApplicationPanelSidebar.ts | backgroundServices": {
    "message": "Hintergrunddienste"
  },
  "panels/application/ApplicationPanelSidebar.ts | cache": {
    "message": "Cache"
  },
  "panels/application/ApplicationPanelSidebar.ts | clear": {
    "message": "Löschen"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/ApplicationPanelSidebar.ts | cookiesUsedByFramesFromS": {
    "message": "Cookies werden durch Frames von {PH1} verwendet"
  },
  "panels/application/ApplicationPanelSidebar.ts | documentNotAvailable": {
    "message": "Dokument nicht verfügbar"
  },
  "panels/application/ApplicationPanelSidebar.ts | frames": {
    "message": "Frames"
  },
  "panels/application/ApplicationPanelSidebar.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/application/ApplicationPanelSidebar.ts | keyPathS": {
    "message": "Schlüsselpfad: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | localFiles": {
    "message": "Lokale Dateien"
  },
  "panels/application/ApplicationPanelSidebar.ts | localStorage": {
    "message": "Lokaler Speicher"
  },
  "panels/application/ApplicationPanelSidebar.ts | manifest": {
    "message": "Manifest"
  },
  "panels/application/ApplicationPanelSidebar.ts | openedWindows": {
    "message": "Geöffnete Fenster"
  },
  "panels/application/ApplicationPanelSidebar.ts | refreshIndexeddb": {
    "message": "IndexedDB aktualisieren"
  },
  "panels/application/ApplicationPanelSidebar.ts | sessionStorage": {
    "message": "Sitzungsspeicher"
  },
  "panels/application/ApplicationPanelSidebar.ts | storage": {
    "message": "Speicher"
  },
  "panels/application/ApplicationPanelSidebar.ts | theContentOfThisDocumentHasBeen": {
    "message": "Der Inhalt dieses Dokuments wurde dynamisch über „document.write()“ erstellt."
  },
  "panels/application/ApplicationPanelSidebar.ts | versionS": {
    "message": "Version: {PH1}"
  },
  "panels/application/ApplicationPanelSidebar.ts | versionSEmpty": {
    "message": "Version: {PH1} (leer)"
  },
  "panels/application/ApplicationPanelSidebar.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/ApplicationPanelSidebar.ts | webWorkers": {
    "message": "Web Worker"
  },
  "panels/application/ApplicationPanelSidebar.ts | windowWithoutTitle": {
    "message": "Fenster ohne Titel"
  },
  "panels/application/ApplicationPanelSidebar.ts | worker": {
    "message": "Worker"
  },
  "panels/application/BackForwardCacheView.ts | backForwardCacheTitle": {
    "message": "Back-Forward-Cache"
  },
  "panels/application/BackForwardCacheView.ts | bfcacheStatus": {
    "message": "Status des Back-Forward-Cache"
  },
  "panels/application/BackForwardCacheView.ts | lastMainFrameNavigation": {
    "message": "Letzte Hauptframe-Navigation"
  },
  "panels/application/BackForwardCacheView.ts | mainFrame": {
    "message": "Hauptframe"
  },
  "panels/application/BackForwardCacheView.ts | normalNavigation": {
    "message": "Normale Navigation"
  },
  "panels/application/BackForwardCacheView.ts | restoredFromBFCache": {
    "message": "Aus dem Back-Forward-Cache wiederhergestellt"
  },
  "panels/application/BackForwardCacheView.ts | unavailable": {
    "message": "nicht verfügbar"
  },
  "panels/application/BackForwardCacheView.ts | unknown": {
    "message": "unbekannt"
  },
  "panels/application/BackForwardCacheView.ts | url": {
    "message": "URL"
  },
  "panels/application/BackgroundServiceView.ts | backgroundFetch": {
    "message": "Hintergrundabruf"
  },
  "panels/application/BackgroundServiceView.ts | backgroundServices": {
    "message": "Hintergrunddienste"
  },
  "panels/application/BackgroundServiceView.ts | backgroundSync": {
    "message": "Hintergrundsynchronisierung"
  },
  "panels/application/BackgroundServiceView.ts | clear": {
    "message": "Löschen"
  },
  "panels/application/BackgroundServiceView.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Klicken Sie auf die Schaltfläche zum Aufzeichnen {PH1} oder drücken Sie {PH2}, um mit der Aufzeichnung zu beginnen."
  },
  "panels/application/BackgroundServiceView.ts | devtoolsWillRecordAllSActivity": {
    "message": "DevTools zeichnet für bis zu 3 Tage alle {PH1}-Aktivitäten auf, auch wenn es geschlossen ist."
  },
  "panels/application/BackgroundServiceView.ts | empty": {
    "message": "Leer"
  },
  "panels/application/BackgroundServiceView.ts | event": {
    "message": "Ereignis"
  },
  "panels/application/BackgroundServiceView.ts | instanceId": {
    "message": "Instanz-ID"
  },
  "panels/application/BackgroundServiceView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/BackgroundServiceView.ts | noMetadataForThisEvent": {
    "message": "Keine Metadaten für dieses Ereignis"
  },
  "panels/application/BackgroundServiceView.ts | notifications": {
    "message": "Benachrichtigungen"
  },
  "panels/application/BackgroundServiceView.ts | origin": {
    "message": "Ursprung"
  },
  "panels/application/BackgroundServiceView.ts | paymentHandler": {
    "message": "Zahlungsabwicklung"
  },
  "panels/application/BackgroundServiceView.ts | periodicBackgroundSync": {
    "message": "Regelmäßige Hintergrundsynchronisierung"
  },
  "panels/application/BackgroundServiceView.ts | pushMessaging": {
    "message": "Benachrichtigungen im Push-Verfahren"
  },
  "panels/application/BackgroundServiceView.ts | recordingSActivity": {
    "message": "{PH1}-Aktivitäten werden aufgezeichnet..."
  },
  "panels/application/BackgroundServiceView.ts | saveEvents": {
    "message": "Ereignisse speichern"
  },
  "panels/application/BackgroundServiceView.ts | selectAnEntryToViewMetadata": {
    "message": "Wählen Sie einen Eintrag aus, um die Metadaten anzuzeigen"
  },
  "panels/application/BackgroundServiceView.ts | showEventsFromOtherDomains": {
    "message": "Ereignisse aus anderen Domains anzeigen"
  },
  "panels/application/BackgroundServiceView.ts | startRecordingEvents": {
    "message": "Ereignisse erfassen"
  },
  "panels/application/BackgroundServiceView.ts | stopRecordingEvents": {
    "message": "Ereignisaufzeichnung beenden"
  },
  "panels/application/BackgroundServiceView.ts | swScope": {
    "message": "Service Worker-Bereich"
  },
  "panels/application/BackgroundServiceView.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/application/CookieItemsView.ts | clearAllCookies": {
    "message": "Alle Cookies löschen"
  },
  "panels/application/CookieItemsView.ts | clearFilteredCookies": {
    "message": "Gefilterte Cookies löschen"
  },
  "panels/application/CookieItemsView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/CookieItemsView.ts | numberOfCookiesShownInTableS": {
    "message": "Angezeigte Cookies in Tabelle: {PH1}"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWhichHaveAn": {
    "message": "Nur Cookies mit einem entsprechenden Problem anzeigen"
  },
  "panels/application/CookieItemsView.ts | onlyShowCookiesWithAnIssue": {
    "message": "Nur Cookies mit einem Problem anzeigen"
  },
  "panels/application/CookieItemsView.ts | selectACookieToPreviewItsValue": {
    "message": "Wählen Sie ein Cookie aus, um den Wert in der Vorschau anzuzeigen"
  },
  "panels/application/CookieItemsView.ts | showUrlDecoded": {
    "message": "URL-dekodiert anzeigen"
  },
  "panels/application/DOMStorageItemsView.ts | domStorage": {
    "message": "DOM-Speicher"
  },
  "panels/application/DOMStorageItemsView.ts | domStorageItems": {
    "message": "DOM-Speicherelemente"
  },
  "panels/application/DOMStorageItemsView.ts | key": {
    "message": "Schlüssel"
  },
  "panels/application/DOMStorageItemsView.ts | selectAValueToPreview": {
    "message": "Wert für die Vorschau auswählen"
  },
  "panels/application/DOMStorageItemsView.ts | value": {
    "message": "Wert"
  },
  "panels/application/DatabaseModel.ts | anUnexpectedErrorSOccurred": {
    "message": "Ein unerwarteter Fehler ({PH1}) ist aufgetreten."
  },
  "panels/application/DatabaseModel.ts | databaseNoLongerHasExpected": {
    "message": "Die erwartete Version ist in der Datenbank nicht mehr vorhanden."
  },
  "panels/application/DatabaseQueryView.ts | databaseQuery": {
    "message": "Datenbankabfrage"
  },
  "panels/application/DatabaseQueryView.ts | queryS": {
    "message": "Anfrage: {PH1}"
  },
  "panels/application/DatabaseTableView.ts | anErrorOccurredTryingToreadTheS": {
    "message": "Beim Lesen der Tabelle „{PH1}“ ist ein Fehler aufgetreten."
  },
  "panels/application/DatabaseTableView.ts | database": {
    "message": "Datenbank"
  },
  "panels/application/DatabaseTableView.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/DatabaseTableView.ts | theStableIsEmpty": {
    "message": "Die Tabelle „{PH1}“ ist leer."
  },
  "panels/application/DatabaseTableView.ts | visibleColumns": {
    "message": "Sichtbare Spalten"
  },
  "panels/application/IndexedDBViews.ts | clearObjectStore": {
    "message": "Objektspeicher löschen"
  },
  "panels/application/IndexedDBViews.ts | collapse": {
    "message": "Minimieren"
  },
  "panels/application/IndexedDBViews.ts | dataMayBeStale": {
    "message": "Daten sind eventuell veraltet"
  },
  "panels/application/IndexedDBViews.ts | deleteDatabase": {
    "message": "Datenbank löschen"
  },
  "panels/application/IndexedDBViews.ts | deleteSelected": {
    "message": "Ausgewählte Elemente löschen"
  },
  "panels/application/IndexedDBViews.ts | expandRecursively": {
    "message": "Wiederkehrend maximieren"
  },
  "panels/application/IndexedDBViews.ts | idb": {
    "message": "IDB"
  },
  "panels/application/IndexedDBViews.ts | indexedDb": {
    "message": "Indexierte Datenbank"
  },
  "panels/application/IndexedDBViews.ts | keyGeneratorValueS": {
    "message": "Wert des Schlüsselgenerators: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | keyPath": {
    "message": "Schlüsselpfad: "
  },
  "panels/application/IndexedDBViews.ts | keyString": {
    "message": "Schlüssel"
  },
  "panels/application/IndexedDBViews.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/application/IndexedDBViews.ts | objectStores": {
    "message": "Objekthändler"
  },
  "panels/application/IndexedDBViews.ts | pleaseConfirmDeleteOfSDatabase": {
    "message": "Bestätigen Sie das Löschen der „{PH1}“-Datenbank."
  },
  "panels/application/IndexedDBViews.ts | primaryKey": {
    "message": "Primärschlüssel"
  },
  "panels/application/IndexedDBViews.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/IndexedDBViews.ts | refreshDatabase": {
    "message": "Datenbank aktualisieren"
  },
  "panels/application/IndexedDBViews.ts | securityOrigin": {
    "message": "Sicherheitsherkunft"
  },
  "panels/application/IndexedDBViews.ts | showNextPage": {
    "message": "Nächste Seite anzeigen"
  },
  "panels/application/IndexedDBViews.ts | showPreviousPage": {
    "message": "Vorherige Seite anzeigen"
  },
  "panels/application/IndexedDBViews.ts | someEntriesMayHaveBeenModified": {
    "message": "Einige Einträge wurden möglicherweise geändert"
  },
  "panels/application/IndexedDBViews.ts | startFromKey": {
    "message": "Ab Schlüssel starten"
  },
  "panels/application/IndexedDBViews.ts | totalEntriesS": {
    "message": "Einträge insgesamt: {PH1}"
  },
  "panels/application/IndexedDBViews.ts | valueString": {
    "message": "Wert"
  },
  "panels/application/IndexedDBViews.ts | version": {
    "message": "Version"
  },
  "panels/application/OpenedWindowDetailsView.ts | accessToOpener": {
    "message": "Zugriff auf Ursprungsseite"
  },
  "panels/application/OpenedWindowDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Zum Anzeigen im Elementbereich klicken"
  },
  "panels/application/OpenedWindowDetailsView.ts | closed": {
    "message": "geschlossen"
  },
  "panels/application/OpenedWindowDetailsView.ts | crossoriginEmbedderPolicy": {
    "message": "Cross-Origin-Embedder-Richtlinie"
  },
  "panels/application/OpenedWindowDetailsView.ts | document": {
    "message": "Dokument"
  },
  "panels/application/OpenedWindowDetailsView.ts | no": {
    "message": "Nein"
  },
  "panels/application/OpenedWindowDetailsView.ts | openerFrame": {
    "message": "Frame der Ursprungsseite"
  },
  "panels/application/OpenedWindowDetailsView.ts | reportingTo": {
    "message": "melden an"
  },
  "panels/application/OpenedWindowDetailsView.ts | security": {
    "message": "Sicherheit"
  },
  "panels/application/OpenedWindowDetailsView.ts | securityIsolation": {
    "message": "Sicherheit und Isolation"
  },
  "panels/application/OpenedWindowDetailsView.ts | showsWhetherTheOpenedWindowIs": {
    "message": "Zeigt, ob das geöffnete Fenster auf seine Ursprungsseite zugreifen kann und umgekehrt"
  },
  "panels/application/OpenedWindowDetailsView.ts | type": {
    "message": "Typ"
  },
  "panels/application/OpenedWindowDetailsView.ts | unknown": {
    "message": "Unbekannt"
  },
  "panels/application/OpenedWindowDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/OpenedWindowDetailsView.ts | webWorker": {
    "message": "Web Worker"
  },
  "panels/application/OpenedWindowDetailsView.ts | windowWithoutTitle": {
    "message": "Fenster ohne Titel"
  },
  "panels/application/OpenedWindowDetailsView.ts | worker": {
    "message": "Worker"
  },
  "panels/application/OpenedWindowDetailsView.ts | yes": {
    "message": "Ja"
  },
  "panels/application/ServiceWorkerCacheViews.ts | cache": {
    "message": "Cache"
  },
  "panels/application/ServiceWorkerCacheViews.ts | deleteSelected": {
    "message": "Auswahl löschen"
  },
  "panels/application/ServiceWorkerCacheViews.ts | filterByPath": {
    "message": "Nach Pfad filtern"
  },
  "panels/application/ServiceWorkerCacheViews.ts | headers": {
    "message": "Header"
  },
  "panels/application/ServiceWorkerCacheViews.ts | matchingEntriesS": {
    "message": "Passende Einträge: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | name": {
    "message": "Name"
  },
  "panels/application/ServiceWorkerCacheViews.ts | preview": {
    "message": "Vorschau"
  },
  "panels/application/ServiceWorkerCacheViews.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/ServiceWorkerCacheViews.ts | selectACacheEntryAboveToPreview": {
    "message": "Cache-Eintrag oben für die Vorschau auswählen"
  },
  "panels/application/ServiceWorkerCacheViews.ts | serviceWorkerCache": {
    "message": "Service Worker-Cache"
  },
  "panels/application/ServiceWorkerCacheViews.ts | timeCached": {
    "message": "Im Cache gespeicherte Zeit"
  },
  "panels/application/ServiceWorkerCacheViews.ts | totalEntriesS": {
    "message": "Einträge insgesamt: {PH1}"
  },
  "panels/application/ServiceWorkerCacheViews.ts | varyHeaderWarning": {
    "message": "⚠️ ignoreVary auf „true“ setzen, wenn Sie diesen Eintrag abgleichen"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | endTimeS": {
    "message": "Ende: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | startTimeS": {
    "message": "Beginn: {PH1}"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | timeline": {
    "message": "Zeitachse"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | updateActivity": {
    "message": "Aktualisierungs-Aktivität"
  },
  "panels/application/ServiceWorkerUpdateCycleView.ts | version": {
    "message": "Version"
  },
  "panels/application/ServiceWorkersView.ts | bypassForNetwork": {
    "message": "Für Netzwerk umgehen"
  },
  "panels/application/ServiceWorkersView.ts | bypassTheServiceWorkerAndLoad": {
    "message": "service worker umgehen und Ressourcen aus dem Netzwerk laden"
  },
  "panels/application/ServiceWorkersView.ts | clients": {
    "message": "Clients"
  },
  "panels/application/ServiceWorkersView.ts | focus": {
    "message": "Fokus"
  },
  "panels/application/ServiceWorkersView.ts | inspect": {
    "message": "Untersuchen"
  },
  "panels/application/ServiceWorkersView.ts | networkRequests": {
    "message": "Netzwerkanfragen"
  },
  "panels/application/ServiceWorkersView.ts | onPageReloadForceTheService": {
    "message": "Beim Neuladen der Seite die Aktualisierung von service worker erzwingen und diesen aktivieren"
  },
  "panels/application/ServiceWorkersView.ts | periodicSync": {
    "message": "Regelmäßige Synchronisierung"
  },
  "panels/application/ServiceWorkersView.ts | periodicSyncTag": {
    "message": "Tag für regelmäßige Synchronisierung"
  },
  "panels/application/ServiceWorkersView.ts | pushData": {
    "message": "Daten senden"
  },
  "panels/application/ServiceWorkersView.ts | pushString": {
    "message": "Push"
  },
  "panels/application/ServiceWorkersView.ts | receivedS": {
    "message": "Am {PH1} empfangen"
  },
  "panels/application/ServiceWorkersView.ts | sActivatedAndIsS": {
    "message": "# {PH1} aktiviert und {PH2}"
  },
  "panels/application/ServiceWorkersView.ts | sDeleted": {
    "message": "{PH1} – gelöscht"
  },
  "panels/application/ServiceWorkersView.ts | sIsRedundant": {
    "message": "#{PH1} ist redundant"
  },
  "panels/application/ServiceWorkersView.ts | sRegistrationErrors": {
    "message": "{PH1}-Registrierungsfehler"
  },
  "panels/application/ServiceWorkersView.ts | sTryingToInstall": {
    "message": "Anzahl von {PH1}, die installiert werden sollen"
  },
  "panels/application/ServiceWorkersView.ts | sWaitingToActivate": {
    "message": "#{PH1} Warten auf Aktivierung"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkerForS": {
    "message": "Service worker für {PH1}"
  },
  "panels/application/ServiceWorkersView.ts | serviceWorkersFromOtherOrigins": {
    "message": "Service Worker aus anderen Quellen"
  },
  "panels/application/ServiceWorkersView.ts | source": {
    "message": "Quelle"
  },
  "panels/application/ServiceWorkersView.ts | startString": {
    "message": "starten"
  },
  "panels/application/ServiceWorkersView.ts | status": {
    "message": "Status"
  },
  "panels/application/ServiceWorkersView.ts | stopString": {
    "message": "stoppen"
  },
  "panels/application/ServiceWorkersView.ts | syncString": {
    "message": "Synchronisieren"
  },
  "panels/application/ServiceWorkersView.ts | syncTag": {
    "message": "Synchronisierungstag"
  },
  "panels/application/ServiceWorkersView.ts | testPushMessageFromDevtools": {
    "message": "Push-Nachricht von DevTools testen."
  },
  "panels/application/ServiceWorkersView.ts | unregister": {
    "message": "Registrierung aufheben"
  },
  "panels/application/ServiceWorkersView.ts | unregisterServiceWorker": {
    "message": "Service Worker abmelden"
  },
  "panels/application/ServiceWorkersView.ts | update": {
    "message": "Aktualisieren"
  },
  "panels/application/ServiceWorkersView.ts | updateCycle": {
    "message": "Zyklus aktualisieren"
  },
  "panels/application/ServiceWorkersView.ts | updateOnReload": {
    "message": "Update beim Aktualisieren"
  },
  "panels/application/ServiceWorkersView.ts | workerS": {
    "message": "Worker: {PH1}"
  },
  "panels/application/StorageItemsView.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/application/StorageItemsView.ts | deleteSelected": {
    "message": "Auswahl löschen"
  },
  "panels/application/StorageItemsView.ts | filter": {
    "message": "Filtern"
  },
  "panels/application/StorageItemsView.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/application/StorageItemsView.ts | refreshedStatus": {
    "message": "Tabelle aktualisiert"
  },
  "panels/application/StorageView.ts | application": {
    "message": "App"
  },
  "panels/application/StorageView.ts | applicationCache": {
    "message": "Cache"
  },
  "panels/application/StorageView.ts | cache": {
    "message": "Cache"
  },
  "panels/application/StorageView.ts | cacheStorage": {
    "message": "Cache-Speicher"
  },
  "panels/application/StorageView.ts | clearSiteData": {
    "message": "Websitedaten löschen"
  },
  "panels/application/StorageView.ts | clearing": {
    "message": "Wird gelöscht..."
  },
  "panels/application/StorageView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/application/StorageView.ts | fileSystem": {
    "message": "Dateisystem"
  },
  "panels/application/StorageView.ts | includingThirdPartyCookies": {
    "message": "Einschließlich Drittanbieter-Cookies"
  },
  "panels/application/StorageView.ts | indexDB": {
    "message": "IndexedDB"
  },
  "panels/application/StorageView.ts | internalError": {
    "message": "Interner Fehler"
  },
  "panels/application/StorageView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/StorageView.ts | localAndSessionStorage": {
    "message": "Lokaler und Sitzungsspeicher"
  },
  "panels/application/StorageView.ts | mb": {
    "message": "MB"
  },
  "panels/application/StorageView.ts | numberMustBeNonNegative": {
    "message": "Die Zahl darf nicht negativ sein"
  },
  "panels/application/StorageView.ts | other": {
    "message": "Sonstiges"
  },
  "panels/application/StorageView.ts | pleaseEnterANumber": {
    "message": "Geben Sie eine Nummer ein"
  },
  "panels/application/StorageView.ts | sFailedToLoad": {
    "message": "{PH1} (konnte nicht geladen werden)"
  },
  "panels/application/StorageView.ts | serviceWorkers": {
    "message": "Service Worker"
  },
  "panels/application/StorageView.ts | storageQuotaIsLimitedIn": {
    "message": "Speicherkontingent ist im Inkognitomodus begrenzt"
  },
  "panels/application/StorageView.ts | storageQuotaUsed": {
    "message": "{PH1} von Speicherkontingent ({PH2}) genutzt"
  },
  "panels/application/StorageView.ts | storageQuotaUsedWithBytes": {
    "message": "{PH1} Byte von {PH2} Byte des Speicherkontingents werden verwendet"
  },
  "panels/application/StorageView.ts | storageTitle": {
    "message": "Speicher"
  },
  "panels/application/StorageView.ts | storageUsage": {
    "message": "Speichernutzung"
  },
  "panels/application/StorageView.ts | storageWithCustomMarker": {
    "message": "{PH1} (benutzerdefiniert)"
  },
  "panels/application/StorageView.ts | unregisterServiceWorker": {
    "message": "Service Worker abmelden"
  },
  "panels/application/StorageView.ts | usage": {
    "message": "Nutzung"
  },
  "panels/application/StorageView.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/application/TrustTokensTreeElement.ts | trustTokens": {
    "message": "Trust-Tokens"
  },
  "panels/application/application-meta.ts | application": {
    "message": "App"
  },
  "panels/application/application-meta.ts | clearSiteData": {
    "message": "Websitedaten löschen"
  },
  "panels/application/application-meta.ts | clearSiteDataIncludingThirdparty": {
    "message": "Websitedaten löschen (einschließlich Cookies von Drittanbietern)"
  },
  "panels/application/application-meta.ts | pwa": {
    "message": "PWA"
  },
  "panels/application/application-meta.ts | showApplication": {
    "message": "Anwendung anzeigen"
  },
  "panels/application/application-meta.ts | startRecordingEvents": {
    "message": "Ereignisse erfassen"
  },
  "panels/application/application-meta.ts | stopRecordingEvents": {
    "message": "Ereignisaufzeichnung beenden"
  },
  "panels/application/components/FrameDetailsView.ts | aFrameAncestorIsAnInsecure": {
    "message": "Ein Frame Ancestor ist ein unsicherer Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | adStatus": {
    "message": "Anzeigenstatus"
  },
  "panels/application/components/FrameDetailsView.ts | additionalInformation": {
    "message": "Weitere Informationen"
  },
  "panels/application/components/FrameDetailsView.ts | allowedFeatures": {
    "message": "Zulässige Funktionen"
  },
  "panels/application/components/FrameDetailsView.ts | apiAvailability": {
    "message": "API-Verfügbarkeit"
  },
  "panels/application/components/FrameDetailsView.ts | availabilityOfCertainApisDepends": {
    "message": "Die Verfügbarkeit bestimmter APIs hängt davon ab, ob das Dokument ursprungsübergreifend isoliert ist."
  },
  "panels/application/components/FrameDetailsView.ts | available": {
    "message": "Verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | availableNotTransferable": {
    "message": "verfügbar, nicht übertragbar"
  },
  "panels/application/components/FrameDetailsView.ts | availableTransferable": {
    "message": "verfügbar, übertragbar"
  },
  "panels/application/components/FrameDetailsView.ts | child": {
    "message": "Untergeordnet"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInElementsPanel": {
    "message": "Zum Anzeigen im Elementbereich klicken"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanel": {
    "message": "Zum Anzeigen im Netzwerkbereich klicken"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInNetworkPanelMight": {
    "message": "Zum Anzeigen im Netzwerkbereich klicken (Seitenaktualisierung ist möglicherweise erforderlich)"
  },
  "panels/application/components/FrameDetailsView.ts | clickToRevealInSourcesPanel": {
    "message": "Zum Anzeigen im Quellenbereich klicken"
  },
  "panels/application/components/FrameDetailsView.ts | clickToShowHeader": {
    "message": "Klicken Sie, um die Anfrage aufzurufen, deren HTTP-Header „Permissions-Policy“ diese Funktion deaktiviert."
  },
  "panels/application/components/FrameDetailsView.ts | clickToShowIframe": {
    "message": "Klicken Sie, um das oberste iFrame aufzurufen, das diese Funktion im Elementbereich nicht zulässt."
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTrace": {
    "message": "Stacktrace für Frame-Erstellung"
  },
  "panels/application/components/FrameDetailsView.ts | creationStackTraceExplanation": {
    "message": "Dieser Frame wurde programmatisch erstellt. Der Stacktrace zeigt an, wo dies passiert ist."
  },
  "panels/application/components/FrameDetailsView.ts | crossoriginEmbedderPolicy": {
    "message": "Cross-Origin-Embedder-Richtlinie"
  },
  "panels/application/components/FrameDetailsView.ts | crossoriginIsolated": {
    "message": "Ursprungsübergreifend isoliert"
  },
  "panels/application/components/FrameDetailsView.ts | crossoriginOpenerPolicy": {
    "message": "Cross-Origin-Opener-Richtlinie"
  },
  "panels/application/components/FrameDetailsView.ts | disabledByHeader": {
    "message": "durch den Header „Permissions-Policy“ deaktiviert"
  },
  "panels/application/components/FrameDetailsView.ts | disabledByIframe": {
    "message": "fehlt im iFrame-Attribut „allow“"
  },
  "panels/application/components/FrameDetailsView.ts | disabledFeatures": {
    "message": "Deaktivierte Funktionen"
  },
  "panels/application/components/FrameDetailsView.ts | document": {
    "message": "Dokument"
  },
  "panels/application/components/FrameDetailsView.ts | frameId": {
    "message": "Frame-ID"
  },
  "panels/application/components/FrameDetailsView.ts | hideDetails": {
    "message": "Details ausblenden"
  },
  "panels/application/components/FrameDetailsView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/application/components/FrameDetailsView.ts | localhostIsAlwaysASecureContext": {
    "message": "Localhost ist immer ein sicherer Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | measureMemory": {
    "message": "Arbeitsspeicher messen"
  },
  "panels/application/components/FrameDetailsView.ts | no": {
    "message": "Nein"
  },
  "panels/application/components/FrameDetailsView.ts | origin": {
    "message": "Ursprung"
  },
  "panels/application/components/FrameDetailsView.ts | ownerElement": {
    "message": "Inhaber-Element"
  },
  "panels/application/components/FrameDetailsView.ts | reportingTo": {
    "message": "melden an"
  },
  "panels/application/components/FrameDetailsView.ts | requiresCrossoriginIsolated": {
    "message": "erfordert ursprungsübergreifend isolierten Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | root": {
    "message": "root"
  },
  "panels/application/components/FrameDetailsView.ts | secureContext": {
    "message": "Sicherer Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | securityIsolation": {
    "message": "Sicherheit und Isolation"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIs": {
    "message": "SharedArrayBuffer-Konstruktor ist verfügbar und SABS können via postMessage übertragen werden"
  },
  "panels/application/components/FrameDetailsView.ts | sharedarraybufferConstructorIsAvailable": {
    "message": "SharedArrayBuffer-Konstruktor ist verfügbar, aber SABs können nicht via postMessage übertragen werden"
  },
  "panels/application/components/FrameDetailsView.ts | showDetails": {
    "message": "Mehr anzeigen"
  },
  "panels/application/components/FrameDetailsView.ts | theFramesSchemeIsInsecure": {
    "message": "Das Schema des Frames ist unsicher"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformanceAPI": {
    "message": "„performance.measureUserAgentSpecificMemory()“ API ist nicht verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | thePerformancemeasureuseragentspecificmemory": {
    "message": "Die „performance.measureUserAgentSpecificMemory()“ API ist nicht verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | thisAdditionalDebugging": {
    "message": "Diese zusätzlichen (Debugging-)Informationen werden angezeigt, weil der Test „Protokollmonitor“ aktiviert ist."
  },
  "panels/application/components/FrameDetailsView.ts | thisFrameHasBeenIdentifiedAsThe": {
    "message": "Dieser Frame wurde als Root-Frame einer Werbeanzeige erkannt"
  },
  "panels/application/components/FrameDetailsView.ts | thisFrameHasBeenIdentifiedAsTheA": {
    "message": "Dieser Frame wurde als untergeordneter Frame einer Werbeanzeige erkannt"
  },
  "panels/application/components/FrameDetailsView.ts | transferRequiresCrossoriginIsolatedPermission": {
    "message": "Für die „SharedArrayBuffer“-Übertragung muss die Berechtigungsrichtlinie aktiviert werden:"
  },
  "panels/application/components/FrameDetailsView.ts | unavailable": {
    "message": "nicht verfügbar"
  },
  "panels/application/components/FrameDetailsView.ts | unreachableUrl": {
    "message": "Nicht erreichbare URL"
  },
  "panels/application/components/FrameDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/application/components/FrameDetailsView.ts | willRequireCrossoriginIsolated": {
    "message": "⚠️ erfordert zukünftig ursprungsübergreifend isolierten Kontext"
  },
  "panels/application/components/FrameDetailsView.ts | yes": {
    "message": "Ja"
  },
  "panels/application/components/StackTrace.ts | cannotRenderStackTrace": {
    "message": "Stacktrace kann nicht gerendert werden"
  },
  "panels/application/components/StackTrace.ts | showSMoreFrames": {
    "message": "{n,plural, =1{# weiteren Frame anzeigen}other{# weitere Frames anzeigen}}"
  },
  "panels/application/components/TrustTokensView.ts | allStoredTrustTokensAvailableIn": {
    "message": "Alle gespeicherten Trust Tokens, die in dieser Browserinstanz verfügbar sind."
  },
  "panels/application/components/TrustTokensView.ts | deleteTrustTokens": {
    "message": "Alle von {PH1} ausgegebenen gespeicherten Trust Tokens löschen."
  },
  "panels/application/components/TrustTokensView.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/application/components/TrustTokensView.ts | noTrustTokensStored": {
    "message": "Es sind derzeit keine Trust Tokens gespeichert."
  },
  "panels/application/components/TrustTokensView.ts | storedTokenCount": {
    "message": "Anzahl gespeicherter Token"
  },
  "panels/browser_debugger/CategorizedBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "Haltepunkt getroffen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | attributeModified": {
    "message": "Attribut geändert"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakOn": {
    "message": "Haltepunkt bei"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "Haltepunkt getroffen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointRemoved": {
    "message": "Haltepunkt entfernt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | breakpointSet": {
    "message": "Haltepunkt festgelegt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | checked": {
    "message": "aktiviert"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | domBreakpointsList": {
    "message": "Liste der DOM Haltepunkte"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Keine Haltepunkte"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | nodeRemoved": {
    "message": "Knoten entfernt"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeAllDomBreakpoints": {
    "message": "Alle DOM-Haltepunkte entfernen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Haltepunkt entfernen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | revealDomNodeInElementsPanel": {
    "message": "DOM-Knoten im Elementbereich anzeigen"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sBreakpointHit": {
    "message": "{PH1} Haltepunkttreffer"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | subtreeModified": {
    "message": "Unterstruktur geändert"
  },
  "panels/browser_debugger/DOMBreakpointsSidebarPane.ts | unchecked": {
    "message": "nicht ausgewählt"
  },
  "panels/browser_debugger/ObjectEventListenersSidebarPane.ts | refreshGlobalListeners": {
    "message": "Globale Listener aktualisieren"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addBreakpoint": {
    "message": "Haltepunkt hinzufügen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | addXhrfetchBreakpoint": {
    "message": "XHR/fetch-Haltepunkt hinzufügen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | anyXhrOrFetch": {
    "message": "Beliebige XHR oder abrufen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakWhenUrlContains": {
    "message": "Abbrechen, wenn die URL Folgendes enthält:"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | breakpointHit": {
    "message": "Haltepunkt getroffen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Keine Haltepunkte"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeAllBreakpoints": {
    "message": "Alle Haltepunkte entfernen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Haltepunkt entfernen"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlBreakpoint": {
    "message": "URL-Haltepunkt"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | urlContainsS": {
    "message": "URL enthält „{PH1}“"
  },
  "panels/browser_debugger/XHRBreakpointsSidebarPane.ts | xhrfetchBreakpoints": {
    "message": "XHR/fetch-Haltepunkte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | contentScripts": {
    "message": "Inhaltskripte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | cspViolationBreakpoints": {
    "message": "Haltepunkte für CSP-Verstöße"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | domBreakpoints": {
    "message": "DOM-Umschaltpunkte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | eventListenerBreakpoints": {
    "message": "Ereignis-Listener-Haltepunkte"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | globalListeners": {
    "message": "Globale Listener"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | overrides": {
    "message": "Überschreibt"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | page": {
    "message": "Seite"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showContentScripts": {
    "message": "Inhaltskripte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showCspViolationBreakpoints": {
    "message": "Haltepunkte für CSP-Verstöße anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showDomBreakpoints": {
    "message": "DOM-Haltepunkte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showEventListenerBreakpoints": {
    "message": "Ereignis-Listener-Haltepunkte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showGlobalListeners": {
    "message": "Globale Listener anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showOverrides": {
    "message": "Überschreibungen anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showPage": {
    "message": "Seite anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | showXhrfetchBreakpoints": {
    "message": "XHR/fetch-Haltepunkte anzeigen"
  },
  "panels/browser_debugger/browser_debugger-meta.ts | xhrfetchBreakpoints": {
    "message": "XHR/fetch-Haltepunkte"
  },
  "panels/changes/ChangesSidebar.ts | sFromSourceMap": {
    "message": "{PH1} (aus Quellzuordnung)"
  },
  "panels/changes/ChangesTextEditor.ts | additions": {
    "message": "Hinzufügen: {PH1}"
  },
  "panels/changes/ChangesTextEditor.ts | deletions": {
    "message": "Löschen: {PH1}"
  },
  "panels/changes/ChangesView.ts | SkippingDMatchingLines": {
    "message": "( … Überspringen {PH1} übereinstimmende Zeilen … )"
  },
  "panels/changes/ChangesView.ts | binaryData": {
    "message": "Binärdaten"
  },
  "panels/changes/ChangesView.ts | changesDiffViewer": {
    "message": "Viewer für Änderungen"
  },
  "panels/changes/ChangesView.ts | noChanges": {
    "message": "Keine Änderungen"
  },
  "panels/changes/ChangesView.ts | revertAllChangesToCurrentFile": {
    "message": "Alle Änderungen an der aktuellen Datei rückgängig machen"
  },
  "panels/changes/ChangesView.ts | sDeletions": {
    "message": "{n,plural, =1{# Löschung (-)}other{# Löschungen (-)}}"
  },
  "panels/changes/ChangesView.ts | sInsertions": {
    "message": "{n,plural, =1{# Einfügung (+)}other{# Einfügungen (+)}}"
  },
  "panels/changes/changes-meta.ts | changes": {
    "message": "Änderungen"
  },
  "panels/changes/changes-meta.ts | showChanges": {
    "message": "Änderungen anzeigen"
  },
  "panels/console/ConsoleContextSelector.ts | extension": {
    "message": "Erweiterung"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextNotSelected": {
    "message": "JavaScript-Kontext: Nicht ausgewählt"
  },
  "panels/console/ConsoleContextSelector.ts | javascriptContextS": {
    "message": "JavaScript-Kontext: {PH1}"
  },
  "panels/console/ConsolePinPane.ts | evaluateAllowingSideEffects": {
    "message": "Bewerten und Nebenwirkungen zulassen"
  },
  "panels/console/ConsolePinPane.ts | expression": {
    "message": "Ausdruck"
  },
  "panels/console/ConsolePinPane.ts | liveExpressionEditor": {
    "message": "Live-Ausdruck-Editor"
  },
  "panels/console/ConsolePinPane.ts | notAvailable": {
    "message": "Nicht verfügbar"
  },
  "panels/console/ConsolePinPane.ts | removeAllExpressions": {
    "message": "Alle Ausdrücke entfernen"
  },
  "panels/console/ConsolePinPane.ts | removeBlankExpression": {
    "message": "Leeren Ausdruck entfernen"
  },
  "panels/console/ConsolePinPane.ts | removeExpression": {
    "message": "Ausdruck entfernen"
  },
  "panels/console/ConsolePinPane.ts | removeExpressionS": {
    "message": "Ausdruck entfernen: {PH1}"
  },
  "panels/console/ConsolePrompt.ts | consolePrompt": {
    "message": "Konsolenaufforderung"
  },
  "panels/console/ConsoleSidebar.ts | dErrors": {
    "message": "{n,plural, =0{Keine Fehler}=1{# Fehler}other{# Fehler}}"
  },
  "panels/console/ConsoleSidebar.ts | dInfo": {
    "message": "{n,plural, =0{Keine Informationen}=1{# Information}other{# Informationen}}"
  },
  "panels/console/ConsoleSidebar.ts | dMessages": {
    "message": "{n,plural, =0{Keine Nachrichten}=1{# Nachricht}other{# Nachrichten}}"
  },
  "panels/console/ConsoleSidebar.ts | dUserMessages": {
    "message": "{n,plural, =0{Keine Nutzernachrichten}=1{# Nutzernachricht}other{# Nutzernachrichten}}"
  },
  "panels/console/ConsoleSidebar.ts | dVerbose": {
    "message": "{n,plural, =0{Nicht ausführlich}=1{# ausführliche}other{# ausführliche}}"
  },
  "panels/console/ConsoleSidebar.ts | dWarnings": {
    "message": "{n,plural, =0{Keine Warnungen}=1{# Warnung}other{# Warnungen}}"
  },
  "panels/console/ConsoleSidebar.ts | other": {
    "message": "<other>"
  },
  "panels/console/ConsoleView.ts | allLevels": {
    "message": "Alle Ebenen"
  },
  "panels/console/ConsoleView.ts | consoleCleared": {
    "message": "Konsole gelöscht"
  },
  "panels/console/ConsoleView.ts | consoleSettings": {
    "message": "Konsoleneinstellungen"
  },
  "panels/console/ConsoleView.ts | copyVisibleStyledSelection": {
    "message": "Sichtbare stilangepasste Auswahl kopieren"
  },
  "panels/console/ConsoleView.ts | customLevels": {
    "message": "Angepasste Stufen"
  },
  "panels/console/ConsoleView.ts | default": {
    "message": "Standard"
  },
  "panels/console/ConsoleView.ts | defaultLevels": {
    "message": "Standardlevel"
  },
  "panels/console/ConsoleView.ts | doNotClearLogOnPageReload": {
    "message": "Protokoll beim Aktualisieren/Bedienen der Seite nicht löschen"
  },
  "panels/console/ConsoleView.ts | eagerlyEvaluateTextInThePrompt": {
    "message": "Text in der Aufforderung aufmerksam bewerten"
  },
  "panels/console/ConsoleView.ts | egEventdCdnUrlacom": {
    "message": "Beispiel: /eventd/ -cdn url:a.com"
  },
  "panels/console/ConsoleView.ts | errors": {
    "message": "Fehler"
  },
  "panels/console/ConsoleView.ts | filter": {
    "message": "Filtern"
  },
  "panels/console/ConsoleView.ts | findStringInLogs": {
    "message": "String in Protokollen finden"
  },
  "panels/console/ConsoleView.ts | groupSimilarMessagesInConsole": {
    "message": "Ähnliche Nachrichten in der Konsole gruppieren"
  },
  "panels/console/ConsoleView.ts | hideAll": {
    "message": "Alle ausblenden"
  },
  "panels/console/ConsoleView.ts | hideConsoleSidebar": {
    "message": "Seitenleiste „Konsole“ ausblenden"
  },
  "panels/console/ConsoleView.ts | hideMessagesFromS": {
    "message": "Nachrichten von {PH1} verbergen"
  },
  "panels/console/ConsoleView.ts | hideNetwork": {
    "message": "Netzwerk verbergen"
  },
  "panels/console/ConsoleView.ts | info": {
    "message": "Info"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToGoToTheIssuesTab": {
    "message": "Klicken, um auf den Tab „Probleme“ zu gehen"
  },
  "panels/console/ConsoleView.ts | issueToolbarClickToView": {
    "message": "Klicken, um {issueEnumeration} anzusehen"
  },
  "panels/console/ConsoleView.ts | issueToolbarTooltipGeneral": {
    "message": "Einige Probleme erzeugen keine Konsolenmeldungen mehr, sondern werden auf dem Tab „Probleme“ angezeigt."
  },
  "panels/console/ConsoleView.ts | issuesWithColon": {
    "message": "{n,plural, =0{Keine Probleme}=1{# Problem:}other{# Probleme:}}"
  },
  "panels/console/ConsoleView.ts | logLevelS": {
    "message": "Protokollebene: {PH1}"
  },
  "panels/console/ConsoleView.ts | logLevels": {
    "message": "Protokollebenen"
  },
  "panels/console/ConsoleView.ts | onlyShowMessagesFromTheCurrentContext": {
    "message": "Nur Nachrichten aus dem aktuellen Kontext anzeigen (top, iframe, worker, Erweiterung)"
  },
  "panels/console/ConsoleView.ts | overriddenByFilterSidebar": {
    "message": "Von Filterseitenleiste überschrieben"
  },
  "panels/console/ConsoleView.ts | preserveLog": {
    "message": "Preserve log"
  },
  "panels/console/ConsoleView.ts | replayXhr": {
    "message": "XHR wiederholen"
  },
  "panels/console/ConsoleView.ts | sHidden": {
    "message": "{n,plural, =1{# ausgeblendet}other{# ausgeblendet}}"
  },
  "panels/console/ConsoleView.ts | sOnly": {
    "message": "Nur {PH1}"
  },
  "panels/console/ConsoleView.ts | saveAs": {
    "message": "Speichern unter…"
  },
  "panels/console/ConsoleView.ts | searching": {
    "message": "Wird gesucht…"
  },
  "panels/console/ConsoleView.ts | selectedContextOnly": {
    "message": "Nur ausgewählter Kontext"
  },
  "panels/console/ConsoleView.ts | showConsoleSidebar": {
    "message": "Seitenleiste „Konsole“ anzeigen"
  },
  "panels/console/ConsoleView.ts | verbose": {
    "message": "Ausführlich"
  },
  "panels/console/ConsoleView.ts | warnings": {
    "message": "Warnungen"
  },
  "panels/console/ConsoleView.ts | writingFile": {
    "message": "Schreiben in Datei…"
  },
  "panels/console/ConsoleViewMessage.ts | Mxx": {
    "message": " M<XX>"
  },
  "panels/console/ConsoleViewMessage.ts | assertionFailed": {
    "message": "Assertion fehlgeschlagen: "
  },
  "panels/console/ConsoleViewMessage.ts | attribute": {
    "message": "<Attribut>"
  },
  "panels/console/ConsoleViewMessage.ts | clearAllMessagesWithS": {
    "message": "Alle Nachrichten mit {PH1} löschen"
  },
  "panels/console/ConsoleViewMessage.ts | console": {
    "message": "Konsole"
  },
  "panels/console/ConsoleViewMessage.ts | consoleWasCleared": {
    "message": "Konsole wurde geleert"
  },
  "panels/console/ConsoleViewMessage.ts | consoleclearWasPreventedDueTo": {
    "message": "console.clear() wurde aufgrund von „Preserve log“ verhindert"
  },
  "panels/console/ConsoleViewMessage.ts | deprecationS": {
    "message": "[Deprecation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | error": {
    "message": "Fehler"
  },
  "panels/console/ConsoleViewMessage.ts | errorS": {
    "message": "{n,plural, =1{Fehler, # Mal wiederholt}other{Fehler, # Male wiederholt}}"
  },
  "panels/console/ConsoleViewMessage.ts | exception": {
    "message": "<exception>"
  },
  "panels/console/ConsoleViewMessage.ts | functionWasResolvedFromBound": {
    "message": "Die Funktion wurde aus einer gebundenen Funktion gelöst."
  },
  "panels/console/ConsoleViewMessage.ts | index": {
    "message": "(Index)"
  },
  "panels/console/ConsoleViewMessage.ts | interventionS": {
    "message": "[Intervention] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | repeatS": {
    "message": "{n,plural, =1{# Mal wiederholt}other{# Mal wiederholt}}"
  },
  "panels/console/ConsoleViewMessage.ts | someEvent": {
    "message": "<some>-Ereignis"
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWasEvaluatedUponFirst": {
    "message": "Dieser Wert wurde bei der ersten Maximierung ausgewertet. Möglicherweise hat er sich seitdem verändert."
  },
  "panels/console/ConsoleViewMessage.ts | thisValueWillNotBeCollectedUntil": {
    "message": "Dieser Wert wird erst erfasst, wenn der Konsoleninhalt gelöscht ist."
  },
  "panels/console/ConsoleViewMessage.ts | tookNms": {
    "message": "Zeit: <N> ms"
  },
  "panels/console/ConsoleViewMessage.ts | url": {
    "message": "<URL>"
  },
  "panels/console/ConsoleViewMessage.ts | value": {
    "message": "Wert"
  },
  "panels/console/ConsoleViewMessage.ts | violationS": {
    "message": "[Violation] {PH1}"
  },
  "panels/console/ConsoleViewMessage.ts | warning": {
    "message": "Warnung"
  },
  "panels/console/ConsoleViewMessage.ts | warningS": {
    "message": "{n,plural, =1{Warnung, # Mal wiederholt}other{Warnung, # Mal wiederholt}}"
  },
  "panels/console/console-meta.ts | autocompleteFromHistory": {
    "message": "Automatisch aus dem Verlauf vervollständigen"
  },
  "panels/console/console-meta.ts | clearConsole": {
    "message": "Konsole löschen"
  },
  "panels/console/console-meta.ts | clearConsoleHistory": {
    "message": "Konsolenverlauf löschen"
  },
  "panels/console/console-meta.ts | console": {
    "message": "Konsole"
  },
  "panels/console/console-meta.ts | createLiveExpression": {
    "message": "Live-Ausdruck erstellen"
  },
  "panels/console/console-meta.ts | doNotAutocompleteFromHistory": {
    "message": "Keine automatische Vervollständigung aus dem Verlauf"
  },
  "panels/console/console-meta.ts | doNotEagerlyEvaluateConsole": {
    "message": "Text in der Console-Aufforderung nicht aufmerksam bewerten"
  },
  "panels/console/console-meta.ts | doNotGroupSimilarMessagesIn": {
    "message": "Ähnliche Nachrichten in der Konsole nicht gruppieren"
  },
  "panels/console/console-meta.ts | doNotTreatEvaluationAsUser": {
    "message": "Evaluation nicht als Nutzeraktivität werten"
  },
  "panels/console/console-meta.ts | eagerEvaluation": {
    "message": "Genaue Auswertung"
  },
  "panels/console/console-meta.ts | eagerlyEvaluateConsolePromptText": {
    "message": "Text in der Console-Aufforderung aufmerksam bewerten"
  },
  "panels/console/console-meta.ts | evaluateTriggersUserActivation": {
    "message": "Evaluierung löst Nutzeraktivierung aus"
  },
  "panels/console/console-meta.ts | groupSimilarMessagesInConsole": {
    "message": "Ähnliche Nachrichten in der Konsole gruppieren"
  },
  "panels/console/console-meta.ts | hideNetworkMessages": {
    "message": "Netzwerk-Benachrichtigungen verbergen"
  },
  "panels/console/console-meta.ts | hideTimestamps": {
    "message": "Zeitstempel ausblenden"
  },
  "panels/console/console-meta.ts | logXmlhttprequests": {
    "message": "Log XMLHttpRequests-Anfragen"
  },
  "panels/console/console-meta.ts | onlyShowMessagesFromTheCurrent": {
    "message": "Nur Nachrichten aus dem aktuellen Kontext anzeigen (top, iframe, worker, Erweiterung)"
  },
  "panels/console/console-meta.ts | selectedContextOnly": {
    "message": "Nur ausgewählter Kontext"
  },
  "panels/console/console-meta.ts | showConsole": {
    "message": "Konsole anzeigen"
  },
  "panels/console/console-meta.ts | showMessagesFromAllContexts": {
    "message": "Nachrichten aller Kontexte anzeigen"
  },
  "panels/console/console-meta.ts | showNetworkMessages": {
    "message": "Netzwerk-Benachrichtigungen anzeigen"
  },
  "panels/console/console-meta.ts | showTimestamps": {
    "message": "Zeitstempel anzeigen"
  },
  "panels/console/console-meta.ts | treatEvaluationAsUserActivation": {
    "message": "Evaluierung als Nutzeraktivität werten"
  },
  "panels/console_counters/WarningErrorCounter.ts | openConsoleToViewS": {
    "message": "Konsole öffnen, um {PH1} anzuzeigen"
  },
  "panels/console_counters/WarningErrorCounter.ts | openIssuesToView": {
    "message": "{n,plural, =1{Probleme öffnen, um # Problem anzusehen:}other{Probleme öffnen, um # Probleme anzusehen:}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | openLighthouseToView": {
    "message": "{n,plural, =1{Lighthouse öffnen, um # Verstoß anzuzeigen}other{Lighthouse öffnen, um # Verstöße anzuzeigen}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sErrors": {
    "message": "{n,plural, =1{# Fehler}other{# Fehler}}"
  },
  "panels/console_counters/WarningErrorCounter.ts | sWarnings": {
    "message": "{n,plural, =1{# Warnung}other{# Warnungen}}"
  },
  "panels/coverage/CoverageListView.ts | codeCoverage": {
    "message": "Codeabdeckung"
  },
  "panels/coverage/CoverageListView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerBlock": {
    "message": "JS-Abdeckung mit Detaillierungsgrad pro Block: Sobald ein JavaScript-Block ausgeführt wurde, wird er als abgedeckt markiert."
  },
  "panels/coverage/CoverageListView.ts | jsCoverageWithPerFunction": {
    "message": "JS-Abdeckung mit Details pro Funktion: Sobald eine Funktion ausgeführt wurde, wird die gesamte Funktion als abgedeckt markiert."
  },
  "panels/coverage/CoverageListView.ts | jsPerBlock": {
    "message": "JS (pro Block)"
  },
  "panels/coverage/CoverageListView.ts | jsPerFunction": {
    "message": "JS (pro Funktion)"
  },
  "panels/coverage/CoverageListView.ts | sBytes": {
    "message": "{n,plural, =1{# Byte}other{# Byte}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesS": {
    "message": "{n,plural, =1{# Byte, {percentage}}other{# Byte, {percentage}}}"
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOf": {
    "message": "{PH1} Byte ({PH2} %) gehören zu JavaScript-Blocks, die (noch) nicht ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToBlocksOfJavascript": {
    "message": "{PH1} Byte ({PH2} %) gehören zu JavaScript-Blocks, die mindestens einmal ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHave": {
    "message": "{PH1} Bytes ({PH2} %) gehören zu Funktionen, die (noch) nicht ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sBytesSBelongToFunctionsThatHaveExecuted": {
    "message": "{PH1} Byte ({PH2} %) gehören zu Funktionen, die mindestens einmal ausgeführt wurden."
  },
  "panels/coverage/CoverageListView.ts | sOfFileUnusedSOfFileUsed": {
    "message": "{PH1} % der Datei werden nicht genutzt, {PH2} % werden genutzt"
  },
  "panels/coverage/CoverageListView.ts | sPercent": {
    "message": "{PH1} %"
  },
  "panels/coverage/CoverageListView.ts | totalBytes": {
    "message": "Bytes insgesamt:"
  },
  "panels/coverage/CoverageListView.ts | type": {
    "message": "Typ"
  },
  "panels/coverage/CoverageListView.ts | unusedBytes": {
    "message": "Nicht verwendete Bytes"
  },
  "panels/coverage/CoverageListView.ts | url": {
    "message": "URL"
  },
  "panels/coverage/CoverageListView.ts | usageVisualization": {
    "message": "Nutzungsvisualisierung"
  },
  "panels/coverage/CoverageView.ts | all": {
    "message": "Alles"
  },
  "panels/coverage/CoverageView.ts | chooseCoverageGranularityPer": {
    "message": "Detaillierungsgrad der Abdeckung auswählen: „Pro Funktion“ hat niedrigen Overhead, „Pro Block“ hat erheblichen Overhead."
  },
  "panels/coverage/CoverageView.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/coverage/CoverageView.ts | clickTheRecordButtonSToStart": {
    "message": "Klicken Sie die Aufnahmeschaltfläche {PH1}, um die Aufnahme der Abdeckung zu starten."
  },
  "panels/coverage/CoverageView.ts | clickTheReloadButtonSToReloadAnd": {
    "message": "Klicken Sie auf die Schaltfläche zum Aktualisieren {PH1}, um neu zu laden und die Aufnahme der Abdeckung zu starten."
  },
  "panels/coverage/CoverageView.ts | contentScripts": {
    "message": "Inhaltskripte"
  },
  "panels/coverage/CoverageView.ts | css": {
    "message": "CSS"
  },
  "panels/coverage/CoverageView.ts | export": {
    "message": "Wird exportiert…"
  },
  "panels/coverage/CoverageView.ts | filterCoverageByType": {
    "message": "Filterabdeckung nach Typ"
  },
  "panels/coverage/CoverageView.ts | filteredSTotalS": {
    "message": "Gefiltert: {PH1}  Gesamt: {PH2}"
  },
  "panels/coverage/CoverageView.ts | includeExtensionContentScripts": {
    "message": "Inhaltskripte für Erweiterung einschließen"
  },
  "panels/coverage/CoverageView.ts | javascript": {
    "message": "JavaScript"
  },
  "panels/coverage/CoverageView.ts | perBlock": {
    "message": "Per Block"
  },
  "panels/coverage/CoverageView.ts | perFunction": {
    "message": "Pro Funktion"
  },
  "panels/coverage/CoverageView.ts | sOfSSUsedSoFarSUnused": {
    "message": "Bisher genutzt {PH1} von {PH2} ({PH3} %), {PH4} ungenutzt."
  },
  "panels/coverage/CoverageView.ts | urlFilter": {
    "message": "URL-Filter"
  },
  "panels/coverage/coverage-meta.ts | coverage": {
    "message": "Abdeckung"
  },
  "panels/coverage/coverage-meta.ts | instrumentCoverage": {
    "message": "Instrument-Abdeckung"
  },
  "panels/coverage/coverage-meta.ts | showCoverage": {
    "message": "Abdeckung einblenden"
  },
  "panels/coverage/coverage-meta.ts | startInstrumentingCoverageAnd": {
    "message": "Instrumentierungs-Abdeckung starten und Seite aktualisieren"
  },
  "panels/coverage/coverage-meta.ts | stopInstrumentingCoverageAndShow": {
    "message": "Instrumentierungs-Abdeckung beenden und Ergebnisse anzeigen"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aa": {
    "message": "AA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | aaa": {
    "message": "AAA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | apca": {
    "message": "APCA"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | attributeSelectors": {
    "message": "Attribut-Selectors"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | backgroundColorsS": {
    "message": "Hintergrundfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | borderColorsS": {
    "message": "Rahmenfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | classSelectors": {
    "message": "Klassenselektoren"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | colors": {
    "message": "Farben"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssues": {
    "message": "Kontrastprobleme"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastIssuesS": {
    "message": "Kontrastprobleme: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | contrastRatio": {
    "message": "Kontrastverhältnis"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | cssOverviewElements": {
    "message": "Elemente der CSS-Übersicht"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | declaration": {
    "message": "Deklaration"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | element": {
    "message": "Element"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | elements": {
    "message": "Elemente"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | externalStylesheets": {
    "message": "Externe Stylesheets"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fillColorsS": {
    "message": "Füllfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | fontInfo": {
    "message": "Informationen zur Schriftart"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | idSelectors": {
    "message": "ID-Selectors"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | inlineStyleElements": {
    "message": "Inline-Style-Elemente"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | mediaQueries": {
    "message": "Medienabfragen"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nOccurrences": {
    "message": "{n,plural, =1{# Vorkommen}other{# Vorkommen}}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | nonsimpleSelectors": {
    "message": "Nicht-einfache Selectors"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | overviewSummary": {
    "message": "Zusammenfassung der Übersicht"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | showElement": {
    "message": "Element anzeigen"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | source": {
    "message": "Quelle"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | styleRules": {
    "message": "Formatregeln"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorSOverSBackgroundResults": {
    "message": "Textfarbe {PH1} über dem Hintergrund {PH2} führt zu geringem Kontrast für {PH3}-Elemente"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | textColorsS": {
    "message": "Schriftfarben: {PH1}"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoFonts": {
    "message": "Es sind keine Schriftarten vorhanden."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoMediaQueries": {
    "message": "Es gibt keine Medienabfragen."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | thereAreNoUnusedDeclarations": {
    "message": "Es sind keine unbenutzten Deklarationen vorhanden."
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | typeSelectors": {
    "message": "Typ-Selektoren"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | universalSelectors": {
    "message": "Universalselektoren"
  },
  "panels/css_overview/CSSOverviewCompletedView.ts | unusedDeclarations": {
    "message": "Nicht verwendete Deklarationen"
  },
  "panels/css_overview/CSSOverviewProcessingView.ts | cancel": {
    "message": "Abbrechen"
  },
  "panels/css_overview/CSSOverviewSidebarPanel.ts | clearOverview": {
    "message": "Übersicht löschen"
  },
  "panels/css_overview/CSSOverviewStartView.ts | captureOverview": {
    "message": "Aufnahmenübersicht"
  },
  "panels/css_overview/CSSOverviewStartView.ts | cssOverview": {
    "message": "CSS-Übersicht"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | bottomAppliedToAStatically": {
    "message": "Bottom wurde auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | heightAppliedToAnInlineElement": {
    "message": "Height wurde auf ein Inline-Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | leftAppliedToAStatically": {
    "message": "Left wurden auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | rightAppliedToAStatically": {
    "message": "Right wurden auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | topAppliedToAStatically": {
    "message": "Top wurde auf ein statisch positioniertes Element angewendet"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | verticalAlignmentAppliedTo": {
    "message": "Vertikale Ausrichtung, die auf ein Element angewendet wird, das weder inline noch table-cell ist"
  },
  "panels/css_overview/CSSOverviewUnusedDeclarations.ts | widthAppliedToAnInlineElement": {
    "message": "Width wurde auf ein Inline-Element angewendet"
  },
  "panels/css_overview/css_overview-meta.ts | cssOverview": {
    "message": "CSS-Übersicht"
  },
  "panels/css_overview/css_overview-meta.ts | showCssOverview": {
    "message": "CSS-Übersicht anzeigen"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyInitiatorUrl": {
    "message": "Initiator-URL kopieren"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | copyUrl": {
    "message": "URL kopieren"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | developerResources": {
    "message": "Entwicklerressourcen"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | error": {
    "message": "Fehler"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | failure": {
    "message": "Fehler"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | initiator": {
    "message": "Initiator"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | pending": {
    "message": "ausstehend"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | sBytes": {
    "message": "{n,plural, =1{# Byte}other{# Byte}}"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | status": {
    "message": "Status"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | success": {
    "message": "Fertig"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | totalBytes": {
    "message": "Bytes insgesamt:"
  },
  "panels/developer_resources/DeveloperResourcesListView.ts | url": {
    "message": "URL"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enableLoadingThroughTarget": {
    "message": "Laden durch Target aktivieren"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | enterTextToSearchTheUrlAndError": {
    "message": "Geben Sie Text ein, um in den Spalten für URL und Fehler zu suchen"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | loadHttpsDeveloperResources": {
    "message": "HTTP(S)-Entwicklerressourcen über das geprüfte Ziel laden"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/developer_resources/DeveloperResourcesView.ts | resourcesCurrentlyLoading": {
    "message": "{PH1} Ressourcen, {PH2} werden derzeit geladen"
  },
  "panels/developer_resources/developer_resources-meta.ts | developerResources": {
    "message": "Entwicklerressourcen"
  },
  "panels/developer_resources/developer_resources-meta.ts | showDeveloperResources": {
    "message": "Ressourcen für Entwickler anzeigen"
  },
  "panels/elements/ClassesPaneWidget.ts | addNewClass": {
    "message": "Neue Klasse hinzufügen"
  },
  "panels/elements/ClassesPaneWidget.ts | classSAdded": {
    "message": "{PH1}-Klasse hinzugefügt"
  },
  "panels/elements/ClassesPaneWidget.ts | classesSAdded": {
    "message": "{PH1}-Klassen hinzugefügt"
  },
  "panels/elements/ClassesPaneWidget.ts | elementClasses": {
    "message": "Elementklassen"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openCubicBezierEditor": {
    "message": "Editor für kubische Bézierkurve öffnen"
  },
  "panels/elements/ColorSwatchPopoverIcon.ts | openShadowEditor": {
    "message": "Schatten-Editor öffnen"
  },
  "panels/elements/ComputedStyleWidget.ts | filter": {
    "message": "Filtern"
  },
  "panels/elements/ComputedStyleWidget.ts | filterComputedStyles": {
    "message": "Berechnete Stile filtern"
  },
  "panels/elements/ComputedStyleWidget.ts | group": {
    "message": "Gruppieren"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToSelectorSource": {
    "message": "Zur Selector-Quelle gehen"
  },
  "panels/elements/ComputedStyleWidget.ts | navigateToStyle": {
    "message": "Zu „Stil“ gehen"
  },
  "panels/elements/ComputedStyleWidget.ts | noMatchingProperty": {
    "message": "Keine passende Property"
  },
  "panels/elements/ComputedStyleWidget.ts | showAll": {
    "message": "Alle anzeigen"
  },
  "panels/elements/DOMLinkifier.ts | node": {
    "message": "<Knoten>"
  },
  "panels/elements/ElementStatePaneWidget.ts | forceElementState": {
    "message": "Elementstatus erzwingen"
  },
  "panels/elements/ElementStatePaneWidget.ts | toggleElementState": {
    "message": "Elementstatus ein-/ausblenden"
  },
  "panels/elements/ElementsPanel.ts | computed": {
    "message": "Berechnet"
  },
  "panels/elements/ElementsPanel.ts | elementStateS": {
    "message": "Elementstatus: {PH1}"
  },
  "panels/elements/ElementsPanel.ts | findByStringSelectorOrXpath": {
    "message": "Nach Zeichenfolge, Selector oder XPath suchen"
  },
  "panels/elements/ElementsPanel.ts | frame": {
    "message": "Frame"
  },
  "panels/elements/ElementsPanel.ts | hideComputedStylesSidebar": {
    "message": "Seitenleiste mit berechneten Stilen ausblenden"
  },
  "panels/elements/ElementsPanel.ts | nodeCannotBeFoundInTheCurrent": {
    "message": "Knoten kann auf der aktuellen Seite nicht gefunden werden."
  },
  "panels/elements/ElementsPanel.ts | revealInElementsPanel": {
    "message": "Im Elementbereich anzeigen"
  },
  "panels/elements/ElementsPanel.ts | showComputedStylesSidebar": {
    "message": "Seitenleiste mit berechneten Stilen anzeigen"
  },
  "panels/elements/ElementsPanel.ts | styles": {
    "message": "Stile"
  },
  "panels/elements/ElementsPanel.ts | switchToAccessibilityTreeView": {
    "message": "Zur Baumansicht für Barrierefreiheit wechseln"
  },
  "panels/elements/ElementsPanel.ts | switchToDomTreeView": {
    "message": "Zur DOM-Baumansicht wechseln"
  },
  "panels/elements/ElementsPanel.ts | theDeferredDomNodeCouldNotBe": {
    "message": "Der zurückgestellte DOM-Knoten konnte nicht in einen gültigen Knoten aufgelöst werden."
  },
  "panels/elements/ElementsPanel.ts | theRemoteObjectCouldNotBe": {
    "message": "Das Remote-Objekt konnte nicht in einen gültigen Knoten aufgelöst werden."
  },
  "panels/elements/ElementsTreeElement.ts | addAttribute": {
    "message": "Attribut hinzufügen"
  },
  "panels/elements/ElementsTreeElement.ts | captureNodeScreenshot": {
    "message": "Knoten-Screenshot aufnehmen"
  },
  "panels/elements/ElementsTreeElement.ts | children": {
    "message": "Untergeordnete Elemente:"
  },
  "panels/elements/ElementsTreeElement.ts | collapseChildren": {
    "message": "Untergeordnete Elemente minimieren"
  },
  "panels/elements/ElementsTreeElement.ts | copy": {
    "message": "Kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyElement": {
    "message": "Element kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyFullXpath": {
    "message": "Vollständigen XPath kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyJsPath": {
    "message": "JS-Pfad kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyOuterhtml": {
    "message": "outerHTML kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copySelector": {
    "message": "selector kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyStyles": {
    "message": "Stile kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | copyXpath": {
    "message": "XPath kopieren"
  },
  "panels/elements/ElementsTreeElement.ts | cutElement": {
    "message": "Element ausschneiden"
  },
  "panels/elements/ElementsTreeElement.ts | deleteElement": {
    "message": "Element löschen"
  },
  "panels/elements/ElementsTreeElement.ts | disableFlexMode": {
    "message": "Flexiblen Modus deaktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | disableGridMode": {
    "message": "Rastermodus deaktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | disableScrollSnap": {
    "message": "Scroll-Snap-Overlay deaktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | duplicateElement": {
    "message": "Element doppelt vorhanden"
  },
  "panels/elements/ElementsTreeElement.ts | editAsHtml": {
    "message": "Als HTML bearbeiten"
  },
  "panels/elements/ElementsTreeElement.ts | editAttribute": {
    "message": "Attribut bearbeiten"
  },
  "panels/elements/ElementsTreeElement.ts | editText": {
    "message": "Text bearbeiten"
  },
  "panels/elements/ElementsTreeElement.ts | enableFlexMode": {
    "message": "Flexiblen Modus aktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | enableGridMode": {
    "message": "Rastermodus aktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | enableScrollSnap": {
    "message": "Scroll-Snap-Overlay aktivieren"
  },
  "panels/elements/ElementsTreeElement.ts | expandRecursively": {
    "message": "Wiederkehrend maximieren"
  },
  "panels/elements/ElementsTreeElement.ts | focus": {
    "message": "Fokussieren"
  },
  "panels/elements/ElementsTreeElement.ts | forceState": {
    "message": "Status erzwingen"
  },
  "panels/elements/ElementsTreeElement.ts | hideElement": {
    "message": "Element ausblenden"
  },
  "panels/elements/ElementsTreeElement.ts | pasteElement": {
    "message": "Element einfügen"
  },
  "panels/elements/ElementsTreeElement.ts | scrollIntoView": {
    "message": "In die Ansicht hineinscrollen"
  },
  "panels/elements/ElementsTreeElement.ts | showFrameDetails": {
    "message": "Details für iframe anzeigen"
  },
  "panels/elements/ElementsTreeElement.ts | thisFrameWasIdentifiedAsAnAd": {
    "message": "Dieser Frame wurde als Anzeigen-Frame identifiziert"
  },
  "panels/elements/ElementsTreeElement.ts | useSInTheConsoleToReferToThis": {
    "message": "{PH1} in der Konsole verwenden, um auf dieses Element zu verweisen."
  },
  "panels/elements/ElementsTreeElement.ts | valueIsTooLargeToEdit": {
    "message": "<Wert ist zu groß zum Bearbeiten>"
  },
  "panels/elements/ElementsTreeOutline.ts | adornerSettings": {
    "message": "Kennzeicheneinstellungen…"
  },
  "panels/elements/ElementsTreeOutline.ts | pageDom": {
    "message": "Seiten-DOM"
  },
  "panels/elements/ElementsTreeOutline.ts | reveal": {
    "message": "anzeigen"
  },
  "panels/elements/ElementsTreeOutline.ts | showAllNodesDMore": {
    "message": "Alle Knoten anzeigen ({PH1} mehr)"
  },
  "panels/elements/ElementsTreeOutline.ts | storeAsGlobalVariable": {
    "message": "Als globale Variable speichern"
  },
  "panels/elements/EventListenersWidget.ts | all": {
    "message": "Alles"
  },
  "panels/elements/EventListenersWidget.ts | ancestors": {
    "message": "Ancestors"
  },
  "panels/elements/EventListenersWidget.ts | blocking": {
    "message": "Wird blockiert"
  },
  "panels/elements/EventListenersWidget.ts | eventListenersCategory": {
    "message": "Ereignis-Listener-Kategorie"
  },
  "panels/elements/EventListenersWidget.ts | frameworkListeners": {
    "message": "Framework-Listener"
  },
  "panels/elements/EventListenersWidget.ts | passive": {
    "message": "Passiv"
  },
  "panels/elements/EventListenersWidget.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/elements/EventListenersWidget.ts | resolveEventListenersBoundWith": {
    "message": "Auflösen von mit Framework gebundenen Ereignis-Listenern"
  },
  "panels/elements/EventListenersWidget.ts | showListenersOnTheAncestors": {
    "message": "Listener auf den Ancestors anzeigen"
  },
  "panels/elements/MarkerDecorator.ts | domBreakpoint": {
    "message": "DOM-Haltepunkt"
  },
  "panels/elements/MarkerDecorator.ts | elementIsHidden": {
    "message": "Element ist ausgeblendet"
  },
  "panels/elements/NodeStackTraceWidget.ts | noStackTraceAvailable": {
    "message": "Kein Stacktrace verfügbar"
  },
  "panels/elements/PlatformFontsWidget.ts | dGlyphs": {
    "message": "{n,plural, =1{(# Glyphe)}other{(# Glyphen)}}"
  },
  "panels/elements/PlatformFontsWidget.ts | localFile": {
    "message": "Lokale Datei"
  },
  "panels/elements/PlatformFontsWidget.ts | networkResource": {
    "message": "Netzwerkressource"
  },
  "panels/elements/PlatformFontsWidget.ts | renderedFonts": {
    "message": "Gerenderte Schriftarten"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyAllDeclarations": {
    "message": "Alle Deklarationen kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyDeclaration": {
    "message": "Deklaration kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyProperty": {
    "message": "Property kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyRule": {
    "message": "Regel kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "panels/elements/StylePropertyTreeElement.ts | flexboxEditorButton": {
    "message": "flexbox-Editor öffnen"
  },
  "panels/elements/StylePropertyTreeElement.ts | gridEditorButton": {
    "message": "grid-Editor öffnen"
  },
  "panels/elements/StylePropertyTreeElement.ts | openColorPickerS": {
    "message": "Farbauswahl öffnen. {PH1}"
  },
  "panels/elements/StylePropertyTreeElement.ts | revealInSourcesPanel": {
    "message": "Im Quellenbereich anzeigen"
  },
  "panels/elements/StylePropertyTreeElement.ts | shiftClickToChangeColorFormat": {
    "message": "Bei gedrückter Umschalttaste klicken, um das Farbformat zu ändern."
  },
  "panels/elements/StylePropertyTreeElement.ts | togglePropertyAndContinueEditing": {
    "message": "Property umschalten und mit der Bearbeitung fortfahren"
  },
  "panels/elements/StylePropertyTreeElement.ts | valueForSettingSSIsOutsideThe": {
    "message": "Der Wert zum Festlegen von „{PH1}“ {PH2} liegt nicht im unterstützten Bereich [{PH3}, {PH4}] für die Schriftfamilie „{PH5}“."
  },
  "panels/elements/StylePropertyTreeElement.ts | viewComputedValue": {
    "message": "Berechneten Wert ansehen"
  },
  "panels/elements/StylesSidebarPane.ts | constructedStylesheet": {
    "message": "erstelltes Stylesheet"
  },
  "panels/elements/StylesSidebarPane.ts | copyAllDeclarations": {
    "message": "Alle Deklarationen kopieren"
  },
  "panels/elements/StylesSidebarPane.ts | copyRule": {
    "message": "Regel kopieren"
  },
  "panels/elements/StylesSidebarPane.ts | copySelector": {
    "message": "selector kopieren"
  },
  "panels/elements/StylesSidebarPane.ts | filter": {
    "message": "Filtern"
  },
  "panels/elements/StylesSidebarPane.ts | filterStyles": {
    "message": "Stile filtern"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelHundred": {
    "message": "Mit Mausrad oder Auf-/Ab-Tasten erhöhen/verringern. {PH1}: ±100, Umschalttaste: ±10, Alt: ±0,1"
  },
  "panels/elements/StylesSidebarPane.ts | incrementdecrementWithMousewheelOne": {
    "message": "Mit Mausrad oder Auf-/Ab-Tasten erhöhen/verringern. {PH1}: R ±1, Umschalttaste: G ±1, Alt: B ±1"
  },
  "panels/elements/StylesSidebarPane.ts | inheritedFroms": {
    "message": "Übernommen von "
  },
  "panels/elements/StylesSidebarPane.ts | injectedStylesheet": {
    "message": "eingeschleustes Stylesheet"
  },
  "panels/elements/StylesSidebarPane.ts | insertStyleRuleBelow": {
    "message": "Stilregel unten einfügen"
  },
  "panels/elements/StylesSidebarPane.ts | invalidPropertyValue": {
    "message": "Ungültiger Property-Wert"
  },
  "panels/elements/StylesSidebarPane.ts | invalidString": {
    "message": "{PH1}, Property-Name: {PH2}, Property-Wert: {PH3}"
  },
  "panels/elements/StylesSidebarPane.ts | newStyleRule": {
    "message": "Neue Stilregel"
  },
  "panels/elements/StylesSidebarPane.ts | noMatchingSelectorOrStyle": {
    "message": "Kein passender Selector oder Stil gefunden"
  },
  "panels/elements/StylesSidebarPane.ts | pseudoSElement": {
    "message": "Pseudo ::{PH1}-Element"
  },
  "panels/elements/StylesSidebarPane.ts | sattributesStyle": {
    "message": "{PH1}[Attributstil]"
  },
  "panels/elements/StylesSidebarPane.ts | showAllPropertiesSMore": {
    "message": "Alle Properties anzeigen ({PH1} mehr)"
  },
  "panels/elements/StylesSidebarPane.ts | styleAttribute": {
    "message": "Attribut „style“"
  },
  "panels/elements/StylesSidebarPane.ts | unknownPropertyName": {
    "message": "Unbekannter Property-Name"
  },
  "panels/elements/StylesSidebarPane.ts | userAgentStylesheet": {
    "message": "User-Agent-Stylesheet"
  },
  "panels/elements/StylesSidebarPane.ts | viaInspector": {
    "message": "über den Inspector"
  },
  "panels/elements/components/AccessibilityTreeUtils.ts | ignored": {
    "message": "Ignoriert"
  },
  "panels/elements/components/AdornerSettingsPane.ts | closeButton": {
    "message": "Schließen"
  },
  "panels/elements/components/AdornerSettingsPane.ts | settingsTitle": {
    "message": "Kennzeichen anzeigen"
  },
  "panels/elements/components/ElementsBreadcrumbsUtils.ts | text": {
    "message": "(Text)"
  },
  "panels/elements/components/LayoutPane.ts | feedback": {
    "message": "Feedback"
  },
  "panels/elements/components/LayoutPane.ts | flexbox": {
    "message": "Flexbox"
  },
  "panels/elements/components/LayoutPane.ts | flexboxOverlays": {
    "message": "Flexbox-Overlays"
  },
  "panels/elements/components/LayoutPane.ts | grid": {
    "message": "Raster"
  },
  "panels/elements/components/LayoutPane.ts | gridOverlays": {
    "message": "Raster-Overlays"
  },
  "panels/elements/components/LayoutPane.ts | noFlexboxLayoutsFoundOnThisPage": {
    "message": "Keine Flexbox-Layouts auf dieser Seite gefunden"
  },
  "panels/elements/components/LayoutPane.ts | noGridLayoutsFoundOnThisPage": {
    "message": "Keine Raster-Layouts auf dieser Seite gefunden"
  },
  "panels/elements/components/LayoutPane.ts | overlayDisplaySettings": {
    "message": "Overlay-Displayeinstellungen"
  },
  "panels/elements/components/LayoutPane.ts | showElementInTheElementsPanel": {
    "message": "Element im Elementbereich anzeigen"
  },
  "panels/elements/components/StylePropertyEditor.ts | deselectButton": {
    "message": "{propertyName} entfernen: {propertyValue}"
  },
  "panels/elements/components/StylePropertyEditor.ts | selectButton": {
    "message": "{propertyName} hinzufügen: {propertyValue}"
  },
  "panels/elements/elements-meta.ts | captureAreaScreenshot": {
    "message": "Screenshot vom Bereich aufnehmen"
  },
  "panels/elements/elements-meta.ts | copyStyles": {
    "message": "Stile kopieren"
  },
  "panels/elements/elements-meta.ts | disableDomWordWrap": {
    "message": "DOM-Zeilenumbruch deaktivieren"
  },
  "panels/elements/elements-meta.ts | duplicateElement": {
    "message": "Element doppelt vorhanden"
  },
  "panels/elements/elements-meta.ts | editAsHtml": {
    "message": "Als HTML bearbeiten"
  },
  "panels/elements/elements-meta.ts | elements": {
    "message": "Elemente"
  },
  "panels/elements/elements-meta.ts | enableDomWordWrap": {
    "message": "Zeilenumbruch für DOM aktivieren"
  },
  "panels/elements/elements-meta.ts | eventListeners": {
    "message": "Ereignis-Listener"
  },
  "panels/elements/elements-meta.ts | hideElement": {
    "message": "Element ausblenden"
  },
  "panels/elements/elements-meta.ts | hideHtmlComments": {
    "message": "HTML Kommentare ausblenden"
  },
  "panels/elements/elements-meta.ts | layout": {
    "message": "Layout"
  },
  "panels/elements/elements-meta.ts | properties": {
    "message": "Eigenschaften"
  },
  "panels/elements/elements-meta.ts | redo": {
    "message": "Wiederholen"
  },
  "panels/elements/elements-meta.ts | revealDomNodeOnHover": {
    "message": "DOM-Knoten anzeigen, wenn der Mauszeiger darüber bewegt wird"
  },
  "panels/elements/elements-meta.ts | selectAnElementInThePageTo": {
    "message": "Element auf der Seite auswählen, um es zu prüfen"
  },
  "panels/elements/elements-meta.ts | showDetailedInspectTooltip": {
    "message": "Detaillierte Kurzinfo „Inspizieren“ anzeigen"
  },
  "panels/elements/elements-meta.ts | showElements": {
    "message": "Elemente anzeigen"
  },
  "panels/elements/elements-meta.ts | showEventListeners": {
    "message": "Ereignis-Listener anzeigen"
  },
  "panels/elements/elements-meta.ts | showHtmlComments": {
    "message": "HTML Kommentare anzeigen"
  },
  "panels/elements/elements-meta.ts | showLayout": {
    "message": "Layout anzeigen"
  },
  "panels/elements/elements-meta.ts | showProperties": {
    "message": "Properties anzeigen"
  },
  "panels/elements/elements-meta.ts | showStackTrace": {
    "message": "Stacktrace anzeigen"
  },
  "panels/elements/elements-meta.ts | stackTrace": {
    "message": "Stacktrace"
  },
  "panels/elements/elements-meta.ts | undo": {
    "message": "Rückgängig machen"
  },
  "panels/elements/elements-meta.ts | wordWrap": {
    "message": "Zeilenumbruch"
  },
  "panels/emulation/DeviceModeModel.ts | devicePixelRatioMustBeANumberOr": {
    "message": "Das Pixel-Verhältnis des Geräts muss eine Zahl oder leer sein."
  },
  "panels/emulation/DeviceModeModel.ts | devicePixelRatioMustBeGreater": {
    "message": "Das Pixel-Verhältnis des Geräts muss größer oder gleich {PH1} sein."
  },
  "panels/emulation/DeviceModeModel.ts | devicePixelRatioMustBeLessThanOr": {
    "message": "Das Pixel-Verhältnis des Geräts muss kleiner oder gleich {PH1} sein."
  },
  "panels/emulation/DeviceModeModel.ts | heightMustBeANumber": {
    "message": "Die Höhe muss eine Zahl sein."
  },
  "panels/emulation/DeviceModeModel.ts | heightMustBeGreaterThanOrEqualTo": {
    "message": "Höhe muss größer als oder gleich {PH1} sein."
  },
  "panels/emulation/DeviceModeModel.ts | heightMustBeLessThanOrEqualToS": {
    "message": "Höhe muss kleiner als oder gleich {PH1} sein."
  },
  "panels/emulation/DeviceModeModel.ts | widthMustBeANumber": {
    "message": "Die Breite muss eine Zahl sein."
  },
  "panels/emulation/DeviceModeModel.ts | widthMustBeGreaterThanOrEqualToS": {
    "message": "Breite muss größer als oder gleich {PH1} sein."
  },
  "panels/emulation/DeviceModeModel.ts | widthMustBeLessThanOrEqualToS": {
    "message": "Breite muss kleiner als oder gleich {PH1} sein."
  },
  "panels/emulation/DeviceModeToolbar.ts | addDevicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts hinzufügen"
  },
  "panels/emulation/DeviceModeToolbar.ts | addDeviceType": {
    "message": "Gerätetyp hinzufügen"
  },
  "panels/emulation/DeviceModeToolbar.ts | autoadjustZoom": {
    "message": "Zoom automatisch anpassen"
  },
  "panels/emulation/DeviceModeToolbar.ts | closeDevtools": {
    "message": "Entwicklertools schließen"
  },
  "panels/emulation/DeviceModeToolbar.ts | defaultF": {
    "message": "Standard: {PH1}"
  },
  "panels/emulation/DeviceModeToolbar.ts | devicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts"
  },
  "panels/emulation/DeviceModeToolbar.ts | deviceType": {
    "message": "Gerätetyp"
  },
  "panels/emulation/DeviceModeToolbar.ts | edit": {
    "message": "Bearbeiten…"
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeature": {
    "message": "Experimental Web Platform Feature-Flag ist aktiviert. Zum Deaktivieren darauf klicken."
  },
  "panels/emulation/DeviceModeToolbar.ts | experimentalWebPlatformFeatureFlag": {
    "message": "Experimental Web Platform Feature-Flag ist deaktiviert. Zum Aktivieren darauf klicken."
  },
  "panels/emulation/DeviceModeToolbar.ts | fitToWindowF": {
    "message": "An Fenster anpassen ({PH1} %)"
  },
  "panels/emulation/DeviceModeToolbar.ts | heightLeaveEmptyForFull": {
    "message": "Höhe (für volle Höhe leer lassen)"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideDeviceFrame": {
    "message": "Geräterahmen ausblenden"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideMediaQueries": {
    "message": "Medienabfragen ausblenden"
  },
  "panels/emulation/DeviceModeToolbar.ts | hideRulers": {
    "message": "Lineale ausblenden"
  },
  "panels/emulation/DeviceModeToolbar.ts | landscape": {
    "message": "Querformat"
  },
  "panels/emulation/DeviceModeToolbar.ts | moreOptions": {
    "message": "Weitere Optionen"
  },
  "panels/emulation/DeviceModeToolbar.ts | none": {
    "message": "Keiner"
  },
  "panels/emulation/DeviceModeToolbar.ts | portrait": {
    "message": "Porträt"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDevicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts entfernen"
  },
  "panels/emulation/DeviceModeToolbar.ts | removeDeviceType": {
    "message": "Gerätetyp entfernen"
  },
  "panels/emulation/DeviceModeToolbar.ts | resetToDefaults": {
    "message": "Auf Standardeinstellungen zurücksetzen"
  },
  "panels/emulation/DeviceModeToolbar.ts | responsive": {
    "message": "Reagiert schnell"
  },
  "panels/emulation/DeviceModeToolbar.ts | rotate": {
    "message": "Drehen"
  },
  "panels/emulation/DeviceModeToolbar.ts | screenOrientationOptions": {
    "message": "Optionen für die Bildschirmausrichtung"
  },
  "panels/emulation/DeviceModeToolbar.ts | showDeviceFrame": {
    "message": "Geräterahmen anzeigen"
  },
  "panels/emulation/DeviceModeToolbar.ts | showMediaQueries": {
    "message": "Medienabfragen anzeigen"
  },
  "panels/emulation/DeviceModeToolbar.ts | showRulers": {
    "message": "Führungslinien anzeigen"
  },
  "panels/emulation/DeviceModeToolbar.ts | toggleDualscreenMode": {
    "message": "Dual-Screen-Modus umschalten"
  },
  "panels/emulation/DeviceModeToolbar.ts | width": {
    "message": "Breite"
  },
  "panels/emulation/DeviceModeToolbar.ts | zoom": {
    "message": "Zoom"
  },
  "panels/emulation/DeviceModeView.ts | doubleclickForFullHeight": {
    "message": "Klicken Sie doppelt, um die volle Höhe anzuzeigen"
  },
  "panels/emulation/DeviceModeView.ts | laptop": {
    "message": "Laptop"
  },
  "panels/emulation/DeviceModeView.ts | laptopL": {
    "message": "Laptop L"
  },
  "panels/emulation/DeviceModeView.ts | mobileL": {
    "message": "Mobile L"
  },
  "panels/emulation/DeviceModeView.ts | mobileM": {
    "message": "Mobile M"
  },
  "panels/emulation/DeviceModeView.ts | mobileS": {
    "message": "Mobile S"
  },
  "panels/emulation/DeviceModeView.ts | tablet": {
    "message": "Tablet"
  },
  "panels/emulation/DevicesSettingsTab.ts | UABrands": {
    "message": "UA-Markenliste (z. B. \"Chromium\";v=\"87\")"
  },
  "panels/emulation/DevicesSettingsTab.ts | addCustomDevice": {
    "message": "Benutzerdefiniertes Gerät hinzufügen…"
  },
  "panels/emulation/DevicesSettingsTab.ts | architecture": {
    "message": "Architektur (z. B. x86)"
  },
  "panels/emulation/DevicesSettingsTab.ts | brandsList": {
    "message": "Die Markenliste ist keine gültige strukturierte Feldliste."
  },
  "panels/emulation/DevicesSettingsTab.ts | brandsListMust": {
    "message": "Die Markenliste muss aus Strings bestehen, die jeweils einen v-Parameter mit einem String-Wert enthalten."
  },
  "panels/emulation/DevicesSettingsTab.ts | device": {
    "message": "Gerät"
  },
  "panels/emulation/DevicesSettingsTab.ts | deviceModel": {
    "message": "Gerätemodell"
  },
  "panels/emulation/DevicesSettingsTab.ts | deviceName": {
    "message": "Gerätename"
  },
  "panels/emulation/DevicesSettingsTab.ts | deviceNameCannotBeEmpty": {
    "message": "Der Gerätename darf nicht leer sein."
  },
  "panels/emulation/DevicesSettingsTab.ts | deviceNameMustBeLessThanS": {
    "message": "Für den Gerätenamen sind maximal {PH1} Zeichen zulässig."
  },
  "panels/emulation/DevicesSettingsTab.ts | devicePixelRatio": {
    "message": "Pixel-Verhältnis des Geräts"
  },
  "panels/emulation/DevicesSettingsTab.ts | emulatedDevices": {
    "message": "Emulierte Geräte"
  },
  "panels/emulation/DevicesSettingsTab.ts | fullBrowserVersion": {
    "message": "Volle Browserversion (z. B. 87.0.4280.88)"
  },
  "panels/emulation/DevicesSettingsTab.ts | height": {
    "message": "Höhe"
  },
  "panels/emulation/DevicesSettingsTab.ts | notRepresentable": {
    "message": "Nicht als strukturierter Header-String darstellbar."
  },
  "panels/emulation/DevicesSettingsTab.ts | platform": {
    "message": "Plattform (z. B. Android)"
  },
  "panels/emulation/DevicesSettingsTab.ts | platformVersion": {
    "message": "Plattformversion"
  },
  "panels/emulation/DevicesSettingsTab.ts | userAgentClient": {
    "message": "User-Agent-Client-Hints"
  },
  "panels/emulation/DevicesSettingsTab.ts | userAgentClientHintsAre": {
    "message": "User-Agent-Client-Hinweise sind eine Alternative zum User-Agent-String, die den Browser und das Gerät auf strukturiertere Weise identifizieren und dabei die Privatsphäre besser wahren. Klicken Sie auf die Schaltfläche, um weitere Informationen zu erhalten."
  },
  "panels/emulation/DevicesSettingsTab.ts | userAgentString": {
    "message": "User-Agent-String"
  },
  "panels/emulation/DevicesSettingsTab.ts | userAgentType": {
    "message": "User-Agent-Typ"
  },
  "panels/emulation/DevicesSettingsTab.ts | width": {
    "message": "Breite"
  },
  "panels/emulation/EmulatedDevices.ts | laptopWithHiDPIScreen": {
    "message": "Laptop mit HiDPI-Bildschirm"
  },
  "panels/emulation/EmulatedDevices.ts | laptopWithMDPIScreen": {
    "message": "Laptop mit MDPI-Bildschirm"
  },
  "panels/emulation/EmulatedDevices.ts | laptopWithTouch": {
    "message": "Laptop mit Touchfunktion"
  },
  "panels/emulation/LocationsSettingsTab.ts | addLocation": {
    "message": "Speicherort hinzufügen..."
  },
  "panels/emulation/LocationsSettingsTab.ts | customLocations": {
    "message": "Benutzerdefinierte Standorte"
  },
  "panels/emulation/LocationsSettingsTab.ts | lat": {
    "message": "Breitengrad"
  },
  "panels/emulation/LocationsSettingsTab.ts | latitude": {
    "message": "Breitengrad"
  },
  "panels/emulation/LocationsSettingsTab.ts | latitudeMustBeANumber": {
    "message": "Breitengrad muss eine Zahl sein"
  },
  "panels/emulation/LocationsSettingsTab.ts | latitudeMustBeGreaterThanOrEqual": {
    "message": "Breitengrad muss größer als oder gleich {PH1} sein."
  },
  "panels/emulation/LocationsSettingsTab.ts | latitudeMustBeLessThanOrEqualToS": {
    "message": "Breitengrad muss kleiner als oder gleich {PH1} sein."
  },
  "panels/emulation/LocationsSettingsTab.ts | locale": {
    "message": "Sprache"
  },
  "panels/emulation/LocationsSettingsTab.ts | localeMustContainAlphabetic": {
    "message": "Sprache muss alphabetische Zeichen enthalten"
  },
  "panels/emulation/LocationsSettingsTab.ts | locationName": {
    "message": "Standortname"
  },
  "panels/emulation/LocationsSettingsTab.ts | locationNameCannotBeEmpty": {
    "message": "Standortname darf nicht leer sein"
  },
  "panels/emulation/LocationsSettingsTab.ts | locationNameMustBeLessThanS": {
    "message": "Für den Standortnamen sind maximal {PH1} Zeichen zulässig"
  },
  "panels/emulation/LocationsSettingsTab.ts | long": {
    "message": "Längengrad"
  },
  "panels/emulation/LocationsSettingsTab.ts | longitude": {
    "message": "Längengrad"
  },
  "panels/emulation/LocationsSettingsTab.ts | longitudeMustBeANumber": {
    "message": "Längengrad muss eine Zahl sein"
  },
  "panels/emulation/LocationsSettingsTab.ts | longitudeMustBeGreaterThanOr": {
    "message": "Längengrad muss größer als oder gleich {PH1} sein."
  },
  "panels/emulation/LocationsSettingsTab.ts | longitudeMustBeLessThanOrEqualTo": {
    "message": "Längengrad muss kleiner als oder gleich {PH1} sein"
  },
  "panels/emulation/LocationsSettingsTab.ts | timezoneId": {
    "message": "Zeitzonen-ID"
  },
  "panels/emulation/LocationsSettingsTab.ts | timezoneIdMustContainAlphabetic": {
    "message": "Zeitzonen-ID muss alphabetische Zeichen enthalten"
  },
  "panels/emulation/MediaQueryInspector.ts | revealInSourceCode": {
    "message": "Im Quellcode anzeigen"
  },
  "panels/emulation/ModuleUIStrings.ts | laptopWithHiDPI": {
    "message": "Laptop mit HiDPI-Bildschirm"
  },
  "panels/emulation/ModuleUIStrings.ts | laptopWithMDPI": {
    "message": "Laptop mit MDPI-Bildschirm"
  },
  "panels/emulation/ModuleUIStrings.ts | laptopWithTouch": {
    "message": "Laptop mit Touchfunktion"
  },
  "panels/emulation/SensorsView.ts | adjustWithMousewheelOrUpdownKeys": {
    "message": "Mit Mausrad oder Auf/Ab-Tasten anpassen. {PH1}: ±10, Umschalttaste: ±1, Alt: ±0,01"
  },
  "panels/emulation/SensorsView.ts | alpha": {
    "message": "α (Alpha)"
  },
  "panels/emulation/SensorsView.ts | beta": {
    "message": "β (Beta)"
  },
  "panels/emulation/SensorsView.ts | customOrientation": {
    "message": "Benutzerdefinierte Ausrichtung"
  },
  "panels/emulation/SensorsView.ts | deviceOrientationSetToAlphaSBeta": {
    "message": "Geräteausrichtung auf Alpha: {PH1}, Beta: {PH2}, Gamma: {PH3} gesetzt"
  },
  "panels/emulation/SensorsView.ts | displayDown": {
    "message": "Display unten"
  },
  "panels/emulation/SensorsView.ts | displayUp": {
    "message": "Display oben"
  },
  "panels/emulation/SensorsView.ts | enableOrientationToRotate": {
    "message": "Ausrichtungsrotierung aktivieren"
  },
  "panels/emulation/SensorsView.ts | error": {
    "message": "Fehler"
  },
  "panels/emulation/SensorsView.ts | forcesSelectedIdleStateEmulation": {
    "message": "Emulierung des gewählten inaktiven Status erzwingen"
  },
  "panels/emulation/SensorsView.ts | forcesTouchInsteadOfClick": {
    "message": "Tippen statt klicken erzwingen"
  },
  "panels/emulation/SensorsView.ts | gamma": {
    "message": "γ (Gamma)"
  },
  "panels/emulation/SensorsView.ts | landscapeLeft": {
    "message": "Querformat nach links"
  },
  "panels/emulation/SensorsView.ts | landscapeRight": {
    "message": "Querformat nach rechts"
  },
  "panels/emulation/SensorsView.ts | latitude": {
    "message": "Breitengrad"
  },
  "panels/emulation/SensorsView.ts | locale": {
    "message": "Sprache"
  },
  "panels/emulation/SensorsView.ts | location": {
    "message": "Standort"
  },
  "panels/emulation/SensorsView.ts | locationUnavailable": {
    "message": "Standort nicht verfügbar"
  },
  "panels/emulation/SensorsView.ts | longitude": {
    "message": "Längengrad"
  },
  "panels/emulation/SensorsView.ts | manage": {
    "message": "Verwalten"
  },
  "panels/emulation/SensorsView.ts | manageTheListOfLocations": {
    "message": "Standortliste verwalten"
  },
  "panels/emulation/SensorsView.ts | noOverride": {
    "message": "Nicht überschreiben"
  },
  "panels/emulation/SensorsView.ts | off": {
    "message": "Aus"
  },
  "panels/emulation/SensorsView.ts | orientation": {
    "message": "Ausrichtung"
  },
  "panels/emulation/SensorsView.ts | other": {
    "message": "Sonstige…"
  },
  "panels/emulation/SensorsView.ts | overrides": {
    "message": "Überschreibungen"
  },
  "panels/emulation/SensorsView.ts | portrait": {
    "message": "Hochformat"
  },
  "panels/emulation/SensorsView.ts | portraitUpsideDown": {
    "message": "Hochformat um 180° gedreht"
  },
  "panels/emulation/SensorsView.ts | presets": {
    "message": "Voreinstellungen"
  },
  "panels/emulation/SensorsView.ts | reset": {
    "message": "Zurücksetzen"
  },
  "panels/emulation/SensorsView.ts | resetDeviceOrientation": {
    "message": "Ausrichtung des Geräts zurücksetzen"
  },
  "panels/emulation/SensorsView.ts | shiftdragHorizontallyToRotate": {
    "message": "Zum Drehen um die y-Achse mit gedrückter Umschalttaste horizontal ziehen"
  },
  "panels/emulation/SensorsView.ts | timezoneId": {
    "message": "Zeitzonen-ID"
  },
  "panels/emulation/emulation-meta.ts | accelerometer": {
    "message": "Beschleunigungsmesser"
  },
  "panels/emulation/emulation-meta.ts | captureFullSizeScreenshot": {
    "message": "Screenshot in voller Größe aufnehmen"
  },
  "panels/emulation/emulation-meta.ts | captureNodeScreenshot": {
    "message": "Knoten-Screenshot aufnehmen"
  },
  "panels/emulation/emulation-meta.ts | captureScreenshot": {
    "message": "Screenshot erstellen"
  },
  "panels/emulation/emulation-meta.ts | device": {
    "message": "Gerät"
  },
  "panels/emulation/emulation-meta.ts | deviceOrientation": {
    "message": "Ausrichtung des Geräts"
  },
  "panels/emulation/emulation-meta.ts | devicebased": {
    "message": "Gerätebasiert"
  },
  "panels/emulation/emulation-meta.ts | devices": {
    "message": "Geräte"
  },
  "panels/emulation/emulation-meta.ts | emulateIdleDetectorState": {
    "message": "Zustand des inaktiven Detektors emulieren"
  },
  "panels/emulation/emulation-meta.ts | forceEnabled": {
    "message": "Aktivierung erzwingen"
  },
  "panels/emulation/emulation-meta.ts | geolocation": {
    "message": "Standortbestimmung"
  },
  "panels/emulation/emulation-meta.ts | hideDeviceFrame": {
    "message": "Geräterahmen ausblenden"
  },
  "panels/emulation/emulation-meta.ts | hideMediaQueries": {
    "message": "Medienabfragen ausblenden"
  },
  "panels/emulation/emulation-meta.ts | hideRulers": {
    "message": "Lineale ausblenden"
  },
  "panels/emulation/emulation-meta.ts | locale": {
    "message": "Sprache"
  },
  "panels/emulation/emulation-meta.ts | locales": {
    "message": "Sprachen"
  },
  "panels/emulation/emulation-meta.ts | locations": {
    "message": "Orte"
  },
  "panels/emulation/emulation-meta.ts | noIdleEmulation": {
    "message": "Keine Emulation in inaktivem Zustand"
  },
  "panels/emulation/emulation-meta.ts | sensors": {
    "message": "Sensoren"
  },
  "panels/emulation/emulation-meta.ts | showDeviceFrame": {
    "message": "Geräterahmen anzeigen"
  },
  "panels/emulation/emulation-meta.ts | showDevices": {
    "message": "Geräte anzeigen"
  },
  "panels/emulation/emulation-meta.ts | showLocations": {
    "message": "Standorte anzeigen"
  },
  "panels/emulation/emulation-meta.ts | showMediaQueries": {
    "message": "Medienabfragen anzeigen"
  },
  "panels/emulation/emulation-meta.ts | showRulers": {
    "message": "Führungslinien anzeigen"
  },
  "panels/emulation/emulation-meta.ts | showSensors": {
    "message": "Sensoren anzeigen"
  },
  "panels/emulation/emulation-meta.ts | timezones": {
    "message": "Zeitzonen"
  },
  "panels/emulation/emulation-meta.ts | toggleDeviceToolbar": {
    "message": "Gerätesymbolleiste ein- und ausblenden"
  },
  "panels/emulation/emulation-meta.ts | touch": {
    "message": "Tippen"
  },
  "panels/emulation/emulation-meta.ts | userActiveScreenLocked": {
    "message": "Nutzer aktiv, Bildschirm gesperrt"
  },
  "panels/emulation/emulation-meta.ts | userActiveScreenUnlocked": {
    "message": "Nutzer aktiv, Bildschirm entsperrt"
  },
  "panels/emulation/emulation-meta.ts | userIdleScreenLocked": {
    "message": "Nutzer inaktiv, Bildschirm gesperrt"
  },
  "panels/emulation/emulation-meta.ts | userIdleScreenUnlocked": {
    "message": "Nutzer inaktiv, Bildschirm entsperrt"
  },
  "panels/event_listeners/EventListenersView.ts | deleteEventListener": {
    "message": "Ereignis-Listener löschen"
  },
  "panels/event_listeners/EventListenersView.ts | noEventListeners": {
    "message": "Keine Ereignis-Listener"
  },
  "panels/event_listeners/EventListenersView.ts | passive": {
    "message": "Passiv"
  },
  "panels/event_listeners/EventListenersView.ts | remove": {
    "message": "Entfernen"
  },
  "panels/event_listeners/EventListenersView.ts | revealInElementsPanel": {
    "message": "Im Elementbereich anzeigen"
  },
  "panels/event_listeners/EventListenersView.ts | togglePassive": {
    "message": "Passiv ein-/ausschalten"
  },
  "panels/event_listeners/EventListenersView.ts | toggleWhetherEventListenerIs": {
    "message": "Schalter zum Einstellen, ob der Ereignis-Listener passiv oder blockierend sein soll"
  },
  "panels/help/ReleaseNoteView.ts | close": {
    "message": "Schließen"
  },
  "panels/help/ReleaseNoteView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/help/help-meta.ts | bug": {
    "message": "Fehler"
  },
  "panels/help/help-meta.ts | doNotShowWhatsNewAfterEachUpdate": {
    "message": "Neuigkeiten nicht nach jedem Update anzeigen"
  },
  "panels/help/help-meta.ts | releaseNotes": {
    "message": "Versionshinweise"
  },
  "panels/help/help-meta.ts | reportADevtoolsIssue": {
    "message": "DevTools-Problem melden"
  },
  "panels/help/help-meta.ts | showWhatsNew": {
    "message": "Neuigkeiten anzeigen"
  },
  "panels/help/help-meta.ts | showWhatsNewAfterEachUpdate": {
    "message": "Neuigkeiten nach jedem Update anzeigen"
  },
  "panels/help/help-meta.ts | whatsNew": {
    "message": "Neue Funktionen"
  },
  "panels/input/InputTimeline.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/input/InputTimeline.ts | loadProfile": {
    "message": "Profil laden…"
  },
  "panels/input/InputTimeline.ts | saveProfile": {
    "message": "Profil speichern…"
  },
  "panels/input/input-meta.ts | inputs": {
    "message": "Eingaben"
  },
  "panels/input/input-meta.ts | pause": {
    "message": "Pausieren"
  },
  "panels/input/input-meta.ts | resume": {
    "message": "Fortsetzen"
  },
  "panels/input/input-meta.ts | showInputs": {
    "message": "Eingaben anzeigen"
  },
  "panels/input/input-meta.ts | startRecording": {
    "message": "Aufnahme starten"
  },
  "panels/input/input-meta.ts | startReplaying": {
    "message": "Erneute Wiedergabe starten"
  },
  "panels/input/input-meta.ts | stopRecording": {
    "message": "Aufnahme beenden"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | blockedResource": {
    "message": "Blockierte Ressource"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | nRequests": {
    "message": "{n,plural, =1{# Anfrage}other{# Anfragen}}"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | parentFrame": {
    "message": "Übergeordneter Frame"
  },
  "panels/issues/AffectedBlockedByResponseView.ts | requestC": {
    "message": "Anfrage"
  },
  "panels/issues/AffectedCookiesView.ts | domain": {
    "message": "Domain"
  },
  "panels/issues/AffectedCookiesView.ts | nCookies": {
    "message": "{n,plural, =1{# Cookie}other{# Cookies}}"
  },
  "panels/issues/AffectedCookiesView.ts | name": {
    "message": "Name"
  },
  "panels/issues/AffectedCookiesView.ts | path": {
    "message": "Pfad"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | documentInTheDOMTree": {
    "message": "Dokument im DOM-Baum"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | mode": {
    "message": "Modus"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | nDocuments": {
    "message": "{n,plural, =1{ Dokument}other{ Dokumente}}"
  },
  "panels/issues/AffectedDocumentsInQuirksModeView.ts | url": {
    "message": "URL"
  },
  "panels/issues/AffectedElementsView.ts | nElements": {
    "message": "{n,plural, =1{# Element}other{# Elemente}}"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | contrastRatio": {
    "message": "Kontrastverhältnis"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | element": {
    "message": "Element"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAA": {
    "message": "Mindestverhältnis AA"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | minimumAAA": {
    "message": "Mindestverhältnis AAA"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textSize": {
    "message": "Textgröße"
  },
  "panels/issues/AffectedElementsWithLowContrastView.ts | textWeight": {
    "message": "Schriftstärke"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuPeakLimit": {
    "message": "CPU-Spitzenbegrenzung"
  },
  "panels/issues/AffectedHeavyAdView.ts | cpuTotalLimit": {
    "message": "CPU-Limit gesamt"
  },
  "panels/issues/AffectedHeavyAdView.ts | frameUrl": {
    "message": "Frame-URL"
  },
  "panels/issues/AffectedHeavyAdView.ts | limitExceeded": {
    "message": "Limit überschritten"
  },
  "panels/issues/AffectedHeavyAdView.ts | nResources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/issues/AffectedHeavyAdView.ts | networkLimit": {
    "message": "Netzwerklimit"
  },
  "panels/issues/AffectedHeavyAdView.ts | removed": {
    "message": "Entfernt"
  },
  "panels/issues/AffectedHeavyAdView.ts | resolutionStatus": {
    "message": "Lösungsstatus"
  },
  "panels/issues/AffectedHeavyAdView.ts | warned": {
    "message": "Gewarnt"
  },
  "panels/issues/AffectedResourcesView.ts | clickToRevealTheFramesDomNodeIn": {
    "message": "Klicken Sie, um den DOM-Knoten des Frames im Elementbereich anzuzeigen"
  },
  "panels/issues/AffectedResourcesView.ts | clickToShowRequestInTheNetwork": {
    "message": "Zum Anzeigen der Anfrage im Netzwerkbereich klicken"
  },
  "panels/issues/AffectedResourcesView.ts | requestUnavailableInTheNetwork": {
    "message": "Anforderung im Netzwerk-Steuerfeld nicht verfügbar; versuchen Sie, die geprüfte Seite zu aktualisieren"
  },
  "panels/issues/AffectedResourcesView.ts | unknown": {
    "message": "Unbekannt"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | aSharedarraybufferWas": {
    "message": "Ein SharedArrayBuffer wurde in einem Kontext instanziiert, der nicht ursprungsübergreifend isoliert ist"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | blocked": {
    "message": "blockiert"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | instantiation": {
    "message": "Instanziierung"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | nViolations": {
    "message": "{n,plural, =1{# Verstoß}other{# Verstöße}}"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sharedarraybufferWasTransferedTo": {
    "message": "SharedArrayBuffer wurde an einen Kontext übertragen, der nicht ursprungsübergreifend isoliert ist"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | sourceLocation": {
    "message": "Quellort"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | status": {
    "message": "Status"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | transfer": {
    "message": "Übertragung"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | trigger": {
    "message": "Auslöser"
  },
  "panels/issues/AffectedSharedArrayBufferIssueDetailsView.ts | warning": {
    "message": "Warnung"
  },
  "panels/issues/AffectedTrustedWebActivityIssueDetailsView.ts | nResources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/issues/AffectedTrustedWebActivityIssueDetailsView.ts | packageName": {
    "message": "Paketname"
  },
  "panels/issues/AffectedTrustedWebActivityIssueDetailsView.ts | packageSignature": {
    "message": "Paketsignatur"
  },
  "panels/issues/AffectedTrustedWebActivityIssueDetailsView.ts | statusCode": {
    "message": "Statuscode"
  },
  "panels/issues/AffectedTrustedWebActivityIssueDetailsView.ts | url": {
    "message": "URL"
  },
  "panels/issues/CSPViolationsView.ts | filter": {
    "message": "Filtern"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowCredentialsValueFromHeader": {
    "message": "Access-Control-Allow-Credentials Headerwert"
  },
  "panels/issues/CorsIssueDetailsView.ts | allowedOrigin": {
    "message": "Zulässiger Ursprung (vom Header)"
  },
  "panels/issues/CorsIssueDetailsView.ts | blocked": {
    "message": "blockiert"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestHeader": {
    "message": "Unzulässiger Anfrageheader"
  },
  "panels/issues/CorsIssueDetailsView.ts | disallowedRequestMethod": {
    "message": "Unzulässige Anfragemethode"
  },
  "panels/issues/CorsIssueDetailsView.ts | header": {
    "message": "Header"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorAddressSpace": {
    "message": "Initiator-Adresse"
  },
  "panels/issues/CorsIssueDetailsView.ts | initiatorContext": {
    "message": "Initiator-Kontext"
  },
  "panels/issues/CorsIssueDetailsView.ts | insecure": {
    "message": "unsicher"
  },
  "panels/issues/CorsIssueDetailsView.ts | invalidValue": {
    "message": "Ungültiger Wert (soweit zutreffend)"
  },
  "panels/issues/CorsIssueDetailsView.ts | nRequests": {
    "message": "{n,plural, =1{# Anfrage}other{# Anfragen}}"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightDisallowedRedirect": {
    "message": "Antwort auf Preflight war eine Weiterleitung"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightInvalidStatus": {
    "message": "HTTP-Status der Preflight-Anfrage war nicht erfolgreich"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequest": {
    "message": "Preflight-Anfrage"
  },
  "panels/issues/CorsIssueDetailsView.ts | preflightRequestIfProblematic": {
    "message": "Preflight-Anfrage (sofern problematisch)"
  },
  "panels/issues/CorsIssueDetailsView.ts | problem": {
    "message": "Problem"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemInvalidValue": {
    "message": "Ungültiger Wert"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMissingHeader": {
    "message": "Fehlender Header"
  },
  "panels/issues/CorsIssueDetailsView.ts | problemMultipleValues": {
    "message": "Mehrere Werte"
  },
  "panels/issues/CorsIssueDetailsView.ts | request": {
    "message": "Anfrage"
  },
  "panels/issues/CorsIssueDetailsView.ts | resourceAddressSpace": {
    "message": "Ressourcenadresse"
  },
  "panels/issues/CorsIssueDetailsView.ts | secure": {
    "message": "sicher"
  },
  "panels/issues/CorsIssueDetailsView.ts | sourceLocation": {
    "message": "Quellort"
  },
  "panels/issues/CorsIssueDetailsView.ts | status": {
    "message": "Status"
  },
  "panels/issues/CorsIssueDetailsView.ts | unsupportedScheme": {
    "message": "Nicht unterstütztes Schema"
  },
  "panels/issues/CorsIssueDetailsView.ts | warning": {
    "message": "Warnung"
  },
  "panels/issues/IssueView.ts | affectedResources": {
    "message": "Betroffene Ressourcen"
  },
  "panels/issues/IssueView.ts | automaticallyUpgraded": {
    "message": "automatisch aktualisiert"
  },
  "panels/issues/IssueView.ts | blocked": {
    "message": "blockiert"
  },
  "panels/issues/IssueView.ts | clickToRevealTheViolatingDomNode": {
    "message": "Klicken Sie, um den richtlinienverletzenden DOM-Knoten im Elementbereich anzuzeigen"
  },
  "panels/issues/IssueView.ts | directiveC": {
    "message": "Anweisung"
  },
  "panels/issues/IssueView.ts | element": {
    "message": "Element"
  },
  "panels/issues/IssueView.ts | learnMoreS": {
    "message": "Weitere Informationen: {PH1}"
  },
  "panels/issues/IssueView.ts | nDirectives": {
    "message": "{n,plural, =1{# Anweisung}other{# Anweisungen}}"
  },
  "panels/issues/IssueView.ts | nRequests": {
    "message": "{n,plural, =1{# Anfrage}other{# Anfragen}}"
  },
  "panels/issues/IssueView.ts | nResources": {
    "message": "{n,plural, =1{# Ressource}other{# Ressourcen}}"
  },
  "panels/issues/IssueView.ts | nSources": {
    "message": "{n,plural, =1{# Quelle}other{# Quellen}}"
  },
  "panels/issues/IssueView.ts | name": {
    "message": "Name"
  },
  "panels/issues/IssueView.ts | reportonly": {
    "message": "Nur Berichterstellung"
  },
  "panels/issues/IssueView.ts | resourceC": {
    "message": "Ressource"
  },
  "panels/issues/IssueView.ts | restrictionStatus": {
    "message": "Einschränkungsstatus"
  },
  "panels/issues/IssueView.ts | sourceLocation": {
    "message": "Quellort"
  },
  "panels/issues/IssueView.ts | status": {
    "message": "Status"
  },
  "panels/issues/IssueView.ts | warned": {
    "message": "Gewarnt"
  },
  "panels/issues/IssuesPane.ts | attributionReporting": {
    "message": "Attribution Reporting API"
  },
  "panels/issues/IssuesPane.ts | contentSecurityPolicy": {
    "message": "Content Security Policy"
  },
  "panels/issues/IssuesPane.ts | cors": {
    "message": "Cross-Origin Resource Sharing"
  },
  "panels/issues/IssuesPane.ts | crossOriginEmbedderPolicy": {
    "message": "Cross-Origin-Embedder-Richtlinie"
  },
  "panels/issues/IssuesPane.ts | groupByCategory": {
    "message": "Nach Kategorie gruppieren"
  },
  "panels/issues/IssuesPane.ts | groupDisplayedIssuesUnder": {
    "message": "Angezeigte Probleme unter zugehörigen Kategorien gruppieren"
  },
  "panels/issues/IssuesPane.ts | heavyAds": {
    "message": "Umfangreiche Werbung"
  },
  "panels/issues/IssuesPane.ts | includeCookieIssuesCausedBy": {
    "message": "Probleme mit Cookies berücksichtigen, die Websites von Drittanbietern verursachen"
  },
  "panels/issues/IssuesPane.ts | includeThirdpartyCookieIssues": {
    "message": "Mit Problemen von Drittanbieter-Cookies"
  },
  "panels/issues/IssuesPane.ts | lowTextContrast": {
    "message": "Geringer Textkontrast"
  },
  "panels/issues/IssuesPane.ts | mixedContent": {
    "message": "Gemischter Inhalt"
  },
  "panels/issues/IssuesPane.ts | noIssuesDetectedSoFar": {
    "message": "Bisher keine Probleme festgestellt"
  },
  "panels/issues/IssuesPane.ts | onlyThirdpartyCookieIssues": {
    "message": "Bisher wurden nur Cookies von Drittanbietern erkannt"
  },
  "panels/issues/IssuesPane.ts | other": {
    "message": "Sonstige"
  },
  "panels/issues/IssuesPane.ts | quirksMode": {
    "message": "Quirks-Modus"
  },
  "panels/issues/IssuesPane.ts | samesiteCookie": {
    "message": "SameSite-Cookie"
  },
  "panels/issues/IssuesPane.ts | trustedWebActivity": {
    "message": "Vertrauenswürdige Web-Aktivität"
  },
  "panels/issues/issues-meta.ts | cspViolations": {
    "message": "CSP-Verstöße"
  },
  "panels/issues/issues-meta.ts | issues": {
    "message": "Probleme"
  },
  "panels/issues/issues-meta.ts | showCspViolations": {
    "message": "CSP-Verstöße anzeigen"
  },
  "panels/issues/issues-meta.ts | showIssues": {
    "message": "Probleme einblenden"
  },
  "panels/js_profiler/js_profiler-meta.ts | profiler": {
    "message": "Profiler"
  },
  "panels/js_profiler/js_profiler-meta.ts | showProfiler": {
    "message": "Profiler anzeigen"
  },
  "panels/js_profiler/js_profiler-meta.ts | startStopRecording": {
    "message": "Aufnahme starten/beenden"
  },
  "panels/layer_viewer/LayerDetailsView.ts | compositingReasons": {
    "message": "Compositing-Gründe"
  },
  "panels/layer_viewer/LayerDetailsView.ts | containingBlocRectangleDimensions": {
    "message": "Übergeordneter Block {PH1} × {PH2} (bei {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | mainThreadScrollingReason": {
    "message": "Grund für Scrollen im Hauptthread"
  },
  "panels/layer_viewer/LayerDetailsView.ts | memoryEstimate": {
    "message": "Geschätzter Arbeitsspeicher"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingContaining": {
    "message": "Übergeordneter Block für Verschiebung der nächstgelegenen Ebene"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nearestLayerShiftingStickyBox": {
    "message": "Fixiertes Feld für Verschiebung der nächstgelegenen Ebene"
  },
  "panels/layer_viewer/LayerDetailsView.ts | nonFastScrollable": {
    "message": "Schnelles Scrollen nicht möglich"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintCount": {
    "message": "Paint-Anzahl"
  },
  "panels/layer_viewer/LayerDetailsView.ts | paintProfiler": {
    "message": "Paint Profiler"
  },
  "panels/layer_viewer/LayerDetailsView.ts | repaintsOnScroll": {
    "message": "Übermalt beim Scrollen"
  },
  "panels/layer_viewer/LayerDetailsView.ts | scrollRectangleDimensions": {
    "message": "{PH1} {PH2} × {PH3} (um {PH4}, {PH5})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | selectALayerToSeeItsDetails": {
    "message": "Wählen Sie eine Ebene aus, um ihre Details zu sehen"
  },
  "panels/layer_viewer/LayerDetailsView.ts | size": {
    "message": "Größe"
  },
  "panels/layer_viewer/LayerDetailsView.ts | slowScrollRegions": {
    "message": "Regionen mit langsamem Scrollen"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyAncenstorLayersS": {
    "message": "{PH1}: {PH2} ({PH3})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyBoxRectangleDimensions": {
    "message": "Fixiertes Feld {PH1} x {PH2} (bei {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | stickyPositionConstraint": {
    "message": "Fixierte Positionsbeschränkung"
  },
  "panels/layer_viewer/LayerDetailsView.ts | touchEventHandler": {
    "message": "Touch-Event-Handler"
  },
  "panels/layer_viewer/LayerDetailsView.ts | unnamed": {
    "message": "<unbenannt>"
  },
  "panels/layer_viewer/LayerDetailsView.ts | updateRectangleDimensions": {
    "message": "{PH1} × {PH2} (um {PH3}, {PH4})"
  },
  "panels/layer_viewer/LayerDetailsView.ts | wheelEventHandler": {
    "message": "Rad-Event-Handler"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | layersTreePane": {
    "message": "Baumansicht „Ebenen“"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | showPaintProfiler": {
    "message": "Paint Profiler anzeigen"
  },
  "panels/layer_viewer/LayerTreeOutline.ts | updateChildDimension": {
    "message": " ({PH1} × {PH2})"
  },
  "panels/layer_viewer/LayerViewHost.ts | showInternalLayers": {
    "message": "Interne Ebenen anzeigen"
  },
  "panels/layer_viewer/Layers3DView.ts | cantDisplayLayers": {
    "message": "Ebenen können nicht angezeigt werden"
  },
  "panels/layer_viewer/Layers3DView.ts | checkSForPossibleReasons": {
    "message": "{PH1} auf mögliche Gründe prüfen."
  },
  "panels/layer_viewer/Layers3DView.ts | dLayersView": {
    "message": "3D-Ebenen-Ansicht"
  },
  "panels/layer_viewer/Layers3DView.ts | layerInformationIsNotYet": {
    "message": "Informationen zu Ebenen sind noch nicht verfügbar."
  },
  "panels/layer_viewer/Layers3DView.ts | paints": {
    "message": "Paints"
  },
  "panels/layer_viewer/Layers3DView.ts | resetView": {
    "message": "Ansicht zurücksetzen"
  },
  "panels/layer_viewer/Layers3DView.ts | showPaintProfiler": {
    "message": "Paint Profiler anzeigen"
  },
  "panels/layer_viewer/Layers3DView.ts | slowScrollRects": {
    "message": "Scroll-Rects verlangsamen"
  },
  "panels/layer_viewer/Layers3DView.ts | webglSupportIsDisabledInYour": {
    "message": "Die WebGL-Unterstützung ist in Ihrem Browser deaktiviert."
  },
  "panels/layer_viewer/PaintProfilerView.ts | bitmap": {
    "message": "Bitmap"
  },
  "panels/layer_viewer/PaintProfilerView.ts | commandLog": {
    "message": "Befehlsprotokoll"
  },
  "panels/layer_viewer/PaintProfilerView.ts | misc": {
    "message": "Verschiedenes"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profiling": {
    "message": "Profil wird erstellt…"
  },
  "panels/layer_viewer/PaintProfilerView.ts | profilingResults": {
    "message": "Profiler-Ergebnisse"
  },
  "panels/layer_viewer/PaintProfilerView.ts | shapes": {
    "message": "Formen"
  },
  "panels/layer_viewer/PaintProfilerView.ts | text": {
    "message": "SMS"
  },
  "panels/layer_viewer/TransformController.ts | panModeX": {
    "message": "Schwenkmodus (X)"
  },
  "panels/layer_viewer/TransformController.ts | resetTransform": {
    "message": "Transformation zurücksetzen (0)"
  },
  "panels/layer_viewer/TransformController.ts | rotateModeV": {
    "message": "Rotationsmodus (V)"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateDown": {
    "message": "Schwenken oder nach unten rotieren"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateLeft": {
    "message": "Nach links schwenken oder drehen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateRight": {
    "message": "Nach rechts schwenken oder drehen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | panOrRotateUp": {
    "message": "Nach oben schwenken oder drehen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | resetView": {
    "message": "Ansicht zurücksetzen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToPanMode": {
    "message": "Zum Schwenkmodus wechseln"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | switchToRotateMode": {
    "message": "In Rotationsmodus wechseln"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomIn": {
    "message": "Heranzoomen"
  },
  "panels/layer_viewer/layer_viewer-meta.ts | zoomOut": {
    "message": "Herauszoomen"
  },
  "panels/layers/LayersPanel.ts | details": {
    "message": "Details"
  },
  "panels/layers/LayersPanel.ts | profiler": {
    "message": "Profiler"
  },
  "panels/layers/layers-meta.ts | layers": {
    "message": "Ebenen"
  },
  "panels/layers/layers-meta.ts | showLayers": {
    "message": "Ebenen einblenden"
  },
  "panels/lighthouse/LighthouseController.ts | accessibility": {
    "message": "Bedienungshilfen"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulation": {
    "message": "Mobilemulation anwenden"
  },
  "panels/lighthouse/LighthouseController.ts | applyMobileEmulationDuring": {
    "message": "Mobilemulation während der Prüfung anwenden"
  },
  "panels/lighthouse/LighthouseController.ts | atLeastOneCategoryMustBeSelected": {
    "message": "Mindestens eine Kategorie muss ausgewählt werden."
  },
  "panels/lighthouse/LighthouseController.ts | bestPractices": {
    "message": "Best Practices"
  },
  "panels/lighthouse/LighthouseController.ts | canOnlyAuditHttphttpsPagesAnd": {
    "message": "Kann nur HTTP-/HTTPS-Seiten und Chrome-Erweiterungen prüfen. Rufen Sie eine andere Seite auf, um, die Prüfung zu starten."
  },
  "panels/lighthouse/LighthouseController.ts | clearStorage": {
    "message": "Speicherinhalt löschen"
  },
  "panels/lighthouse/LighthouseController.ts | desktop": {
    "message": "Computer"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageFollowBestPractices": {
    "message": "Entspricht diese Seite den Best Practices für moderne Webentwicklung?"
  },
  "panels/lighthouse/LighthouseController.ts | doesThisPageMeetTheStandardOfA": {
    "message": "Entspricht diese Seite dem Standard einer progressiven Web-App?"
  },
  "panels/lighthouse/LighthouseController.ts | howLongDoesThisAppTakeToShow": {
    "message": "Wie lange dauert es, bis diese App Inhalte anzeigt und verwendet werden kann?"
  },
  "panels/lighthouse/LighthouseController.ts | indexeddb": {
    "message": "IndexedDB"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForAdSpeedAnd": {
    "message": "Ist diese Seite für Geschwindigkeit und Qualität von Werbeanzeigen optimiert?"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageOptimizedForSearch": {
    "message": "Ist diese Seite für das Ergebnis-Ranking von Suchmaschinen optimiert?"
  },
  "panels/lighthouse/LighthouseController.ts | isThisPageUsableByPeopleWith": {
    "message": "Kann diese Seite von Nutzern mit Behinderungen oder Einschränkungen verwendet werden?"
  },
  "panels/lighthouse/LighthouseController.ts | localStorage": {
    "message": "Lokaler Speicher"
  },
  "panels/lighthouse/LighthouseController.ts | mobile": {
    "message": "Mobil"
  },
  "panels/lighthouse/LighthouseController.ts | multipleTabsAreBeingControlledBy": {
    "message": "Mehrere Tabs werden von demselben service worker gesteuert. Schließen Sie andere Tabs derselben Quelle, um diese Seite zu prüfen."
  },
  "panels/lighthouse/LighthouseController.ts | performance": {
    "message": "Leistung"
  },
  "panels/lighthouse/LighthouseController.ts | progressiveWebApp": {
    "message": "Progressive Web-App"
  },
  "panels/lighthouse/LighthouseController.ts | publisherAds": {
    "message": "Publisher-Anzeigen"
  },
  "panels/lighthouse/LighthouseController.ts | resetStorageLocalstorage": {
    "message": "Speicherfunktionen (cache, service workers usw.) vor der Überprüfung zurücksetzen. (Für bessere Leistung und PWA-Tests)"
  },
  "panels/lighthouse/LighthouseController.ts | seo": {
    "message": "SEO"
  },
  "panels/lighthouse/LighthouseController.ts | simulateASlowerPageLoadBasedOn": {
    "message": "Langsameren Seitenaufbau simulieren, basierend auf Daten eines ursprünglich nicht gedrosselten Aufbaus. Wenn diese Einstellung deaktiviert ist, wird die Seite durch Drosselung verlangsamt."
  },
  "panels/lighthouse/LighthouseController.ts | simulatedThrottling": {
    "message": "Simulierte Drosselung"
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingLoadingPlural": {
    "message": "Gespeicherte Daten haben möglicherweise die Ladeleistungen an diesen Orten beeinflusst: {PH1}. Testen Sie diese Seite in einem Inkognitofenster, um zu verhindern, dass sich diese Ressourcen auf Ihre Ergebnisse auswirken."
  },
  "panels/lighthouse/LighthouseController.ts | thereMayBeStoredDataAffectingSingular": {
    "message": "Gespeicherte Daten haben möglicherweise die Ladeleistung an diesem Ort beeinflusst: {PH1}. Testen Sie diese Seite in einem Inkognitofenster, um zu verhindern, dass sich die Ressourcen auf Ihre Ergebnisse auswirken."
  },
  "panels/lighthouse/LighthouseController.ts | webSql": {
    "message": "Web SQL"
  },
  "panels/lighthouse/LighthousePanel.ts | cancelling": {
    "message": "Wird abgebrochen"
  },
  "panels/lighthouse/LighthousePanel.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/lighthouse/LighthousePanel.ts | dropLighthouseJsonHere": {
    "message": "Lighthouse-JSON hier ablegen"
  },
  "panels/lighthouse/LighthousePanel.ts | lighthouseSettings": {
    "message": "Lighthouse-Einstellungen"
  },
  "panels/lighthouse/LighthousePanel.ts | performAnAudit": {
    "message": "Überprüfung ausführen…"
  },
  "panels/lighthouse/LighthousePanel.ts | printing": {
    "message": "Drucken"
  },
  "panels/lighthouse/LighthousePanel.ts | thePrintPopupWindowIsOpenPlease": {
    "message": "Das Pop-up-Fenster zum Drucken ist geöffnet. Bitte schließen Sie es, um fortzufahren."
  },
  "panels/lighthouse/LighthouseReportRenderer.ts | thePerformanceMetricsAboveAre": {
    "message": "Die obigen Leistungsmesswerte sind simuliert und stimmen nicht mit den Timings überein, die in diesem Trace gefunden wurden. Wenn die Timings übereinstimmen sollen, deaktivieren Sie die simulierte Drosselung in den „Lighthouse-Einstellungen“."
  },
  "panels/lighthouse/LighthouseReportRenderer.ts | viewOriginalTrace": {
    "message": "Ursprünglichen Trace anzeigen"
  },
  "panels/lighthouse/LighthouseReportRenderer.ts | viewTrace": {
    "message": "Trace ansehen"
  },
  "panels/lighthouse/LighthouseReportSelector.ts | newReport": {
    "message": "(neuer Bericht)"
  },
  "panels/lighthouse/LighthouseReportSelector.ts | reports": {
    "message": "Berichte"
  },
  "panels/lighthouse/LighthouseStartView.ts | categories": {
    "message": "Kategorien"
  },
  "panels/lighthouse/LighthouseStartView.ts | communityPluginsBeta": {
    "message": "Community-Plug-ins (Beta)"
  },
  "panels/lighthouse/LighthouseStartView.ts | device": {
    "message": "Gerät"
  },
  "panels/lighthouse/LighthouseStartView.ts | generateReport": {
    "message": "Bericht erstellen"
  },
  "panels/lighthouse/LighthouseStartView.ts | identifyAndFixCommonProblemsThat": {
    "message": "Identifizieren und beheben Sie häufige Probleme, die die Leistung, Barrierefreiheit und Nutzerfreundlichkeit Ihrer Website beeinträchtigen."
  },
  "panels/lighthouse/LighthouseStartView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfGlobalMobileUsersInWereOnGOrG": {
    "message": "75 % aller Nutzer auf Mobilgeräten weltweit nutzten 2G oder 3G [Quelle: GSMA Mobile]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | OfMobilePagesTakeNearlySeconds": {
    "message": "70 % der mobilen Seiten benötigen fast 7 Sekunden, bis der visuelle Inhalt „above the fold“ (ohne Scrollen sichtbar) auf dem Bildschirm angezeigt wird. [Quelle: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | SecondsIsTheAverageTimeAMobile": {
    "message": "Eine mobile Website wird mit einer 3G-Verbindung in durchschnittlich 19 Sekunden aufgebaut [Quelle: Google DoubleClick blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ahSorryWeRanIntoAnError": {
    "message": "Tut uns leid. Ein Fehler ist aufgetreten."
  },
  "panels/lighthouse/LighthouseStatusView.ts | almostThereLighthouseIsNow": {
    "message": "Fast geschafft! Lighthouse erstellt jetzt Ihren Bericht."
  },
  "panels/lighthouse/LighthouseStatusView.ts | asPageLoadTimeIncreasesFromOne": {
    "message": "Wenn die Seitenladezeit sich von einer Sekunde auf sieben Sekunden erhöht, steigt die Wahrscheinlichkeit, dass ein mobiler Besucher abspringt, um 113 %. [Quelle: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | asTheNumberOfElementsOnAPage": {
    "message": "Wird die Anzahl der Elemente auf einer Seite von 400 auf 6.000 erhöht, sinkt die Wahrscheinlichkeit für Konversion um 95 %. [Quelle: Think with Google]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingS": {
    "message": "{PH1} wird überprüft"
  },
  "panels/lighthouse/LighthouseStatusView.ts | auditingYourWebPage": {
    "message": "Überprüfung deiner Webseite"
  },
  "panels/lighthouse/LighthouseStatusView.ts | byReducingTheResponseSizeOfJson": {
    "message": "Das Reduzieren der Antwortgröße von JSON zum Anzeigen von Kommentaren führte dazu, dass Instagram mehr Impressionen registrierte [Quelle: WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancel": {
    "message": "Abbrechen"
  },
  "panels/lighthouse/LighthouseStatusView.ts | cancelling": {
    "message": "Wird abgebrochen…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | fastFactMessageWithPlaceholder": {
    "message": "💡 {PH1}"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifASiteTakesSecondToBecome": {
    "message": "Wenn eine Website > 1 Sekunde benötigt, um interaktiv zu werden, lässt die Aufmerksamkeit der Nutzer nach und der Eindruck, die Seite ihrem Zweck entsprechend nutzen zu können, ist beeinträchtigt [Quelle: Google Developers Blog]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | ifThisIssueIsReproduciblePlease": {
    "message": "Wenn dieses Problem reproduzierbar ist, melden Sie es bitte an das Lighthouse GitHub-Repository."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsGatheringInformation": {
    "message": "Lighthouse trägt Informationen zur Seite zusammen, um Ihre Punktzahl zu berechnen."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingThePage": {
    "message": "Lighthouse lädt die Seite."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPage": {
    "message": "Lighthouse lädt Ihre Seite"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWith": {
    "message": "Lighthouse lädt Ihre Seite gedrosselt, um die Leistung bei einem 3G-Mobilgerät zu messen."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithMobile": {
    "message": "Lighthouse lädt Ihre Seite mit Mobilemulation."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsLoadingYourPageWithThrottling": {
    "message": "Lighthouse lädt Ihre Seite mit einer Drosselung, um die Leistung auf einem langsamen Desktop mit 3G zu messen."
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseIsWarmingUp": {
    "message": "Lighthouse wird vorbereitet…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | lighthouseOnlySimulatesMobile": {
    "message": "Lighthouse simuliert nur die mobile Leistung; um die Leistung auf einem echten Gerät zu messen, gehen Sie auf WebPageTest.org [Quelle: Lighthouse-Team]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/lighthouse/LighthouseStatusView.ts | mbTakesAMinimumOfSecondsTo": {
    "message": "1 MB benötigt mindestens 5 Sekunden für den Download mit einer typischen 3G-Verbindung [Quellen: WebPageTest und DevTools 3G-Definition]."
  },
  "panels/lighthouse/LighthouseStatusView.ts | rebuildingPinterestPagesFor": {
    "message": "Für die Leistung wiederhergestellte Pinterest-Seiten haben die Konversionsraten um 15 % erhöht [Quelle: WPO Stats]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | theAverageUserDeviceCostsLess": {
    "message": "Das Gerät eines durchschnittlichen Nutzers kostet weniger als 200 $. [Quelle: International Data Corporation]"
  },
  "panels/lighthouse/LighthouseStatusView.ts | tryToNavigateToTheUrlInAFresh": {
    "message": "Rufen Sie die URL in einem neuen Chrome-Profil ohne andere geöffnete Tabs oder Erweiterungen auf und versuchen Sie es noch einmal."
  },
  "panels/lighthouse/LighthouseStatusView.ts | walmartSawAIncreaseInRevenueFor": {
    "message": "Der Umsatz von Walmart erhöhte sich um 1 % pro 100 ms kürzerer Seitenladezeit [Quelle: WPO Stats]"
  },
  "panels/lighthouse/lighthouse-meta.ts | showLighthouse": {
    "message": "Lighthouse anzeigen"
  },
  "panels/media/EventDisplayTable.ts | eventDisplay": {
    "message": "Ereignisanzeige"
  },
  "panels/media/EventDisplayTable.ts | eventName": {
    "message": "Name des Ereignisses"
  },
  "panels/media/EventDisplayTable.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/media/EventDisplayTable.ts | value": {
    "message": "Wert"
  },
  "panels/media/EventTimelineView.ts | bufferingStatus": {
    "message": "Pufferstatus"
  },
  "panels/media/EventTimelineView.ts | playbackStatus": {
    "message": "Wiedergabestatus"
  },
  "panels/media/PlayerDetailView.ts | events": {
    "message": "Veranstaltungen"
  },
  "panels/media/PlayerDetailView.ts | messages": {
    "message": "Nachrichten"
  },
  "panels/media/PlayerDetailView.ts | playerEvents": {
    "message": "Spieler-Ereignisse"
  },
  "panels/media/PlayerDetailView.ts | playerMessages": {
    "message": "Spielenachrichten"
  },
  "panels/media/PlayerDetailView.ts | playerProperties": {
    "message": "Spielerproperties"
  },
  "panels/media/PlayerDetailView.ts | playerTimeline": {
    "message": "Zeitachse des Spielers"
  },
  "panels/media/PlayerDetailView.ts | properties": {
    "message": "Eigenschaften"
  },
  "panels/media/PlayerDetailView.ts | timeline": {
    "message": "Zeitachse"
  },
  "panels/media/PlayerListView.ts | hideAllOthers": {
    "message": "Alle anderen ausblenden"
  },
  "panels/media/PlayerListView.ts | hidePlayer": {
    "message": "Player ausblenden"
  },
  "panels/media/PlayerListView.ts | players": {
    "message": "Spieler"
  },
  "panels/media/PlayerListView.ts | savePlayerInfo": {
    "message": "Spieler-Informationen speichern"
  },
  "panels/media/PlayerMessagesView.ts | all": {
    "message": "Alles"
  },
  "panels/media/PlayerMessagesView.ts | custom": {
    "message": "Benutzerdefiniert"
  },
  "panels/media/PlayerMessagesView.ts | debug": {
    "message": "Fehler beheben"
  },
  "panels/media/PlayerMessagesView.ts | default": {
    "message": "Standard"
  },
  "panels/media/PlayerMessagesView.ts | error": {
    "message": "Fehler"
  },
  "panels/media/PlayerMessagesView.ts | filterLogMessages": {
    "message": "Logeinträge filtern"
  },
  "panels/media/PlayerMessagesView.ts | info": {
    "message": "Info"
  },
  "panels/media/PlayerMessagesView.ts | logLevel": {
    "message": "Protokollebene:"
  },
  "panels/media/PlayerMessagesView.ts | warning": {
    "message": "Warnung"
  },
  "panels/media/PlayerPropertiesView.ts | audio": {
    "message": "Audio"
  },
  "panels/media/PlayerPropertiesView.ts | bitrate": {
    "message": "Bitrate"
  },
  "panels/media/PlayerPropertiesView.ts | decoder": {
    "message": "Decodierer"
  },
  "panels/media/PlayerPropertiesView.ts | decoderName": {
    "message": "Decoder-Name"
  },
  "panels/media/PlayerPropertiesView.ts | decryptingDemuxer": {
    "message": "Entschlüsselungs-Demuxer"
  },
  "panels/media/PlayerPropertiesView.ts | duration": {
    "message": "Dauer"
  },
  "panels/media/PlayerPropertiesView.ts | encoderName": {
    "message": "Encoder-Name"
  },
  "panels/media/PlayerPropertiesView.ts | fileSize": {
    "message": "Dateigröße"
  },
  "panels/media/PlayerPropertiesView.ts | frameRate": {
    "message": "Framerate"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareDecoder": {
    "message": "Hardware-Decoder"
  },
  "panels/media/PlayerPropertiesView.ts | hardwareEncoder": {
    "message": "Hardware-Encoder"
  },
  "panels/media/PlayerPropertiesView.ts | noDecoder": {
    "message": "Kein Decoder"
  },
  "panels/media/PlayerPropertiesView.ts | noEncoder": {
    "message": "Kein Encoder"
  },
  "panels/media/PlayerPropertiesView.ts | noTextTracks": {
    "message": "Keine Texttracks"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameTitle": {
    "message": "Wiedergabe-Frametitel"
  },
  "panels/media/PlayerPropertiesView.ts | playbackFrameUrl": {
    "message": "Wiedergabe Frame-URL"
  },
  "panels/media/PlayerPropertiesView.ts | properties": {
    "message": "Eigenschaften"
  },
  "panels/media/PlayerPropertiesView.ts | rangeHeaderSupport": {
    "message": "Range-Header-Support"
  },
  "panels/media/PlayerPropertiesView.ts | resolution": {
    "message": "Auflösung"
  },
  "panels/media/PlayerPropertiesView.ts | singleoriginPlayback": {
    "message": "Wiedergabe von einer Quelle"
  },
  "panels/media/PlayerPropertiesView.ts | startTime": {
    "message": "Beginn"
  },
  "panels/media/PlayerPropertiesView.ts | streaming": {
    "message": "Streaming"
  },
  "panels/media/PlayerPropertiesView.ts | textTrack": {
    "message": "Text-Track"
  },
  "panels/media/PlayerPropertiesView.ts | track": {
    "message": "Titel"
  },
  "panels/media/PlayerPropertiesView.ts | video": {
    "message": "Video"
  },
  "panels/media/PlayerPropertiesView.ts | videoFreezingScore": {
    "message": "Punktzahl, die angibt, wie oft ein Video hängenbleibt"
  },
  "panels/media/PlayerPropertiesView.ts | videoPlaybackRoughness": {
    "message": "Rauigkeit der Videowiedergabe"
  },
  "panels/media/media-meta.ts | media": {
    "message": "Medien"
  },
  "panels/media/media-meta.ts | showMedia": {
    "message": "Medien anzeigen"
  },
  "panels/media/media-meta.ts | video": {
    "message": "Video"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | advanced": {
    "message": "Erweitert"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | disabled": {
    "message": "Deaktiviert"
  },
  "panels/mobile_throttling/MobileThrottlingSelector.ts | presets": {
    "message": "Voreinstellungen"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | acceptedEncodingOverrideSet": {
    "message": "Der Satz an akzeptierten Content-Encoding-Headern wurde durch die Entwicklertools geändert. Im Bereich „Netzwerkbedingungen“ erfahren Sie mehr."
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | networkThrottlingIsEnabled": {
    "message": "Netzwerkdrosselung ist aktiviert"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeBlocked": {
    "message": "Anfragen werden möglicherweise blockiert"
  },
  "panels/mobile_throttling/NetworkPanelIndicator.ts | requestsMayBeRewrittenByLocal": {
    "message": "Anfragen können lokal überschrieben werden"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | custom": {
    "message": "Benutzerdefiniert"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | disabled": {
    "message": "Deaktiviert"
  },
  "panels/mobile_throttling/NetworkThrottlingSelector.ts | presets": {
    "message": "Voreinstellungen"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | add": {
    "message": "Hinzufügen…"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | addS": {
    "message": "{PH1} hinzufügen"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottling": {
    "message": "CPU-Drosselung"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | cpuThrottlingIsEnabled": {
    "message": "CPU-Drosselung ist aktiviert"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | dSlowdown": {
    "message": "Verlangsamen: {PH1} ×"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | forceDisconnectedFromNetwork": {
    "message": "Trennung vom Netzwerk erzwingen"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | noThrottling": {
    "message": "Keine Drosselung"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | offline": {
    "message": "Offline"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/mobile_throttling/ThrottlingManager.ts | throttling": {
    "message": "Drosselung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | checkNetworkAndPerformancePanels": {
    "message": "Netzwerk- und Leistungsbereiche prüfen"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | custom": {
    "message": "Benutzerdefiniert"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | fastGXCpuSlowdown": {
    "message": "Schnelles 3G und 4x CPU-Verlangsamung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | lowendMobile": {
    "message": "Low-End-Mobilgerät"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | midtierMobile": {
    "message": "Mobilgerät mit mittlerer Qualität"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noInternetConnectivity": {
    "message": "Keine Internetverbindung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | noThrottling": {
    "message": "Keine Drosselung"
  },
  "panels/mobile_throttling/ThrottlingPresets.ts | slowGXCpuSlowdown": {
    "message": "Langsames 3G und 6x CPU-Verlangsamung"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | addCustomProfile": {
    "message": "Angepasstes Profil hinzufügen…"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dms": {
    "message": "{PH1} ms"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | download": {
    "message": "Download"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | dskbits": {
    "message": "{PH1} kbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | fsmbits": {
    "message": "{PH1} Mbit/s"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latency": {
    "message": "Latenz"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | latencyMustBeAnIntegerBetweenSms": {
    "message": "Latenz muss eine Ganzzahl zwischen {PH1} ms und {PH2} ms (inklusiv) sein"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | networkThrottlingProfiles": {
    "message": "Netzwerkdrosselungs-Profile"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | optional": {
    "message": "optional"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileName": {
    "message": "Profilname"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | profileNameCharactersLengthMust": {
    "message": "Die Zeichenanzahl des Profilnamens muss einschließlich 1 bis {PH1} betragen"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | sMustBeANumberBetweenSkbsToSkbs": {
    "message": "Wert für {PH1} muss eine Zahl zwischen {PH2} kbit/s und {PH3} kbit/s (inklusiv) sein"
  },
  "panels/mobile_throttling/ThrottlingSettingsTab.ts | upload": {
    "message": "Upload"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | device": {
    "message": "Gerät"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableFastGThrottling": {
    "message": "Schnelle 3G-Drosselung aktivieren"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | enableSlowGThrottling": {
    "message": "Langsame 3G-Drosselung aktivieren"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOffline": {
    "message": "Offline gehen"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | goOnline": {
    "message": "Zum Online-Modus wechseln"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | showThrottling": {
    "message": "Drosselung anzeigen"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttling": {
    "message": "Drosselung"
  },
  "panels/mobile_throttling/mobile_throttling-meta.ts | throttlingTag": {
    "message": "Drosselung"
  },
  "panels/network/BinaryResourceView.ts | binaryViewType": {
    "message": "Binäransichtstyp"
  },
  "panels/network/BinaryResourceView.ts | copiedAsBase": {
    "message": "Als Base64 kopiert"
  },
  "panels/network/BinaryResourceView.ts | copiedAsHex": {
    "message": "Als Hex kopiert"
  },
  "panels/network/BinaryResourceView.ts | copiedAsUtf": {
    "message": "Als UTF-8 kopiert"
  },
  "panels/network/BinaryResourceView.ts | copyAsBase": {
    "message": "Als Base64 kopieren"
  },
  "panels/network/BinaryResourceView.ts | copyAsHex": {
    "message": "Als Hex kopieren"
  },
  "panels/network/BinaryResourceView.ts | copyAsUtf": {
    "message": "Als UTF-8 kopieren"
  },
  "panels/network/BinaryResourceView.ts | copyToClipboard": {
    "message": "In die Zwischenablage kopieren"
  },
  "panels/network/BinaryResourceView.ts | hexViewer": {
    "message": "Hex Betrachter"
  },
  "panels/network/BlockedURLsPane.ts | addNetworkRequestBlockingPattern": {
    "message": "Blockierungsmuster für Netzwerkanfragen hinzufügen"
  },
  "panels/network/BlockedURLsPane.ts | addPattern": {
    "message": "Muster hinzufügen"
  },
  "panels/network/BlockedURLsPane.ts | dBlocked": {
    "message": "{PH1} blockiert"
  },
  "panels/network/BlockedURLsPane.ts | enableNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage aktivieren"
  },
  "panels/network/BlockedURLsPane.ts | networkRequestsAreNotBlockedS": {
    "message": "Netzwerkanfragen sind nicht blockiert. {PH1}"
  },
  "panels/network/BlockedURLsPane.ts | patternAlreadyExists": {
    "message": "Das Muster existiert bereits."
  },
  "panels/network/BlockedURLsPane.ts | patternInputCannotBeEmpty": {
    "message": "Die Mustereingabe darf nicht leer sein."
  },
  "panels/network/BlockedURLsPane.ts | removeAllPatterns": {
    "message": "Alle Muster entfernen"
  },
  "panels/network/BlockedURLsPane.ts | textPatternToBlockMatching": {
    "message": "Textmuster zum Blockieren von übereinstimmenden Anfragen; * für Platzhalter verwenden"
  },
  "panels/network/EventSourceMessagesView.ts | copyMessage": {
    "message": "Nachricht kopieren"
  },
  "panels/network/EventSourceMessagesView.ts | data": {
    "message": "Daten"
  },
  "panels/network/EventSourceMessagesView.ts | eventSource": {
    "message": "Ereignisquelle"
  },
  "panels/network/EventSourceMessagesView.ts | id": {
    "message": "ID"
  },
  "panels/network/EventSourceMessagesView.ts | time": {
    "message": "Zeit"
  },
  "panels/network/EventSourceMessagesView.ts | type": {
    "message": "Typ"
  },
  "panels/network/NetworkConfigView.ts | acceptedEncoding": {
    "message": "Zugelassen: Content-Encoding"
  },
  "panels/network/NetworkConfigView.ts | caching": {
    "message": "Speichern im Cache"
  },
  "panels/network/NetworkConfigView.ts | custom": {
    "message": "Benutzerdefiniert…"
  },
  "panels/network/NetworkConfigView.ts | customUserAgentFieldIsRequired": {
    "message": "Das Feld für den benutzerdefinierten User-Agent muss ausgefüllt sein"
  },
  "panels/network/NetworkConfigView.ts | disableCache": {
    "message": "Cache deaktivieren"
  },
  "panels/network/NetworkConfigView.ts | enterACustomUserAgent": {
    "message": "Geben Sie einen benutzerdefinierten User-Agent ein"
  },
  "panels/network/NetworkConfigView.ts | networkThrottling": {
    "message": "Netzwerkdrosselung"
  },
  "panels/network/NetworkConfigView.ts | selectAutomatically": {
    "message": "Browserstandard verwenden"
  },
  "panels/network/NetworkConfigView.ts | userAgent": {
    "message": "User-Agent"
  },
  "panels/network/NetworkDataGridNode.ts | blockedTooltip": {
    "message": "Diese Anfrage wurde aufgrund von falsch konfigurierten Antwortheadern blockiert – klicken, um Header anzusehen"
  },
  "panels/network/NetworkDataGridNode.ts | blockeds": {
    "message": "(blockiert: {PH1})"
  },
  "panels/network/NetworkDataGridNode.ts | canceled": {
    "message": "(abgebrochen)"
  },
  "panels/network/NetworkDataGridNode.ts | corsError": {
    "message": "CORS-Fehler"
  },
  "panels/network/NetworkDataGridNode.ts | crossoriginResourceSharingErrorS": {
    "message": "Cross-Origin Resource Sharing-Fehler: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | csp": {
    "message": "CSP"
  },
  "panels/network/NetworkDataGridNode.ts | data": {
    "message": "(Daten)"
  },
  "panels/network/NetworkDataGridNode.ts | devtools": {
    "message": "Entwicklertools"
  },
  "panels/network/NetworkDataGridNode.ts | diskCache": {
    "message": "(Datenträger-Cache)"
  },
  "panels/network/NetworkDataGridNode.ts | failed": {
    "message": "(fehlgeschlagen)"
  },
  "panels/network/NetworkDataGridNode.ts | finished": {
    "message": "Beendet"
  },
  "panels/network/NetworkDataGridNode.ts | level": {
    "message": "Level 1"
  },
  "panels/network/NetworkDataGridNode.ts | memoryCache": {
    "message": "(Speicher-Cache)"
  },
  "panels/network/NetworkDataGridNode.ts | origin": {
    "message": "Quelle"
  },
  "panels/network/NetworkDataGridNode.ts | other": {
    "message": "sonstiger"
  },
  "panels/network/NetworkDataGridNode.ts | otherC": {
    "message": "Sonstige"
  },
  "panels/network/NetworkDataGridNode.ts | parser": {
    "message": "Parser"
  },
  "panels/network/NetworkDataGridNode.ts | pending": {
    "message": "Ausstehend"
  },
  "panels/network/NetworkDataGridNode.ts | pendingq": {
    "message": "(ausstehend)"
  },
  "panels/network/NetworkDataGridNode.ts | prefetchCache": {
    "message": "(prefetch cache)"
  },
  "panels/network/NetworkDataGridNode.ts | preflight": {
    "message": "Preflight"
  },
  "panels/network/NetworkDataGridNode.ts | preload": {
    "message": "Vorab laden"
  },
  "panels/network/NetworkDataGridNode.ts | push": {
    "message": "Push/ "
  },
  "panels/network/NetworkDataGridNode.ts | redirect": {
    "message": "Weiterleitung"
  },
  "panels/network/NetworkDataGridNode.ts | sPreflight": {
    "message": "{PH1} + Preflight"
  },
  "panels/network/NetworkDataGridNode.ts | script": {
    "message": "Skript"
  },
  "panels/network/NetworkDataGridNode.ts | selectPreflightRequest": {
    "message": "Preflight-Anfrage auswählen"
  },
  "panels/network/NetworkDataGridNode.ts | selectTheRequestThatTriggered": {
    "message": "Anfrage auswählen, die diesen Preflight ausgelöst hat"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromDiskCacheResourceSizeS": {
    "message": "Aus dem Cache des Datenträgers bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromMemoryCacheResource": {
    "message": "Aus dem Cache des Arbeitsspeichers bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromPrefetchCacheResource": {
    "message": "Aus dem Cache des Prefetch-Speichers ausgeliefert, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromServiceworkerResource": {
    "message": "Von ServiceWorker bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | servedFromSignedHttpExchange": {
    "message": "Von Signed HTTP Exchange bereitgestellt, Ressourcengröße: {PH1}"
  },
  "panels/network/NetworkDataGridNode.ts | serviceworker": {
    "message": "(ServiceWorker)"
  },
  "panels/network/NetworkDataGridNode.ts | signedexchange": {
    "message": "signed-exchange"
  },
  "panels/network/NetworkItemView.ts | cookies": {
    "message": "Cookies"
  },
  "panels/network/NetworkItemView.ts | eventstream": {
    "message": "EventStream"
  },
  "panels/network/NetworkItemView.ts | headers": {
    "message": "Header"
  },
  "panels/network/NetworkItemView.ts | headersAndRequestBody": {
    "message": "Überschriften und Anfragetext"
  },
  "panels/network/NetworkItemView.ts | initiator": {
    "message": "Initiator"
  },
  "panels/network/NetworkItemView.ts | messages": {
    "message": "Nachrichten"
  },
  "panels/network/NetworkItemView.ts | preview": {
    "message": "Vorschau"
  },
  "panels/network/NetworkItemView.ts | rawResponseData": {
    "message": "Unbearbeitete Antwortdaten"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseCookies": {
    "message": "Anfrage- und Antwort-Cookies"
  },
  "panels/network/NetworkItemView.ts | requestAndResponseTimeline": {
    "message": "Anfrage- und Antwortzeitachse"
  },
  "panels/network/NetworkItemView.ts | requestInitiatorCallStack": {
    "message": "Aufrufstack des Anforderungsinitiators"
  },
  "panels/network/NetworkItemView.ts | response": {
    "message": "Antwort"
  },
  "panels/network/NetworkItemView.ts | responsePreview": {
    "message": "Antwortvorschau"
  },
  "panels/network/NetworkItemView.ts | signedexchangeError": {
    "message": "SignedExchange-Fehler"
  },
  "panels/network/NetworkItemView.ts | timing": {
    "message": "Timing"
  },
  "panels/network/NetworkItemView.ts | trustTokenOperationDetails": {
    "message": "Details zu Trust Token-Vorgängen"
  },
  "panels/network/NetworkItemView.ts | trustTokens": {
    "message": "Trust-Tokens"
  },
  "panels/network/NetworkItemView.ts | websocketMessages": {
    "message": "WebSocket-Nachrichten"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowser": {
    "message": "Möchten Sie den Browsercache wirklich löschen?"
  },
  "panels/network/NetworkLogView.ts | areYouSureYouWantToClearBrowserCookies": {
    "message": "Möchten Sie die Browsercookies wirklich löschen?"
  },
  "panels/network/NetworkLogView.ts | blockRequestDomain": {
    "message": "Anfrage-Domain blockieren"
  },
  "panels/network/NetworkLogView.ts | blockRequestUrl": {
    "message": "Anfrage-URL blockieren"
  },
  "panels/network/NetworkLogView.ts | blockedRequests": {
    "message": "Blockierte Anfragen"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCache": {
    "message": "Browser-Cache leeren"
  },
  "panels/network/NetworkLogView.ts | clearBrowserCookies": {
    "message": "Browsercookies löschen"
  },
  "panels/network/NetworkLogView.ts | copy": {
    "message": "Kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurl": {
    "message": "Alles als cURL kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlBash": {
    "message": "Alles als cURL (bash) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsCurlCmd": {
    "message": "Alles als cURL (cmd) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsFetch": {
    "message": "Alles als fetch kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsHar": {
    "message": "Alles als HAR kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsNodejsFetch": {
    "message": "Alles als Node.js fetch kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAllAsPowershell": {
    "message": "Alles als PowerShell kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsCurl": {
    "message": "Als cURL kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlBash": {
    "message": "Als cURL (bash) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsCurlCmd": {
    "message": "Als cURL (cmd) kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsFetch": {
    "message": "Als fetch kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsNodejsFetch": {
    "message": "Als Node.js fetch kopieren"
  },
  "panels/network/NetworkLogView.ts | copyAsPowershell": {
    "message": "Als PowerShell kopieren"
  },
  "panels/network/NetworkLogView.ts | copyRequestHeaders": {
    "message": "Anfrageheader kopieren"
  },
  "panels/network/NetworkLogView.ts | copyResponse": {
    "message": "Antwort kopieren"
  },
  "panels/network/NetworkLogView.ts | copyResponseHeaders": {
    "message": "Antwortheader kopieren"
  },
  "panels/network/NetworkLogView.ts | copyStacktrace": {
    "message": "Stacktrace kopieren"
  },
  "panels/network/NetworkLogView.ts | domcontentloadedS": {
    "message": "DOMContentLoaded: {PH1}"
  },
  "panels/network/NetworkLogView.ts | dropHarFilesHere": {
    "message": "HAR-Dateien hier ablegen"
  },
  "panels/network/NetworkLogView.ts | finishS": {
    "message": "Fertigstellen: {PH1}"
  },
  "panels/network/NetworkLogView.ts | hasBlockedCookies": {
    "message": "Hat blockierte Cookies"
  },
  "panels/network/NetworkLogView.ts | hideDataUrls": {
    "message": "Daten-URLs verbergen"
  },
  "panels/network/NetworkLogView.ts | hidesDataAndBlobUrls": {
    "message": "Blendet Daten aus: und Blob: URLs"
  },
  "panels/network/NetworkLogView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/network/NetworkLogView.ts | loadS": {
    "message": "Laden: {PH1}"
  },
  "panels/network/NetworkLogView.ts | networkDataAvailable": {
    "message": "Netzwerkdaten verfügbar"
  },
  "panels/network/NetworkLogView.ts | onlyShowBlockedRequests": {
    "message": "Nur blockierte Anfragen anzeigen"
  },
  "panels/network/NetworkLogView.ts | onlyShowRequestsWithBlocked": {
    "message": "Nur Anforderungen mit blockierten Antwort-Cookies anzeigen"
  },
  "panels/network/NetworkLogView.ts | performARequestOrHitSToRecordThe": {
    "message": "Führen Sie eine Anfrage aus oder drücken Sie {PH1}, um die Aktualisierung aufzuzeichnen."
  },
  "panels/network/NetworkLogView.ts | recordSToDisplayNetworkActivity": {
    "message": "Aufzeichnen ({PH1}), um Netzwerkaktivitäten zu zeigen."
  },
  "panels/network/NetworkLogView.ts | recordingNetworkActivity": {
    "message": "Netzwerkaktivität wird aufgezeichnet…"
  },
  "panels/network/NetworkLogView.ts | replayXhr": {
    "message": "XHR wiederholen"
  },
  "panels/network/NetworkLogView.ts | resourceTypesToInclude": {
    "message": "Zu verwendende Ressourcentypen"
  },
  "panels/network/NetworkLogView.ts | sBResourcesLoadedByThePage": {
    "message": "{PH1}-B-Ressourcen werden von der Seite geladen"
  },
  "panels/network/NetworkLogView.ts | sBSBResourcesLoadedByThePage": {
    "message": "{PH1} B-/{PH2} B-Ressourcen von der Seite geladen"
  },
  "panels/network/NetworkLogView.ts | sBSBTransferredOverNetwork": {
    "message": "{PH1} B/{PH2} B über Netzwerk übertragen"
  },
  "panels/network/NetworkLogView.ts | sBTransferredOverNetwork": {
    "message": "{PH1} B über das Netzwerk übertragen"
  },
  "panels/network/NetworkLogView.ts | sRequests": {
    "message": "{PH1} Anfragen"
  },
  "panels/network/NetworkLogView.ts | sResources": {
    "message": "{PH1} Ressourcen"
  },
  "panels/network/NetworkLogView.ts | sSRequests": {
    "message": "{PH1}/{PH2} Anforderungen"
  },
  "panels/network/NetworkLogView.ts | sSResources": {
    "message": "Ressourcen: {PH1}/{PH2}"
  },
  "panels/network/NetworkLogView.ts | sSTransferred": {
    "message": "{PH1}/{PH2} übertragen"
  },
  "panels/network/NetworkLogView.ts | sTransferred": {
    "message": "{PH1} übertragen"
  },
  "panels/network/NetworkLogView.ts | saveAllAsHarWithContent": {
    "message": "Alle als HAR mit Inhalt speichern"
  },
  "panels/network/NetworkLogView.ts | unblockS": {
    "message": "Blockierung aufheben für {PH1}"
  },
  "panels/network/NetworkLogViewColumns.ts | connectionId": {
    "message": "Verbindungs-ID"
  },
  "panels/network/NetworkLogViewColumns.ts | content": {
    "message": "Inhalte"
  },
  "panels/network/NetworkLogViewColumns.ts | cookies": {
    "message": "Cookies"
  },
  "panels/network/NetworkLogViewColumns.ts | domain": {
    "message": "Domain"
  },
  "panels/network/NetworkLogViewColumns.ts | endTime": {
    "message": "Ende"
  },
  "panels/network/NetworkLogViewColumns.ts | initiator": {
    "message": "Initiator"
  },
  "panels/network/NetworkLogViewColumns.ts | initiatorAddressSpace": {
    "message": "Raum für Initiator-Adresse"
  },
  "panels/network/NetworkLogViewColumns.ts | latency": {
    "message": "Latenz"
  },
  "panels/network/NetworkLogViewColumns.ts | manageHeaderColumns": {
    "message": "Headerspalten verwalten…"
  },
  "panels/network/NetworkLogViewColumns.ts | method": {
    "message": "Methode"
  },
  "panels/network/NetworkLogViewColumns.ts | name": {
    "message": "Name"
  },
  "panels/network/NetworkLogViewColumns.ts | networkLog": {
    "message": "Netzwerkprotokoll"
  },
  "panels/network/NetworkLogViewColumns.ts | path": {
    "message": "Pfad"
  },
  "panels/network/NetworkLogViewColumns.ts | priority": {
    "message": "Priorität"
  },
  "panels/network/NetworkLogViewColumns.ts | protocol": {
    "message": "Protokoll"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddress": {
    "message": "Remote-Adresse"
  },
  "panels/network/NetworkLogViewColumns.ts | remoteAddressSpace": {
    "message": "Bereich für Remote-Adresse"
  },
  "panels/network/NetworkLogViewColumns.ts | responseHeaders": {
    "message": "Antwortheader"
  },
  "panels/network/NetworkLogViewColumns.ts | responseTime": {
    "message": "Bearbeitungszeit"
  },
  "panels/network/NetworkLogViewColumns.ts | scheme": {
    "message": "Schema"
  },
  "panels/network/NetworkLogViewColumns.ts | setCookies": {
    "message": "Cookies einstellen"
  },
  "panels/network/NetworkLogViewColumns.ts | size": {
    "message": "Größe"
  },
  "panels/network/NetworkLogViewColumns.ts | startTime": {
    "message": "Startzeit"
  },
  "panels/network/NetworkLogViewColumns.ts | status": {
    "message": "Status"
  },
  "panels/network/NetworkLogViewColumns.ts | text": {
    "message": "SMS"
  },
  "panels/network/NetworkLogViewColumns.ts | time": {
    "message": "Zeit"
  },
  "panels/network/NetworkLogViewColumns.ts | totalDuration": {
    "message": "Gesamtdauer"
  },
  "panels/network/NetworkLogViewColumns.ts | type": {
    "message": "Typ"
  },
  "panels/network/NetworkLogViewColumns.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkLogViewColumns.ts | waterfall": {
    "message": "Wasserfall"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | addCustomHeader": {
    "message": "Benutzerdefinierten Header hinzufügen…"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | headerName": {
    "message": "Headername"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | manageHeaderColumns": {
    "message": "Headerspalten verwalten"
  },
  "panels/network/NetworkManageCustomHeadersView.ts | noCustomHeaders": {
    "message": "Keine benutzerdefinierten Header"
  },
  "panels/network/NetworkPanel.ts | captureScreenshots": {
    "message": "Screenshots aufnehmen"
  },
  "panels/network/NetworkPanel.ts | captureScreenshotsWhenLoadingA": {
    "message": "Screenshots erfassen, während sich eine Seite aufbaut"
  },
  "panels/network/NetworkPanel.ts | clear": {
    "message": "Löschen"
  },
  "panels/network/NetworkPanel.ts | close": {
    "message": "Schließen"
  },
  "panels/network/NetworkPanel.ts | disableCache": {
    "message": "Cache deaktivieren"
  },
  "panels/network/NetworkPanel.ts | disableCacheWhileDevtoolsIsOpen": {
    "message": "Cache deaktivieren (während DevTools geöffnet ist)"
  },
  "panels/network/NetworkPanel.ts | doNotClearLogOnPageReload": {
    "message": "Protokoll beim Aktualisieren/Bedienen der Seite nicht löschen"
  },
  "panels/network/NetworkPanel.ts | exportHar": {
    "message": "HAR exportieren..."
  },
  "panels/network/NetworkPanel.ts | fetchingFrames": {
    "message": "Frames werden abgerufen…"
  },
  "panels/network/NetworkPanel.ts | groupByFrame": {
    "message": "Nach Frame gruppieren"
  },
  "panels/network/NetworkPanel.ts | groupRequestsByTopLevelRequest": {
    "message": "Anforderungen nach Anfrage-Frame der obersten Ebene gruppieren"
  },
  "panels/network/NetworkPanel.ts | hitSToReloadAndCaptureFilmstrip": {
    "message": "Drücken Sie {PH1}, um Filmstreifen neu zu laden und zu erfassen."
  },
  "panels/network/NetworkPanel.ts | importHarFile": {
    "message": "HAR-Datei importieren..."
  },
  "panels/network/NetworkPanel.ts | moreNetworkConditions": {
    "message": "Weitere Netzwerkbedingungen…"
  },
  "panels/network/NetworkPanel.ts | networkSettings": {
    "message": "Netzwerkeinstellungen"
  },
  "panels/network/NetworkPanel.ts | preserveLog": {
    "message": "Preserve log"
  },
  "panels/network/NetworkPanel.ts | recordingFrames": {
    "message": "Frames werden aufgezeichnet…"
  },
  "panels/network/NetworkPanel.ts | revealInNetworkPanel": {
    "message": "Im Netzwerkbereich anzeigen"
  },
  "panels/network/NetworkPanel.ts | search": {
    "message": "Suche"
  },
  "panels/network/NetworkPanel.ts | showMoreInformationInRequestRows": {
    "message": "Weitere Informationen in Anfragezeilen anzeigen"
  },
  "panels/network/NetworkPanel.ts | showOverview": {
    "message": "Übersicht anzeigen"
  },
  "panels/network/NetworkPanel.ts | showOverviewOfNetworkRequests": {
    "message": "Übersicht der Netzwerkanfragen anzeigen"
  },
  "panels/network/NetworkPanel.ts | throttling": {
    "message": "Drosselung"
  },
  "panels/network/NetworkPanel.ts | useLargeRequestRows": {
    "message": "Große Anfragezeilen verwenden"
  },
  "panels/network/NetworkSearchScope.ts | url": {
    "message": "URL"
  },
  "panels/network/NetworkTimeCalculator.ts | sDownload": {
    "message": "{PH1} Download"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromCache": {
    "message": "{PH1} (vom Cache)"
  },
  "panels/network/NetworkTimeCalculator.ts | sFromServiceworker": {
    "message": "{PH1} (von ServiceWorker)"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatency": {
    "message": "{PH1}-Latenz"
  },
  "panels/network/NetworkTimeCalculator.ts | sLatencySDownloadSTotal": {
    "message": "{PH1} Latenz, {PH2} Download ({PH3} gesamt)"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromThe": {
    "message": "Cookies im Header „set-cookie“ der Antwort, die vom Server empfangen wurden"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereReceivedFromTheServer": {
    "message": "Cookies im Header „set-cookie“ der Antwort, die vom Server empfangen wurden, aber ein fehlerhaftes Format hatten"
  },
  "panels/network/RequestCookiesView.ts | cookiesThatWereSentToTheServerIn": {
    "message": "Cookies im Header „Cookie“ der Anfrage, die an den Server gesendet wurden"
  },
  "panels/network/RequestCookiesView.ts | malformedResponseCookies": {
    "message": "Fehlerhafte Antwort-Cookies"
  },
  "panels/network/RequestCookiesView.ts | noRequestCookiesWereSent": {
    "message": "Es wurden keine Anfrage-Cookies gesendet."
  },
  "panels/network/RequestCookiesView.ts | requestCookies": {
    "message": "Cookies anfragen"
  },
  "panels/network/RequestCookiesView.ts | responseCookies": {
    "message": "Antwort-Cookies"
  },
  "panels/network/RequestCookiesView.ts | showFilteredOutRequestCookies": {
    "message": "Herausgefilterte Anfrage-Cookies anzeigen"
  },
  "panels/network/RequestCookiesView.ts | thisRequestHasNoCookies": {
    "message": "Für diese Anfrage gibt es keine Cookies."
  },
  "panels/network/RequestHeadersView.ts | activeClientExperimentVariation": {
    "message": "client experiment variation IDs aktiv."
  },
  "panels/network/RequestHeadersView.ts | activeClientExperimentVariationIds": {
    "message": "Aktive client experiment variation IDs, die serverseitiges Verhalten auslösen."
  },
  "panels/network/RequestHeadersView.ts | chooseThisOptionIfTheResourceAnd": {
    "message": "Wählen Sie diese Option, wenn die Ressource und das Dokument von der gleichen Website bereitgestellt werden."
  },
  "panels/network/RequestHeadersView.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "panels/network/RequestHeadersView.ts | decoded": {
    "message": "Dekodiert:"
  },
  "panels/network/RequestHeadersView.ts | empty": {
    "message": "(leer)"
  },
  "panels/network/RequestHeadersView.ts | formData": {
    "message": "Formulardaten"
  },
  "panels/network/RequestHeadersView.ts | fromDiskCache": {
    "message": "(vom Datenträgercache)"
  },
  "panels/network/RequestHeadersView.ts | fromMemoryCache": {
    "message": "(aus Arbeitsspeicher-Cache)"
  },
  "panels/network/RequestHeadersView.ts | fromPrefetchCache": {
    "message": "(aus dem Prefetch-Cache)"
  },
  "panels/network/RequestHeadersView.ts | fromServiceWorker": {
    "message": "(von service worker)"
  },
  "panels/network/RequestHeadersView.ts | fromSignedexchange": {
    "message": "(von Signed-Exchange)"
  },
  "panels/network/RequestHeadersView.ts | general": {
    "message": "Allgemein"
  },
  "panels/network/RequestHeadersView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/network/RequestHeadersView.ts | learnMoreInTheIssuesTab": {
    "message": "Weitere Informationen finden Sie im Tab für Probleme"
  },
  "panels/network/RequestHeadersView.ts | onlyChooseThisOptionIfAn": {
    "message": "Wählen Sie diese Option nur aus, wenn beliebige Websites mit dieser Ressource kein Sicherheitsrisiko darstellen."
  },
  "panels/network/RequestHeadersView.ts | onlyProvisionalHeadersAre": {
    "message": "Es sind nur vorübergehende Header verfügbar, da diese Anfrage nicht über das Netzwerk gesendet wurde. Stattdessen wurde sie über einen lokalen Cache ausgeliefert, der die originalen Anfrageheader nicht speichert. Deaktivieren Sie den Cache, um die vollständigen Anfrageheader anzuzeigen."
  },
  "panels/network/RequestHeadersView.ts | provisionalHeadersAreShown": {
    "message": "Vorübergehende Header werden angezeigt"
  },
  "panels/network/RequestHeadersView.ts | provisionalHeadersAreShownS": {
    "message": "Vorläufige Header werden angezeigt. Deaktivieren Sie den Cache, um die vollständigen Header anzuzeigen."
  },
  "panels/network/RequestHeadersView.ts | queryStringParameters": {
    "message": "Abfragestringparameter"
  },
  "panels/network/RequestHeadersView.ts | referrerPolicy": {
    "message": "Richtlinien für Verweis-URL"
  },
  "panels/network/RequestHeadersView.ts | remoteAddress": {
    "message": "Remote-Adresse"
  },
  "panels/network/RequestHeadersView.ts | requestHeaders": {
    "message": "Anfrageheader"
  },
  "panels/network/RequestHeadersView.ts | requestMethod": {
    "message": "Anfragemethode"
  },
  "panels/network/RequestHeadersView.ts | requestPayload": {
    "message": "Nutzlast anfordern"
  },
  "panels/network/RequestHeadersView.ts | requestUrl": {
    "message": "URL beantragen"
  },
  "panels/network/RequestHeadersView.ts | responseHeaders": {
    "message": "Antwortheader"
  },
  "panels/network/RequestHeadersView.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "panels/network/RequestHeadersView.ts | statusCode": {
    "message": "Statuscode"
  },
  "panels/network/RequestHeadersView.ts | thisDocumentWasBlockedFrom": {
    "message": "Das Laden dieses Dokuments in einem iframe mit einem sandbox-Attribut wurde blockiert, da dieses Dokument eine herkunftsübergreifende Richtlinie für die Ursprungsseite festgelegt hat."
  },
  "panels/network/RequestHeadersView.ts | toEmbedThisFrameInYourDocument": {
    "message": "Um diesen Frame in Ihr Dokument einzubetten, muss die Antwort die ursprungsübergreifende Einbettungs-Richtlinie aktivieren, indem sie den folgenden Antwortheader angibt:"
  },
  "panels/network/RequestHeadersView.ts | toUseThisResourceFromADifferent": {
    "message": "Um diese Ressource aus einem anderen Ursprung zu verwenden, muss der Server in den Antwortheadern eine ursprungsübergreifende Ressourcenrichtlinie festlegen:"
  },
  "panels/network/RequestHeadersView.ts | toUseThisResourceFromADifferentOrigin": {
    "message": "Um diese Ressource aus einem anderen Ursprung zu verwenden, kann der Server Einschränkungen für den Antwortheader der ursprungsübergreifenden Ressourcenrichtlinie aufheben:"
  },
  "panels/network/RequestHeadersView.ts | toUseThisResourceFromADifferentSite": {
    "message": "Um diese Ressource aus einer anderen Website zu verwenden, kann der Server Einschränkungen für den Antwortheader der ursprungsübergreifenden Ressourcenrichtlinie aufheben:"
  },
  "panels/network/RequestHeadersView.ts | unableToDecodeValue": {
    "message": "(Wert kann nicht entschlüsselt werden)"
  },
  "panels/network/RequestHeadersView.ts | viewDecoded": {
    "message": "Dekodierte anzeigen"
  },
  "panels/network/RequestHeadersView.ts | viewDecodedL": {
    "message": "Dekodierte anzeigen"
  },
  "panels/network/RequestHeadersView.ts | viewParsed": {
    "message": "Analysierte anzeigen"
  },
  "panels/network/RequestHeadersView.ts | viewParsedL": {
    "message": "Geparste anzeigen"
  },
  "panels/network/RequestHeadersView.ts | viewSource": {
    "message": "Quelle anzeigen"
  },
  "panels/network/RequestHeadersView.ts | viewSourceL": {
    "message": "Quelltext anzeigen"
  },
  "panels/network/RequestHeadersView.ts | viewUrlEncoded": {
    "message": "URL verschlüsselt anzeigen"
  },
  "panels/network/RequestHeadersView.ts | viewUrlEncodedL": {
    "message": "URL verschlüsselt anzeigen"
  },
  "panels/network/RequestInitiatorView.ts | requestCallStack": {
    "message": "Aufrufstack anfordern"
  },
  "panels/network/RequestInitiatorView.ts | requestInitiatorChain": {
    "message": "Initiatorenkette anfordern"
  },
  "panels/network/RequestInitiatorView.ts | thisRequestHasNoInitiatorData": {
    "message": "Diese Anfrage hat keine Initiator-Daten."
  },
  "panels/network/RequestPreviewView.ts | failedToLoadResponseData": {
    "message": "Antwortdaten konnten nicht geladen werden"
  },
  "panels/network/RequestPreviewView.ts | previewNotAvailable": {
    "message": "Vorschau nicht verfügbar"
  },
  "panels/network/RequestResponseView.ts | failedToLoadResponseData": {
    "message": "Antwortdaten konnten nicht geladen werden"
  },
  "panels/network/RequestResponseView.ts | thisRequestHasNoResponseData": {
    "message": "Für diese Anfrage sind keine Antwortdaten verfügbar."
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameS": {
    "message": "Name des Cache-Speichers: {PH1}"
  },
  "panels/network/RequestTimingView.ts | cacheStorageCacheNameUnknown": {
    "message": "Name des Cache-Speichers: unbekannt"
  },
  "panels/network/RequestTimingView.ts | cautionRequestIsNotFinishedYet": {
    "message": "ACHTUNG: Die Anfrage ist noch nicht beendet!"
  },
  "panels/network/RequestTimingView.ts | connectionStart": {
    "message": "Verbindungsstart"
  },
  "panels/network/RequestTimingView.ts | contentDownload": {
    "message": "Herunterladen von Inhalten"
  },
  "panels/network/RequestTimingView.ts | dnsLookup": {
    "message": "DNS Lookup"
  },
  "panels/network/RequestTimingView.ts | duration": {
    "message": "Dauer"
  },
  "panels/network/RequestTimingView.ts | durationC": {
    "message": "DAUER"
  },
  "panels/network/RequestTimingView.ts | duringDevelopmentYouCanUseSToAdd": {
    "message": "Bei der Entwicklung können Sie {PH1} verwenden, um Einblicke in das serverseitige Timing dieser Anforderung zu gewinnen."
  },
  "panels/network/RequestTimingView.ts | explanation": {
    "message": "Erklärung"
  },
  "panels/network/RequestTimingView.ts | fallbackCode": {
    "message": "Fallbackcode"
  },
  "panels/network/RequestTimingView.ts | fromHttpCache": {
    "message": "Vom HTTP-Cache"
  },
  "panels/network/RequestTimingView.ts | initialConnection": {
    "message": "Ursprüngliche Verbindung"
  },
  "panels/network/RequestTimingView.ts | label": {
    "message": "Label"
  },
  "panels/network/RequestTimingView.ts | networkFetch": {
    "message": "Netzwerk-Abfrage"
  },
  "panels/network/RequestTimingView.ts | originalRequest": {
    "message": "Ursprüngliche Anfrage"
  },
  "panels/network/RequestTimingView.ts | proxyNegotiation": {
    "message": "Proxy-Verhandlung"
  },
  "panels/network/RequestTimingView.ts | queuedAtS": {
    "message": "In der Warteschlange bei {PH1}"
  },
  "panels/network/RequestTimingView.ts | queueing": {
    "message": "Warteschlange"
  },
  "panels/network/RequestTimingView.ts | readingPush": {
    "message": "Push lesen"
  },
  "panels/network/RequestTimingView.ts | receivingPush": {
    "message": "Push wird empfangen"
  },
  "panels/network/RequestTimingView.ts | requestSent": {
    "message": "Anfrage gesendet"
  },
  "panels/network/RequestTimingView.ts | requestToServiceworker": {
    "message": "Anfrage an ServiceWorker"
  },
  "panels/network/RequestTimingView.ts | requestresponse": {
    "message": "RequestResponse"
  },
  "panels/network/RequestTimingView.ts | resourceScheduling": {
    "message": "Ressourcenplanung"
  },
  "panels/network/RequestTimingView.ts | respondwith": {
    "message": "respondWith"
  },
  "panels/network/RequestTimingView.ts | responseReceived": {
    "message": "Antwort erhalten"
  },
  "panels/network/RequestTimingView.ts | retrievalTimeS": {
    "message": "Abrufzeit: {PH1}"
  },
  "panels/network/RequestTimingView.ts | serverPush": {
    "message": "Server-Push"
  },
  "panels/network/RequestTimingView.ts | serverTiming": {
    "message": "Server-Timing"
  },
  "panels/network/RequestTimingView.ts | serviceworkerCacheStorage": {
    "message": "ServiceWorker-Cache-Speicher"
  },
  "panels/network/RequestTimingView.ts | sourceOfResponseS": {
    "message": "Quelle der Antwort: {PH1}"
  },
  "panels/network/RequestTimingView.ts | ssl": {
    "message": "SSL"
  },
  "panels/network/RequestTimingView.ts | stalled": {
    "message": "Verzögert"
  },
  "panels/network/RequestTimingView.ts | startedAtS": {
    "message": "Gestartet um {PH1}"
  },
  "panels/network/RequestTimingView.ts | startup": {
    "message": "Starten"
  },
  "panels/network/RequestTimingView.ts | theServerTimingApi": {
    "message": "die Server Timing API"
  },
  "panels/network/RequestTimingView.ts | time": {
    "message": "ZEIT"
  },
  "panels/network/RequestTimingView.ts | total": {
    "message": "Gesamt"
  },
  "panels/network/RequestTimingView.ts | unknown": {
    "message": "Unbekannt"
  },
  "panels/network/RequestTimingView.ts | waitingTtfb": {
    "message": "Warten (TTFB)"
  },
  "panels/network/RequestTimingView.ts | waterfall": {
    "message": "Wasserfall"
  },
  "panels/network/ResourceWebSocketFrameView.ts | all": {
    "message": "Alles"
  },
  "panels/network/ResourceWebSocketFrameView.ts | binaryMessage": {
    "message": "Binäre Nachricht"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/network/ResourceWebSocketFrameView.ts | clearAllL": {
    "message": "Alle löschen"
  },
  "panels/network/ResourceWebSocketFrameView.ts | connectionCloseMessage": {
    "message": "Nachricht zur Verbindungstrennung"
  },
  "panels/network/ResourceWebSocketFrameView.ts | continuationFrame": {
    "message": "Fortsetzungs-Frame"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessage": {
    "message": "Nachricht kopieren"
  },
  "panels/network/ResourceWebSocketFrameView.ts | copyMessageD": {
    "message": "Nachricht kopieren…"
  },
  "panels/network/ResourceWebSocketFrameView.ts | data": {
    "message": "Daten"
  },
  "panels/network/ResourceWebSocketFrameView.ts | enterRegex": {
    "message": "Regex eingeben, beispielsweise: (web)?socket"
  },
  "panels/network/ResourceWebSocketFrameView.ts | filter": {
    "message": "Filtern"
  },
  "panels/network/ResourceWebSocketFrameView.ts | length": {
    "message": "Länge"
  },
  "panels/network/ResourceWebSocketFrameView.ts | na": {
    "message": "–"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pingMessage": {
    "message": "Ping-Nachricht"
  },
  "panels/network/ResourceWebSocketFrameView.ts | pongMessage": {
    "message": "Pong-Nachricht"
  },
  "panels/network/ResourceWebSocketFrameView.ts | receive": {
    "message": "Empfangen"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeS": {
    "message": "{PH1} (Opcode {PH2})"
  },
  "panels/network/ResourceWebSocketFrameView.ts | sOpcodeSMask": {
    "message": "{PH1} (Opcode {PH2}, maskieren)"
  },
  "panels/network/ResourceWebSocketFrameView.ts | selectMessageToBrowseItsContent": {
    "message": "Wählen Sie eine Nachricht aus, um ihren Inhalt zu durchsuchen."
  },
  "panels/network/ResourceWebSocketFrameView.ts | send": {
    "message": "Senden"
  },
  "panels/network/ResourceWebSocketFrameView.ts | textMessage": {
    "message": "SMS"
  },
  "panels/network/ResourceWebSocketFrameView.ts | time": {
    "message": "Zeit"
  },
  "panels/network/ResourceWebSocketFrameView.ts | webSocketFrame": {
    "message": "WebSocket-Frame"
  },
  "panels/network/SignedExchangeInfoView.ts | certificate": {
    "message": "Zertifikat"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateSha": {
    "message": "SHA256-Zertifikat"
  },
  "panels/network/SignedExchangeInfoView.ts | certificateUrl": {
    "message": "Zertifikat-URL"
  },
  "panels/network/SignedExchangeInfoView.ts | date": {
    "message": "Datum"
  },
  "panels/network/SignedExchangeInfoView.ts | errors": {
    "message": "Fehler"
  },
  "panels/network/SignedExchangeInfoView.ts | expires": {
    "message": "Ablaufdatum"
  },
  "panels/network/SignedExchangeInfoView.ts | headerIntegrityHash": {
    "message": "Header-Integrity-Hash"
  },
  "panels/network/SignedExchangeInfoView.ts | integrity": {
    "message": "Integrität"
  },
  "panels/network/SignedExchangeInfoView.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/network/SignedExchangeInfoView.ts | label": {
    "message": "Label"
  },
  "panels/network/SignedExchangeInfoView.ts | learnmore": {
    "message": "Weitere Informationen"
  },
  "panels/network/SignedExchangeInfoView.ts | requestUrl": {
    "message": "URL beantragen"
  },
  "panels/network/SignedExchangeInfoView.ts | responseCode": {
    "message": "Antwortcode"
  },
  "panels/network/SignedExchangeInfoView.ts | responseHeaders": {
    "message": "Antwortheader"
  },
  "panels/network/SignedExchangeInfoView.ts | signature": {
    "message": "Signatur"
  },
  "panels/network/SignedExchangeInfoView.ts | signedHttpExchange": {
    "message": "Signed HTTP Exchange"
  },
  "panels/network/SignedExchangeInfoView.ts | subject": {
    "message": "Subject"
  },
  "panels/network/SignedExchangeInfoView.ts | validFrom": {
    "message": "Gültig ab"
  },
  "panels/network/SignedExchangeInfoView.ts | validUntil": {
    "message": "Gültig bis"
  },
  "panels/network/SignedExchangeInfoView.ts | validityUrl": {
    "message": "Gültigkeits-URL"
  },
  "panels/network/SignedExchangeInfoView.ts | viewCertificate": {
    "message": "Zertifikat ansehen"
  },
  "panels/network/components/RequestTrustTokensView.ts | aClientprovidedArgumentWas": {
    "message": "Ein vom Client bereitgestelltes Argument war fehlerhaft oder anderweitig ungültig."
  },
  "panels/network/components/RequestTrustTokensView.ts | eitherNoInputsForThisOperation": {
    "message": "Es sind entweder keine Eingaben für diesen Vorgang verfügbar oder die Ausgabe überschreitet das Kontingent für den Vorgang."
  },
  "panels/network/components/RequestTrustTokensView.ts | failure": {
    "message": "Fehler"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/network/components/RequestTrustTokensView.ts | issuers": {
    "message": "Aussteller"
  },
  "panels/network/components/RequestTrustTokensView.ts | numberOfIssuedTokens": {
    "message": "Anzahl ausgestellter Token"
  },
  "panels/network/components/RequestTrustTokensView.ts | parameters": {
    "message": "Parameter"
  },
  "panels/network/components/RequestTrustTokensView.ts | refreshPolicy": {
    "message": "Richtlinie aktualisieren"
  },
  "panels/network/components/RequestTrustTokensView.ts | result": {
    "message": "Ergebnis"
  },
  "panels/network/components/RequestTrustTokensView.ts | status": {
    "message": "Status"
  },
  "panels/network/components/RequestTrustTokensView.ts | success": {
    "message": "Fertig"
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationFailedForAnUnknown": {
    "message": "Der Vorgang konnte aus unbekanntem Grund nicht abgeschlossen werden."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationWasFulfilledLocally": {
    "message": "Der Vorgang wurde lokal ausgeführt. Es wurde keine Anfrage gesendet."
  },
  "panels/network/components/RequestTrustTokensView.ts | theOperationsResultWasServedFrom": {
    "message": "Das Ergebnis des Vorgangs wurde vom Cache ausgeliefert."
  },
  "panels/network/components/RequestTrustTokensView.ts | theServersResponseWasMalformedOr": {
    "message": "Die Serverantwort war fehlerhaft oder anderweitig ungültig."
  },
  "panels/network/components/RequestTrustTokensView.ts | topLevelOrigin": {
    "message": "Quelle der obersten Ebene"
  },
  "panels/network/components/RequestTrustTokensView.ts | type": {
    "message": "Typ"
  },
  "panels/network/network-meta.ts | colorCode": {
    "message": "Farbcode"
  },
  "panels/network/network-meta.ts | colorCodeByResourceType": {
    "message": "Nach Ressourcentyp farbcodieren"
  },
  "panels/network/network-meta.ts | colorcodeResourceTypes": {
    "message": "Farbcode-Ressourcentypen"
  },
  "panels/network/network-meta.ts | diskCache": {
    "message": "Datenträger-Cache"
  },
  "panels/network/network-meta.ts | dontGroupNetworkLogItemsByFrame": {
    "message": "Netzwerkprotokoll-Einträge nicht nach Frame gruppieren"
  },
  "panels/network/network-meta.ts | frame": {
    "message": "Frame"
  },
  "panels/network/network-meta.ts | group": {
    "message": "Gruppe"
  },
  "panels/network/network-meta.ts | groupNetworkLogByFrame": {
    "message": "Netzwerkprotokoll nach Frame gruppieren"
  },
  "panels/network/network-meta.ts | groupNetworkLogItemsByFrame": {
    "message": "Netzwerkprotokoll-Einträge nach Frame gruppieren"
  },
  "panels/network/network-meta.ts | hideRequestDetails": {
    "message": "Anfragedetails ausblenden"
  },
  "panels/network/network-meta.ts | netWork": {
    "message": "Netzwerk"
  },
  "panels/network/network-meta.ts | network": {
    "message": "Netz"
  },
  "panels/network/network-meta.ts | networkConditions": {
    "message": "Netzwerkbedingungen"
  },
  "panels/network/network-meta.ts | networkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage"
  },
  "panels/network/network-meta.ts | networkThrottling": {
    "message": "Netzwerkdrosselung"
  },
  "panels/network/network-meta.ts | recordNetworkLog": {
    "message": "Netzwerkprotokoll aufzeichnen"
  },
  "panels/network/network-meta.ts | resourceType": {
    "message": "Ressourcentyp"
  },
  "panels/network/network-meta.ts | search": {
    "message": "Suche"
  },
  "panels/network/network-meta.ts | showNetwork": {
    "message": "Netzwerk anzeigen"
  },
  "panels/network/network-meta.ts | showNetworkConditions": {
    "message": "Netzwerkbedingungen anzeigen"
  },
  "panels/network/network-meta.ts | showNetworkRequestBlocking": {
    "message": "Blockierung der Netzwerkanfrage anzeigen"
  },
  "panels/network/network-meta.ts | showSearch": {
    "message": "Suche anzeigen"
  },
  "panels/network/network-meta.ts | stopRecordingNetworkLog": {
    "message": "Aufzeichnung des Netzwerkprotokolls beenden"
  },
  "panels/network/network-meta.ts | useDefaultColors": {
    "message": "Standardfarben verwenden"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | cpuUsage": {
    "message": "CPU-Verwendung"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documentFrames": {
    "message": "Dokument-Frames"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | documents": {
    "message": "Dokumente"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | domNodes": {
    "message": "DOM-Knoten"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | graphsDisplayingARealtimeViewOf": {
    "message": "Grafiken, die Leistungsmesswerte in Echtzeit anzeigen"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsEventListeners": {
    "message": "JS-Ereignis-Listener"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | jsHeapSize": {
    "message": "JS-Heap-Größe"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | layoutsSec": {
    "message": "Layouts/Sek."
  },
  "panels/performance_monitor/PerformanceMonitor.ts | paused": {
    "message": "Pausiert"
  },
  "panels/performance_monitor/PerformanceMonitor.ts | styleRecalcsSec": {
    "message": "Style-Neuberechnungen/Sek."
  },
  "panels/performance_monitor/performance_monitor-meta.ts | activity": {
    "message": "Aktivität"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | metrics": {
    "message": "Messwerte"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | monitor": {
    "message": "Überwachen"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performance": {
    "message": "Leistung"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | performanceMonitor": {
    "message": "Leistungsüberwachung"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | showPerformanceMonitor": {
    "message": "Performance Monitor anzeigen"
  },
  "panels/performance_monitor/performance_monitor-meta.ts | systemMonitor": {
    "message": "Systemmonitor"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedSelfTime": {
    "message": "Zusammengefasste Zeit für Einzelaktivität"
  },
  "panels/profiler/CPUProfileView.ts | aggregatedTotalTime": {
    "message": "Aggregierte Gesamtzeit"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfiles": {
    "message": "CPU-PROFILE"
  },
  "panels/profiler/CPUProfileView.ts | cpuProfilesShow": {
    "message": "CPU-Profile zeigen, wo die Ausführungszeit in den JavaScript-Funktionen Ihrer Seite verbracht wird."
  },
  "panels/profiler/CPUProfileView.ts | fms": {
    "message": "{PH1} ms"
  },
  "panels/profiler/CPUProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/CPUProfileView.ts | name": {
    "message": "Name"
  },
  "panels/profiler/CPUProfileView.ts | notOptimized": {
    "message": "Nicht optimiert"
  },
  "panels/profiler/CPUProfileView.ts | recordJavascriptCpuProfile": {
    "message": "JavaScript-CPU-Profil aufzeichnen"
  },
  "panels/profiler/CPUProfileView.ts | recording": {
    "message": "Aufnahme läuft…"
  },
  "panels/profiler/CPUProfileView.ts | selfTime": {
    "message": "Zeit für Einzelaktivität"
  },
  "panels/profiler/CPUProfileView.ts | startCpuProfiling": {
    "message": "CPU-Profiling starten"
  },
  "panels/profiler/CPUProfileView.ts | stopCpuProfiling": {
    "message": "CPU-Profilerstellung beenden"
  },
  "panels/profiler/CPUProfileView.ts | totalTime": {
    "message": "Gesamtzeit"
  },
  "panels/profiler/CPUProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfileView.ts | allocationSampling": {
    "message": "Zuweisungs-Sampling"
  },
  "panels/profiler/HeapProfileView.ts | formatPercent": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapProfileView.ts | heapProfilerIsRecording": {
    "message": "Heap-Profiler zeichnet auf"
  },
  "panels/profiler/HeapProfileView.ts | itProvidesGoodApproximation": {
    "message": "Es bietet eine gute Annäherung an Zuweisungen, die nach JavaScript-Ausführungsstacks aufgeschlüsselt sind."
  },
  "panels/profiler/HeapProfileView.ts | name": {
    "message": "Name"
  },
  "panels/profiler/HeapProfileView.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | recordMemoryAllocations": {
    "message": "Arbeitsspeicherzuweisungen stichprobenartig aufzeichnen."
  },
  "panels/profiler/HeapProfileView.ts | recording": {
    "message": "Aufnahme läuft…"
  },
  "panels/profiler/HeapProfileView.ts | sBytes": {
    "message": "{PH1} Byte"
  },
  "panels/profiler/HeapProfileView.ts | samplingProfiles": {
    "message": "SAMPLING-PROFILE"
  },
  "panels/profiler/HeapProfileView.ts | selectedSizeS": {
    "message": "Ausgewählte Größe: {PH1}"
  },
  "panels/profiler/HeapProfileView.ts | selfSize": {
    "message": "Eigene Größe"
  },
  "panels/profiler/HeapProfileView.ts | selfSizeBytes": {
    "message": "Eigene Größe (Bytes)"
  },
  "panels/profiler/HeapProfileView.ts | skb": {
    "message": "{PH1} KB"
  },
  "panels/profiler/HeapProfileView.ts | startHeapProfiling": {
    "message": "Heap-Profiling beginnen"
  },
  "panels/profiler/HeapProfileView.ts | stopHeapProfiling": {
    "message": "Heap-Profiling beenden"
  },
  "panels/profiler/HeapProfileView.ts | stopping": {
    "message": "Wird beendet…"
  },
  "panels/profiler/HeapProfileView.ts | thisProfileTypeHasMinimal": {
    "message": "Dieser Profiltyp hat einen minimalen Leistungsoverhead und kann für Vorgänge mit langer Ausführungszeit verwendet werden."
  },
  "panels/profiler/HeapProfileView.ts | totalSize": {
    "message": "Gesamtgröße"
  },
  "panels/profiler/HeapProfileView.ts | totalSizeBytes": {
    "message": "Gesamtgröße (Byte)"
  },
  "panels/profiler/HeapProfileView.ts | url": {
    "message": "URL"
  },
  "panels/profiler/HeapProfilerPanel.ts | revealInSummaryView": {
    "message": "In Zusammenfassungsansicht anzeigen"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Deleted": {
    "message": "# gelöscht"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | Delta": {
    "message": "# Delta"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | New": {
    "message": "Neu: #"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocSize": {
    "message": "Zuweisungsgröße"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | allocation": {
    "message": "Zuweisung"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | constructorString": {
    "message": "Konstrukteur"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | count": {
    "message": "Anzahl"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distance": {
    "message": "Entfernung"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | distanceFromWindowObject": {
    "message": "Entfernung vom Fensterobjekt"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | freedSize": {
    "message": "Freigegebene Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | function": {
    "message": "Funktion"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotConstructors": {
    "message": "Heap-Snapshot-Konstruktoren"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotDiff": {
    "message": "Heap-Snapshot-Differenz"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | heapSnapshotRetainment": {
    "message": "Heap-Snapshot-Beibehaltung"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveCount": {
    "message": "Live-Anzahl"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | liveSize": {
    "message": "Live-Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | object": {
    "message": "Objekt"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | retainedSize": {
    "message": "Beibehaltene Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | shallowSize": {
    "message": "Flache Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | size": {
    "message": "Größe"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeDelta": {
    "message": "Größe Delta"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectItselfInBytes": {
    "message": "Größe des Objekts in Byte"
  },
  "panels/profiler/HeapSnapshotDataGrids.ts | sizeOfTheObjectPlusTheGraphIt": {
    "message": "Größe des Objekts plus der darin enthaltenen Grafik in Byte"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | detachedFromDomTree": {
    "message": "Vom DOM-Baum getrennt"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | genericStringsTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | inElement": {
    "message": "in"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | internalArray": {
    "message": "(internes Array)[]"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | previewIsNotAvailable": {
    "message": "Vorschau ist nicht verfügbar."
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealInSummaryView": {
    "message": "In Zusammenfassungsansicht anzeigen"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | revealObjectSWithIdSInSummary": {
    "message": "„{PH1}“-Objekt mit der ID @{PH2} in Zusammenfassungsansicht zeigen"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | storeAsGlobalVariable": {
    "message": "Als globale Variable speichern"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | summary": {
    "message": "Zusammenfassung"
  },
  "panels/profiler/HeapSnapshotGridNodes.ts | userObjectReachableFromWindow": {
    "message": "Vom Fenster aus erreichbares Benutzerobjekt"
  },
  "panels/profiler/HeapSnapshotProxy.ts | anErrorOccurredWhenACallToMethod": {
    "message": "Als ein Aufruf der Methode „{PH1}“ angefragt wurde, ist ein Fehler aufgetreten"
  },
  "panels/profiler/HeapSnapshotView.ts | AllocationTimelinesShowInstrumented": {
    "message": "Zugewiesene Zeitachsen zeigen instrumentierte JavaScript-Arbeitsspeicherzuweisungen im Zeitverlauf. Sobald das Profil aufgezeichnet ist, können Sie ein Zeitintervall auswählen, um Objekte anzuzeigen, die darin zugewiesen und am Ende der Aufzeichnung noch aktiv sind. Diesen Profiltyp zum Isolieren von Speicherlecks nutzen."
  },
  "panels/profiler/HeapSnapshotView.ts | allObjects": {
    "message": "Alle Objekte"
  },
  "panels/profiler/HeapSnapshotView.ts | allocation": {
    "message": "Zuweisung"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationInstrumentationOn": {
    "message": "Zuweisungs-Instrumentierung auf der Zeitachse"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationStack": {
    "message": "Zuweisungspaket"
  },
  "panels/profiler/HeapSnapshotView.ts | allocationTimelines": {
    "message": "ZEITACHSEN FÜR ZUWEISUNG"
  },
  "panels/profiler/HeapSnapshotView.ts | baseSnapshot": {
    "message": "Basissnapshot"
  },
  "panels/profiler/HeapSnapshotView.ts | captureNumericValue": {
    "message": "Numerische Werte in Aufnahme berücksichtigen"
  },
  "panels/profiler/HeapSnapshotView.ts | classFilter": {
    "message": "Klassenfilter"
  },
  "panels/profiler/HeapSnapshotView.ts | code": {
    "message": "Code"
  },
  "panels/profiler/HeapSnapshotView.ts | comparison": {
    "message": "Vergleich"
  },
  "panels/profiler/HeapSnapshotView.ts | containment": {
    "message": "Eingrenzung"
  },
  "panels/profiler/HeapSnapshotView.ts | filter": {
    "message": "Filtern"
  },
  "panels/profiler/HeapSnapshotView.ts | find": {
    "message": "Suchen"
  },
  "panels/profiler/HeapSnapshotView.ts | heapMemoryUsage": {
    "message": "Heap-Speichernutzung"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshot": {
    "message": "Heap-Snapshot"
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshotProfilesShowMemory": {
    "message": "Heap-Snapshotprofile zeigen die Arbeitsspeicherverteilung für die JavaScript-Objekte und die zugehörigen DOM-Knoten Ihrer Seite an."
  },
  "panels/profiler/HeapSnapshotView.ts | heapSnapshots": {
    "message": "HEAP-SNAPSHOTS"
  },
  "panels/profiler/HeapSnapshotView.ts | jsArrays": {
    "message": "JS-Arrays"
  },
  "panels/profiler/HeapSnapshotView.ts | liveObjects": {
    "message": "Live-Objekte"
  },
  "panels/profiler/HeapSnapshotView.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBeforeS": {
    "message": "Objekte wurden vor {PH1} zugewiesen"
  },
  "panels/profiler/HeapSnapshotView.ts | objectsAllocatedBetweenSAndS": {
    "message": "Zwischen {PH1} und {PH2} zugewiesene Objekte"
  },
  "panels/profiler/HeapSnapshotView.ts | percentagePlaceholder": {
    "message": "{PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | perspective": {
    "message": "Perspektive"
  },
  "panels/profiler/HeapSnapshotView.ts | recordAllocationStacksExtra": {
    "message": "Stacktraces von Zuweisungspaketen aufzeichnen (Overhead für Extraleistung)"
  },
  "panels/profiler/HeapSnapshotView.ts | recording": {
    "message": "Aufnahme läuft…"
  },
  "panels/profiler/HeapSnapshotView.ts | retainers": {
    "message": "Retainer"
  },
  "panels/profiler/HeapSnapshotView.ts | sKb": {
    "message": "{PH1} KB"
  },
  "panels/profiler/HeapSnapshotView.ts | savingD": {
    "message": "Wird gespeichert… {PH1} %"
  },
  "panels/profiler/HeapSnapshotView.ts | selectedSizeS": {
    "message": "Ausgewählte Größe: {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotD": {
    "message": "Snapshot {PH1}"
  },
  "panels/profiler/HeapSnapshotView.ts | snapshotting": {
    "message": "Erstellen von Snapshots…"
  },
  "panels/profiler/HeapSnapshotView.ts | stackWasNotRecordedForThisObject": {
    "message": "Paket wurde für dieses Objekt nicht aufgezeichnet, da es vor dem Start dieser Profilaufzeichnung zugeordnet wurde."
  },
  "panels/profiler/HeapSnapshotView.ts | startRecordingHeapProfile": {
    "message": "Aufzeichnen des Heap-Profils starten"
  },
  "panels/profiler/HeapSnapshotView.ts | statistics": {
    "message": "Statistiken"
  },
  "panels/profiler/HeapSnapshotView.ts | stopRecordingHeapProfile": {
    "message": "Aufnahme des Heap-Profils beenden"
  },
  "panels/profiler/HeapSnapshotView.ts | strings": {
    "message": "Strings"
  },
  "panels/profiler/HeapSnapshotView.ts | summary": {
    "message": "Zusammenfassung"
  },
  "panels/profiler/HeapSnapshotView.ts | systemObjects": {
    "message": "Systemobjekte"
  },
  "panels/profiler/HeapSnapshotView.ts | takeHeapSnapshot": {
    "message": "Heap-Snapshot erstellen"
  },
  "panels/profiler/HeapSnapshotView.ts | treatGlobalObjectsAsRoots": {
    "message": "Globale Objekte als Roots behandeln (das Deaktivieren legt interne Knoten offen und führt übermäßig viele Details ein, es kann aber die Fehlerbehebung für Zyklen in Beibehaltungspfaden unterstützen)"
  },
  "panels/profiler/HeapSnapshotView.ts | typedArrays": {
    "message": "Eingegebene Arrays"
  },
  "panels/profiler/IsolateSelector.ts | changeRate": {
    "message": "{PH1}/s"
  },
  "panels/profiler/IsolateSelector.ts | decreasingBySPerSecond": {
    "message": "verringert sich um {PH1} pro Sekunde"
  },
  "panels/profiler/IsolateSelector.ts | empty": {
    "message": "(leer)"
  },
  "panels/profiler/IsolateSelector.ts | heapSizeChangeTrendOverTheLastS": {
    "message": "Änderungstrend der Heap-Größe in den letzten {PH1} Minuten."
  },
  "panels/profiler/IsolateSelector.ts | heapSizeInUseByLiveJsObjects": {
    "message": "Heap-Größe wird bereits von Live-JavaScript-Objekten verwendet."
  },
  "panels/profiler/IsolateSelector.ts | increasingBySPerSecond": {
    "message": "steigt um {PH1} pro Sekunde"
  },
  "panels/profiler/IsolateSelector.ts | javascriptVmInstances": {
    "message": "JavaScript-VM-Instanzen"
  },
  "panels/profiler/IsolateSelector.ts | totalJsHeapSize": {
    "message": "JS-Heap-Größe gesamt"
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeAcrossAllVm": {
    "message": "JS-Heap-Größe für alle Seiten auf allen VM-Instanzen."
  },
  "panels/profiler/IsolateSelector.ts | totalPageJsHeapSizeChangeTrend": {
    "message": "Änderungstrend der JS-Heap-Größe für die gesamte Seite in den letzten {PH1} Minuten."
  },
  "panels/profiler/LiveHeapProfileView.ts | allocatedJsHeapSizeCurrentlyIn": {
    "message": "Derzeit verwendete zugewiesene JS-Heap-Größe"
  },
  "panels/profiler/LiveHeapProfileView.ts | anonymousScriptS": {
    "message": "(Anonymes Skript {PH1})"
  },
  "panels/profiler/LiveHeapProfileView.ts | heapProfile": {
    "message": "Heap-Profil"
  },
  "panels/profiler/LiveHeapProfileView.ts | jsHeap": {
    "message": "JS Heap"
  },
  "panels/profiler/LiveHeapProfileView.ts | kb": {
    "message": "KB"
  },
  "panels/profiler/LiveHeapProfileView.ts | numberOfVmsSharingTheSameScript": {
    "message": "Anzahl der VMs mit derselben Skriptquelle"
  },
  "panels/profiler/LiveHeapProfileView.ts | scriptUrl": {
    "message": "Skript-URL"
  },
  "panels/profiler/LiveHeapProfileView.ts | urlOfTheScriptSource": {
    "message": "URL der Skriptquelle"
  },
  "panels/profiler/LiveHeapProfileView.ts | vms": {
    "message": "VMs"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingAllocationStatistics": {
    "message": "Zuweisungsstatistiken werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatedNodes": {
    "message": "Dominierte Knoten werden aufgebaut…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingDominatorTree": {
    "message": "Dominator-Baum wird erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingEdgeIndexes": {
    "message": "Handmarken werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingLocations": {
    "message": "Standorte werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingPostorderIndex": {
    "message": "Bestellindex wird erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | buildingRetainers": {
    "message": "Retainer werden erstellt…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingDistances": {
    "message": "Distanzen werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingNodeFlags": {
    "message": "Knoten-Flags werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingRetainedSizes": {
    "message": "Beibehaltungsgrößen werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingSamples": {
    "message": "Samples werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | calculatingStatistics": {
    "message": "Statistiken werden berechnet…"
  },
  "panels/profiler/ModuleUIStrings.ts | done": {
    "message": "Fertig"
  },
  "panels/profiler/ModuleUIStrings.ts | finishedProcessing": {
    "message": "Verarbeitung abgeschlossen."
  },
  "panels/profiler/ModuleUIStrings.ts | loadingAllocationTracesD": {
    "message": "Zuordnungs-Traces werden geladen… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingEdgesD": {
    "message": "Kanten werden geladen… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingLocations": {
    "message": "Standorte werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingNodesD": {
    "message": "Knoten werden geladen… {PH1} %"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSamples": {
    "message": "Beispiele werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingSnapshotInfo": {
    "message": "Snapshotinfos werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | loadingStrings": {
    "message": "Strings werden geladen…"
  },
  "panels/profiler/ModuleUIStrings.ts | parsingStrings": {
    "message": "Strings werden geparst…"
  },
  "panels/profiler/ModuleUIStrings.ts | processingSnapshot": {
    "message": "Snapshot wird verarbeitet…"
  },
  "panels/profiler/ModuleUIStrings.ts | propagatingDomState": {
    "message": "DOM-Status wird angewendet…"
  },
  "panels/profiler/ProfileDataGrid.ts | genericTextTwoPlaceholders": {
    "message": "{PH1}, {PH2}"
  },
  "panels/profiler/ProfileDataGrid.ts | notOptimizedS": {
    "message": "Nicht optimiert: {PH1}"
  },
  "panels/profiler/ProfileLauncherView.ts | load": {
    "message": "Laden"
  },
  "panels/profiler/ProfileLauncherView.ts | selectJavascriptVmInstance": {
    "message": "JavaScript-VM-Instanz auswählen"
  },
  "panels/profiler/ProfileLauncherView.ts | selectProfilingType": {
    "message": "Profilingtyp auswählen"
  },
  "panels/profiler/ProfileLauncherView.ts | start": {
    "message": "Start"
  },
  "panels/profiler/ProfileLauncherView.ts | stop": {
    "message": "Stopp"
  },
  "panels/profiler/ProfileLauncherView.ts | takeSnapshot": {
    "message": "Snapshot erstellen"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | delete": {
    "message": "Löschen"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | load": {
    "message": "Laden…"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | save": {
    "message": "Speichern"
  },
  "panels/profiler/ProfileSidebarTreeElement.ts | saveWithEllipsis": {
    "message": "Speichern…"
  },
  "panels/profiler/ProfileView.ts | chart": {
    "message": "Diagramm"
  },
  "panels/profiler/ProfileView.ts | excludeSelectedFunction": {
    "message": "Ausgewählte Funktion ausschließen"
  },
  "panels/profiler/ProfileView.ts | failedToReadFile": {
    "message": "Lesen der Datei fehlgeschlagen"
  },
  "panels/profiler/ProfileView.ts | fileSReadErrorS": {
    "message": "Lesefehler in Datei „{PH1}“: {PH2}"
  },
  "panels/profiler/ProfileView.ts | findByCostMsNameOrFile": {
    "message": "Nach Kosten (>50 ms), Name oder Datei suchen"
  },
  "panels/profiler/ProfileView.ts | focusSelectedFunction": {
    "message": "Ausgewählte Funktion hervorheben"
  },
  "panels/profiler/ProfileView.ts | function": {
    "message": "Funktion"
  },
  "panels/profiler/ProfileView.ts | heavyBottomUp": {
    "message": "Schwer (von unten nach oben)"
  },
  "panels/profiler/ProfileView.ts | loaded": {
    "message": "Geladen"
  },
  "panels/profiler/ProfileView.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/profiler/ProfileView.ts | loadingD": {
    "message": "Wird geladen… {PH1} %"
  },
  "panels/profiler/ProfileView.ts | parsing": {
    "message": "Wird geparst..."
  },
  "panels/profiler/ProfileView.ts | profile": {
    "message": "Profil"
  },
  "panels/profiler/ProfileView.ts | profileD": {
    "message": "Profil {PH1}"
  },
  "panels/profiler/ProfileView.ts | profileViewMode": {
    "message": "Profilansichtsmodus"
  },
  "panels/profiler/ProfileView.ts | profiler": {
    "message": "Profiler"
  },
  "panels/profiler/ProfileView.ts | restoreAllFunctions": {
    "message": "Alle Funktionen wiederherstellen"
  },
  "panels/profiler/ProfileView.ts | treeTopDown": {
    "message": "Baum (von oben nach unten)"
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadFileSupportedFile": {
    "message": "Datei kann nicht geladen werden. Unterstützte Dateiendungen: „{PH1}“."
  },
  "panels/profiler/ProfilesPanel.ts | cantLoadProfileWhileAnother": {
    "message": "Profil kann nicht geladen werden, während ein anderes Profil aufgezeichnet wird."
  },
  "panels/profiler/ProfilesPanel.ts | clearAllProfiles": {
    "message": "Alle Profile löschen"
  },
  "panels/profiler/ProfilesPanel.ts | load": {
    "message": "Laden…"
  },
  "panels/profiler/ProfilesPanel.ts | profileLoadingFailedS": {
    "message": "Profil konnte nicht geladen werden: {PH1}."
  },
  "panels/profiler/ProfilesPanel.ts | profiles": {
    "message": "Profile"
  },
  "panels/profiler/ProfilesPanel.ts | runD": {
    "message": "{PH1} ausführen"
  },
  "panels/profiler/profiler-meta.ts | liveHeapProfile": {
    "message": "Live-Heap-Profil"
  },
  "panels/profiler/profiler-meta.ts | memory": {
    "message": "Arbeitsspeicher"
  },
  "panels/profiler/profiler-meta.ts | showLiveHeapProfile": {
    "message": "Live-Heap-Profil anzeigen"
  },
  "panels/profiler/profiler-meta.ts | showMemory": {
    "message": "Speicher anzeigen"
  },
  "panels/profiler/profiler-meta.ts | showNativeFunctions": {
    "message": "Native Funktionen in JS Profile anzeigen"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocations": {
    "message": "Aufzeichnung von Heap-Zuweisungen starten"
  },
  "panels/profiler/profiler-meta.ts | startRecordingHeapAllocationsAndReload": {
    "message": "Heap-Zuweisungen erfassen und Seite neu laden"
  },
  "panels/profiler/profiler-meta.ts | startStopRecording": {
    "message": "Aufnahme starten/beenden"
  },
  "panels/profiler/profiler-meta.ts | stopRecordingHeapAllocations": {
    "message": "Aufzeichnen von Heap-Zuweisungen stoppen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | clearAll": {
    "message": "Alle löschen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | direction": {
    "message": "Richtung"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | documentation": {
    "message": "Dokumentation"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | filter": {
    "message": "Filtern"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | method": {
    "message": "Methode"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | noMessageSelected": {
    "message": "Keine Nachricht ausgewählt"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | record": {
    "message": "Aufnehmen"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | request": {
    "message": "Anfrage"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | response": {
    "message": "Antwort"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sMs": {
    "message": "{PH1} ms"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | save": {
    "message": "Speichern"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | sendRawCDPCommand": {
    "message": "RAW-CDP-Befehl senden"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | session": {
    "message": "Sitzung"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | target": {
    "message": "Ziel"
  },
  "panels/protocol_monitor/ProtocolMonitor.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | protocolMonitor": {
    "message": "Protokollmonitor"
  },
  "panels/protocol_monitor/protocol_monitor-meta.ts | showProtocolMonitor": {
    "message": "Protokollmonitor anzeigen"
  },
  "panels/screencast/ScreencastApp.ts | toggleScreencast": {
    "message": "Screencast umschalten"
  },
  "panels/screencast/ScreencastView.ts | addressBar": {
    "message": "Adressleiste"
  },
  "panels/screencast/ScreencastView.ts | back": {
    "message": "zurück"
  },
  "panels/screencast/ScreencastView.ts | forward": {
    "message": "weiterleiten"
  },
  "panels/screencast/ScreencastView.ts | profilingInProgress": {
    "message": "Profiling wird ausgeführt"
  },
  "panels/screencast/ScreencastView.ts | reload": {
    "message": "Neu laden"
  },
  "panels/screencast/ScreencastView.ts | screencastViewOfDebugTarget": {
    "message": "Screencast-Ansicht des Fehlerbehebungsziels"
  },
  "panels/screencast/ScreencastView.ts | theTabIsInactive": {
    "message": "Der Tab ist inaktiv"
  },
  "panels/search/SearchResultsPane.ts | lineS": {
    "message": "Zeile {PH1}"
  },
  "panels/search/SearchResultsPane.ts | matchesCountS": {
    "message": "Übereinstimmende Anzahl {PH1}"
  },
  "panels/search/SearchResultsPane.ts | showDMore": {
    "message": "{PH1} weitere anzeigen"
  },
  "panels/search/SearchView.ts | clear": {
    "message": "Löschen"
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInDFiles": {
    "message": "{PH1} übereinstimmende Zeilen in {PH2} Dateien gefunden."
  },
  "panels/search/SearchView.ts | foundDMatchingLinesInFile": {
    "message": "{PH1} übereinstimmende Zeilen in 1 Datei gefunden."
  },
  "panels/search/SearchView.ts | foundMatchingLineInFile": {
    "message": "1 übereinstimmende Zeile in 1 Datei gefunden."
  },
  "panels/search/SearchView.ts | indexing": {
    "message": "Wird indexiert…"
  },
  "panels/search/SearchView.ts | indexingInterrupted": {
    "message": "Indexierung unterbrochen."
  },
  "panels/search/SearchView.ts | matchCase": {
    "message": "Groß-/Kleinschreibung"
  },
  "panels/search/SearchView.ts | noMatchesFound": {
    "message": "Keine Übereinstimmungen gefunden."
  },
  "panels/search/SearchView.ts | refresh": {
    "message": "Aktualisieren"
  },
  "panels/search/SearchView.ts | search": {
    "message": "Suche"
  },
  "panels/search/SearchView.ts | searchFinished": {
    "message": "Suche beendet"
  },
  "panels/search/SearchView.ts | searchInterrupted": {
    "message": "Suche unterbrochen."
  },
  "panels/search/SearchView.ts | searchQuery": {
    "message": "Suchanfrage"
  },
  "panels/search/SearchView.ts | searching": {
    "message": "Wird gesucht…"
  },
  "panels/search/SearchView.ts | useRegularExpression": {
    "message": "Regulären Ausdruck verwenden"
  },
  "panels/security/SecurityModel.ts | cipherWithMAC": {
    "message": "{PH1} mit {PH2}"
  },
  "panels/security/SecurityModel.ts | keyExchangeWithGroup": {
    "message": "{PH1} mit {PH2}"
  },
  "panels/security/SecurityModel.ts | theSecurityOfThisPageIsUnknown": {
    "message": "Die Sicherheit dieser Seite ist nicht bekannt."
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecure": {
    "message": "Diese Seite ist nicht sicher"
  },
  "panels/security/SecurityModel.ts | thisPageIsNotSecureBrokenHttps": {
    "message": "Diese Seite ist nicht sicher (fehlerhaftes HTTPS)."
  },
  "panels/security/SecurityModel.ts | thisPageIsSecureValidHttps": {
    "message": "Diese Seite ist sicher (gültiges HTTPS)."
  },
  "panels/security/SecurityPanel.ts | activeContentWithCertificate": {
    "message": "aktive Inhalte mit Zertifikatfehlern"
  },
  "panels/security/SecurityPanel.ts | activeMixedContent": {
    "message": "aktive gemischte Inhalte"
  },
  "panels/security/SecurityPanel.ts | allResourcesOnThisPageAreServed": {
    "message": "Alle Ressourcen auf dieser Seite werden sicher angezeigt."
  },
  "panels/security/SecurityPanel.ts | allServedSecurely": {
    "message": "Alle sicher ausgeliefert"
  },
  "panels/security/SecurityPanel.ts | blockedMixedContent": {
    "message": "Gemischte Inhalte blockieren"
  },
  "panels/security/SecurityPanel.ts | certificate": {
    "message": "Zertifikat"
  },
  "panels/security/SecurityPanel.ts | certificateExpiresSoon": {
    "message": "Zertifikat läuft bald ab"
  },
  "panels/security/SecurityPanel.ts | certificateTransparency": {
    "message": "Zertifikatstransparenz"
  },
  "panels/security/SecurityPanel.ts | chromeHasDeterminedThatThisSiteS": {
    "message": "Chrome hat festgestellt, dass diese Website eventuell gefälscht oder betrügerisch ist."
  },
  "panels/security/SecurityPanel.ts | cipher": {
    "message": "Chiffre"
  },
  "panels/security/SecurityPanel.ts | connection": {
    "message": "Verbindung"
  },
  "panels/security/SecurityPanel.ts | contentWithCertificateErrors": {
    "message": "Inhalt mit Zertifikatfehlern"
  },
  "panels/security/SecurityPanel.ts | dataWasEnteredInAFieldOnA": {
    "message": "Daten wurden in einem Feld auf einer nicht sicheren Seite eingegeben. Der URL-Leiste wurde eine Warnung hinzugefügt."
  },
  "panels/security/SecurityPanel.ts | flaggedByGoogleSafeBrowsing": {
    "message": "Von Google-Nutzern gemeldet"
  },
  "panels/security/SecurityPanel.ts | formFieldEditedOnANonsecurePage": {
    "message": "Formularfeld wurde auf einer nicht sicheren Seite bearbeitet"
  },
  "panels/security/SecurityPanel.ts | hashAlgorithm": {
    "message": "Hash-Algorithmus"
  },
  "panels/security/SecurityPanel.ts | hideFullDetails": {
    "message": "Vollständige Details ausblenden"
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownIn": {
    "message": "Wenn dies Ihrer Meinung nach fälschlicherweise angezeigt wird, gehen Sie bitte auf: https://bugs.chromium.org/p/chromium/issues/entry?template=Safety+Tips+Appeals."
  },
  "panels/security/SecurityPanel.ts | ifYouBelieveThisIsShownInErrorSafety": {
    "message": "Wenn dies Ihrer Meinung nach fälschlicherweise angezeigt wird, gehen Sie bitte auf: https://bugs.chromium.org/p/chromium/issues/entry?template=Safety+Tips+Appeals."
  },
  "panels/security/SecurityPanel.ts | info": {
    "message": "Info"
  },
  "panels/security/SecurityPanel.ts | insecureSha": {
    "message": "unsicher (SHA-1)"
  },
  "panels/security/SecurityPanel.ts | issuedAt": {
    "message": "Herausgegeben bei"
  },
  "panels/security/SecurityPanel.ts | issuer": {
    "message": "Aussteller"
  },
  "panels/security/SecurityPanel.ts | keyExchange": {
    "message": "Schlüsselaustausch"
  },
  "panels/security/SecurityPanel.ts | keyExchangeGroup": {
    "message": "Schlüsselaustauschgruppe"
  },
  "panels/security/SecurityPanel.ts | logId": {
    "message": "Protokoll-ID"
  },
  "panels/security/SecurityPanel.ts | logName": {
    "message": "Protokollname"
  },
  "panels/security/SecurityPanel.ts | mainOrigin": {
    "message": "Hauptquelle"
  },
  "panels/security/SecurityPanel.ts | mainOriginNonsecure": {
    "message": "Hauptquelle (nicht sicher)"
  },
  "panels/security/SecurityPanel.ts | mainOriginSecure": {
    "message": "Hauptquelle (sicher)"
  },
  "panels/security/SecurityPanel.ts | missing": {
    "message": "fehlt"
  },
  "panels/security/SecurityPanel.ts | mixedContent": {
    "message": "gemischter Inhalt"
  },
  "panels/security/SecurityPanel.ts | na": {
    "message": "(keine Angabe)"
  },
  "panels/security/SecurityPanel.ts | noSecurityDetailsAreAvailableFor": {
    "message": "Für diesen Ursprung sind keine Sicherheitsdetails verfügbar."
  },
  "panels/security/SecurityPanel.ts | noSecurityInformation": {
    "message": "Keine Sicherheitsinformationen"
  },
  "panels/security/SecurityPanel.ts | nonsecureForm": {
    "message": "nicht sicheres Formular"
  },
  "panels/security/SecurityPanel.ts | nonsecureOrigins": {
    "message": "Nicht sichere Ursprünge"
  },
  "panels/security/SecurityPanel.ts | notSecure": {
    "message": "Nicht sicher"
  },
  "panels/security/SecurityPanel.ts | notSecureBroken": {
    "message": "Nicht sicher (fehlerhaft)"
  },
  "panels/security/SecurityPanel.ts | obsoleteConnectionSettings": {
    "message": "veraltete Verbindungseinstellungen"
  },
  "panels/security/SecurityPanel.ts | openFullCertificateDetails": {
    "message": "Vollständige Zertifikatsdetails öffnen"
  },
  "panels/security/SecurityPanel.ts | origin": {
    "message": "Ursprung"
  },
  "panels/security/SecurityPanel.ts | overview": {
    "message": "Übersicht"
  },
  "panels/security/SecurityPanel.ts | possibleSpoofingUrl": {
    "message": "Mögliche Spoofing-URL"
  },
  "panels/security/SecurityPanel.ts | protocol": {
    "message": "Protokoll"
  },
  "panels/security/SecurityPanel.ts | publickeypinningBypassed": {
    "message": "Public-Key-Pinning umgangen"
  },
  "panels/security/SecurityPanel.ts | publickeypinningWasBypassedByA": {
    "message": "Public-Key-Pinning wurde durch ein lokales Root-Zertifikat umgangen."
  },
  "panels/security/SecurityPanel.ts | reloadThePageToRecordRequestsFor": {
    "message": "Seite aktualisieren, um Anfragen nach HTTP-Ressourcen zu erfassen."
  },
  "panels/security/SecurityPanel.ts | reloadToViewDetails": {
    "message": "Zum Anzeigen der Details neu laden"
  },
  "panels/security/SecurityPanel.ts | resources": {
    "message": "Ressourcen"
  },
  "panels/security/SecurityPanel.ts | rsaKeyExchangeIsObsoleteEnableAn": {
    "message": "Der RSA-Schlüssel-Austausch ist veraltet. ECDHE-basierte Cipher Suite aktivieren."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableAnAesgcmbased": {
    "message": "{PH1} ist veraltet. Eine AES-GCM-basierte Chiffrensammlung aktivieren."
  },
  "panels/security/SecurityPanel.ts | sIsObsoleteEnableTlsOrLater": {
    "message": "{PH1} ist veraltet. TLS 1.2 oder höher aktivieren."
  },
  "panels/security/SecurityPanel.ts | sct": {
    "message": "SCT"
  },
  "panels/security/SecurityPanel.ts | secure": {
    "message": "Sicher"
  },
  "panels/security/SecurityPanel.ts | secureConnectionSettings": {
    "message": "Einstellungen für sichere Verbindung"
  },
  "panels/security/SecurityPanel.ts | secureOrigins": {
    "message": "Sichere Ursprünge"
  },
  "panels/security/SecurityPanel.ts | securityOverview": {
    "message": "Übersicht zur Sicherheit"
  },
  "panels/security/SecurityPanel.ts | showFullDetails": {
    "message": "Vollständige Details anzeigen"
  },
  "panels/security/SecurityPanel.ts | showLess": {
    "message": "Weniger anzeigen"
  },
  "panels/security/SecurityPanel.ts | showMoreSTotal": {
    "message": "Mehr anzeigen ({PH1} insgesamt)"
  },
  "panels/security/SecurityPanel.ts | signatureAlgorithm": {
    "message": "Signaturalgorithmus"
  },
  "panels/security/SecurityPanel.ts | signatureData": {
    "message": "Signaturdaten"
  },
  "panels/security/SecurityPanel.ts | source": {
    "message": "Quelle"
  },
  "panels/security/SecurityPanel.ts | subject": {
    "message": "Subject"
  },
  "panels/security/SecurityPanel.ts | subjectAlternativeNameMissing": {
    "message": "Subject Alternative Name fehlt"
  },
  "panels/security/SecurityPanel.ts | theCertificateChainForThisSite": {
    "message": "Die Zertifikatskette für diese Website enthält ein Zertifikat mit SHA-1-Signatur."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteDoesNot": {
    "message": "Das Zertifikat für diese Website enthält keine Subject Alternative Name-Erweiterung mit einem Domainnamen oder einer IP-Adresse."
  },
  "panels/security/SecurityPanel.ts | theCertificateForThisSiteExpires": {
    "message": "Das Zertifikat für diese Website läuft in weniger als 48 Stunden ab und muss bald erneuert werden."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIs": {
    "message": "Die Verbindung zu dieser Website ist verschlüsselt und wurde mit {PH1}, {PH2} und {PH3} authentifiziert."
  },
  "panels/security/SecurityPanel.ts | theConnectionToThisSiteIsUsingA": {
    "message": "Für die Verbindung zu dieser Website wird ein gültiges, vertrauenswürdiges Serverzertifikat verwendet, das von {PH1} ausgestellt wurde."
  },
  "panels/security/SecurityPanel.ts | theSecurityDetailsAboveAreFrom": {
    "message": "Die Sicherheitsangaben oben stammen aus der ersten geprüften Antwort."
  },
  "panels/security/SecurityPanel.ts | theSecurityOfThisPageIsUnknown": {
    "message": "Die Sicherheit dieser Seite ist nicht bekannt."
  },
  "panels/security/SecurityPanel.ts | theServerSignatureUsesShaWhichIs": {
    "message": "Die Serversignatur verwendet SHA-1. Diese Signatur ist veraltet. Aktivieren Sie stattdessen einen SHA-2-Signaturalgorithmus. (Hinweis: Dies ist nicht dieselbe Signatur wie die im Zertifikat.)"
  },
  "panels/security/SecurityPanel.ts | thisIsAnErrorPage": {
    "message": "Dies ist eine Fehlermeldung."
  },
  "panels/security/SecurityPanel.ts | thisOriginIsANonhttpsSecure": {
    "message": "Diese Seite hat einen Nicht-HTTPS-Ursprung."
  },
  "panels/security/SecurityPanel.ts | thisPageHasANonhttpsSecureOrigin": {
    "message": "Diese Seite hat einen Nicht-HTTPS-Ursprung."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesAFormWithA": {
    "message": "Diese Seite enthält ein Formular mit einem nicht sicheren „Action“-Attribut."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesHttpResources": {
    "message": "Diese Seite enthält HTTP-Ressourcen."
  },
  "panels/security/SecurityPanel.ts | thisPageIncludesResourcesThat": {
    "message": "Diese Seite enthält Ressourcen, die mit Zertifikatsfehlern geladen wurden."
  },
  "panels/security/SecurityPanel.ts | thisPageIsDangerousFlaggedBy": {
    "message": "Diese Seite ist gefährlich (von Google Safe Browsing gemeldet)"
  },
  "panels/security/SecurityPanel.ts | thisPageIsInsecureUnencrypted": {
    "message": "Diese Seite ist unsicher (unverschlüsseltes HTTP)."
  },
  "panels/security/SecurityPanel.ts | thisPageIsNotSecure": {
    "message": "Diese Seite ist nicht sicher"
  },
  "panels/security/SecurityPanel.ts | thisPageIsNotSecureBrokenHttps": {
    "message": "Diese Seite ist nicht sicher (fehlerhaftes HTTPS)."
  },
  "panels/security/SecurityPanel.ts | thisPageIsSecureValidHttps": {
    "message": "Diese Seite ist sicher (gültiges HTTPS)."
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspicious": {
    "message": "Diese Seite ist verdächtig"
  },
  "panels/security/SecurityPanel.ts | thisPageIsSuspiciousFlaggedBy": {
    "message": "Diese Seite ist verdächtig (von Chrome gemeldet)."
  },
  "panels/security/SecurityPanel.ts | thisRequestCompliesWithChromes": {
    "message": "Diese Anfrage entspricht den Anforderungen der Certificate Transparency-Richtlinie von Chrome."
  },
  "panels/security/SecurityPanel.ts | thisRequestDoesNotComplyWith": {
    "message": "Diese Anforderung entspricht nicht der Certificate Transparency-Richtlinie von Chrome."
  },
  "panels/security/SecurityPanel.ts | thisResponseWasLoadedFromCache": {
    "message": "Diese Antwort wurde aus dem Cache geladen. Es fehlen möglicherweise einige Sicherheitsdetails."
  },
  "panels/security/SecurityPanel.ts | thisSiteIsMissingAValidTrusted": {
    "message": "Für diese Website fehlt ein gültiges, vertrauenswürdiges Zertifikat ({PH1})."
  },
  "panels/security/SecurityPanel.ts | thisSitesHostnameLooksSimilarToP": {
    "message": "Der Hostname dieser Website ähnelt dem von {PH1}. Angreifer kopieren manchmal Websites und nehmen kleine, unauffällige Änderungen am Domainnamen vor."
  },
  "panels/security/SecurityPanel.ts | toCheckThisPagesStatusVisit": {
    "message": "Wenn Sie den Status dieser Seite prüfen möchten, rufen Sie g.co/safebrowsingstatus auf."
  },
  "panels/security/SecurityPanel.ts | unknownCanceled": {
    "message": "Unbekannt/abgebrochen"
  },
  "panels/security/SecurityPanel.ts | validAndTrusted": {
    "message": "gültig und vertrauenswürdig"
  },
  "panels/security/SecurityPanel.ts | validFrom": {
    "message": "Gültig ab"
  },
  "panels/security/SecurityPanel.ts | validUntil": {
    "message": "Gültig bis"
  },
  "panels/security/SecurityPanel.ts | validationStatus": {
    "message": "Überprüfungsstatus"
  },
  "panels/security/SecurityPanel.ts | viewCertificate": {
    "message": "Zertifikat ansehen"
  },
  "panels/security/SecurityPanel.ts | viewDRequestsInNetworkPanel": {
    "message": "{n,plural, =1{# Anfrage im Netzwerkbereich anzeigen}other{# Anfragen im Netzwerkbereich anzeigen}}"
  },
  "panels/security/SecurityPanel.ts | viewRequestsInNetworkPanel": {
    "message": "Anfragen im Netzwerkbereich anzeigen"
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedContent": {
    "message": "Sie haben vor Kurzem die Ausführung von Inhalten mit Zertifikatfehlern wie Skripts oder iFrames auf dieser Website zugelassen."
  },
  "panels/security/SecurityPanel.ts | youHaveRecentlyAllowedNonsecure": {
    "message": "Sie haben vor Kurzem die Ausführung unsicherer Inhalte wie Skripts oder iFrames auf dieser Website zugelassen."
  },
  "panels/security/SecurityPanel.ts | yourConnectionToThisOriginIsNot": {
    "message": "Die Verbindung zu dieser Quelle ist nicht sicher."
  },
  "panels/security/SecurityPanel.ts | yourPageRequestedNonsecure": {
    "message": "Ihre Seite hat unsichere Ressourcen angefordert, die blockiert wurden."
  },
  "panels/security/security-meta.ts | security": {
    "message": "Sicherheit"
  },
  "panels/security/security-meta.ts | showSecurity": {
    "message": "Sicherheit anzeigen"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addFilenamePattern": {
    "message": "Dateinamenmuster hinzufügen"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | addPattern": {
    "message": "Muster hinzufügen..."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | behavior": {
    "message": "Verhalten"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | debuggerWillSkipThroughThe": {
    "message": "Der Debugger überspringt die Skripte und stoppt nicht an den von ihnen ausgelösten Ausnahmen."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | disabled": {
    "message": "Deaktiviert"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | frameworkIgnoreList": {
    "message": "Framework-Ignorieren-Liste"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreList": {
    "message": "Ignorieren-Liste"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreListContentScripts": {
    "message": "Inhaltskripte hinzufügen, um die Liste zu ignorieren"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreListContentScriptsExtension": {
    "message": "Content-Skripts hinzufügen, um die Liste zu ignorieren (Erweiterungs-Skripts auf der Seite)"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | ignoreScriptsWhoseNamesMatchS": {
    "message": "Skripts mit dem Namen „{PH1}“ ignorieren"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | noIgnoreListPatterns": {
    "message": "Keine Muster für Ignorieren-Liste"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | pattern": {
    "message": "Muster"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternAlreadyExists": {
    "message": "Das Muster ist bereits vorhanden."
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternCannotBeEmpty": {
    "message": "Muster darf nicht leer sein"
  },
  "panels/settings/FrameworkIgnoreListSettingsTab.ts | patternMustBeAValidRegular": {
    "message": "Muster muss ein gültiger regulärer Ausdruck sein"
  },
  "panels/settings/KeybindsSettingsTab.ts | FullListOfDevtoolsKeyboard": {
    "message": "Vollständige Liste der DevTools-Tastenkombinationen und -Gesten"
  },
  "panels/settings/KeybindsSettingsTab.ts | ResetShortcutsForAction": {
    "message": "Verknüpfungen für Aktion zurücksetzen"
  },
  "panels/settings/KeybindsSettingsTab.ts | RestoreDefaultShortcuts": {
    "message": "Standardverknüpfungen wiederherstellen"
  },
  "panels/settings/KeybindsSettingsTab.ts | addAShortcut": {
    "message": "Verknüpfung hinzufügen"
  },
  "panels/settings/KeybindsSettingsTab.ts | confirmChanges": {
    "message": "Änderungen bestätigen"
  },
  "panels/settings/KeybindsSettingsTab.ts | discardChanges": {
    "message": "Änderungen verwerfen"
  },
  "panels/settings/KeybindsSettingsTab.ts | editShortcut": {
    "message": "Verknüpfung bearbeiten"
  },
  "panels/settings/KeybindsSettingsTab.ts | keyboardShortcutsList": {
    "message": "Liste der Tastenkombinationen"
  },
  "panels/settings/KeybindsSettingsTab.ts | matchShortcutsFromPreset": {
    "message": "Verknüpfungen aus Voreinstellung zuordnen"
  },
  "panels/settings/KeybindsSettingsTab.ts | noShortcutForAction": {
    "message": "Kein Kurzbefehl für diese Aktion"
  },
  "panels/settings/KeybindsSettingsTab.ts | removeShortcut": {
    "message": "Verknüpfung entfernen"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutModified": {
    "message": "Verknüpfung wurde geändert"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcuts": {
    "message": "Verknüpfungen"
  },
  "panels/settings/KeybindsSettingsTab.ts | shortcutsCannotContainOnly": {
    "message": "Tastenkombinationen dürfen nicht nur Modifikatortasten enthalten."
  },
  "panels/settings/KeybindsSettingsTab.ts | thisShortcutIsInUseByS": {
    "message": "Diese Verknüpfung wird von {PH1} genutzt: {PH2}."
  },
  "panels/settings/SettingsScreen.ts | experiments": {
    "message": "Experimente"
  },
  "panels/settings/SettingsScreen.ts | filterExperimentsLabel": {
    "message": "Filter"
  },
  "panels/settings/SettingsScreen.ts | noResults": {
    "message": "Keine mit dem Filter übereinstimmenden Tests"
  },
  "panels/settings/SettingsScreen.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Eine oder mehr Einstellungen wurden geändert. Zur Umsetzung der Änderungen ist eine Aktualisierung erforderlich."
  },
  "panels/settings/SettingsScreen.ts | preferences": {
    "message": "Einstellungen"
  },
  "panels/settings/SettingsScreen.ts | restoreDefaultsAndReload": {
    "message": "Standard wiederherstellen und aktualisieren"
  },
  "panels/settings/SettingsScreen.ts | settings": {
    "message": "Einstellungen"
  },
  "panels/settings/SettingsScreen.ts | shortcuts": {
    "message": "Verknüpfungen"
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsAreParticularly": {
    "message": "Diese Tests sind besonders instabil. Sie aktivieren sie auf eigenes Risiko."
  },
  "panels/settings/SettingsScreen.ts | theseExperimentsCouldBeUnstable": {
    "message": "Diese Tests könnten instabil oder unzuverlässig sein und erfordern möglicherweise einen Neustart von DevTools."
  },
  "panels/settings/SettingsScreen.ts | warning": {
    "message": "ACHTUNG:"
  },
  "panels/settings/settings-meta.ts | documentation": {
    "message": "Dokumentation"
  },
  "panels/settings/settings-meta.ts | experiments": {
    "message": "Experimente"
  },
  "panels/settings/settings-meta.ts | ignoreList": {
    "message": "Ignorieren-Liste"
  },
  "panels/settings/settings-meta.ts | preferences": {
    "message": "Einstellungen"
  },
  "panels/settings/settings-meta.ts | settings": {
    "message": "Einstellungen"
  },
  "panels/settings/settings-meta.ts | shortcuts": {
    "message": "Verknüpfungen"
  },
  "panels/settings/settings-meta.ts | showExperiments": {
    "message": "Tests anzeigen"
  },
  "panels/settings/settings-meta.ts | showIgnoreList": {
    "message": "Ignorieren-Liste anzeigen"
  },
  "panels/settings/settings-meta.ts | showPreferences": {
    "message": "Einstellungen anzeigen"
  },
  "panels/settings/settings-meta.ts | showShortcuts": {
    "message": "Tastenkombinationen anzeigen"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | linkedTo": {
    "message": "Mit {PH1} verknüpft"
  },
  "panels/snippets/ScriptSnippetFileSystem.ts | scriptSnippet": {
    "message": "Skript-Snippet #{PH1}"
  },
  "panels/snippets/SnippetsQuickOpen.ts | noSnippetsFound": {
    "message": "Keine Snippets gefunden."
  },
  "panels/snippets/SnippetsQuickOpen.ts | runSnippet": {
    "message": "Snippet ausführen"
  },
  "panels/sources/AddSourceMapURLDialog.ts | add": {
    "message": "Hinzufügen"
  },
  "panels/sources/AddSourceMapURLDialog.ts | sourceMapUrl": {
    "message": "URL der Quellzuordnung: "
  },
  "panels/sources/BreakpointEditDialog.ts | breakpoint": {
    "message": "Haltepunkt"
  },
  "panels/sources/BreakpointEditDialog.ts | breakpointType": {
    "message": "Haltepunkttyp"
  },
  "panels/sources/BreakpointEditDialog.ts | conditionalBreakpoint": {
    "message": "Bedingter Haltepunkt"
  },
  "panels/sources/BreakpointEditDialog.ts | expressionToCheckBeforePausingEg": {
    "message": "Ausdruck, der vor dem Pausieren zu prüfen ist, z. B. x > 5"
  },
  "panels/sources/BreakpointEditDialog.ts | logAMessageToConsoleDoNotBreak": {
    "message": "Meldung an die Konsole senden, nicht abbrechen"
  },
  "panels/sources/BreakpointEditDialog.ts | logMessageEgXIsX": {
    "message": "Logeintrag, z. B. „x is“, x"
  },
  "panels/sources/BreakpointEditDialog.ts | logpoint": {
    "message": "Logpoint"
  },
  "panels/sources/BreakpointEditDialog.ts | pauseOnlyWhenTheConditionIsTrue": {
    "message": "Nur pausieren, wenn die Bedingung zutrifft"
  },
  "panels/sources/CSSPlugin.ts | openColorPicker": {
    "message": "Farbauswahl öffnen."
  },
  "panels/sources/CSSPlugin.ts | openCubicBezierEditor": {
    "message": "Editor für kubische Bézierkurve öffnen."
  },
  "panels/sources/CallStackSidebarPane.ts | addAllContentScriptsToIgnoreList": {
    "message": "Alle Inhaltsskripte zur Ignorieren-Liste hinzufügen"
  },
  "panels/sources/CallStackSidebarPane.ts | addScriptToIgnoreList": {
    "message": "Skript zur Ignorieren-Liste hinzufügen"
  },
  "panels/sources/CallStackSidebarPane.ts | callStack": {
    "message": "Aufrufstack"
  },
  "panels/sources/CallStackSidebarPane.ts | copyStackTrace": {
    "message": "Stacktrace kopieren"
  },
  "panels/sources/CallStackSidebarPane.ts | notPaused": {
    "message": "Nicht pausiert"
  },
  "panels/sources/CallStackSidebarPane.ts | onIgnoreList": {
    "message": "Auf der Ignorieren-Liste"
  },
  "panels/sources/CallStackSidebarPane.ts | removeAllContentScriptsFrom": {
    "message": "Alle Content-Skripts aus der Ignorieren-Liste entfernen"
  },
  "panels/sources/CallStackSidebarPane.ts | removeFromIgnoreList": {
    "message": "Aus der Ignorieren-Liste löschen"
  },
  "panels/sources/CallStackSidebarPane.ts | showIgnorelistedFrames": {
    "message": "Frames auf der Ignorieren-Liste anzeigen"
  },
  "panels/sources/CallStackSidebarPane.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "panels/sources/CoveragePlugin.ts | clickToShowCoveragePanel": {
    "message": "Klicken, um Abdeckungsbereich anzuzeigen"
  },
  "panels/sources/CoveragePlugin.ts | coverageNa": {
    "message": "Abdeckung: –"
  },
  "panels/sources/CoveragePlugin.ts | coverageS": {
    "message": "Abdeckung: {PH1} %"
  },
  "panels/sources/CoveragePlugin.ts | showDetails": {
    "message": "Details anzeigen"
  },
  "panels/sources/DebuggerPausedMessage.ts | attributeModifications": {
    "message": "Attributänderungen"
  },
  "panels/sources/DebuggerPausedMessage.ts | childSAdded": {
    "message": "Untergeordneter {PH1} hinzugefügt"
  },
  "panels/sources/DebuggerPausedMessage.ts | debuggerPaused": {
    "message": "Debugger pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSAdded": {
    "message": "Nachfolgerelement {PH1} hinzugefügt"
  },
  "panels/sources/DebuggerPausedMessage.ts | descendantSRemoved": {
    "message": "Nachfolgerelement {PH1} entfernt"
  },
  "panels/sources/DebuggerPausedMessage.ts | nodeRemoval": {
    "message": "Knotenentfernung"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedBeforePotentialOutofmemory": {
    "message": "Vor einem möglichen Out-of-Memory-Absturz pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnAssertion": {
    "message": "Bei Assertion pausieren"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnBreakpoint": {
    "message": "An Haltepunkt pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnCspViolation": {
    "message": "Bei CSP-Verstoß pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnDebuggedFunction": {
    "message": "Bei Funktion pausiert, für die die Fehlerbehebung ausgeführt wurde"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnEventListener": {
    "message": "Bei Ereignis-Listener pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnException": {
    "message": "Bei Ausnahme pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnPromiseRejection": {
    "message": "Bei promise-Ablehnung pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnS": {
    "message": "Bei {PH1} pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | pausedOnXhrOrFetch": {
    "message": "Bei XHR oder Abruf pausiert"
  },
  "panels/sources/DebuggerPausedMessage.ts | subtreeModifications": {
    "message": "Änderungen an der Unterstruktur"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypePolicyViolation": {
    "message": "Richtlinienverstoß: Trusted Type"
  },
  "panels/sources/DebuggerPausedMessage.ts | trustedTypeSinkViolation": {
    "message": "Verstoß gegen Trusted Type-Senke"
  },
  "panels/sources/DebuggerPlugin.ts | addBreakpoint": {
    "message": "Haltepunkt hinzufügen"
  },
  "panels/sources/DebuggerPlugin.ts | addConditionalBreakpoint": {
    "message": "Bedingten Haltepunkt hinzufügen…"
  },
  "panels/sources/DebuggerPlugin.ts | addLogpoint": {
    "message": "Logpoint hinzufügen…"
  },
  "panels/sources/DebuggerPlugin.ts | addSourceMap": {
    "message": "Quellzuordnung hinzufügen…"
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesAreAvailable": {
    "message": "Zugehörige Dateien sind über den Dateibaum oder {PH1} verfügbar."
  },
  "panels/sources/DebuggerPlugin.ts | associatedFilesShouldBeAdded": {
    "message": "Zugehörige Dateien sollten dem Dateibaum hinzugefügt werden. Sie können diese aufgelösten Quelldateien wie normale JavaScript-Dateien debuggen."
  },
  "panels/sources/DebuggerPlugin.ts | configure": {
    "message": "Konfigurieren"
  },
  "panels/sources/DebuggerPlugin.ts | disableBreakpoint": {
    "message": "{n,plural, =1{Haltepunkt deaktivieren}other{Alle Haltepunkte in der Zeile deaktivieren}}"
  },
  "panels/sources/DebuggerPlugin.ts | editBreakpoint": {
    "message": "Haltepunkt bearbeiten…"
  },
  "panels/sources/DebuggerPlugin.ts | enableBreakpoint": {
    "message": "{n,plural, =1{Haltepunkt aktivieren}other{Alle Haltepunkte in der Zeile aktivieren}}"
  },
  "panels/sources/DebuggerPlugin.ts | neverPauseHere": {
    "message": "Hier nie pausieren"
  },
  "panels/sources/DebuggerPlugin.ts | prettyprint": {
    "message": "Quelltextformatierung"
  },
  "panels/sources/DebuggerPlugin.ts | prettyprintThisMinifiedFile": {
    "message": "Quelltextformatierung für diese komprimierte Datei ausführen?"
  },
  "panels/sources/DebuggerPlugin.ts | prettyprintingWillFormatThisFile": {
    "message": "Bei der Quelltextformatierung wird diese Datei in einem neuen Tab formatiert, in dem Sie die Fehlerbehebung fortsetzen können. Sie können die Quelltextformatierung auch für diese Datei ausführen, indem Sie in der unteren Statusleiste auf die Schaltfläche {PH1} klicken."
  },
  "panels/sources/DebuggerPlugin.ts | removeBreakpoint": {
    "message": "{n,plural, =1{Haltepunkt entfernen}other{Alle Haltepunkte in der Zeile entfernen}}"
  },
  "panels/sources/DebuggerPlugin.ts | removeFromIgnoreList": {
    "message": "Aus der Ignorieren-Liste löschen"
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapDetected": {
    "message": "Quellzuordnung wurde erkannt."
  },
  "panels/sources/DebuggerPlugin.ts | sourceMapFoundButIgnoredForFile": {
    "message": "Quellzuordnung gefunden, wird aber für die Datei auf der Ignorieren-Liste ignoriert."
  },
  "panels/sources/DebuggerPlugin.ts | theDebuggerWillSkipStepping": {
    "message": "Der Debugger überspringt den Schritt durch dieses Skript und hält bei Ausnahmen nicht an."
  },
  "panels/sources/DebuggerPlugin.ts | thisScriptIsOnTheDebuggersIgnore": {
    "message": "Dieses Skript befindet sich auf der Ignorieren-Liste des Debuggers"
  },
  "panels/sources/FilteredUISourceCodeListProvider.ts | noFilesFound": {
    "message": "Keine Dateien gefunden"
  },
  "panels/sources/GoToLineQuickOpen.ts | currentLineSTypeALineNumber": {
    "message": "Aktuelle Zeile: {PH1}. Geben Sie eine Zeilennummer zwischen 1 und {PH2} ein, zu der Sie gehen möchten."
  },
  "panels/sources/GoToLineQuickOpen.ts | currentPositionXsTypeAnOffset": {
    "message": "Aktuelle Position: 0 x {PH1}. Geben Sie eine Abweichung zwischen 0 x {PH2} und 0 x {PH3} an, zu der navigiert werden soll."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineS": {
    "message": "Zu Zeile {PH1} gehen."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToLineSAndColumnS": {
    "message": "Zu Zeile {PH1} und Spalte {PH2} gehen."
  },
  "panels/sources/GoToLineQuickOpen.ts | goToOffsetXs": {
    "message": "Zur Abweichung 0 x {PH1} gehen."
  },
  "panels/sources/GoToLineQuickOpen.ts | noFileSelected": {
    "message": "Keine Datei ausgewählt."
  },
  "panels/sources/GoToLineQuickOpen.ts | typeANumberToGoToThatLine": {
    "message": "Geben Sie eine Zahl ein, um zu dieser Zeile zu gehen."
  },
  "panels/sources/GutterDiffPlugin.ts | localModifications": {
    "message": "Lokale Änderungen..."
  },
  "panels/sources/InplaceFormatterEditorAction.ts | format": {
    "message": "Format"
  },
  "panels/sources/InplaceFormatterEditorAction.ts | formatS": {
    "message": "{PH1} formatieren"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | activateBreakpoints": {
    "message": "Haltepunkte aktivieren"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | checked": {
    "message": "aktiviert"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | deactivateBreakpoints": {
    "message": "Haltepunkte deaktivieren"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | disableAllBreakpoints": {
    "message": "Alle Haltepunkte deaktivieren"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | disableBreakpointsInFile": {
    "message": "Haltepunkte in der Datei deaktivieren"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | enableAllBreakpoints": {
    "message": "Alle Haltepunkte aktivieren"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | enableBreakpointsInFile": {
    "message": "Haltepunkte in Datei aktivieren"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | mixed": {
    "message": "gemischt"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | noBreakpoints": {
    "message": "Keine Haltepunkte"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | removeAllBreakpoints": {
    "message": "Alle Haltepunkte entfernen"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | removeAllBreakpointsInLine": {
    "message": "Alle Haltepunkte in der Zeile entfernen"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | removeBreakpoint": {
    "message": "Haltepunkt entfernen"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | removeOtherBreakpoints": {
    "message": "Andere Haltepunkte entfernen"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | revealLocation": {
    "message": "Standort anzeigen"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | sBreakpointHit": {
    "message": "{PH1} Haltepunkttreffer"
  },
  "panels/sources/JavaScriptBreakpointsSidebarPane.ts | unchecked": {
    "message": "nicht ausgewählt"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteAll": {
    "message": "Möchten Sie wirklich alle in diesem Ordner enthaltenen Überschreibungen löschen?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToDeleteThis": {
    "message": "Möchten Sie diese Datei wirklich löschen?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToExcludeThis": {
    "message": "Möchten sie diesen Ordner wirklich ausschließen?"
  },
  "panels/sources/NavigatorView.ts | areYouSureYouWantToRemoveThis": {
    "message": "Ordner wirklich entfernen?"
  },
  "panels/sources/NavigatorView.ts | delete": {
    "message": "Löschen"
  },
  "panels/sources/NavigatorView.ts | deleteAllOverrides": {
    "message": "Alle Überschreibungen löschen"
  },
  "panels/sources/NavigatorView.ts | excludeFolder": {
    "message": "Ordner ausschließen"
  },
  "panels/sources/NavigatorView.ts | makeACopy": {
    "message": "Kopie erstellen…"
  },
  "panels/sources/NavigatorView.ts | newFile": {
    "message": "Neue Datei"
  },
  "panels/sources/NavigatorView.ts | noDomain": {
    "message": "(keine Domain)"
  },
  "panels/sources/NavigatorView.ts | openFolder": {
    "message": "Ordner öffnen"
  },
  "panels/sources/NavigatorView.ts | removeFolderFromWorkspace": {
    "message": "Ordner aus dem Arbeitsbereich entfernen"
  },
  "panels/sources/NavigatorView.ts | rename": {
    "message": "Umbenennen…"
  },
  "panels/sources/NavigatorView.ts | sFromSourceMap": {
    "message": "{PH1} (aus Quellzuordnung)"
  },
  "panels/sources/NavigatorView.ts | searchInAllFiles": {
    "message": "In allen Dateien suchen"
  },
  "panels/sources/NavigatorView.ts | searchInFolder": {
    "message": "In Ordner suchen"
  },
  "panels/sources/OutlineQuickOpen.ts | noFileSelected": {
    "message": "Keine Datei ausgewählt."
  },
  "panels/sources/OutlineQuickOpen.ts | noResultsFound": {
    "message": "Keine Ergebnisse gefunden"
  },
  "panels/sources/OutlineQuickOpen.ts | openAJavascriptOrCssFileToSee": {
    "message": "Eine JavaScript- oder CSS-Datei öffnen, um Symbole zu sehen"
  },
  "panels/sources/RecorderPlugin.ts | export": {
    "message": "Exportieren"
  },
  "panels/sources/RecorderPlugin.ts | play": {
    "message": "Erneut abspielen"
  },
  "panels/sources/RecorderPlugin.ts | record": {
    "message": "Aufnehmen"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closure": {
    "message": "Abschluss"
  },
  "panels/sources/ScopeChainSidebarPane.ts | closureS": {
    "message": "Abschluss ({PH1})"
  },
  "panels/sources/ScopeChainSidebarPane.ts | couldNotOpenLinearMemory": {
    "message": "Inspector des linearen Arbeitsspeichers konnte nicht geöffnet werden: Puffer wurde nicht gefunden."
  },
  "panels/sources/ScopeChainSidebarPane.ts | exception": {
    "message": "Ausnahme"
  },
  "panels/sources/ScopeChainSidebarPane.ts | loading": {
    "message": "Wird geladen…"
  },
  "panels/sources/ScopeChainSidebarPane.ts | noVariables": {
    "message": "Keine Variablen"
  },
  "panels/sources/ScopeChainSidebarPane.ts | notPaused": {
    "message": "Nicht pausiert"
  },
  "panels/sources/ScopeChainSidebarPane.ts | returnValue": {
    "message": "Rückgabewert"
  },
  "panels/sources/ScopeChainSidebarPane.ts | revealInMemoryInspectorPanel": {
    "message": "Im Bereich für den Inspector des Arbeitsbereichs anzeigen"
  },
  "panels/sources/ScriptFormatterEditorAction.ts | prettyPrint": {
    "message": "Quelltextformatierung"
  },
  "panels/sources/ScriptFormatterEditorAction.ts | prettyPrintS": {
    "message": "Quelltextformatierung {PH1}"
  },
  "panels/sources/ScriptOriginPlugin.ts | providedViaDebugInfoByS": {
    "message": "(über Informationen zur Fehlerbehebung von {PH1} zur Verfügung gestellt)"
  },
  "panels/sources/ScriptOriginPlugin.ts | sourceMappedFromS": {
    "message": "(Quelle von {PH1} zugeordnet)"
  },
  "panels/sources/SnippetsPlugin.ts | ctrlenter": {
    "message": "Strg + Eingabetaste"
  },
  "panels/sources/SnippetsPlugin.ts | enter": {
    "message": "⌘ + Eingabetaste"
  },
  "panels/sources/SourcesNavigator.ts | addRecording": {
    "message": "Aufnahme hinzufügen"
  },
  "panels/sources/SourcesNavigator.ts | clearConfiguration": {
    "message": "Konfiguration löschen"
  },
  "panels/sources/SourcesNavigator.ts | contentScriptsServedByExtensions": {
    "message": "Von Erweiterungen bereitgestellte Inhaltsskripte werden hier angezeigt"
  },
  "panels/sources/SourcesNavigator.ts | createAndSaveCodeSnippetsFor": {
    "message": "Code-Snippets zur späteren Wiederverwendung erstellen und speichern"
  },
  "panels/sources/SourcesNavigator.ts | createNewSnippet": {
    "message": "Neues Snippet erstellen"
  },
  "panels/sources/SourcesNavigator.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/sources/SourcesNavigator.ts | learnMoreAboutWorkspaces": {
    "message": "Weitere Informationen zu Arbeitsbereichen"
  },
  "panels/sources/SourcesNavigator.ts | newSnippet": {
    "message": "Neues Snippet"
  },
  "panels/sources/SourcesNavigator.ts | overridePageAssetsWithFilesFromA": {
    "message": "Seiten-Assets mit Dateien aus einem lokalen Ordner überschreiben"
  },
  "panels/sources/SourcesNavigator.ts | recordAndReplayBrowser": {
    "message": "Browserinteraktionen aufnehmen und wieder abspielen"
  },
  "panels/sources/SourcesNavigator.ts | remove": {
    "message": "Entfernen"
  },
  "panels/sources/SourcesNavigator.ts | rename": {
    "message": "Umbenennen…"
  },
  "panels/sources/SourcesNavigator.ts | run": {
    "message": "Ausführen"
  },
  "panels/sources/SourcesNavigator.ts | saveAs": {
    "message": "Speichern unter…"
  },
  "panels/sources/SourcesNavigator.ts | selectFolderForOverrides": {
    "message": "Ordner für Überschreibungen auswählen"
  },
  "panels/sources/SourcesNavigator.ts | syncChangesInDevtoolsWithThe": {
    "message": "Änderungen in Entwicklertools mit dem lokalen Dateisystem synchronisieren"
  },
  "panels/sources/SourcesPanel.ts | continueToHere": {
    "message": "Weiter bis hier"
  },
  "panels/sources/SourcesPanel.ts | copyS": {
    "message": "{PH1} kopieren"
  },
  "panels/sources/SourcesPanel.ts | dontPauseOnExceptions": {
    "message": "Bei Ausnahmen nicht pausieren"
  },
  "panels/sources/SourcesPanel.ts | dropWorkspaceFolderHere": {
    "message": "Ordner „Arbeitsbereich“ hier ablegen"
  },
  "panels/sources/SourcesPanel.ts | groupByFolder": {
    "message": "Nach Ordner gruppieren"
  },
  "panels/sources/SourcesPanel.ts | hideDebugger": {
    "message": "Debugger ausblenden"
  },
  "panels/sources/SourcesPanel.ts | hideNavigator": {
    "message": "Navigator ausblenden"
  },
  "panels/sources/SourcesPanel.ts | moreOptions": {
    "message": "Weitere Optionen"
  },
  "panels/sources/SourcesPanel.ts | openInSourcesPanel": {
    "message": "Im Quellbereich öffnen"
  },
  "panels/sources/SourcesPanel.ts | pauseOnCaughtExceptions": {
    "message": "Bei erkannten Ausnahmen pausieren"
  },
  "panels/sources/SourcesPanel.ts | pauseOnExceptions": {
    "message": "Bei Ausnahmen anhalten"
  },
  "panels/sources/SourcesPanel.ts | resumeWithAllPausesBlockedForMs": {
    "message": "Mit Blockierung aller Pausen 500 ms fortsetzen"
  },
  "panels/sources/SourcesPanel.ts | revealInSidebar": {
    "message": "In Seitenleiste anzeigen"
  },
  "panels/sources/SourcesPanel.ts | showDebugger": {
    "message": "Debugger anzeigen"
  },
  "panels/sources/SourcesPanel.ts | showFunctionDefinition": {
    "message": "Funktionsdefinition anzeigen"
  },
  "panels/sources/SourcesPanel.ts | showNavigator": {
    "message": "Navigator anzeigen"
  },
  "panels/sources/SourcesPanel.ts | storeSAsGlobalVariable": {
    "message": "{PH1} als globale Variable speichern"
  },
  "panels/sources/SourcesPanel.ts | terminateCurrentJavascriptCall": {
    "message": "Aktuellen JavaScript-Aufruf beenden"
  },
  "panels/sources/SourcesView.ts | dropInAFolderToAddToWorkspace": {
    "message": "Zum Hinzufügen zum Arbeitsbereich in einen Ordner legen"
  },
  "panels/sources/SourcesView.ts | openFile": {
    "message": "Datei öffnen"
  },
  "panels/sources/SourcesView.ts | runCommand": {
    "message": "Befehl ausführen"
  },
  "panels/sources/SourcesView.ts | sourceViewActions": {
    "message": "Quellenanzeige-Aktionen"
  },
  "panels/sources/TabbedEditorContainer.ts | areYouSureYouWantToCloseUnsaved": {
    "message": "Möchten Sie die nicht gespeicherte Datei wirklich schließen: {PH1}?"
  },
  "panels/sources/TabbedEditorContainer.ts | changesToThisFileWereNotSavedTo": {
    "message": "Änderungen an dieser Datei wurden nicht im Dateisystem gespeichert."
  },
  "panels/sources/TabbedEditorContainer.ts | unableToLoadThisContent": {
    "message": "Dieser Inhalt kann nicht geladen werden"
  },
  "panels/sources/ThreadsSidebarPane.ts | paused": {
    "message": "pausiert"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addPropertyPathToWatch": {
    "message": "Property-Pfad zu Watch hinzufügen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | addWatchExpression": {
    "message": "Watch-Ausdruck hinzufügen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteAllWatchExpressions": {
    "message": "Alle Watch-Ausdrücke löschen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | deleteWatchExpression": {
    "message": "Watch-Ausdruck löschen"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | noWatchExpressions": {
    "message": "Keine Watch-Ausdrücke"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | notAvailable": {
    "message": "<nicht verfügbar>"
  },
  "panels/sources/WatchExpressionsSidebarPane.ts | refreshWatchExpressions": {
    "message": "Watch-Ausdrücke aktualisieren"
  },
  "panels/sources/sources-meta.ts | activateBreakpoints": {
    "message": "Haltepunkte aktivieren"
  },
  "panels/sources/sources-meta.ts | addFolderToWorkspace": {
    "message": "Ordner dem Arbeitsbereich hinzufügen"
  },
  "panels/sources/sources-meta.ts | addSelectedTextToWatches": {
    "message": "Ausgewählten Text zu Watches hinzufügen"
  },
  "panels/sources/sources-meta.ts | all": {
    "message": "Alles"
  },
  "panels/sources/sources-meta.ts | allowScrollingPastEndOfFile": {
    "message": "Scrollen über das Ende der Datei hinaus zulassen"
  },
  "panels/sources/sources-meta.ts | autocompletion": {
    "message": "Automatische Vervollständigung"
  },
  "panels/sources/sources-meta.ts | automaticallyRevealFilesIn": {
    "message": "Dateien in der Seitenleiste automatisch anzeigen"
  },
  "panels/sources/sources-meta.ts | bracketMatching": {
    "message": "Klammeranpassung"
  },
  "panels/sources/sources-meta.ts | breakpoints": {
    "message": "Haltepunkte"
  },
  "panels/sources/sources-meta.ts | closeAll": {
    "message": "Alle schließen"
  },
  "panels/sources/sources-meta.ts | closeTheActiveTab": {
    "message": "Aktiven Tab schließen"
  },
  "panels/sources/sources-meta.ts | codeFolding": {
    "message": "Code Folding"
  },
  "panels/sources/sources-meta.ts | createNewSnippet": {
    "message": "Neues Snippet erstellen"
  },
  "panels/sources/sources-meta.ts | deactivateBreakpoints": {
    "message": "Haltepunkte deaktivieren"
  },
  "panels/sources/sources-meta.ts | decrementCssUnitByTen": {
    "message": "CSS-Einheit um 10 verringern"
  },
  "panels/sources/sources-meta.ts | detectIndentation": {
    "message": "Einzug erkennen"
  },
  "panels/sources/sources-meta.ts | disableAutocompletion": {
    "message": "Autovervollständigung deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableBracketMatching": {
    "message": "Klammeranpassung deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableCodeFolding": {
    "message": "„Code Folding“ deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableCssSourceMaps": {
    "message": "CSS-Quellzuordnungen deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableJavascriptSourceMaps": {
    "message": "JavaScript-Quellzuordnungen deaktivieren"
  },
  "panels/sources/sources-meta.ts | disableTabMovesFocus": {
    "message": "Fokus auf Tab-Verschiebung deaktivieren"
  },
  "panels/sources/sources-meta.ts | disallowScrollingPastEndOfFile": {
    "message": "Scrollen über das Ende der Datei hinaus nicht zulassen"
  },
  "panels/sources/sources-meta.ts | displayVariableValuesInlineWhile": {
    "message": "Variablenwerte beim Debuggen inline anzeigen"
  },
  "panels/sources/sources-meta.ts | doNotAutomaticallyRevealFilesIn": {
    "message": "Dateien in der Seitenleiste nicht automatisch anzeigen"
  },
  "panels/sources/sources-meta.ts | doNotDetectIndentation": {
    "message": "Einzug nicht erkennen"
  },
  "panels/sources/sources-meta.ts | doNotDisplayVariableValuesInline": {
    "message": "Variablenwerte beim Debuggen nicht inline anzeigen"
  },
  "panels/sources/sources-meta.ts | doNotSearchInAnonymousAndContent": {
    "message": "Nicht in anonymen und Content-Skripts suchen"
  },
  "panels/sources/sources-meta.ts | doNotShowWhitespaceCharacters": {
    "message": "Keine Leerzeichen anzeigen"
  },
  "panels/sources/sources-meta.ts | enableAutocompletion": {
    "message": "Automatische Vervollständigung aktivieren"
  },
  "panels/sources/sources-meta.ts | enableBracketMatching": {
    "message": "Klammeranpassung aktivieren"
  },
  "panels/sources/sources-meta.ts | enableCodeFolding": {
    "message": "„Code Folding“ aktivieren"
  },
  "panels/sources/sources-meta.ts | enableCssSourceMaps": {
    "message": "CSS-Quellzuordnungen aktivieren"
  },
  "panels/sources/sources-meta.ts | enableJavascriptSourceMaps": {
    "message": "JavaScript-Quellzuordnungen aktivieren"
  },
  "panels/sources/sources-meta.ts | enableTabMovesFocus": {
    "message": "Fokus auf Tab-Verschiebung aktivieren"
  },
  "panels/sources/sources-meta.ts | evaluateSelectedTextInConsole": {
    "message": "Ausgewählten Text in der Konsole auswerten"
  },
  "panels/sources/sources-meta.ts | exportRecording": {
    "message": "Exportieren"
  },
  "panels/sources/sources-meta.ts | filesystem": {
    "message": "Dateisystem"
  },
  "panels/sources/sources-meta.ts | goToAFunctionDeclarationruleSet": {
    "message": "Funktionsdeklaration/Regelsatz öffnen"
  },
  "panels/sources/sources-meta.ts | goToLine": {
    "message": "Zu Zeile gehen"
  },
  "panels/sources/sources-meta.ts | goToSymbol": {
    "message": "Zum Symbol"
  },
  "panels/sources/sources-meta.ts | incrementCssUnitByTen": {
    "message": "CSS-Einheit um 10 steigern"
  },
  "panels/sources/sources-meta.ts | jumpToNextEditingLocation": {
    "message": "Zur nächsten Bearbeitungsposition springen"
  },
  "panels/sources/sources-meta.ts | jumpToPreviousEditingLocation": {
    "message": "Zur vorherigen Bearbeitungsposition springen"
  },
  "panels/sources/sources-meta.ts | nextCallFrame": {
    "message": "Nächster Aufruf-Frame"
  },
  "panels/sources/sources-meta.ts | none": {
    "message": "Keiner"
  },
  "panels/sources/sources-meta.ts | openFile": {
    "message": "Datei öffnen"
  },
  "panels/sources/sources-meta.ts | pauseScriptExecution": {
    "message": "Skriptausführung pausieren"
  },
  "panels/sources/sources-meta.ts | previousCallFrame": {
    "message": "Vorheriger Aufruf-Frame"
  },
  "panels/sources/sources-meta.ts | quickSource": {
    "message": "Quick Source"
  },
  "panels/sources/sources-meta.ts | record": {
    "message": "Aufnehmen"
  },
  "panels/sources/sources-meta.ts | recordings": {
    "message": "Aufzeichnungen"
  },
  "panels/sources/sources-meta.ts | rename": {
    "message": "Umbenennen"
  },
  "panels/sources/sources-meta.ts | replayRecording": {
    "message": "Erneut abspielen"
  },
  "panels/sources/sources-meta.ts | resumeScriptExecution": {
    "message": "Skriptausführung fortsetzen"
  },
  "panels/sources/sources-meta.ts | runSnippet": {
    "message": "Snippet ausführen"
  },
  "panels/sources/sources-meta.ts | save": {
    "message": "Speichern"
  },
  "panels/sources/sources-meta.ts | saveAll": {
    "message": "Alle speichern"
  },
  "panels/sources/sources-meta.ts | scope": {
    "message": "Umfang"
  },
  "panels/sources/sources-meta.ts | search": {
    "message": "Suche"
  },
  "panels/sources/sources-meta.ts | searchInAnonymousAndContent": {
    "message": "In anonymen und Inhaltsskripten suchen"
  },
  "panels/sources/sources-meta.ts | showAllWhitespaceCharacters": {
    "message": "Alle Leerzeichen anzeigen"
  },
  "panels/sources/sources-meta.ts | showBreakpoints": {
    "message": "Haltepunkte anzeigen"
  },
  "panels/sources/sources-meta.ts | showFilesystem": {
    "message": "Dateisystem anzeigen"
  },
  "panels/sources/sources-meta.ts | showQuickSource": {
    "message": "Quick Source anzeigen"
  },
  "panels/sources/sources-meta.ts | showRecordings": {
    "message": "Aufzeichnungen anzeigen"
  },
  "panels/sources/sources-meta.ts | showScope": {
    "message": "Umfang anzeigen"
  },
  "panels/sources/sources-meta.ts | showSearch": {
    "message": "Suche anzeigen"
  },
  "panels/sources/sources-meta.ts | showSnippets": {
    "message": "Ausschnitte anzeigen"
  },
  "panels/sources/sources-meta.ts | showSources": {
    "message": "Quellen anzeigen"
  },
  "panels/sources/sources-meta.ts | showThreads": {
    "message": "Threads anzeigen"
  },
  "panels/sources/sources-meta.ts | showTrailingWhitespaceCharacters": {
    "message": "Alle nachgestellten Leerzeichen anzeigen"
  },
  "panels/sources/sources-meta.ts | showWatch": {
    "message": "Watch anzeigen"
  },
  "panels/sources/sources-meta.ts | showWhitespaceCharacters": {
    "message": "Leerzeichen anzeigen:"
  },
  "panels/sources/sources-meta.ts | snippets": {
    "message": "Snippets"
  },
  "panels/sources/sources-meta.ts | sources": {
    "message": "Quellen"
  },
  "panels/sources/sources-meta.ts | startRecording": {
    "message": "Aufnahme starten"
  },
  "panels/sources/sources-meta.ts | step": {
    "message": "Schritt"
  },
  "panels/sources/sources-meta.ts | stepIntoNextFunctionCall": {
    "message": "„Step Into“ zum nächsten Funktionsaufruf"
  },
  "panels/sources/sources-meta.ts | stepOutOfCurrentFunction": {
    "message": "Aktuelle Funktion verlassen"
  },
  "panels/sources/sources-meta.ts | stepOverNextFunctionCall": {
    "message": "Step Over zum nächsten Funktionsaufruf"
  },
  "panels/sources/sources-meta.ts | stop": {
    "message": "Stopp"
  },
  "panels/sources/sources-meta.ts | switchFile": {
    "message": "Datei wechseln"
  },
  "panels/sources/sources-meta.ts | threads": {
    "message": "Threads"
  },
  "panels/sources/sources-meta.ts | toggleBreakpoint": {
    "message": "Haltepunkt ein- und ausblenden"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointEnabled": {
    "message": "Ein-/Ausblenden des Haltepunkts aktiviert"
  },
  "panels/sources/sources-meta.ts | toggleBreakpointInputWindow": {
    "message": "Haltepunkt-Eingabefenster öffnen/schließen"
  },
  "panels/sources/sources-meta.ts | trailing": {
    "message": "Nachgestellt"
  },
  "panels/sources/sources-meta.ts | watch": {
    "message": "Ansehen"
  },
  "panels/timeline/CountersGraph.ts | documents": {
    "message": "Dokumente"
  },
  "panels/timeline/CountersGraph.ts | gpuMemory": {
    "message": "GPU-Arbeitsspeicher"
  },
  "panels/timeline/CountersGraph.ts | jsHeap": {
    "message": "JS Heap"
  },
  "panels/timeline/CountersGraph.ts | listeners": {
    "message": "Listener"
  },
  "panels/timeline/CountersGraph.ts | nodes": {
    "message": "Knoten"
  },
  "panels/timeline/CountersGraph.ts | ss": {
    "message": "[{PH1} – {PH2}]"
  },
  "panels/timeline/EventsTimelineTreeView.ts | Dms": {
    "message": "{PH1} ms"
  },
  "panels/timeline/EventsTimelineTreeView.ts | all": {
    "message": "Alles"
  },
  "panels/timeline/EventsTimelineTreeView.ts | durationFilter": {
    "message": "Filter „Dauer“"
  },
  "panels/timeline/EventsTimelineTreeView.ts | filterEventLog": {
    "message": "Ereignisprotokoll filtern"
  },
  "panels/timeline/EventsTimelineTreeView.ts | startTime": {
    "message": "Startzeit"
  },
  "panels/timeline/TimelineController.ts | cpuProfileForATargetIsNot": {
    "message": "CPU-Profil für ein Ziel ist nicht verfügbar."
  },
  "panels/timeline/TimelineController.ts | tracingNotSupported": {
    "message": "Aufnahme des Leistungs-Trace wird für diese Art von Ziel nicht unterstützt"
  },
  "panels/timeline/TimelineDetailsView.ts | bottomup": {
    "message": "Von unten nach oben"
  },
  "panels/timeline/TimelineDetailsView.ts | callTree": {
    "message": "Baumansicht „Aufrufe“"
  },
  "panels/timeline/TimelineDetailsView.ts | estimated": {
    "message": "Geschätzt"
  },
  "panels/timeline/TimelineDetailsView.ts | eventLog": {
    "message": "Ereignisprotokoll"
  },
  "panels/timeline/TimelineDetailsView.ts | layers": {
    "message": "Ebenen"
  },
  "panels/timeline/TimelineDetailsView.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/timeline/TimelineDetailsView.ts | paintProfiler": {
    "message": "Paint Profiler"
  },
  "panels/timeline/TimelineDetailsView.ts | rangeSS": {
    "message": "Bereich: {PH1} – {PH2}"
  },
  "panels/timeline/TimelineDetailsView.ts | summary": {
    "message": "Zusammenfassung"
  },
  "panels/timeline/TimelineDetailsView.ts | totalBlockingTimeSmss": {
    "message": "Gesamte Blockierzeit: {PH1} ms {PH2}"
  },
  "panels/timeline/TimelineEventOverview.ts | coverage": {
    "message": "ABDECKUNG"
  },
  "panels/timeline/TimelineEventOverview.ts | cpu": {
    "message": "CPU"
  },
  "panels/timeline/TimelineEventOverview.ts | fps": {
    "message": "FPS"
  },
  "panels/timeline/TimelineEventOverview.ts | heap": {
    "message": "HEAP"
  },
  "panels/timeline/TimelineEventOverview.ts | net": {
    "message": "NET"
  },
  "panels/timeline/TimelineEventOverview.ts | sSDash": {
    "message": "{PH1} – {PH2}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | animation": {
    "message": "Animation"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | console": {
    "message": "Konsole"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | droppedFrame": {
    "message": "Abgelegter Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | experience": {
    "message": "Erfahrung"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frame": {
    "message": "Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frameS": {
    "message": "Frame – {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | frames": {
    "message": "Frames"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | idleFrame": {
    "message": "Inaktiver Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | input": {
    "message": "Eingabe"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | interactions": {
    "message": "Interaktionen"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | longFrame": {
    "message": "Langer Frame"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | main": {
    "message": "Hauptinhalt"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | mainS": {
    "message": "Hauptinhalt — {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | occurrencesS": {
    "message": "Vorkommen: {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | onIgnoreList": {
    "message": "Auf Ignorieren-Liste"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | raster": {
    "message": "Raster"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | rasterizerThreadS": {
    "message": "Rasterungs-Thread {PH1}"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | sFfps": {
    "message": "{PH1} ~ {PH2} fps"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | sSelfS": {
    "message": "{PH1} ({PH2} im Knoten selbst)"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | subframe": {
    "message": "Subframe"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | thread": {
    "message": "Thread"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | threadS": {
    "message": "Thread „{PH1}“"
  },
  "panels/timeline/TimelineFlameChartDataProvider.ts | timings": {
    "message": "Zeitplan"
  },
  "panels/timeline/TimelineFlameChartNetworkDataProvider.ts | network": {
    "message": "Netz"
  },
  "panels/timeline/TimelineFlameChartView.ts | sAtS": {
    "message": "{PH1} um {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | currentSessionSS": {
    "message": "Aktuelle Sitzung: {PH1}. {PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | moments": {
    "message": "Momente"
  },
  "panels/timeline/TimelineHistoryManager.ts | noRecordings": {
    "message": "(keine Aufnahmen)"
  },
  "panels/timeline/TimelineHistoryManager.ts | sAgo": {
    "message": "(Vor {PH1})"
  },
  "panels/timeline/TimelineHistoryManager.ts | sD": {
    "message": "{PH1} #{PH2}"
  },
  "panels/timeline/TimelineHistoryManager.ts | sH": {
    "message": "{PH1} h"
  },
  "panels/timeline/TimelineHistoryManager.ts | sM": {
    "message": "{PH1} m"
  },
  "panels/timeline/TimelineHistoryManager.ts | selectTimelineSession": {
    "message": "Zeitachsensitzung auswählen"
  },
  "panels/timeline/TimelineLoader.ts | legacyTimelineFormatIsNot": {
    "message": "Veraltetes Zeitachsenformat wird nicht unterstützt."
  },
  "panels/timeline/TimelineLoader.ts | malformedCpuProfileFormat": {
    "message": "Fehlerhaftes CPU-Profilformat"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataS": {
    "message": "Fehlerhafte Zeitachsendaten: {PH1}"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineDataUnknownJson": {
    "message": "Fehlerhafte Zeitachsendaten: Unbekanntes JSON-Format"
  },
  "panels/timeline/TimelineLoader.ts | malformedTimelineInputWrongJson": {
    "message": "Fehlerhafte Zeitachseneingabe, ungleiche JSON-Klammern"
  },
  "panels/timeline/TimelinePanel.ts | CpuThrottlingIsEnabled": {
    "message": "- CPU-Drosselung ist aktiviert"
  },
  "panels/timeline/TimelinePanel.ts | JavascriptSamplingIsDisabled": {
    "message": "– JavaScript-Sampling ist deaktiviert"
  },
  "panels/timeline/TimelinePanel.ts | NetworkThrottlingIsEnabled": {
    "message": "- Netzwerkdrosselung ist aktiviert"
  },
  "panels/timeline/TimelinePanel.ts | SignificantOverheadDueToPaint": {
    "message": "– Erheblicher Overhead durch Paint-Instrumentierung"
  },
  "panels/timeline/TimelinePanel.ts | afterRecordingSelectAnAreaOf": {
    "message": "Wählen Sie nach der Aufnahme in der Übersicht einen Bereich, der Sie interessiert, durch Ziehen aus. Zoomen und schwenken Sie dann die Zeitachse mit dem Mausrad oder den {PH1}-Tasten. {PH2}"
  },
  "panels/timeline/TimelinePanel.ts | bufferUsage": {
    "message": "Zwischenspeichernutzung"
  },
  "panels/timeline/TimelinePanel.ts | captureScreenshots": {
    "message": "Screenshots aufnehmen"
  },
  "panels/timeline/TimelinePanel.ts | captureSettings": {
    "message": "Aufnahmeeinstellungen"
  },
  "panels/timeline/TimelinePanel.ts | capturesAdvancedPaint": {
    "message": "Erfasst erweiterte Paint-Instrumentierung, führt zu erheblichem Leistungsoverhead"
  },
  "panels/timeline/TimelinePanel.ts | clear": {
    "message": "Löschen"
  },
  "panels/timeline/TimelinePanel.ts | clickTheRecordButtonSOrHitSTo": {
    "message": "Klicken Sie auf die Schaltfläche zum Aufzeichnen {PH1} oder drücken Sie {PH2}, um mit der Aufzeichnung zu beginnen."
  },
  "panels/timeline/TimelinePanel.ts | clickTheReloadButtonSOrHitSTo": {
    "message": "Klicken Sie auf die Schaltfläche zum erneuten Laden {PH1} oder drücken Sie {PH2}, um mit der Aufzeichnung des Seitenaufbaus zu beginnen."
  },
  "panels/timeline/TimelinePanel.ts | close": {
    "message": "Schließen"
  },
  "panels/timeline/TimelinePanel.ts | coverage": {
    "message": "Abdeckung"
  },
  "panels/timeline/TimelinePanel.ts | cpu": {
    "message": "CPU:"
  },
  "panels/timeline/TimelinePanel.ts | description": {
    "message": "Beschreibung"
  },
  "panels/timeline/TimelinePanel.ts | disableJavascriptSamples": {
    "message": "JavaScript-Samples deaktivieren"
  },
  "panels/timeline/TimelinePanel.ts | disablesJavascriptSampling": {
    "message": "Deaktiviert JavaScript-Sampling, reduziert den Overhead bei Ausführung auf mobilen Geräten"
  },
  "panels/timeline/TimelinePanel.ts | dropTimelineFileOrUrlHere": {
    "message": "Zeitachsendatei oder URL hier ablegen"
  },
  "panels/timeline/TimelinePanel.ts | enableAdvancedPaint": {
    "message": "Erweiterte Paint-Instrumentierung aktivieren (langsam)"
  },
  "panels/timeline/TimelinePanel.ts | failedToSaveTimelineSSS": {
    "message": "Zeitachse konnte nicht gespeichert werden: {PH1} ({PH2}, {PH3})"
  },
  "panels/timeline/TimelinePanel.ts | initializingProfiler": {
    "message": "Profiler wird initialisiert…"
  },
  "panels/timeline/TimelinePanel.ts | learnmore": {
    "message": "Weitere Informationen"
  },
  "panels/timeline/TimelinePanel.ts | loadProfile": {
    "message": "Profil laden…"
  },
  "panels/timeline/TimelinePanel.ts | loadingProfile": {
    "message": "Profil wird geladen…"
  },
  "panels/timeline/TimelinePanel.ts | memory": {
    "message": "Arbeitsspeicher"
  },
  "panels/timeline/TimelinePanel.ts | network": {
    "message": "Netzwerk:"
  },
  "panels/timeline/TimelinePanel.ts | networkConditions": {
    "message": "Netzwerkbedingungen"
  },
  "panels/timeline/TimelinePanel.ts | processingProfile": {
    "message": "Profil wird verarbeitet…"
  },
  "panels/timeline/TimelinePanel.ts | profiling": {
    "message": "Profil wird erstellt…"
  },
  "panels/timeline/TimelinePanel.ts | received": {
    "message": "Erhalten"
  },
  "panels/timeline/TimelinePanel.ts | recordCoverageWithPerformance": {
    "message": "Abdeckung mit Leistungs-Trace aufzeichnen"
  },
  "panels/timeline/TimelinePanel.ts | recordingFailed": {
    "message": "Aufnahme fehlgeschlagen"
  },
  "panels/timeline/TimelinePanel.ts | saveProfile": {
    "message": "Profil speichern…"
  },
  "panels/timeline/TimelinePanel.ts | screenshots": {
    "message": "Screenshots"
  },
  "panels/timeline/TimelinePanel.ts | showMemoryTimeline": {
    "message": "Arbeitsspeicher-Zeitachse anzeigen"
  },
  "panels/timeline/TimelinePanel.ts | showWebVitals": {
    "message": "Web Vitals anzeigen"
  },
  "panels/timeline/TimelinePanel.ts | ssec": {
    "message": "{PH1} Sek."
  },
  "panels/timeline/TimelinePanel.ts | status": {
    "message": "Status"
  },
  "panels/timeline/TimelinePanel.ts | stop": {
    "message": "Stopp"
  },
  "panels/timeline/TimelinePanel.ts | stoppingTimeline": {
    "message": "Zeitachse wird gestoppt…"
  },
  "panels/timeline/TimelinePanel.ts | time": {
    "message": "Zeit"
  },
  "panels/timeline/TimelinePanel.ts | wasd": {
    "message": "WASD"
  },
  "panels/timeline/TimelinePanel.ts | webVitals": {
    "message": "Web Vitals"
  },
  "panels/timeline/TimelineTreeView.ts | activity": {
    "message": "Aktivität"
  },
  "panels/timeline/TimelineTreeView.ts | chromeExtensionsOverhead": {
    "message": "[Chrome-Erweiterungen-Overhead]"
  },
  "panels/timeline/TimelineTreeView.ts | filter": {
    "message": "Filtern"
  },
  "panels/timeline/TimelineTreeView.ts | filterBottomup": {
    "message": "Filter (von unten nach oben)"
  },
  "panels/timeline/TimelineTreeView.ts | filterCallTree": {
    "message": "Baumansicht „Aufrufe“ filtern"
  },
  "panels/timeline/TimelineTreeView.ts | fms": {
    "message": "{PH1} ms"
  },
  "panels/timeline/TimelineTreeView.ts | groupBy": {
    "message": "Gruppieren nach"
  },
  "panels/timeline/TimelineTreeView.ts | groupByActivity": {
    "message": "Nach Aktivität gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByCategory": {
    "message": "Nach Kategorie gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByDomain": {
    "message": "Nach Domain gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByFrame": {
    "message": "Nach Frame gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupBySubdomain": {
    "message": "Nach Subdomain gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | groupByUrl": {
    "message": "Nach URL gruppieren"
  },
  "panels/timeline/TimelineTreeView.ts | heaviestStack": {
    "message": "Umfangreichster Stack"
  },
  "panels/timeline/TimelineTreeView.ts | hideHeaviestStack": {
    "message": "Umfangreichsten Stack ausblenden"
  },
  "panels/timeline/TimelineTreeView.ts | javascript": {
    "message": "JavaScript"
  },
  "panels/timeline/TimelineTreeView.ts | noGrouping": {
    "message": "Keine Gruppierung"
  },
  "panels/timeline/TimelineTreeView.ts | notOptimizedS": {
    "message": "Nicht optimiert: {PH1}"
  },
  "panels/timeline/TimelineTreeView.ts | page": {
    "message": "Seite"
  },
  "panels/timeline/TimelineTreeView.ts | percentPlaceholder": {
    "message": "{PH1} %"
  },
  "panels/timeline/TimelineTreeView.ts | performance": {
    "message": "Leistung"
  },
  "panels/timeline/TimelineTreeView.ts | selectItemForDetails": {
    "message": "Wählen Sie ein Element aus, um weitere Informationen zu erhalten."
  },
  "panels/timeline/TimelineTreeView.ts | selfTime": {
    "message": "Zeit für Einzelaktivität"
  },
  "panels/timeline/TimelineTreeView.ts | showHeaviestStack": {
    "message": "Umfangreichsten Stack anzeigen"
  },
  "panels/timeline/TimelineTreeView.ts | timelineStack": {
    "message": "Zeitachsen-Stack"
  },
  "panels/timeline/TimelineTreeView.ts | totalTime": {
    "message": "Gesamtzeit"
  },
  "panels/timeline/TimelineTreeView.ts | unattributed": {
    "message": "[nicht zugeordnet]"
  },
  "panels/timeline/TimelineTreeView.ts | vRuntime": {
    "message": "[V8-Laufzeit]"
  },
  "panels/timeline/TimelineUIUtils.ts | FromCache": {
    "message": " (vom Cache)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromMemoryCache": {
    "message": " (aus Arbeitsspeicher-Cache)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromPush": {
    "message": " (von Push)"
  },
  "panels/timeline/TimelineUIUtils.ts | FromServiceWorker": {
    "message": " (von service worker)"
  },
  "panels/timeline/TimelineUIUtils.ts | SSSResourceLoading": {
    "message": " (Laden von {PH1} {PH2} + {PH3} Ressourcen)"
  },
  "panels/timeline/TimelineUIUtils.ts | UnknownNode": {
    "message": "[unbekannter Knoten]"
  },
  "panels/timeline/TimelineUIUtils.ts | aggregatedTime": {
    "message": "Aggregierte Zeit"
  },
  "panels/timeline/TimelineUIUtils.ts | allottedTime": {
    "message": "Zugeteilte Zeit"
  },
  "panels/timeline/TimelineUIUtils.ts | animation": {
    "message": "Animation"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameFired": {
    "message": "Animationsframe ausgelöst"
  },
  "panels/timeline/TimelineUIUtils.ts | animationFrameRequested": {
    "message": "Animationsframe angefordert"
  },
  "panels/timeline/TimelineUIUtils.ts | async": {
    "message": "Async"
  },
  "panels/timeline/TimelineUIUtils.ts | asyncTask": {
    "message": "Async-Aufgabe"
  },
  "panels/timeline/TimelineUIUtils.ts | cachedWasmModule": {
    "message": "Im Cache gespeichertes Wasm-Modul"
  },
  "panels/timeline/TimelineUIUtils.ts | callStacks": {
    "message": "Aufrufstacks"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackFunction": {
    "message": "Callback-Funktion"
  },
  "panels/timeline/TimelineUIUtils.ts | callbackId": {
    "message": "Callback-ID"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelAnimationFrame": {
    "message": "Animationsframe abbrechen"
  },
  "panels/timeline/TimelineUIUtils.ts | cancelIdleCallback": {
    "message": "Inaktives Callback abbrechen"
  },
  "panels/timeline/TimelineUIUtils.ts | changedAttributeToSs": {
    "message": "(Attribut zu „{PH1}“{PH2} geändert)"
  },
  "panels/timeline/TimelineUIUtils.ts | changedClassToSs": {
    "message": "(Klasse zu „{PH1}“{PH2} geändert)"
  },
  "panels/timeline/TimelineUIUtils.ts | changedIdToSs": {
    "message": "(ID zu „{PH1}“ {PH2} geändert)"
  },
  "panels/timeline/TimelineUIUtils.ts | changedPesudoToSs": {
    "message": "(Pseudo zu „{PH1}“ {PH2} geändert)"
  },
  "panels/timeline/TimelineUIUtils.ts | changedSs": {
    "message": "(„{PH1}“ {PH2} geändert)"
  },
  "panels/timeline/TimelineUIUtils.ts | click": {
    "message": "Klicken"
  },
  "panels/timeline/TimelineUIUtils.ts | collected": {
    "message": "Gesammelt"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheSize": {
    "message": "„Compilation Cache“-Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | compilationCacheStatus": {
    "message": "„Compilation Cache“-Status"
  },
  "panels/timeline/TimelineUIUtils.ts | compile": {
    "message": "Kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | compileModule": {
    "message": "Modul kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | compileScript": {
    "message": "Skript kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | compiledWasmModule": {
    "message": "Kompiliertes Wasm-Modul"
  },
  "panels/timeline/TimelineUIUtils.ts | compositeLayers": {
    "message": "Komposit-Ebenen"
  },
  "panels/timeline/TimelineUIUtils.ts | computeIntersections": {
    "message": "Schnittpunkte berechnen"
  },
  "panels/timeline/TimelineUIUtils.ts | consoleTime": {
    "message": "Konsolenzeit"
  },
  "panels/timeline/TimelineUIUtils.ts | consumedCacheSize": {
    "message": "Verbrauchte Cache-Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | contextMenu": {
    "message": "Kontextmenü"
  },
  "panels/timeline/TimelineUIUtils.ts | cpuTime": {
    "message": "CPU-Zeit"
  },
  "panels/timeline/TimelineUIUtils.ts | createWebsocket": {
    "message": "WebSocket erstellen"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeLayoutShifts": {
    "message": "Cumulative Layout Shifts"
  },
  "panels/timeline/TimelineUIUtils.ts | cumulativeScore": {
    "message": "Kumulatives Ergebnis"
  },
  "panels/timeline/TimelineUIUtils.ts | decodedBody": {
    "message": "Decodierter Body"
  },
  "panels/timeline/TimelineUIUtils.ts | decrypt": {
    "message": "Entschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | decryptReply": {
    "message": "Antwort entschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | destroyWebsocket": {
    "message": "WebSocket schließen"
  },
  "panels/timeline/TimelineUIUtils.ts | details": {
    "message": "Details"
  },
  "panels/timeline/TimelineUIUtils.ts | digest": {
    "message": "Zusammenfassung"
  },
  "panels/timeline/TimelineUIUtils.ts | digestReply": {
    "message": "Antwort auf Benachrichtigung"
  },
  "panels/timeline/TimelineUIUtils.ts | dimensions": {
    "message": "Abmessungen"
  },
  "panels/timeline/TimelineUIUtils.ts | domGc": {
    "message": "DOM GC"
  },
  "panels/timeline/TimelineUIUtils.ts | domcontentloadedEvent": {
    "message": "DOMContentLoaded-Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | drag": {
    "message": "Ziehen"
  },
  "panels/timeline/TimelineUIUtils.ts | drawFrame": {
    "message": "Frame zeichnen"
  },
  "panels/timeline/TimelineUIUtils.ts | duration": {
    "message": "Dauer"
  },
  "panels/timeline/TimelineUIUtils.ts | elementsAffected": {
    "message": "Betroffene Elemente"
  },
  "panels/timeline/TimelineUIUtils.ts | embedderCallback": {
    "message": "Embedder-Callback"
  },
  "panels/timeline/TimelineUIUtils.ts | emptyPlaceholder": {
    "message": "{PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | emptyPlaceholderColon": {
    "message": ": {PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | encodedData": {
    "message": "Codierte Daten"
  },
  "panels/timeline/TimelineUIUtils.ts | encrypt": {
    "message": "Verschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | encryptReply": {
    "message": "Antwort verschlüsseln"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateModule": {
    "message": "Modul bewerten"
  },
  "panels/timeline/TimelineUIUtils.ts | evaluateScript": {
    "message": "Skript evaluieren"
  },
  "panels/timeline/TimelineUIUtils.ts | event": {
    "message": "Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | experience": {
    "message": "Erfahrung"
  },
  "panels/timeline/TimelineUIUtils.ts | failedToLoadScriptFromCache": {
    "message": "Fehler beim Laden des Skripts aus dem Cache"
  },
  "panels/timeline/TimelineUIUtils.ts | finishLoading": {
    "message": "Laden beenden"
  },
  "panels/timeline/TimelineUIUtils.ts | fireIdleCallback": {
    "message": "Inaktiven Callback auslösen"
  },
  "panels/timeline/TimelineUIUtils.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | firstInvalidated": {
    "message": "Zuerst außer Kraft gesetzt"
  },
  "panels/timeline/TimelineUIUtils.ts | firstLayoutInvalidation": {
    "message": "Außerkraftsetzung des ersten Layouts"
  },
  "panels/timeline/TimelineUIUtils.ts | firstPaint": {
    "message": "First Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | fling": {
    "message": "Ziehen"
  },
  "panels/timeline/TimelineUIUtils.ts | flingHalt": {
    "message": "Durch Ziehen anhalten"
  },
  "panels/timeline/TimelineUIUtils.ts | flingStart": {
    "message": "Durch Ziehen starten"
  },
  "panels/timeline/TimelineUIUtils.ts | forcedReflow": {
    "message": "Erzwungener dynamischer Umbruch"
  },
  "panels/timeline/TimelineUIUtils.ts | fps": {
    "message": "FPS"
  },
  "panels/timeline/TimelineUIUtils.ts | frame": {
    "message": "Frame"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStart": {
    "message": "Frame-Start"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartMainThread": {
    "message": "Frame-Start (Hauptthread)"
  },
  "panels/timeline/TimelineUIUtils.ts | frameStartedLoading": {
    "message": "Laden des Frames gestartet"
  },
  "panels/timeline/TimelineUIUtils.ts | function": {
    "message": "Funktion"
  },
  "panels/timeline/TimelineUIUtils.ts | functionCall": {
    "message": "Funktionsaufruf"
  },
  "panels/timeline/TimelineUIUtils.ts | gcEvent": {
    "message": "GC-Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | gpu": {
    "message": "GPU"
  },
  "panels/timeline/TimelineUIUtils.ts | hadRecentInput": {
    "message": "Eingabe vor Kurzem erfolgt"
  },
  "panels/timeline/TimelineUIUtils.ts | handlerTookS": {
    "message": "Handler nahm {PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | hitTest": {
    "message": "Treffer-Test"
  },
  "panels/timeline/TimelineUIUtils.ts | idle": {
    "message": "Inaktiv"
  },
  "panels/timeline/TimelineUIUtils.ts | idleCallbackExecutionExtended": {
    "message": "Ausführung des inaktiven Rückrufs von {PH1} über die Frist hinaus verlängert"
  },
  "panels/timeline/TimelineUIUtils.ts | idleCallbackRequested": {
    "message": "Inaktives Callback angefordert"
  },
  "panels/timeline/TimelineUIUtils.ts | imageDecode": {
    "message": "Bild-Decodierung"
  },
  "panels/timeline/TimelineUIUtils.ts | imageResize": {
    "message": "Bildgröße anpassen"
  },
  "panels/timeline/TimelineUIUtils.ts | imageUrl": {
    "message": "Bild-URL"
  },
  "panels/timeline/TimelineUIUtils.ts | initiator": {
    "message": "Initiator"
  },
  "panels/timeline/TimelineUIUtils.ts | inputLatency": {
    "message": "Eingabelatenz"
  },
  "panels/timeline/TimelineUIUtils.ts | installTimer": {
    "message": "Timer installieren"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidateLayout": {
    "message": "Layout außer Kraft setzen"
  },
  "panels/timeline/TimelineUIUtils.ts | invalidations": {
    "message": "Außerkraftsetzungen"
  },
  "panels/timeline/TimelineUIUtils.ts | invokedByTimeout": {
    "message": "Durch Zeitüberschreitung aufgerufen"
  },
  "panels/timeline/TimelineUIUtils.ts | jank": {
    "message": "Verzögerung"
  },
  "panels/timeline/TimelineUIUtils.ts | jsFrame": {
    "message": "JS-Frame"
  },
  "panels/timeline/TimelineUIUtils.ts | keyCharacter": {
    "message": "Taste – Zeichen"
  },
  "panels/timeline/TimelineUIUtils.ts | keyDown": {
    "message": "Nach-unten-Taste"
  },
  "panels/timeline/TimelineUIUtils.ts | keyUp": {
    "message": "Nach-oben-Taste"
  },
  "panels/timeline/TimelineUIUtils.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | layerRoot": {
    "message": "Ebenenstamm"
  },
  "panels/timeline/TimelineUIUtils.ts | layerTree": {
    "message": "Baumansicht „Ebenen“"
  },
  "panels/timeline/TimelineUIUtils.ts | layout": {
    "message": "Layout"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutForced": {
    "message": "Layout erzwungen"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutInvalidations": {
    "message": "Außerkraftsetzung des Layouts"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutRoot": {
    "message": "Layoutstamm"
  },
  "panels/timeline/TimelineUIUtils.ts | layoutShift": {
    "message": "Layout Shift"
  },
  "panels/timeline/TimelineUIUtils.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/timeline/TimelineUIUtils.ts | loadFromCache": {
    "message": "Aus dem Cache laden"
  },
  "panels/timeline/TimelineUIUtils.ts | loading": {
    "message": "Wird geladen"
  },
  "panels/timeline/TimelineUIUtils.ts | location": {
    "message": "Standort"
  },
  "panels/timeline/TimelineUIUtils.ts | longTask": {
    "message": "Lange Aufgabe"
  },
  "panels/timeline/TimelineUIUtils.ts | majorGc": {
    "message": "Größerer GC"
  },
  "panels/timeline/TimelineUIUtils.ts | message": {
    "message": "Nachricht"
  },
  "panels/timeline/TimelineUIUtils.ts | mimeType": {
    "message": "MIME-Typ"
  },
  "panels/timeline/TimelineUIUtils.ts | mimeTypeCaps": {
    "message": "MIME-Typ"
  },
  "panels/timeline/TimelineUIUtils.ts | minorGc": {
    "message": "Kleinerer GC"
  },
  "panels/timeline/TimelineUIUtils.ts | module": {
    "message": "Modul"
  },
  "panels/timeline/TimelineUIUtils.ts | mouseDown": {
    "message": "Mousedown"
  },
  "panels/timeline/TimelineUIUtils.ts | mouseMove": {
    "message": "Mausbewegung"
  },
  "panels/timeline/TimelineUIUtils.ts | mouseUp": {
    "message": "Mouseup"
  },
  "panels/timeline/TimelineUIUtils.ts | mouseWheel": {
    "message": "Mausrad"
  },
  "panels/timeline/TimelineUIUtils.ts | movedFrom": {
    "message": "Verschoben von"
  },
  "panels/timeline/TimelineUIUtils.ts | movedTo": {
    "message": "Verschoben nach"
  },
  "panels/timeline/TimelineUIUtils.ts | networkRequest": {
    "message": "Netzwerkanfrage"
  },
  "panels/timeline/TimelineUIUtils.ts | networkTransfer": {
    "message": "Netzwerkübertragung"
  },
  "panels/timeline/TimelineUIUtils.ts | no": {
    "message": "Nein"
  },
  "panels/timeline/TimelineUIUtils.ts | node": {
    "message": "Knoten:"
  },
  "panels/timeline/TimelineUIUtils.ts | nodes": {
    "message": "Knoten:"
  },
  "panels/timeline/TimelineUIUtils.ts | nodesThatNeedLayout": {
    "message": "Knoten, die Layout erfordern"
  },
  "panels/timeline/TimelineUIUtils.ts | notOptimized": {
    "message": "Nicht optimiert"
  },
  "panels/timeline/TimelineUIUtils.ts | onloadEvent": {
    "message": "Onload-Ereignis"
  },
  "panels/timeline/TimelineUIUtils.ts | other": {
    "message": "Sonstige"
  },
  "panels/timeline/TimelineUIUtils.ts | otherInvalidations": {
    "message": "Andere Außerkraftsetzungen"
  },
  "panels/timeline/TimelineUIUtils.ts | ownerElement": {
    "message": "Inhaber-Element"
  },
  "panels/timeline/TimelineUIUtils.ts | paint": {
    "message": "Paint"
  },
  "panels/timeline/TimelineUIUtils.ts | paintImage": {
    "message": "Paint-Image"
  },
  "panels/timeline/TimelineUIUtils.ts | paintProfiler": {
    "message": "Paint Profiler"
  },
  "panels/timeline/TimelineUIUtils.ts | paintSetup": {
    "message": "Paint-Einrichtung"
  },
  "panels/timeline/TimelineUIUtils.ts | painting": {
    "message": "Zeichnen"
  },
  "panels/timeline/TimelineUIUtils.ts | parse": {
    "message": "Parsen"
  },
  "panels/timeline/TimelineUIUtils.ts | parseAndCompile": {
    "message": "Parsen und kompilieren"
  },
  "panels/timeline/TimelineUIUtils.ts | parseHtml": {
    "message": "HTML parsen"
  },
  "panels/timeline/TimelineUIUtils.ts | parseStylesheet": {
    "message": "Stylesheet parsen"
  },
  "panels/timeline/TimelineUIUtils.ts | pendingFor": {
    "message": "Ausstehend für"
  },
  "panels/timeline/TimelineUIUtils.ts | pinchBegin": {
    "message": "Auseinanderziehen-Anfang"
  },
  "panels/timeline/TimelineUIUtils.ts | pinchEnd": {
    "message": "Auseinanderziehen-Ende"
  },
  "panels/timeline/TimelineUIUtils.ts | pinchUpdate": {
    "message": "Auseinanderziehen-Update"
  },
  "panels/timeline/TimelineUIUtils.ts | preview": {
    "message": "Vorschau"
  },
  "panels/timeline/TimelineUIUtils.ts | priority": {
    "message": "Priorität"
  },
  "panels/timeline/TimelineUIUtils.ts | producedCacheSize": {
    "message": "Erstellte Cache-Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | range": {
    "message": "Bereich"
  },
  "panels/timeline/TimelineUIUtils.ts | rasterizePaint": {
    "message": "Paint rastern"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculateStyle": {
    "message": "Stil neu berechnen"
  },
  "panels/timeline/TimelineUIUtils.ts | recalculationForced": {
    "message": "Neuberechnung erzwungen"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveData": {
    "message": "Daten empfangen"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveResponse": {
    "message": "Antwort erhalten"
  },
  "panels/timeline/TimelineUIUtils.ts | receiveWebsocketHandshake": {
    "message": "WebSocket-Handshake erhalten"
  },
  "panels/timeline/TimelineUIUtils.ts | recurringHandlerTookS": {
    "message": "Wiederkehrender Handler nahm {PH1}"
  },
  "panels/timeline/TimelineUIUtils.ts | relatedNode": {
    "message": "Zugehöriger Knoten"
  },
  "panels/timeline/TimelineUIUtils.ts | removeTimer": {
    "message": "Timer löschen"
  },
  "panels/timeline/TimelineUIUtils.ts | rendering": {
    "message": "Rendering"
  },
  "panels/timeline/TimelineUIUtils.ts | repeats": {
    "message": "Wiederholungen"
  },
  "panels/timeline/TimelineUIUtils.ts | requestAnimationFrame": {
    "message": "Animationsframe anfordern"
  },
  "panels/timeline/TimelineUIUtils.ts | requestIdleCallback": {
    "message": "Inaktiven Rückruf anfordern"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMainThreadFrame": {
    "message": "Hauptthread-Frame anfordern"
  },
  "panels/timeline/TimelineUIUtils.ts | requestMethod": {
    "message": "Anfragemethode"
  },
  "panels/timeline/TimelineUIUtils.ts | resource": {
    "message": "Ressource"
  },
  "panels/timeline/TimelineUIUtils.ts | response": {
    "message": "Antwort"
  },
  "panels/timeline/TimelineUIUtils.ts | reveal": {
    "message": "Anzeigen"
  },
  "panels/timeline/TimelineUIUtils.ts | runMicrotasks": {
    "message": "Microtasks ausführen"
  },
  "panels/timeline/TimelineUIUtils.ts | sAndS": {
    "message": "{PH1} und {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sAndSOther": {
    "message": "{PH1}, {PH2} und 1 weiterer"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtS": {
    "message": "{PH1} um {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sAtSParentheses": {
    "message": "{PH1} (um {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sBytes": {
    "message": "{n,plural, =1{# Byte}other{# Byte}}"
  },
  "panels/timeline/TimelineUIUtils.ts | sCanResultInPoorUserExperiences": {
    "message": "{PH1} kann zu einer schlechten Nutzererfahrung führen."
  },
  "panels/timeline/TimelineUIUtils.ts | sChildren": {
    "message": "{PH1} (untergeordnet)"
  },
  "panels/timeline/TimelineUIUtils.ts | sCollected": {
    "message": "{PH1} erfasst"
  },
  "panels/timeline/TimelineUIUtils.ts | sForS": {
    "message": "{PH1} für {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sIsALikelyPerformanceBottleneck": {
    "message": "{PH1} ist wahrscheinlich ein Leistungsengpass."
  },
  "panels/timeline/TimelineUIUtils.ts | sLongFrameTimesAreAnIndicationOf": {
    "message": "{PH1}. Lange Frame Times sind ein Hinweis auf {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sOfS": {
    "message": "{PH1} von {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sS": {
    "message": "{PH1}: {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSAndSOthers": {
    "message": "{PH1}, {PH2} und {PH3} andere"
  },
  "panels/timeline/TimelineUIUtils.ts | sSCurlyBrackets": {
    "message": "({PH1}, {PH2})"
  },
  "panels/timeline/TimelineUIUtils.ts | sSDimensions": {
    "message": "{PH1} × {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSDot": {
    "message": "{PH1}. {PH2}"
  },
  "panels/timeline/TimelineUIUtils.ts | sSSquareBrackets": {
    "message": "{PH1} [{PH2}…]"
  },
  "panels/timeline/TimelineUIUtils.ts | sSelf": {
    "message": "{PH1} (einzeln)"
  },
  "panels/timeline/TimelineUIUtils.ts | sSs": {
    "message": "{PH1} [{PH2}…{PH3}]"
  },
  "panels/timeline/TimelineUIUtils.ts | sTookS": {
    "message": "{PH1} nahm {PH2}."
  },
  "panels/timeline/TimelineUIUtils.ts | scheduleStyleRecalculation": {
    "message": "Stilneuberechnung planen"
  },
  "panels/timeline/TimelineUIUtils.ts | score": {
    "message": "Ergebnis"
  },
  "panels/timeline/TimelineUIUtils.ts | script": {
    "message": "Skript"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptLoadedFromCache": {
    "message": "Aus Cache geladenes Skript"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptNotEligible": {
    "message": "Skript erfüllt Voraussetzungen nicht"
  },
  "panels/timeline/TimelineUIUtils.ts | scriptSavedToCache": {
    "message": "Skript in Cache gespeichert"
  },
  "panels/timeline/TimelineUIUtils.ts | scripting": {
    "message": "Skripting"
  },
  "panels/timeline/TimelineUIUtils.ts | scroll": {
    "message": "Scrollen"
  },
  "panels/timeline/TimelineUIUtils.ts | scrollBegin": {
    "message": "Scroll-Anfang"
  },
  "panels/timeline/TimelineUIUtils.ts | scrollEnd": {
    "message": "Scroll-Ende"
  },
  "panels/timeline/TimelineUIUtils.ts | scrollUpdate": {
    "message": "Scroll-Update"
  },
  "panels/timeline/TimelineUIUtils.ts | selfTime": {
    "message": "Zeit für Einzelaktivität"
  },
  "panels/timeline/TimelineUIUtils.ts | sendRequest": {
    "message": "Anfrage senden"
  },
  "panels/timeline/TimelineUIUtils.ts | sendWebsocketHandshake": {
    "message": "WebSocket-Handshake senden"
  },
  "panels/timeline/TimelineUIUtils.ts | show": {
    "message": "Anzeigen"
  },
  "panels/timeline/TimelineUIUtils.ts | sign": {
    "message": "Signatur setzen"
  },
  "panels/timeline/TimelineUIUtils.ts | signReply": {
    "message": "Antwort unterzeichnen"
  },
  "panels/timeline/TimelineUIUtils.ts | size": {
    "message": "Größe"
  },
  "panels/timeline/TimelineUIUtils.ts | stackTrace": {
    "message": "Stacktrace"
  },
  "panels/timeline/TimelineUIUtils.ts | stackTraceColon": {
    "message": "Stacktrace:"
  },
  "panels/timeline/TimelineUIUtils.ts | state": {
    "message": "Status"
  },
  "panels/timeline/TimelineUIUtils.ts | statusCode": {
    "message": "Statuscode"
  },
  "panels/timeline/TimelineUIUtils.ts | streamed": {
    "message": "Stream beendet"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingCompileTask": {
    "message": "Streaming-Kompilieraufgabe"
  },
  "panels/timeline/TimelineUIUtils.ts | streamingWasmResponse": {
    "message": "Wasm-Antwort streamen"
  },
  "panels/timeline/TimelineUIUtils.ts | styleInvalidations": {
    "message": "Außerkraftsetzungen von Stilen"
  },
  "panels/timeline/TimelineUIUtils.ts | stylesheetUrl": {
    "message": "Stylesheet-URL"
  },
  "panels/timeline/TimelineUIUtils.ts | system": {
    "message": "System"
  },
  "panels/timeline/TimelineUIUtils.ts | tap": {
    "message": "Tippen"
  },
  "panels/timeline/TimelineUIUtils.ts | tapBegin": {
    "message": "Tippen-Anfang"
  },
  "panels/timeline/TimelineUIUtils.ts | tapDown": {
    "message": "Abwärtspfeil tippen"
  },
  "panels/timeline/TimelineUIUtils.ts | tapHalt": {
    "message": "Tippen-Pause"
  },
  "panels/timeline/TimelineUIUtils.ts | task": {
    "message": "Aufgabe"
  },
  "panels/timeline/TimelineUIUtils.ts | timeSpentInRendering": {
    "message": "Rendering-Zeit"
  },
  "panels/timeline/TimelineUIUtils.ts | timeWaitingForMainThread": {
    "message": "Zeit, die auf den Haupt-Thread gewartet wird"
  },
  "panels/timeline/TimelineUIUtils.ts | timeout": {
    "message": "Timeout"
  },
  "panels/timeline/TimelineUIUtils.ts | timerFired": {
    "message": "Timer ausgelöst"
  },
  "panels/timeline/TimelineUIUtils.ts | timerId": {
    "message": "Timer-ID"
  },
  "panels/timeline/TimelineUIUtils.ts | timerInstalled": {
    "message": "Gesetzter Timer"
  },
  "panels/timeline/TimelineUIUtils.ts | timestamp": {
    "message": "Zeitstempel"
  },
  "panels/timeline/TimelineUIUtils.ts | totalTime": {
    "message": "Gesamtzeit"
  },
  "panels/timeline/TimelineUIUtils.ts | touchCancel": {
    "message": "Tippen-Abbruch"
  },
  "panels/timeline/TimelineUIUtils.ts | touchEnd": {
    "message": "Tippen-Ende"
  },
  "panels/timeline/TimelineUIUtils.ts | touchMove": {
    "message": "Auf „Verschieben“ tippen"
  },
  "panels/timeline/TimelineUIUtils.ts | touchStart": {
    "message": "Tippen-Start"
  },
  "panels/timeline/TimelineUIUtils.ts | type": {
    "message": "Typ"
  },
  "panels/timeline/TimelineUIUtils.ts | uncategorized": {
    "message": "Unkategorisiert"
  },
  "panels/timeline/TimelineUIUtils.ts | unknown": {
    "message": "Unbekannt"
  },
  "panels/timeline/TimelineUIUtils.ts | unknownCause": {
    "message": "Grund unbekannt"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayer": {
    "message": "Ebene aktualisieren"
  },
  "panels/timeline/TimelineUIUtils.ts | updateLayerTree": {
    "message": "Baumansicht „Ebenen“ aktualisieren"
  },
  "panels/timeline/TimelineUIUtils.ts | url": {
    "message": "URL"
  },
  "panels/timeline/TimelineUIUtils.ts | userTiming": {
    "message": "Nutzertiming"
  },
  "panels/timeline/TimelineUIUtils.ts | verify": {
    "message": "Bestätigen"
  },
  "panels/timeline/TimelineUIUtils.ts | verifyReply": {
    "message": "Antwort bestätigen"
  },
  "panels/timeline/TimelineUIUtils.ts | waitingForNetwork": {
    "message": "Auf Netzwerk warten…"
  },
  "panels/timeline/TimelineUIUtils.ts | warning": {
    "message": "Warnung"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheHit": {
    "message": "Cache-Treffer des Wasm-Moduls"
  },
  "panels/timeline/TimelineUIUtils.ts | wasmModuleCacheInvalid": {
    "message": "Cache des Wasm-Moduls ist ungültig"
  },
  "panels/timeline/TimelineUIUtils.ts | websocketProtocol": {
    "message": "WebSocket-Protokoll"
  },
  "panels/timeline/TimelineUIUtils.ts | willSendRequest": {
    "message": "Wird Anforderung senden"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrLoad": {
    "message": "Laden: XHR"
  },
  "panels/timeline/TimelineUIUtils.ts | xhrReadyStateChange": {
    "message": "XHR Ready State Change"
  },
  "panels/timeline/TimelineUIUtils.ts | yes": {
    "message": "Ja"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawFrame": {
    "message": "Frame zeichnen"
  },
  "panels/timeline/UIDevtoolsUtils.ts | drawing": {
    "message": "Zeichnung"
  },
  "panels/timeline/UIDevtoolsUtils.ts | frameStart": {
    "message": "Frame-Start"
  },
  "panels/timeline/UIDevtoolsUtils.ts | idle": {
    "message": "Inaktiv"
  },
  "panels/timeline/UIDevtoolsUtils.ts | layout": {
    "message": "Layout"
  },
  "panels/timeline/UIDevtoolsUtils.ts | painting": {
    "message": "Painting"
  },
  "panels/timeline/UIDevtoolsUtils.ts | rasterizing": {
    "message": "Rasterung"
  },
  "panels/timeline/UIDevtoolsUtils.ts | system": {
    "message": "System"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | fcp": {
    "message": "FCP"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | firstContentfulPaint": {
    "message": "First Contentful Paint"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | good": {
    "message": "Gut"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | largestContentfulPaint": {
    "message": "Largest Contentful Paint"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | lcp": {
    "message": "LCP"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | longTask": {
    "message": "Lange Aufgabe"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | longTasks": {
    "message": "Lange Aufgaben"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | ls": {
    "message": "LS"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | needsImprovement": {
    "message": "Könnte verbessert werden"
  },
  "panels/timeline/components/WebVitalsTimeline.ts | poor": {
    "message": "Schlecht"
  },
  "panels/timeline/timeline-meta.ts | hideChromeFrameInLayersView": {
    "message": "chrome-Frame in der Ebenenansicht ausblenden"
  },
  "panels/timeline/timeline-meta.ts | javascriptProfiler": {
    "message": "JavaScript-Profiler"
  },
  "panels/timeline/timeline-meta.ts | loadProfile": {
    "message": "Profil laden…"
  },
  "panels/timeline/timeline-meta.ts | nextFrame": {
    "message": "Nächster Frame"
  },
  "panels/timeline/timeline-meta.ts | nextRecording": {
    "message": "Nächste Aufnahme"
  },
  "panels/timeline/timeline-meta.ts | performance": {
    "message": "Leistung"
  },
  "panels/timeline/timeline-meta.ts | previousFrame": {
    "message": "Vorheriger Frame"
  },
  "panels/timeline/timeline-meta.ts | previousRecording": {
    "message": "Vorherige Aufnahme"
  },
  "panels/timeline/timeline-meta.ts | record": {
    "message": "Aufnehmen"
  },
  "panels/timeline/timeline-meta.ts | saveProfile": {
    "message": "Profil speichern…"
  },
  "panels/timeline/timeline-meta.ts | showJavascriptProfiler": {
    "message": "JavaScript-Profiler anzeigen"
  },
  "panels/timeline/timeline-meta.ts | showPerformance": {
    "message": "Leistung anzeigen"
  },
  "panels/timeline/timeline-meta.ts | showRecentTimelineSessions": {
    "message": "Letzte Zeitachsensitzungen anzeigen"
  },
  "panels/timeline/timeline-meta.ts | startProfilingAndReloadPage": {
    "message": "Profiling starten und Seite aktualisieren"
  },
  "panels/timeline/timeline-meta.ts | startStopRecording": {
    "message": "Aufnahme starten/beenden"
  },
  "panels/timeline/timeline-meta.ts | stop": {
    "message": "Stopp"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackBufferSize": {
    "message": "Callback-Puffergröße"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | callbackInterval": {
    "message": "Rückrufintervall"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | currentTime": {
    "message": "Uhrzeit"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | maxOutputChannels": {
    "message": "Max. Ausgabekanäle"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | renderCapacity": {
    "message": "Renderingkapazität"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | sampleRate": {
    "message": "Abtastrate"
  },
  "panels/web_audio/AudioContextContentBuilder.ts | state": {
    "message": "Status"
  },
  "panels/web_audio/AudioContextSelector.ts | audioContextS": {
    "message": "Audiokontext: {PH1}"
  },
  "panels/web_audio/AudioContextSelector.ts | noRecordings": {
    "message": "(keine Aufnahmen)"
  },
  "panels/web_audio/WebAudioView.ts | openAPageThatUsesWebAudioApiTo": {
    "message": "Öffnen Sie eine Seite, die Web Audio API verwendet, um die Überwachung zu starten."
  },
  "panels/web_audio/web_audio-meta.ts | audio": {
    "message": "Audio"
  },
  "panels/web_audio/web_audio-meta.ts | showWebaudio": {
    "message": "WebAudio anzeigen"
  },
  "panels/web_audio/web_audio-meta.ts | webaudio": {
    "message": "WebAudio"
  },
  "panels/webauthn/WebauthnPane.ts | actions": {
    "message": "Aktionen"
  },
  "panels/webauthn/WebauthnPane.ts | active": {
    "message": "Aktiv"
  },
  "panels/webauthn/WebauthnPane.ts | add": {
    "message": "Hinzufügen"
  },
  "panels/webauthn/WebauthnPane.ts | addAuthenticator": {
    "message": "Authenticator hinzufügen"
  },
  "panels/webauthn/WebauthnPane.ts | authenticatorS": {
    "message": "Authenticator {PH1}"
  },
  "panels/webauthn/WebauthnPane.ts | credentials": {
    "message": "Anmeldedaten"
  },
  "panels/webauthn/WebauthnPane.ts | editName": {
    "message": "Namen bearbeiten"
  },
  "panels/webauthn/WebauthnPane.ts | enableVirtualAuthenticator": {
    "message": "Virtuelle Authenticator-Umgebung aktivieren"
  },
  "panels/webauthn/WebauthnPane.ts | export": {
    "message": "Exportieren"
  },
  "panels/webauthn/WebauthnPane.ts | id": {
    "message": "ID"
  },
  "panels/webauthn/WebauthnPane.ts | isResident": {
    "message": "Ist resident"
  },
  "panels/webauthn/WebauthnPane.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "panels/webauthn/WebauthnPane.ts | newAuthenticator": {
    "message": "Neuer Authenticator"
  },
  "panels/webauthn/WebauthnPane.ts | no": {
    "message": "Nein"
  },
  "panels/webauthn/WebauthnPane.ts | noCredentialsTryCallingSFromYour": {
    "message": "Keine Anmeldedaten. Versuchen Sie, {PH1} von Ihrer Website aus aufzurufen."
  },
  "panels/webauthn/WebauthnPane.ts | privateKeypem": {
    "message": "Private key.pem"
  },
  "panels/webauthn/WebauthnPane.ts | protocol": {
    "message": "Protokoll"
  },
  "panels/webauthn/WebauthnPane.ts | remove": {
    "message": "Entfernen"
  },
  "panels/webauthn/WebauthnPane.ts | rpId": {
    "message": "RP-ID"
  },
  "panels/webauthn/WebauthnPane.ts | saveName": {
    "message": "Name speichern"
  },
  "panels/webauthn/WebauthnPane.ts | setSAsTheActiveAuthenticator": {
    "message": "{PH1} als aktiven Authenticator festlegen"
  },
  "panels/webauthn/WebauthnPane.ts | signCount": {
    "message": "Anzahl der Signaturen"
  },
  "panels/webauthn/WebauthnPane.ts | supportsResidentKeys": {
    "message": "Unterstützt residente Schlüssel"
  },
  "panels/webauthn/WebauthnPane.ts | supportsUserVerification": {
    "message": "Unterstützt Nutzerüberprüfung"
  },
  "panels/webauthn/WebauthnPane.ts | transport": {
    "message": "Transport"
  },
  "panels/webauthn/WebauthnPane.ts | useWebauthnForPhishingresistant": {
    "message": "WebAuthn für phishing-sichere Authentifizierung verwenden"
  },
  "panels/webauthn/WebauthnPane.ts | userHandle": {
    "message": "Nutzer-Handle"
  },
  "panels/webauthn/WebauthnPane.ts | uuid": {
    "message": "UUID"
  },
  "panels/webauthn/WebauthnPane.ts | yes": {
    "message": "Ja"
  },
  "panels/webauthn/webauthn-meta.ts | showWebauthn": {
    "message": "WebAuthn anzeigen"
  },
  "panels/webauthn/webauthn-meta.ts | webauthn": {
    "message": "WebAuthn"
  },
  "ui/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Headeroptionen"
  },
  "ui/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Spalten zurücksetzen"
  },
  "ui/components/data_grid/DataGrid.ts | sortBy": {
    "message": "Sortieren nach"
  },
  "ui/components/issue_counter/IssueCounter.ts | breakingChangeIssue": {
    "message": "Problem mit einer funktionsgefährdenden Änderung: Die Seite funktioniert möglicherweise in einer kommenden Version von Chrome nicht mehr"
  },
  "ui/components/issue_counter/IssueCounter.ts | breakingChanges": {
    "message": "{issueCount,plural, =1{# funktionsgefährdende Änderung}other{# funktionsgefährdende Änderungen}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | improvementIssue": {
    "message": "Ein Verbesserungsproblem: Es gibt eine Möglichkeit, die Seite zu verbessern"
  },
  "ui/components/issue_counter/IssueCounter.ts | pageErrorIssue": {
    "message": "Ein Seitenfehler: Seite funktioniert nicht richtig"
  },
  "ui/components/issue_counter/IssueCounter.ts | pageErrors": {
    "message": "{issueCount,plural, =1{# Fehler auf der Seite}other{# Fehler auf der Seite}}"
  },
  "ui/components/issue_counter/IssueCounter.ts | possibleImprovements": {
    "message": "{issueCount,plural, =1{# mögliche Verbesserung}other{# mögliche Verbesserungen}}"
  },
  "ui/components/linear_memory_inspector/LinearMemoryInspector.ts | addressHasToBeANumberBetweenSAnd": {
    "message": "Die Adresse muss eine Zahl zwischen {PH1} und {PH2} sein"
  },
  "ui/components/linear_memory_inspector/LinearMemoryInspectorPane.ts | noOpenInspections": {
    "message": "Keine offenen Prüfungen"
  },
  "ui/components/linear_memory_inspector/LinearMemoryNavigator.ts | enterAddress": {
    "message": "Adresse eingeben"
  },
  "ui/components/linear_memory_inspector/LinearMemoryNavigator.ts | goBackInAddressHistory": {
    "message": "Adressverlauf zurückverfolgen"
  },
  "ui/components/linear_memory_inspector/LinearMemoryNavigator.ts | goForwardInAddressHistory": {
    "message": "Weiter im Adressverlauf"
  },
  "ui/components/linear_memory_inspector/LinearMemoryNavigator.ts | nextPage": {
    "message": "Nächste Seite"
  },
  "ui/components/linear_memory_inspector/LinearMemoryNavigator.ts | previousPage": {
    "message": "Vorherige Seite"
  },
  "ui/components/linear_memory_inspector/LinearMemoryNavigator.ts | refresh": {
    "message": "Aktualisieren"
  },
  "ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts | changeEndianness": {
    "message": "Endianness ändern"
  },
  "ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts | toggleValueTypeSettings": {
    "message": "Werttypeinstellungen ein-/ausschalten"
  },
  "ui/components/linear_memory_inspector/ValueInterpreterDisplay.ts | addressOutOfRange": {
    "message": "Adresse außerhalb des Speicherbereiches"
  },
  "ui/components/linear_memory_inspector/ValueInterpreterDisplay.ts | changeValueTypeMode": {
    "message": "Modus ändern"
  },
  "ui/components/linear_memory_inspector/ValueInterpreterDisplay.ts | jumpToPointer": {
    "message": "Zur Adresse springen"
  },
  "ui/components/linear_memory_inspector/ValueInterpreterDisplay.ts | signedValue": {
    "message": "Signed Wert"
  },
  "ui/components/linear_memory_inspector/ValueInterpreterDisplay.ts | unsignedValue": {
    "message": "Unsigned Wert"
  },
  "ui/components/linear_memory_inspector/ValueInterpreterDisplayUtils.ts | notApplicable": {
    "message": "–"
  },
  "ui/components/linear_memory_inspector/ValueInterpreterSettings.ts | otherGroup": {
    "message": "Sonstige"
  },
  "ui/components/linear_memory_inspector/linear_memory_inspector-meta.ts | memoryInspector": {
    "message": "Memory Inspector"
  },
  "ui/components/linear_memory_inspector/linear_memory_inspector-meta.ts | showMemoryInspector": {
    "message": "Memory Inspector anzeigen"
  },
  "ui/components/survey_link/SurveyLink.ts | anErrorOccurredWithTheSurvey": {
    "message": "Bei der Umfrage ist ein Fehler aufgetreten"
  },
  "ui/components/survey_link/SurveyLink.ts | openingSurvey": {
    "message": "Umfrage öffnen…"
  },
  "ui/components/survey_link/SurveyLink.ts | thankYouForYourFeedback": {
    "message": "Vielen Dank für Ihr Feedback"
  },
  "ui/legacy/DockController.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/DockController.ts | dockToBottom": {
    "message": "Unten fixieren"
  },
  "ui/legacy/DockController.ts | dockToLeft": {
    "message": "Links fixieren"
  },
  "ui/legacy/DockController.ts | dockToRight": {
    "message": "Rechts fixieren"
  },
  "ui/legacy/DockController.ts | undockIntoSeparateWindow": {
    "message": "In separatem Fenster anzeigen"
  },
  "ui/legacy/EmptyWidget.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "ui/legacy/FilterBar.ts | allStrings": {
    "message": "Alles"
  },
  "ui/legacy/FilterBar.ts | egSmalldUrlacomb": {
    "message": "Beispiel: /small[d]+/ url:a.com/b"
  },
  "ui/legacy/FilterBar.ts | filter": {
    "message": "Filtern"
  },
  "ui/legacy/FilterBar.ts | sclickToSelectMultipleTypes": {
    "message": "{PH1}Klicken, um mehrere Typen anzuzeigen"
  },
  "ui/legacy/Infobar.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/Infobar.ts | dontShowAgain": {
    "message": "Nicht mehr anzeigen"
  },
  "ui/legacy/Infobar.ts | learnMore": {
    "message": "Weitere Informationen"
  },
  "ui/legacy/InspectorView.ts | closeDrawer": {
    "message": "Leiste schließen"
  },
  "ui/legacy/InspectorView.ts | moreTools": {
    "message": "Weitere Tools"
  },
  "ui/legacy/InspectorView.ts | moveToBottom": {
    "message": "Ganz nach unten verschieben"
  },
  "ui/legacy/InspectorView.ts | moveToTop": {
    "message": "Ganz nach oben verschieben"
  },
  "ui/legacy/InspectorView.ts | panels": {
    "message": "Bereiche"
  },
  "ui/legacy/InspectorView.ts | reloadDevtools": {
    "message": "Entwicklertools neu laden"
  },
  "ui/legacy/ListWidget.ts | addString": {
    "message": "Hinzufügen"
  },
  "ui/legacy/ListWidget.ts | cancelString": {
    "message": "Abbrechen"
  },
  "ui/legacy/ListWidget.ts | editString": {
    "message": "Bearbeiten"
  },
  "ui/legacy/ListWidget.ts | removeString": {
    "message": "Entfernen"
  },
  "ui/legacy/ListWidget.ts | saveString": {
    "message": "Speichern"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectDevtools": {
    "message": "DevTools wieder verbinden"
  },
  "ui/legacy/RemoteDebuggingTerminatedScreen.ts | reconnectWhenReadyByReopening": {
    "message": "Nach Abschluss Verbindung durch erneutes Öffnen der Entwicklertools wiederherstellen"
  },
  "ui/legacy/SearchableView.ts | cancel": {
    "message": "Abbrechen"
  },
  "ui/legacy/SearchableView.ts | dMatches": {
    "message": "{PH1} Übereinstimmungen"
  },
  "ui/legacy/SearchableView.ts | dOfD": {
    "message": "{PH1} von {PH2}"
  },
  "ui/legacy/SearchableView.ts | findString": {
    "message": "Suchen"
  },
  "ui/legacy/SearchableView.ts | matchCase": {
    "message": "Groß-/Kleinschreibung"
  },
  "ui/legacy/SearchableView.ts | matchString": {
    "message": "1 Treffer"
  },
  "ui/legacy/SearchableView.ts | replace": {
    "message": "Ersetzen"
  },
  "ui/legacy/SearchableView.ts | replaceAll": {
    "message": "Alle ersetzen"
  },
  "ui/legacy/SearchableView.ts | searchNext": {
    "message": "Nächste durchsuchen"
  },
  "ui/legacy/SearchableView.ts | searchPrevious": {
    "message": "Vorherige durchsuchen"
  },
  "ui/legacy/SearchableView.ts | useRegularExpression": {
    "message": "Regulären Ausdruck verwenden"
  },
  "ui/legacy/SettingsUI.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Eine oder mehr Einstellungen wurden geändert. Zur Umsetzung der Änderungen ist eine Aktualisierung erforderlich."
  },
  "ui/legacy/SettingsUI.ts | srequiresReload": {
    "message": "* Aktualisierung erforderlich"
  },
  "ui/legacy/SoftContextMenu.ts | checked": {
    "message": "aktiviert"
  },
  "ui/legacy/SoftContextMenu.ts | sS": {
    "message": "{PH1}, {PH2}"
  },
  "ui/legacy/SoftContextMenu.ts | sSS": {
    "message": "{PH1}, {PH2}, {PH3}"
  },
  "ui/legacy/SoftContextMenu.ts | unchecked": {
    "message": "nicht ausgewählt"
  },
  "ui/legacy/SoftDropDown.ts | noItemSelected": {
    "message": "(kein Element ausgewählt)"
  },
  "ui/legacy/SuggestBox.ts | sSuggestionSOfS": {
    "message": "{PH1}, Vorschlag {PH2} von {PH3}"
  },
  "ui/legacy/TabbedPane.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/TabbedPane.ts | closeAll": {
    "message": "Alle schließen"
  },
  "ui/legacy/TabbedPane.ts | closeOthers": {
    "message": "Andere schließen"
  },
  "ui/legacy/TabbedPane.ts | closeS": {
    "message": "{PH1} schließen"
  },
  "ui/legacy/TabbedPane.ts | closeTabsToTheRight": {
    "message": "Tabs rechts schließen"
  },
  "ui/legacy/TabbedPane.ts | moreTabs": {
    "message": "Mehr Tabs"
  },
  "ui/legacy/TargetCrashedScreen.ts | devtoolsWasDisconnectedFromThe": {
    "message": "Die Verbindung zwischen Entwicklertools und der Seite wurde getrennt."
  },
  "ui/legacy/TargetCrashedScreen.ts | oncePageIsReloadedDevtoolsWill": {
    "message": "Sobald die Seite neu geladen ist, verbinden sich die Entwicklertools automatisch wieder."
  },
  "ui/legacy/Toolbar.ts | notPressed": {
    "message": "Nicht gedrückt"
  },
  "ui/legacy/Toolbar.ts | pressed": {
    "message": "Gedrückt"
  },
  "ui/legacy/UIUtils.ts | anonymous": {
    "message": "(anonym)"
  },
  "ui/legacy/UIUtils.ts | anotherProfilerIsAlreadyActive": {
    "message": "Es ist bereits ein anderer Profiler aktiv"
  },
  "ui/legacy/UIUtils.ts | asyncCall": {
    "message": "Async-Aufruf"
  },
  "ui/legacy/UIUtils.ts | cancel": {
    "message": "Abbrechen"
  },
  "ui/legacy/UIUtils.ts | close": {
    "message": "Schließen"
  },
  "ui/legacy/UIUtils.ts | copyFileName": {
    "message": "Dateinamen kopieren"
  },
  "ui/legacy/UIUtils.ts | copyLinkAddress": {
    "message": "Linkadresse kopieren"
  },
  "ui/legacy/UIUtils.ts | fdays": {
    "message": "{PH1} Tage"
  },
  "ui/legacy/UIUtils.ts | fhrs": {
    "message": "{PH1} Std."
  },
  "ui/legacy/UIUtils.ts | fmin": {
    "message": "{PH1} min"
  },
  "ui/legacy/UIUtils.ts | fmms": {
    "message": "{PH1} μs"
  },
  "ui/legacy/UIUtils.ts | fms": {
    "message": "{PH1} ms"
  },
  "ui/legacy/UIUtils.ts | fs": {
    "message": "{PH1} s"
  },
  "ui/legacy/UIUtils.ts | ok": {
    "message": "OK"
  },
  "ui/legacy/UIUtils.ts | openInNewTab": {
    "message": "In neuem Tab öffnen"
  },
  "ui/legacy/UIUtils.ts | promiseRejectedAsync": {
    "message": "Versprechen abgelehnt (async)"
  },
  "ui/legacy/UIUtils.ts | promiseResolvedAsync": {
    "message": "Versprechen aufgelöst (Async)"
  },
  "ui/legacy/UIUtils.ts | sAsync": {
    "message": "{PH1} (async)"
  },
  "ui/legacy/ViewManager.ts | sPanel": {
    "message": "Steuerfeld „{PH1}“"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aa": {
    "message": "AA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | aaa": {
    "message": "AAA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | apca": {
    "message": "APCA"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | contrastRatio": {
    "message": "Kontrastverhältnis"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | noContrastInformationAvailable": {
    "message": "Keine Informationen zu Kontrasten verfügbar"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | pickBackgroundColor": {
    "message": "Hintergrundfarbe auswählen"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | placeholderWithColon": {
    "message": ": {PH1}"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showLess": {
    "message": "Weniger anzeigen"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | showMore": {
    "message": "Mehr anzeigen"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | toggleBackgroundColorPicker": {
    "message": "Hintergrund-Farbauswahl wechseln"
  },
  "ui/legacy/components/color_picker/ContrastDetails.ts | useSuggestedColorStoFixLow": {
    "message": "Vorgeschlagene Farbe {PH1} verwenden, um schwachen Kontrast zu beheben"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | addToPalette": {
    "message": "Zur Palette hinzufügen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeAlpha": {
    "message": "Alpha ändern"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeColorFormat": {
    "message": "Farbformat ändern"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | changeHue": {
    "message": "Farbton ändern"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | clearPalette": {
    "message": "Palette löschen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorPalettes": {
    "message": "Farbvorlagen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | colorS": {
    "message": "Farbe {PH1}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | copyColorToClipboard": {
    "message": "Farbe in Zwischenablage kopieren"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | hex": {
    "message": "HEX"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | longclickOrLongpressSpaceToShow": {
    "message": "Langer Klick oder langes Drücken der Leertaste, um alternative Schattierungen von {PH1} anzuzeigen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | pressArrowKeysMessage": {
    "message": "Drücken Sie die Pfeiltasten mit oder ohne Modifikator, um die Position von Swatch zu ändern. Eine Pfeiltaste zusammen mit der Umschalttaste verändert die Position stark, mit der Strg-Taste ist es etwas weniger und mit der Alt-Taste noch etwas weniger"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | previewPalettes": {
    "message": "Palettenvorschau"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeAllToTheRight": {
    "message": "Rechts alles entfernen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | removeColor": {
    "message": "Farbe entfernen"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | returnToColorPicker": {
    "message": "Zur Farbauswahl zurück"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | sInS": {
    "message": "{PH1} in {PH2}"
  },
  "ui/legacy/components/color_picker/Spectrum.ts | toggleColorPicker": {
    "message": "Farbauswahl ein-/ausblenden"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | cookies": {
    "message": "Cookies"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | editableCookies": {
    "message": "Bearbeitbare Cookies"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | na": {
    "message": "–"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | name": {
    "message": "Name"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | session": {
    "message": "Sitzung"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showIssueAssociatedWithThis": {
    "message": "Mit diesem Cookie zusammenhängende Probleme anzeigen"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | showRequestsWithThisCookie": {
    "message": "Anfragen mit diesem Cookie anzeigen"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | size": {
    "message": "Größe"
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourcePortTooltip": {
    "message": "Zeigt den Quellport (Bereich 1–65535) an, auf den das Cookie gesetzt wurde. Wenn der Port unbekannt ist, wird hier -1 angezeigt."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | sourceSchemeTooltip": {
    "message": "Zeigt das Quellschema (Secure, NonSecure) an, auf das das Cookie gesetzt wurde. Wenn das Schema unbekannt ist, wird hier Unset angezeigt."
  },
  "ui/legacy/components/cookie_table/CookiesTable.ts | value": {
    "message": "Wert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | addNew": {
    "message": "Neue hinzufügen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | checked": {
    "message": "aktiviert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | collapsed": {
    "message": "Minimiert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | delete": {
    "message": "Löschen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | editS": {
    "message": "„{PH1}“ bearbeiten"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | expanded": {
    "message": "Maximiert"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | headerOptions": {
    "message": "Headeroptionen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | levelS": {
    "message": "Ebene {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | refresh": {
    "message": "Aktualisieren"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | resetColumns": {
    "message": "Spalten zurücksetzen"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | rowsS": {
    "message": "Zeilen: {PH1}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sRowS": {
    "message": "{PH1} Zeile {PH2}"
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sSUseTheUpAndDownArrowKeysTo": {
    "message": "{PH1} {PH2}, verwenden Sie die Nach-unten- und Nach-oben-Tasten, um in den Zeilen der Tabelle zu navigieren und mit ihnen zu interagieren. Im Durchsuchen-Modus können Sie Zelle für Zelle lesen."
  },
  "ui/legacy/components/data_grid/DataGrid.ts | sortByString": {
    "message": "Sortieren nach"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showAllD": {
    "message": "Alle {PH1} anzeigen"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDAfter": {
    "message": "{PH1} danach anzeigen"
  },
  "ui/legacy/components/data_grid/ShowMoreDataGridNode.ts | showDBefore": {
    "message": "{PH1} anzeigen vor"
  },
  "ui/legacy/components/data_grid/ViewportDataGrid.ts | collapsed": {
    "message": "Minimiert"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | blur": {
    "message": "Weichzeichnung"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | spread": {
    "message": "Auseinanderziehen"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | type": {
    "message": "Typ"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | xOffset": {
    "message": "X Offset"
  },
  "ui/legacy/components/inline_editor/CSSShadowEditor.ts | yOffset": {
    "message": "Y Offset"
  },
  "ui/legacy/components/inline_editor/CSSVarSwatch.ts | sIsNotDefined": {
    "message": "{PH1} ist nicht definiert"
  },
  "ui/legacy/components/inline_editor/ColorSwatch.ts | shiftclickToChangeColorFormat": {
    "message": "Klicken Sie bei gedrückter Umschalttaste, um das Farbformat zu ändern"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | PleaseEnterAValidValueForSText": {
    "message": "*Geben Sie einen gültigen Wert für die {PH1}-Texteingabe ein"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | cssProperties": {
    "message": "CSS-Properties"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | deleteS": {
    "message": "{PH1} löschen"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fallbackS": {
    "message": "Fallback: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontFamily": {
    "message": "Schriftfamilie"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSelectorDeletedAtIndexS": {
    "message": "Schriftauswahl gelöscht bei Index: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontSize": {
    "message": "Schriftgröße"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | fontWeight": {
    "message": "Schriftbreite"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | lineHeight": {
    "message": "Zeilenhöhe"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sKeyValueSelector": {
    "message": "{PH1} Schlüsselwert-Selektor"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sSliderInput": {
    "message": "{PH1} Schieberegelereingabe"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sTextInput": {
    "message": "{PH1}-Texteingabe"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sToggleInputType": {
    "message": "Eingabetyp für {PH1} umschalten"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sUnitInput": {
    "message": "{PH1} Eingabe-Einheiten"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | selectorInputMode": {
    "message": "Selector-Eingabemodus"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | sliderInputMode": {
    "message": "Schieberegler-Eingabemodus"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | spacing": {
    "message": "Abstand"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thereIsNoValueToDeleteAtIndexS": {
    "message": "Kein Wert zum Löschen vorhanden bei Index: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | thisPropertyIsSetToContainUnits": {
    "message": "Diese Property muss Einheiten enthalten, hat jedoch kein entsprechendes definiertes unitsArray: {PH1}"
  },
  "ui/legacy/components/inline_editor/FontEditor.ts | units": {
    "message": "Einheiten"
  },
  "ui/legacy/components/object_ui/CustomPreviewComponent.ts | showAsJavascriptObject": {
    "message": "Als JavaScript-Objekt anzeigen"
  },
  "ui/legacy/components/object_ui/JavaScriptAutocomplete.ts | keys": {
    "message": "Schlüssel"
  },
  "ui/legacy/components/object_ui/JavaScriptAutocomplete.ts | keywords": {
    "message": "Keywords"
  },
  "ui/legacy/components/object_ui/JavaScriptAutocomplete.ts | lexicalScopeVariables": {
    "message": "Variablen des lexikalischen Bereichs"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | collapseChildren": {
    "message": "Untergeordnete Elemente minimieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copy": {
    "message": "Kopieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyPropertyPath": {
    "message": "Property-Pfad kopieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | copyValue": {
    "message": "Wert kopieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | dots": {
    "message": "(...)"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | exceptionS": {
    "message": "[Ausnahme: {PH1}]"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | expandRecursively": {
    "message": "Wiederkehrend maximieren"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | invokePropertyGetter": {
    "message": "Property Getter aufrufen"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | longTextWasTruncatedS": {
    "message": "Langer Text wurde abgeschnitten ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | noProperties": {
    "message": "Keine Properties"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | noPropertyGetter": {
    "message": "Kein Property Getter"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showAllD": {
    "message": "Alle {PH1} anzeigen"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | showMoreS": {
    "message": "Mehr anzeigen ({PH1})"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | stringIsTooLargeToEdit": {
    "message": "<String ist zu groß zum Bearbeiten>"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | unknown": {
    "message": "Unbekannt"
  },
  "ui/legacy/components/object_ui/ObjectPropertiesSection.ts | unreadable": {
    "message": "<unreadable>"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | empty": {
    "message": "leer"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | emptyD": {
    "message": "leer × {PH1}"
  },
  "ui/legacy/components/object_ui/RemoteObjectPreviewFormatter.ts | thePropertyIsComputedWithAGetter": {
    "message": "Die Property wird mit einem Getter berechnet"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | doubleclickToZoomImageClickTo": {
    "message": "Doppelklicken, um das Bild zu zoomen. Klicken, um vorige Anfragen anzuzeigen."
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | nextFrame": {
    "message": "Nächster Frame"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | previousFrame": {
    "message": "Vorheriger Frame"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshot": {
    "message": "Screenshot"
  },
  "ui/legacy/components/perf_ui/FilmStripView.ts | screenshotForSSelectToView": {
    "message": "Screenshot für {PH1} – auswählen, um vorherige Anforderungen aufzurufen."
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | flameChart": {
    "message": "Flame-Diagramm"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sCollapsed": {
    "message": "{PH1} minimiert"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sExpanded": {
    "message": "{PH1} maximiert"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sHovered": {
    "message": "Mauszeiger über {PH1} bewegt"
  },
  "ui/legacy/components/perf_ui/FlameChart.ts | sSelected": {
    "message": "{PH1} ausgewählt"
  },
  "ui/legacy/components/perf_ui/LineLevelProfile.ts | kb": {
    "message": "KB"
  },
  "ui/legacy/components/perf_ui/LineLevelProfile.ts | mb": {
    "message": "MB"
  },
  "ui/legacy/components/perf_ui/LineLevelProfile.ts | ms": {
    "message": "ms"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | high": {
    "message": "Hoch"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | highest": {
    "message": "Höchste"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | low": {
    "message": "Gering"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | lowest": {
    "message": "Niedrigste"
  },
  "ui/legacy/components/perf_ui/NetworkPriorities.ts | medium": {
    "message": "Mittel"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | leftResizer": {
    "message": "Größenanpassung links"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | overviewGridWindow": {
    "message": "Fenster mit Übersichtsraster"
  },
  "ui/legacy/components/perf_ui/OverviewGrid.ts | rightResizer": {
    "message": "Größenanpassung rechts"
  },
  "ui/legacy/components/perf_ui/PieChart.ts | total": {
    "message": "Gesamt"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | collectGarbage": {
    "message": "Automatische Speicherbereinigung"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | flamechartMouseWheelAction": {
    "message": "Flamechart-Mausradaktion:"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | hideLiveMemoryAllocation": {
    "message": "Anmerkungen zur Live-Arbeitsspeicherzuweisung verbergen"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | liveMemoryAllocationAnnotations": {
    "message": "Anmerkungen zur Live-Arbeitsspeicherzuweisung"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | scroll": {
    "message": "Scrollen"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | showLiveMemoryAllocation": {
    "message": "Anmerkungen zur Live-Arbeitsspeicherzuweisung anzeigen"
  },
  "ui/legacy/components/perf_ui/perf_ui-meta.ts | zoom": {
    "message": "Zoom"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | noCommandsFound": {
    "message": "Keine Befehle gefunden"
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | oneOrMoreSettingsHaveChanged": {
    "message": "Eine oder mehr Einstellungen wurden geändert. Zur Umsetzung der Änderungen ist eine Aktualisierung erforderlich."
  },
  "ui/legacy/components/quick_open/CommandMenu.ts | runCommand": {
    "message": "Befehl ausführen"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | noResultsFound": {
    "message": "Keine Ergebnisse gefunden"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpen": {
    "message": "Schnelles Öffnen"
  },
  "ui/legacy/components/quick_open/FilteredListWidget.ts | quickOpenPrompt": {
    "message": "Aufforderung zum schnellen Öffnen"
  },
  "ui/legacy/components/quick_open/QuickInput.ts | pressEnterToConfirmOrEscapeTo": {
    "message": "{PH1} (Zum Bestätigen die Eingabetaste und zum Abbrechen die ESC-Taste drücken)"
  },
  "ui/legacy/components/quick_open/QuickOpen.ts | typeQuestionMarkToSeeAvailable": {
    "message": "Fragezeichen eingeben, um die verfügbaren Befehle zu sehen"
  },
  "ui/legacy/components/quick_open/QuickOpen.ts | typeToSeeAvailableCommands": {
    "message": "„?“ tippen, um verfügbare Befehle zu sehen"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | openFile": {
    "message": "Datei öffnen"
  },
  "ui/legacy/components/quick_open/quick_open-meta.ts | runCommand": {
    "message": "Befehl ausführen"
  },
  "ui/legacy/components/source_frame/FontView.ts | font": {
    "message": "Schriftart"
  },
  "ui/legacy/components/source_frame/FontView.ts | previewOfFontFromS": {
    "message": "Schriftvorschau von {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageAsDataUri": {
    "message": "Bild als Daten-URI kopieren"
  },
  "ui/legacy/components/source_frame/ImageView.ts | copyImageUrl": {
    "message": "Bild-URL kopieren"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dD": {
    "message": "{PH1} × {PH2}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | download": {
    "message": "Download"
  },
  "ui/legacy/components/source_frame/ImageView.ts | dropImageFileHere": {
    "message": "Bilddatei hier ablegen"
  },
  "ui/legacy/components/source_frame/ImageView.ts | image": {
    "message": "Bild"
  },
  "ui/legacy/components/source_frame/ImageView.ts | imageFromS": {
    "message": "Bild von {PH1}"
  },
  "ui/legacy/components/source_frame/ImageView.ts | openImageInNewTab": {
    "message": "Bild in neuem Tab öffnen"
  },
  "ui/legacy/components/source_frame/ImageView.ts | saveImageAs": {
    "message": "Bild speichern unter…"
  },
  "ui/legacy/components/source_frame/JSONView.ts | find": {
    "message": "Suchen"
  },
  "ui/legacy/components/source_frame/PreviewFactory.ts | nothingToPreview": {
    "message": "Keine Ergebnisse zur Vorschau vorhanden"
  },
  "ui/legacy/components/source_frame/ResourceSourceFrame.ts | find": {
    "message": "Suchen"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | bytecodePositionXs": {
    "message": "Bytecode-Position 0x{PH1}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dCharactersSelected": {
    "message": "{PH1} Zeichen ausgewählt"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dLinesDCharactersSelected": {
    "message": "{PH1} Zeilen, {PH2} Zeichen ausgewählt"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | dSelectionRegions": {
    "message": "{PH1} Auswahlregionen"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | lineSColumnS": {
    "message": "Zeile {PH1}, Spalte {PH2}"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | loading": {
    "message": "Wird geladen…"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | prettyPrint": {
    "message": "Quelltextformatierung"
  },
  "ui/legacy/components/source_frame/SourceFrame.ts | source": {
    "message": "Quelle"
  },
  "ui/legacy/components/source_frame/XMLView.ts | find": {
    "message": "Suchen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | Spaces": {
    "message": "2 Leerzeichen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | defaultIndentation": {
    "message": "Standardeinrückung:"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | eSpaces": {
    "message": "8 Leerzeichen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | fSpaces": {
    "message": "4 Leerzeichen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToESpaces": {
    "message": "Für Einzug 8 Leerzeichen festlegen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToFSpaces": {
    "message": "Für Einzug 4 Leerzeichen festlegen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToSpaces": {
    "message": "Für Einzug 2 Leerzeichen festlegen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | setIndentationToTabCharacter": {
    "message": "Einzug auf Tabulatorzeichen setzen"
  },
  "ui/legacy/components/source_frame/source_frame-meta.ts | tabCharacter": {
    "message": "Tabulatorzeichen"
  },
  "ui/legacy/components/text_editor/CodeMirrorTextEditor.ts | codeEditor": {
    "message": "Codeeditor"
  },
  "ui/legacy/components/utils/ImagePreview.ts | currentSource": {
    "message": "Aktuelle Quelle:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | fileSize": {
    "message": "Dateigröße:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | imageFromS": {
    "message": "Bild von {PH1}"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicAspectRatio": {
    "message": "Intrinsisches Seitenverhältnis:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | intrinsicSize": {
    "message": "Intrinsische Größe:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedAspectRatio": {
    "message": "Gerendertes Seitenverhältnis"
  },
  "ui/legacy/components/utils/ImagePreview.ts | renderedSize": {
    "message": "Gerenderte Größe:"
  },
  "ui/legacy/components/utils/ImagePreview.ts | unknownSource": {
    "message": "unbekannte Quelle"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | addToIgnore": {
    "message": "Skript zur Ignorieren-Liste hinzufügen"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | removeFromIgnore": {
    "message": "Aus der Ignorieren-Liste löschen"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | showSMoreFrames": {
    "message": "{n,plural, =1{# weiteren Frame anzeigen}other{# weitere Frames anzeigen}}"
  },
  "ui/legacy/components/utils/JSPresentationUtils.ts | unknownSource": {
    "message": "unbekannt"
  },
  "ui/legacy/components/utils/Linkifier.ts | auto": {
    "message": "automatisch"
  },
  "ui/legacy/components/utils/Linkifier.ts | linkHandling": {
    "message": "Linkhandling:"
  },
  "ui/legacy/components/utils/Linkifier.ts | openUsingS": {
    "message": "Mithilfe von {PH1} öffnen"
  },
  "ui/legacy/components/utils/Linkifier.ts | reveal": {
    "message": "Anzeigen"
  },
  "ui/legacy/components/utils/Linkifier.ts | revealInS": {
    "message": "In {PH1} anzeigen"
  },
  "ui/legacy/components/utils/Linkifier.ts | unknown": {
    "message": "(unbekannt)"
  },
  "ui/legacy/components/utils/TargetDetachedDialog.ts | websocketDisconnected": {
    "message": "WebSocket nicht verbunden"
  }
}
