{"version":3,"file":"i18nImpl.js","sourceRoot":"","sources":["../../../../../../front_end/core/i18n/i18nImpl.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n// eslint-disable-next-line\nimport i18nBundle from '../../third_party/i18n/i18n-bundle.js';\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nimport {DevToolsLocale} from './DevToolsLocale.js';\n\nimport type * as i18nTypes from './i18nTypes.js';\n\nconst UIStrings = {\n  /**\n  *@description μs is the short form of micro-seconds and the placeholder is a number\n  *@example {2} PH1\n  */\n  fmms: '{PH1} μs',\n  /**\n  *@description ms is the short form of milli-seconds and the placeholder is a decimal number\n  *@example {2.14} PH1\n  */\n  fms: '{PH1} ms',\n  /**\n  *@description s is short for seconds and the placeholder is a decimal number\n  *@example {2.14} PH1\n  */\n  fs: '{PH1} s',\n  /**\n  *@description min is short for minutes and the placeholder is a decimal number\n  *@example {2.2} PH1\n  */\n  fmin: '{PH1} min',\n  /**\n  *@description hrs is short for hours and the placeholder is a decimal number\n  *@example {2.2} PH1\n  */\n  fhrs: '{PH1} hrs',\n  /**\n  *@description days formatting and the placeholder is a decimal number\n  *@example {2.2} PH1\n  */\n  fdays: '{PH1} days',\n};\n\nconst str_ = registerUIStrings('core/i18n/i18nImpl.ts', UIStrings);\nconst i18nString = getLocalizedString.bind(undefined, str_);\n\n// All the locales that are part of the DevTools bundle and should not be fetched\n// remotely. Keep this list in sync with \"copied_devtools_locale_files\" in\n// \"all_devtools_files.gni\" (except the pseudo locales).\nconst BUNDLED_LOCALES = new Set<string>(['en-US', 'en-XL', 'zh']);\n\n/**\n * The strings from the module.json file\n */\nlet moduleJSONStrings: Object|undefined;\n\n/**\n * Returns an instance of an object of formatted strings based on locale. If the instance is not\n * set at the time of calling, it is created.\n */\nfunction getOrSetModuleJSONStrings(): Object {\n  moduleJSONStrings = moduleJSONStrings || i18nBundle.getRendererFormattedStrings(DevToolsLocale.instance().locale);\n  return moduleJSONStrings;\n}\n\n/**\n * Look up the best available locale for the requested language through these fall backs:\n * - exact match\n * - progressively shorter prefixes (`de-CH-1996` -> `de-CH` -> `de`)\n * - the default locale ('en-US') if no match is found\n *\n * If `locale` isn't provided, the default is used.\n */\nexport function lookupClosestSupportedDevToolsLocale(locale: string): string {\n  return i18nBundle.lookupLocale(locale);\n}\n\n/**\n * Returns the Url from which a locale can be fetched. This depends on the\n * specific locale, as some are bundled with DevTools while others\n * have to be fetched remotely.\n */\nfunction getLocaleFetchUrl(locale: Intl.UnicodeBCP47LocaleIdentifier): string {\n  const remoteBase = Root.Runtime.getRemoteBase();\n  if (remoteBase && remoteBase.base && !BUNDLED_LOCALES.has(locale)) {\n    return `${remoteBase.base}core/i18n/locales/${locale}.json`;\n  }\n  return new URL(`../../core/i18n/locales/${locale}.json`, import.meta.url).toString();\n}\n\n/**\n * Fetches the locale data of the specified locale.\n * Callers have to ensure that `locale` is an officilly supported locale.\n * Depending whether a locale is present in `bundledLocales`, the data will be\n * fetched locally or remotely.\n */\nexport async function fetchAndRegisterLocaleData(locale: Intl.UnicodeBCP47LocaleIdentifier): Promise<void> {\n  const localeDataTextPromise = Root.Runtime.loadResourcePromise(getLocaleFetchUrl(locale));\n  const timeoutPromise =\n      new Promise((resolve, reject) => setTimeout(() => reject(new Error('timed out fetching locale')), 5000));\n  const localeDataText = await Promise.race([timeoutPromise, localeDataTextPromise]);\n  const localeData = JSON.parse(localeDataText as string);\n  i18nBundle.registerLocaleData(locale, localeData);\n}\n\n/**\n * Returns an anonymous function that wraps a call to retrieve a localized string.\n * This is introduced so that localized strings can be declared in environments where\n * the i18n system has not been configured and so, cannot be directly invoked. Instead,\n * strings are lazily localized when they are used. This is used for instance in the\n * meta files used to register module extensions.\n */\nexport function getLazilyComputedLocalizedString(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    str_: (id: string, values: Object) => Platform.UIString.LocalizedString, id: string, values: Object = {}): () =>\n    Platform.UIString.LocalizedString {\n  return (): Platform.UIString.LocalizedString => getLocalizedString(str_, id, values);\n}\n\n/**\n * Retrieve the localized string.\n */\nexport function getLocalizedString(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    str_: (id: string, values: Object) => Platform.UIString.LocalizedString, id: string,\n    values: Object = {}): Platform.UIString.LocalizedString {\n  const icuMessage = str_(id, values);\n  return i18nBundle.getFormatted(icuMessage, DevToolsLocale.instance().locale) as Platform.UIString.LocalizedString;\n}\n\n/**\n * Register a file's UIStrings with i18n, return function to generate the string ids.\n */\nexport function registerUIStrings(path: string, stringStructure: Object): (id: string, values: Object) =>\n    Platform.UIString.LocalizedString {\n  /**\n   * Convert a message string & replacement values into an\n   * indexed id value in the form '{messageid} | # {index}'.\n   * */\n  const str: (id: string, value: Object) => Platform.UIString.LocalizedString = (id: string, value: Object) => {\n    try {\n      const i18nInstance = i18nBundle.createMessageInstanceIdFn(path, stringStructure) as (\n                               id: string, values: Object) => Platform.UIString.LocalizedString;\n      return i18nInstance(id, value);\n    } catch (e) {\n      // ID was not in the main file search for module.json strings\n      if (e instanceof i18nBundle.idNotInMainDictionaryException) {\n        const stringMappingArray = Object.getOwnPropertyNames(getOrSetModuleJSONStrings());\n        const index = stringMappingArray.indexOf(id);\n        if (index >= 0) {\n          return stringMappingArray[index] as Platform.UIString.LocalizedString;\n        }\n      }\n\n      return id as Platform.UIString.LocalizedString;\n    }\n  };\n\n  return str;\n}\n\n/**\n * Returns a span element that may contains other DOM element as placeholders\n */\nexport function getFormatLocalizedString(\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    str_: (id: string, values: Object) => Platform.UIString.LocalizedString, stringId: string,\n    placeholders: Record<string, Object>): Element {\n  const icuMessage = str_(stringId, placeholders);\n  const formatter = i18nBundle.getFormatter(icuMessage, DevToolsLocale.instance().locale);\n\n  const icuElements = formatter.getAst().elements;\n  const args: Array<Object> = [];\n  let formattedString = '';\n  for (const element of icuElements) {\n    if (element.type === 'argumentElement') {\n      const placeholderValue = placeholders[element.id];\n      if (placeholderValue) {\n        args.push(placeholderValue);\n        element.value = '%s';  // convert the {PH} back to %s to use Platform.UIString\n      }\n    }\n    formattedString += element.value;\n  }\n  return formatLocalized(formattedString, args);\n}\n\nexport function formatLocalized(formattedString: string, args: Array<Object>): Element {\n  const substitution: Platform.StringUtilities.FormatterFunction<Object> = substitution => {\n    return substitution;\n  };\n\n\n  function append(a: Element, b: undefined|string|Node): Element {\n    if (b) {\n      a.appendChild(typeof b === 'string' ? document.createTextNode(b) : b);\n    }\n\n    return a;\n  }\n\n  const formatters = {s: substitution};\n  return Platform.StringUtilities.format(formattedString, args, formatters, document.createElement('span'), append)\n      .formattedResult;\n}\n\nexport function serializeUIString(string: string, values: Record<string, Object> = {}): string {\n  const serializedMessage = {string, values};\n  return JSON.stringify(serializedMessage);\n}\n\nexport function deserializeUIString(serializedMessage: string): i18nTypes.SerializedMessage {\n  if (!serializedMessage) {\n    return {string: '', values: {}} as i18nTypes.SerializedMessage;\n  }\n\n  return JSON.parse(serializedMessage) as i18nTypes.SerializedMessage;\n}\n\n/**\n * Use this function in places where a `LocalizedString` is expected but the\n * term/phrase you want to use does not require translation.\n */\nexport function lockedString(str: string): Platform.UIString.LocalizedString {\n  return str as Platform.UIString.LocalizedString;\n}\n\n/**\n * Same as `lockedString` but for places where `i18nLazyString` would be used otherwise.\n */\nexport function lockedLazyString(str: string): () => Platform.UIString.LocalizedString {\n  return (): Platform.UIString.LocalizedString => str as Platform.UIString.LocalizedString;\n}\n\n/**\n * Returns a string of the form:\n *   \"German (Austria) - Deutsch (Österreich)\"\n * where the former locale representation is written in the currently enabled DevTools\n * locale and the latter locale representation is written in the locale of `localeString`.\n *\n * Should the two locales match (i.e. have the same language) then the latter locale\n * representation is written in English.\n */\nexport function getLocalizedLanguageRegion(\n    localeString: Intl.UnicodeBCP47LocaleIdentifier,\n    devtoolsLocale: DevToolsLocale): Platform.UIString.LocalizedString {\n  // @ts-ignore TODO(crbug.com/1163928) Wait for Intl support.\n  const locale = new Intl.Locale(localeString);\n  // @ts-ignore TODO(crbug.com/1163928) Wait for Intl support.\n  const devtoolsLoc = new Intl.Locale(devtoolsLocale.locale);\n  const targetLanguage = locale.language === devtoolsLoc.language ? 'en' : locale.baseName;\n  const languageInCurrentLocale =\n      new Intl.DisplayNames([devtoolsLocale.locale], {type: 'language'}).of(locale.language);\n  const languageInTargetLocale = new Intl.DisplayNames([targetLanguage], {type: 'language'}).of(locale.language);\n\n  let wrappedRegionInCurrentLocale = '';\n  let wrappedRegionInTargetLocale = '';\n\n  if (locale.region) {\n    const regionInCurrentLocale =\n        new Intl.DisplayNames([devtoolsLocale.locale], {type: 'region', style: 'short'}).of(locale.region);\n    const regionInTargetLocale =\n        new Intl.DisplayNames([targetLanguage], {type: 'region', style: 'short'}).of(locale.region);\n    wrappedRegionInCurrentLocale = ` (${regionInCurrentLocale})`;\n    wrappedRegionInTargetLocale = ` (${regionInTargetLocale})`;\n  }\n\n  return `${languageInCurrentLocale}${wrappedRegionInCurrentLocale} - ${languageInTargetLocale}${\n             wrappedRegionInTargetLocale}` as Platform.UIString.LocalizedString;\n}\n\nexport const preciseMillisToString = function(ms: number, precision?: number): string {\n  precision = precision || 0;\n  return i18nString(UIStrings.fms, {PH1: ms.toFixed(precision)});\n};\n\nexport const millisToString = function(ms: number, higherResolution?: boolean): string {\n  if (!isFinite(ms)) {\n    return '-';\n  }\n\n  if (ms === 0) {\n    return '0';\n  }\n\n  if (higherResolution && ms < 0.1) {\n    return i18nString(UIStrings.fmms, {PH1: (ms * 1000).toFixed(0)});\n  }\n  if (higherResolution && ms < 1000) {\n    return i18nString(UIStrings.fms, {PH1: (ms).toFixed(2)});\n  }\n  if (ms < 1000) {\n    return i18nString(UIStrings.fms, {PH1: (ms).toFixed(0)});\n  }\n\n  const seconds = ms / 1000;\n  if (seconds < 60) {\n    return i18nString(UIStrings.fs, {PH1: (seconds).toFixed(2)});\n  }\n\n  const minutes = seconds / 60;\n  if (minutes < 60) {\n    return i18nString(UIStrings.fmin, {PH1: (minutes).toFixed(1)});\n  }\n\n  const hours = minutes / 60;\n  if (hours < 24) {\n    return i18nString(UIStrings.fhrs, {PH1: (hours).toFixed(1)});\n  }\n\n  const days = hours / 24;\n  return i18nString(UIStrings.fdays, {PH1: (days).toFixed(1)});\n};\n\nexport const secondsToString = function(seconds: number, higherResolution?: boolean): string {\n  if (!isFinite(seconds)) {\n    return '-';\n  }\n  return millisToString(seconds * 1000, higherResolution);\n};\n"]}