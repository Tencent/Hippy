{"version":3,"file":"ServerTiming.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ServerTiming.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\n\nimport type {NameValue} from './NetworkRequest.js'; // eslint-disable-line no-unused-vars\n\nconst UIStrings = {\n  /**\n  *@description Text in Server Timing\n  */\n  deprecatedSyntaxFoundPleaseUse: 'Deprecated syntax found. Please use: <name>;dur=<duration>;desc=<description>',\n  /**\n  *@description Text in Server Timing\n  *@example {https} PH1\n  */\n  duplicateParameterSIgnored: 'Duplicate parameter \"{PH1}\" ignored.',\n  /**\n  *@description Text in Server Timing\n  *@example {https} PH1\n  */\n  noValueFoundForParameterS: 'No value found for parameter \"{PH1}\".',\n  /**\n  *@description Text in Server Timing\n  *@example {https} PH1\n  */\n  unrecognizedParameterS: 'Unrecognized parameter \"{PH1}\".',\n  /**\n  *@description Text in Server Timing\n  */\n  extraneousTrailingCharacters: 'Extraneous trailing characters.',\n  /**\n  *@description Text in Server Timing\n  *@example {https} PH1\n  *@example {2.0} PH2\n  */\n  unableToParseSValueS: 'Unable to parse \"{PH1}\" value \"{PH2}\".',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/ServerTiming.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class ServerTiming {\n  metric: string;\n  value: number|null;\n  description: string|null;\n\n  constructor(metric: string, value: number|null, description: string|null) {\n    this.metric = metric;\n    this.value = value;\n    this.description = description;\n  }\n\n  static parseHeaders(headers: NameValue[]): ServerTiming[]|null {\n    const rawServerTimingHeaders = headers.filter(item => item.name.toLowerCase() === 'server-timing');\n    if (!rawServerTimingHeaders.length) {\n      return null;\n    }\n\n    const serverTimings = rawServerTimingHeaders.reduce((memo, header) => {\n      const timing = this.createFromHeaderValue(header.value);\n      memo.push(...timing.map(function(entry) {\n        return new ServerTiming(\n            entry.name, entry.hasOwnProperty('dur') ? entry.dur : null, entry.hasOwnProperty('desc') ? entry.desc : '');\n      }));\n      return memo;\n    }, ([] as ServerTiming[]));\n    serverTimings.sort((a, b) => Platform.StringUtilities.compare(a.metric.toLowerCase(), b.metric.toLowerCase()));\n    return serverTimings;\n  }\n\n  /**\n   * TODO(crbug.com/1011811): Instead of using !Object<string, *> we should have a proper type\n   *                          with name, desc and dur properties.\n   */\n  static createFromHeaderValue(valueString: string): {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [x: string]: any,\n  }[] {\n    function trimLeadingWhiteSpace(): void {\n      valueString = valueString.replace(/^\\s*/, '');\n    }\n    function consumeDelimiter(char: string): boolean {\n      console.assert(char.length === 1);\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) !== char) {\n        return false;\n      }\n\n      valueString = valueString.substring(1);\n      return true;\n    }\n    function consumeToken(): string|null {\n      // https://tools.ietf.org/html/rfc7230#appendix-B\n      const result = /^(?:\\s*)([\\w!#$%&'*+\\-.^`|~]+)(?:\\s*)(.*)/.exec(valueString);\n      if (!result) {\n        return null;\n      }\n\n      valueString = result[2];\n      return result[1];\n    }\n    function consumeTokenOrQuotedString(): string|null {\n      trimLeadingWhiteSpace();\n      if (valueString.charAt(0) === '\"') {\n        return consumeQuotedString();\n      }\n\n      return consumeToken();\n    }\n    function consumeQuotedString(): string|null {\n      console.assert(valueString.charAt(0) === '\"');\n      valueString = valueString.substring(1);  // remove leading DQUOTE\n\n      let value = '';\n      while (valueString.length) {\n        // split into two parts:\n        //  -everything before the first \" or \\\n        //  -everything else\n        const result = /^([^\"\\\\]*)(.*)/.exec(valueString);\n        if (!result) {\n          return null;  // not a valid quoted-string\n        }\n        value += result[1];\n        if (result[2].charAt(0) === '\"') {\n          // we have found our closing \"\n          valueString = result[2].substring(1);  // strip off everything after the closing \"\n          return value;                          // we are done here\n        }\n\n        console.assert(result[2].charAt(0) === '\\\\');\n        // special rules for \\ found in quoted-string (https://tools.ietf.org/html/rfc7230#section-3.2.6)\n        value += result[2].charAt(1);          // grab the character AFTER the \\ (if there was one)\n        valueString = result[2].substring(2);  // strip off \\ and next character\n      }\n\n      return null;  // not a valid quoted-string\n    }\n    function consumeExtraneous(): void {\n      const result = /([,;].*)/.exec(valueString);\n      if (result) {\n        valueString = result[1];\n      }\n    }\n\n    const result = [];\n    let name;\n    while ((name = consumeToken()) !== null) {\n      const entry = {name};\n\n      if (valueString.charAt(0) === '=') {\n        this.showWarning(i18nString(UIStrings.deprecatedSyntaxFoundPleaseUse));\n      }\n\n      while (consumeDelimiter(';')) {\n        let paramName;\n        if ((paramName = consumeToken()) === null) {\n          continue;\n        }\n\n        paramName = paramName.toLowerCase();\n        const parseParameter = this.getParserForParameter(paramName);\n        let paramValue: (string|null)|null = null;\n        if (consumeDelimiter('=')) {\n          // always parse the value, even if we don't recognize the parameter name\n          paramValue = consumeTokenOrQuotedString();\n          consumeExtraneous();\n        }\n\n        if (parseParameter) {\n          // paramName is valid\n          if (entry.hasOwnProperty(paramName)) {\n            this.showWarning(i18nString(UIStrings.duplicateParameterSIgnored, {PH1: paramName}));\n            continue;\n          }\n\n          if (paramValue === null) {\n            this.showWarning(i18nString(UIStrings.noValueFoundForParameterS, {PH1: paramName}));\n          }\n\n          parseParameter.call(this, entry, paramValue);\n        } else {\n          // paramName is not valid\n          this.showWarning(i18nString(UIStrings.unrecognizedParameterS, {PH1: paramName}));\n        }\n      }\n\n      result.push(entry);\n      if (!consumeDelimiter(',')) {\n        break;\n      }\n    }\n\n    if (valueString.length) {\n      this.showWarning(i18nString(UIStrings.extraneousTrailingCharacters));\n    }\n    return result;\n  }\n\n  static getParserForParameter(paramName: string):\n      ((arg0: {\n         // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n         // eslint-disable-next-line @typescript-eslint/no-explicit-any\n         [x: string]: any,\n       },\n        arg1: string|null) => void)|null {\n    switch (paramName) {\n      case 'dur': {\n        function durParser(\n            entry: {\n              // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              [x: string]: any,\n            },\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            paramValue: any): void {\n          entry.dur = 0;\n          if (paramValue !== null) {\n            const duration = parseFloat(paramValue);\n            if (isNaN(duration)) {\n              ServerTiming.showWarning(i18nString(UIStrings.unableToParseSValueS, {PH1: paramName, PH2: paramValue}));\n              return;\n            }\n            entry.dur = duration;\n          }\n        }\n        return durParser;\n      }\n\n      case 'desc': {\n        function descParser(\n            entry: {\n              // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n              // eslint-disable-next-line @typescript-eslint/no-explicit-any\n              [x: string]: any,\n            },\n            paramValue: string|null): void {\n          entry.desc = paramValue || '';\n        }\n        return descParser;\n      }\n\n      default: {\n        return null;\n      }\n    }\n  }\n\n  static showWarning(msg: string): void {\n    Common.Console.Console.instance().warn(`ServerTiming: ${msg}`);\n  }\n}\n"]}