{"version":3,"file":"CookieModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CookieModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Root from '../root/root.js';\n\nimport type {Attributes} from './Cookie.js';\nimport {Cookie} from './Cookie.js';          // eslint-disable-line no-unused-vars\nimport type {Resource} from './Resource.js'; // eslint-disable-line no-unused-vars\nimport {ResourceTreeModel} from './ResourceTreeModel.js';\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class CookieModel extends SDKModel {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _blockedCookies: Map<any, any>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _cookieToBlockedReasons: Map<any, any>;\n  constructor(target: Target) {\n    super(target);\n\n    /** Array<!Cookie> */\n    this._blockedCookies = new Map();\n    this._cookieToBlockedReasons = new Map();\n  }\n\n  addBlockedCookie(cookie: Cookie, blockedReasons: BlockedReason[]|null): void {\n    const key = cookie.key();\n    const previousCookie = this._blockedCookies.get(key);\n    this._blockedCookies.set(key, cookie);\n    this._cookieToBlockedReasons.set(cookie, blockedReasons);\n    if (previousCookie) {\n      this._cookieToBlockedReasons.delete(key);\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  getCookieToBlockedReasonsMap(): Map<any, any> {\n    return this._cookieToBlockedReasons;\n  }\n\n  async getCookies(urls: string[]): Promise<Cookie[]> {\n    const response = await this.target().networkAgent().invoke_getCookies({urls});\n    if (response.getError()) {\n      return [];\n    }\n    const normalCookies = response.cookies.map(Cookie.fromProtocolCookie);\n    return normalCookies.concat(Array.from(this._blockedCookies.values()));\n  }\n\n  async deleteCookie(cookie: Cookie): Promise<void> {\n    await this.deleteCookies([cookie]);\n  }\n\n  async clear(domain?: string, securityOrigin?: string): Promise<void> {\n    const cookies = await this.getCookiesForDomain(domain || null);\n    if (securityOrigin) {\n      const cookiesToDelete = cookies.filter(cookie => {\n        return cookie.matchesSecurityOrigin(securityOrigin);\n      });\n      await this.deleteCookies(cookiesToDelete);\n    } else {\n      await this.deleteCookies(cookies);\n    }\n  }\n\n  async saveCookie(cookie: Cookie): Promise<boolean> {\n    let domain = cookie.domain();\n    if (!domain.startsWith('.')) {\n      domain = '';\n    }\n    let expires: number|undefined = undefined;\n    if (cookie.expires()) {\n      expires = Math.floor(Date.parse(`${cookie.expires()}`) / 1000);\n    }\n    const enabled = Root.Runtime.experiments.isEnabled('experimentalCookieFeatures');\n    const preserveUnset = (scheme: Protocol.Network.CookieSourceScheme): Protocol.Network.CookieSourceScheme.Unset|\n                          undefined => scheme === Protocol.Network.CookieSourceScheme.Unset ? scheme : undefined;\n    const protocolCookie = {\n      name: cookie.name(),\n      value: cookie.value(),\n      url: cookie.url() || undefined,\n      domain,\n      path: cookie.path(),\n      secure: cookie.secure(),\n      httpOnly: cookie.httpOnly(),\n      sameSite: cookie.sameSite(),\n      expires,\n      priority: cookie.priority(),\n      sameParty: cookie.sameParty(),\n      sourceScheme: enabled ? cookie.sourceScheme() : preserveUnset(cookie.sourceScheme()),\n      sourcePort: enabled ? cookie.sourcePort() : undefined,\n    };\n    const response = await this.target().networkAgent().invoke_setCookie(protocolCookie);\n    const error = response.getError();\n    if (error || !response.success) {\n      return false;\n    }\n    return response.success;\n  }\n\n  /**\n   * Returns cookies needed by current page's frames whose security origins are |domain|.\n   */\n  getCookiesForDomain(domain: string|null): Promise<Cookie[]> {\n    const resourceURLs = [];\n    function populateResourceURLs(resource: Resource): boolean {\n      const documentURL = Common.ParsedURL.ParsedURL.fromString(resource.documentURL);\n      if (documentURL && (!domain || documentURL.securityOrigin() === domain)) {\n        resourceURLs.push(resource.url);\n      }\n      return false;\n    }\n    const resourceTreeModel = this.target().model(ResourceTreeModel);\n    if (resourceTreeModel) {\n      // In case the current frame was unreachable, add it's cookies\n      // because they might help to debug why the frame was unreachable.\n      if (resourceTreeModel.mainFrame && resourceTreeModel.mainFrame.unreachableUrl()) {\n        resourceURLs.push(resourceTreeModel.mainFrame.unreachableUrl());\n      }\n\n      resourceTreeModel.forAllResources(populateResourceURLs);\n    }\n    return this.getCookies(resourceURLs);\n  }\n\n  async deleteCookies(cookies: Cookie[]): Promise<void> {\n    const networkAgent = this.target().networkAgent();\n    this._blockedCookies.clear();\n    this._cookieToBlockedReasons.clear();\n    await Promise.all(cookies.map(\n        cookie => networkAgent.invoke_deleteCookies(\n            {name: cookie.name(), url: undefined, domain: cookie.domain(), path: cookie.path()})));\n  }\n}\n\nSDKModel.register(CookieModel, {capabilities: Capability.Network, autostart: false});\nexport interface BlockedReason {\n  uiString: string;\n  attribute: Attributes|null;\n}\n"]}