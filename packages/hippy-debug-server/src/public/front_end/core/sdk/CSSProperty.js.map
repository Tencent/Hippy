{"version":3,"file":"CSSProperty.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSProperty.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport * as Common from '../common/common.js';\nimport * as HostModule from '../host/host.js';\nimport * as Platform from '../platform/platform.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type * as CodeMirrorModule from '../../third_party/codemirror/codemirror-legacy.js'; // eslint-disable-line @typescript-eslint/no-unused-vars\n\nimport {cssMetadata, GridAreaRowRegex} from './CSSMetadata.js';\nimport type {Edit} from './CSSModel.js';                           // eslint-disable-line no-unused-vars\nimport type {CSSStyleDeclaration} from './CSSStyleDeclaration.js'; // eslint-disable-line no-unused-vars\n\nexport class CSSProperty {\n  ownerStyle: CSSStyleDeclaration;\n  index: number;\n  name: string;\n  value: string;\n  important: boolean;\n  disabled: boolean;\n  parsedOk: boolean;\n  implicit: boolean;\n  text: string|null|undefined;\n  range: TextUtils.TextRange.TextRange|null;\n  _active: boolean;\n  _nameRange: TextUtils.TextRange.TextRange|null;\n  _valueRange: TextUtils.TextRange.TextRange|null;\n  _invalidProperty: string|null;\n  _invalidString?: Common.UIString.LocalizedString;\n\n  constructor(\n      ownerStyle: CSSStyleDeclaration, index: number, name: string, value: string, important: boolean,\n      disabled: boolean, parsedOk: boolean, implicit: boolean, text?: string|null, range?: Protocol.CSS.SourceRange) {\n    this.ownerStyle = ownerStyle;\n    this.index = index;\n    this.name = name;\n    this.value = value;\n    this.important = important;\n    this.disabled = disabled;\n    this.parsedOk = parsedOk;\n    this.implicit = implicit;  // A longhand, implicitly set by missing values of shorthand.\n    this.text = text;\n    this.range = range ? TextUtils.TextRange.TextRange.fromObject(range) : null;\n    this._active = true;\n    this._nameRange = null;\n    this._valueRange = null;\n    this._invalidProperty = null;\n  }\n\n  static parsePayload(ownerStyle: CSSStyleDeclaration, index: number, payload: Protocol.CSS.CSSProperty): CSSProperty {\n    // The following default field values are used in the payload:\n    // important: false\n    // parsedOk: true\n    // implicit: false\n    // disabled: false\n    const result = new CSSProperty(\n        ownerStyle, index, payload.name, payload.value, payload.important || false, payload.disabled || false,\n        ('parsedOk' in payload) ? Boolean(payload.parsedOk) : true, Boolean(payload.implicit), payload.text,\n        payload.range);\n    return result;\n  }\n\n  _ensureRanges(): void {\n    if (this._nameRange && this._valueRange) {\n      return;\n    }\n    const range = this.range;\n    const text = this.text ? new TextUtils.Text.Text(this.text) : null;\n    if (!range || !text) {\n      return;\n    }\n\n    const nameIndex = text.value().indexOf(this.name);\n    const valueIndex = text.value().lastIndexOf(this.value);\n    if (nameIndex === -1 || valueIndex === -1 || nameIndex > valueIndex) {\n      return;\n    }\n\n    const nameSourceRange = new TextUtils.TextRange.SourceRange(nameIndex, this.name.length);\n    const valueSourceRange = new TextUtils.TextRange.SourceRange(valueIndex, this.value.length);\n\n    this._nameRange = rebase(text.toTextRange(nameSourceRange), range.startLine, range.startColumn);\n    this._valueRange = rebase(text.toTextRange(valueSourceRange), range.startLine, range.startColumn);\n\n    function rebase(oneLineRange: TextUtils.TextRange.TextRange, lineOffset: number, columnOffset: number):\n        TextUtils.TextRange.TextRange {\n      if (oneLineRange.startLine === 0) {\n        oneLineRange.startColumn += columnOffset;\n        oneLineRange.endColumn += columnOffset;\n      }\n      oneLineRange.startLine += lineOffset;\n      oneLineRange.endLine += lineOffset;\n      return oneLineRange;\n    }\n  }\n\n  nameRange(): TextUtils.TextRange.TextRange|null {\n    this._ensureRanges();\n    return this._nameRange;\n  }\n\n  valueRange(): TextUtils.TextRange.TextRange|null {\n    this._ensureRanges();\n    return this._valueRange;\n  }\n\n  rebase(edit: Edit): void {\n    if (this.ownerStyle.styleSheetId !== edit.styleSheetId) {\n      return;\n    }\n    if (this.range) {\n      this.range = this.range.rebaseAfterTextEdit(edit.oldRange, edit.newRange);\n    }\n  }\n\n  setActive(active: boolean): void {\n    this._active = active;\n  }\n\n  get propertyText(): string|null {\n    if (this.text !== undefined) {\n      return this.text;\n    }\n\n    if (this.name === '') {\n      return '';\n    }\n    return this.name + ': ' + this.value + (this.important ? ' !important' : '') + ';';\n  }\n\n  activeInStyle(): boolean {\n    return this._active;\n  }\n\n  trimmedValueWithoutImportant(): string {\n    const important = '!important';\n    return this.value.endsWith(important) ? this.value.slice(0, -important.length).trim() : this.value.trim();\n  }\n\n  async setText(propertyText: string, majorChange: boolean, overwrite?: boolean): Promise<boolean> {\n    if (!this.ownerStyle) {\n      return Promise.reject(new Error('No ownerStyle for property'));\n    }\n\n    if (!this.ownerStyle.styleSheetId) {\n      return Promise.reject(new Error('No owner style id'));\n    }\n\n    if (!this.range || !this.ownerStyle.range) {\n      return Promise.reject(new Error('Style not editable'));\n    }\n\n    if (majorChange) {\n      HostModule.userMetrics.actionTaken(HostModule.UserMetrics.Action.StyleRuleEdited);\n      if (this.name.startsWith('--')) {\n        HostModule.userMetrics.actionTaken(HostModule.UserMetrics.Action.CustomPropertyEdited);\n      }\n    }\n\n    if (overwrite && propertyText === this.propertyText) {\n      this.ownerStyle.cssModel().domModel().markUndoableState(!majorChange);\n      return Promise.resolve(true);\n    }\n\n    const range = this.range.relativeTo(this.ownerStyle.range.startLine, this.ownerStyle.range.startColumn);\n    const indentation = this.ownerStyle.cssText ?\n        this._detectIndentation(this.ownerStyle.cssText) :\n        Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n    const endIndentation = this.ownerStyle.cssText ? indentation.substring(0, this.ownerStyle.range.endColumn) : '';\n    const text = new TextUtils.Text.Text(this.ownerStyle.cssText || '');\n    const newStyleText = text.replaceRange(range, Platform.StringUtilities.sprintf(';%s;', propertyText));\n    const tokenizerFactory = TextUtils.CodeMirrorUtils.TokenizerFactory.instance();\n    const styleText = CSSProperty._formatStyle(newStyleText, indentation, endIndentation, tokenizerFactory);\n    return this.ownerStyle.setText(styleText, majorChange);\n  }\n\n  static _formatStyle(\n      styleText: string, indentation: string, endIndentation: string,\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      tokenizerFactory: TextUtils.TextUtils.TokenizerFactory, codeMirrorMode?: CodeMirror.Mode<any>): string {\n    const doubleIndent = indentation.substring(endIndentation.length) + indentation;\n    if (indentation) {\n      indentation = '\\n' + indentation;\n    }\n    let result = '';\n    let propertyName = '';\n    let propertyText = '';\n    let insideProperty = false;\n    let needsSemi = false;\n    const tokenize = tokenizerFactory.createTokenizer('text/css', codeMirrorMode);\n\n    tokenize('*{' + styleText + '}', processToken);\n    if (insideProperty) {\n      result += propertyText;\n    }\n    result = result.substring(2, result.length - 1).trimRight();\n    return result + (indentation ? '\\n' + endIndentation : '');\n\n    function processToken(token: string, tokenType: string|null, _column: number, _newColumn: number): void {\n      if (!insideProperty) {\n        const disabledProperty = tokenType && tokenType.includes('css-comment') && isDisabledProperty(token);\n        const isPropertyStart = tokenType &&\n            (tokenType.includes('css-string') || tokenType.includes('css-meta') || tokenType.includes('css-property') ||\n             tokenType.includes('css-variable-2'));\n        if (disabledProperty) {\n          result = result.trimRight() + indentation + token;\n        } else if (isPropertyStart) {\n          insideProperty = true;\n          propertyText = token;\n        } else if (token !== ';' || needsSemi) {\n          result += token;\n          if (token.trim() && !(tokenType && tokenType.includes('css-comment'))) {\n            needsSemi = token !== ';';\n          }\n        }\n        if (token === '{' && !tokenType) {\n          needsSemi = false;\n        }\n        return;\n      }\n\n      if (token === '}' || token === ';') {\n        // While `propertyText` can generally be trimmed, doing so\n        // breaks valid CSS declarations such as `--foo:  ;` which would\n        // then produce invalid CSS of the form `--foo:;`. This\n        // implementation takes special care to restore a single\n        // whitespace token in this edge case. https://crbug.com/1071296\n        const trimmedPropertyText = propertyText.trim();\n        result = result.trimRight() + indentation + trimmedPropertyText +\n            (trimmedPropertyText.endsWith(':') ? ' ' : '') + ';';\n        needsSemi = false;\n        insideProperty = false;\n        propertyName = '';\n        if (token === '}') {\n          result += '}';\n        }\n      } else {\n        if (cssMetadata().isGridAreaDefiningProperty(propertyName)) {\n          const rowResult = GridAreaRowRegex.exec(token);\n          if (rowResult && rowResult.index === 0 && !propertyText.trimRight().endsWith(']')) {\n            propertyText = propertyText.trimRight() + '\\n' + doubleIndent;\n          }\n        }\n        if (!propertyName && token === ':') {\n          propertyName = propertyText;\n        }\n        propertyText += token;\n      }\n    }\n\n    function isDisabledProperty(text: string): boolean {\n      const colon = text.indexOf(':');\n      if (colon === -1) {\n        return false;\n      }\n      const propertyName = text.substring(2, colon).trim();\n      return cssMetadata().isCSSPropertyName(propertyName);\n    }\n  }\n\n  _detectIndentation(text: string): string {\n    const lines = text.split('\\n');\n    if (lines.length < 2) {\n      return '';\n    }\n    return TextUtils.TextUtils.Utils.lineIndent(lines[1]);\n  }\n\n  setValue(newValue: string, majorChange: boolean, overwrite: boolean, userCallback?: ((arg0: boolean) => void)): void {\n    const text = this.name + ': ' + newValue + (this.important ? ' !important' : '') + ';';\n    this.setText(text, majorChange, overwrite).then(userCallback);\n  }\n\n  setDisabled(disabled: boolean): Promise<boolean> {\n    if (!this.ownerStyle) {\n      return Promise.resolve(false);\n    }\n    if (disabled === this.disabled) {\n      return Promise.resolve(true);\n    }\n    if (!this.text) {\n      return Promise.resolve(true);\n    }\n    const propertyText = this.text.trim();\n    const text = disabled ? '/* ' + propertyText + ' */' : this.text.substring(2, propertyText.length - 2).trim();\n    return this.setText(text, true, true);\n  }\n\n  /**\n   * This stores the warning string when a CSS Property is improperly parsed.\n   */\n  setDisplayedStringForInvalidProperty(invalidString: Common.UIString.LocalizedString): void {\n    this._invalidString = invalidString;\n  }\n\n  /**\n   * Retrieve the warning string for a screen reader to announce when editing the property.\n   */\n  getInvalidStringForInvalidProperty(): Common.UIString.LocalizedString|undefined {\n    return this._invalidString;\n  }\n}\n"]}