{"version":3,"file":"OverlayPersistentHighlighter.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/OverlayPersistentHighlighter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\n\nimport {OverlayColorGenerator} from './OverlayColorGenerator.js';\n\nexport class OverlayPersistentHighlighter {\n  _model: OverlayModel;\n  _gridHighlights: Map<number, Protocol.Overlay.GridHighlightConfig>;\n  _scrollSnapHighlights: Map<number, Protocol.Overlay.ScrollSnapContainerHighlightConfig>;\n  _flexHighlights: Map<number, Protocol.Overlay.FlexContainerHighlightConfig>;\n  _colors: Map<number, Common.Color.Color>;\n  _gridColorGenerator: OverlayColorGenerator;\n  _flexColorGenerator: OverlayColorGenerator;\n  _flexEnabled: boolean;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _showGridLineLabelsSetting: Common.Settings.Setting<any>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _extendGridLinesSetting: Common.Settings.Setting<any>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _showGridAreasSetting: Common.Settings.Setting<any>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _showGridTrackSizesSetting: Common.Settings.Setting<any>;\n  constructor(model: OverlayModel, flexEnabled: boolean = true) {\n    this._model = model;\n\n    this._gridHighlights = new Map();\n\n    this._scrollSnapHighlights = new Map();\n\n    this._flexHighlights = new Map();\n\n    this._colors = new Map();\n\n    this._gridColorGenerator = new OverlayColorGenerator();\n    this._flexColorGenerator = new OverlayColorGenerator();\n    this._flexEnabled = flexEnabled;\n\n    this._showGridLineLabelsSetting = Common.Settings.Settings.instance().moduleSetting('showGridLineLabels');\n    this._showGridLineLabelsSetting.addChangeListener(this._onSettingChange, this);\n    this._extendGridLinesSetting = Common.Settings.Settings.instance().moduleSetting('extendGridLines');\n    this._extendGridLinesSetting.addChangeListener(this._onSettingChange, this);\n    this._showGridAreasSetting = Common.Settings.Settings.instance().moduleSetting('showGridAreas');\n    this._showGridAreasSetting.addChangeListener(this._onSettingChange, this);\n    this._showGridTrackSizesSetting = Common.Settings.Settings.instance().moduleSetting('showGridTrackSizes');\n    this._showGridTrackSizesSetting.addChangeListener(this._onSettingChange, this);\n  }\n\n  _onSettingChange(): void {\n    this.resetOverlay();\n  }\n\n  _buildGridHighlightConfig(nodeId: number): Protocol.Overlay.GridHighlightConfig {\n    const mainColor = this.colorOfGrid(nodeId);\n    const background = mainColor.setAlpha(0.1);\n    const gapBackground = mainColor.setAlpha(0.3);\n    const gapHatch = mainColor.setAlpha(0.8);\n\n    const showGridExtensionLines = (this._extendGridLinesSetting.get() as boolean);\n    const showPositiveLineNumbers = this._showGridLineLabelsSetting.get() === 'lineNumbers';\n    const showNegativeLineNumbers = showPositiveLineNumbers;\n    const showLineNames = this._showGridLineLabelsSetting.get() === 'lineNames';\n    return {\n      rowGapColor: gapBackground.toProtocolRGBA(),\n      rowHatchColor: gapHatch.toProtocolRGBA(),\n      columnGapColor: gapBackground.toProtocolRGBA(),\n      columnHatchColor: gapHatch.toProtocolRGBA(),\n      gridBorderColor: mainColor.toProtocolRGBA(),\n      gridBorderDash: false,\n      rowLineColor: mainColor.toProtocolRGBA(),\n      columnLineColor: mainColor.toProtocolRGBA(),\n      rowLineDash: true,\n      columnLineDash: true,\n      showGridExtensionLines,\n      showPositiveLineNumbers,\n      showNegativeLineNumbers,\n      showLineNames,\n      showAreaNames: (this._showGridAreasSetting.get() as boolean),\n      showTrackSizes: (this._showGridTrackSizesSetting.get() as boolean),\n      areaBorderColor: mainColor.toProtocolRGBA(),\n      gridBackgroundColor: background.toProtocolRGBA(),\n    };\n  }\n\n  _buildFlexContainerHighlightConfig(nodeId: number): Protocol.Overlay.FlexContainerHighlightConfig {\n    const mainColor = this.colorOfFlex(nodeId);\n    return {\n      containerBorder: {color: mainColor.toProtocolRGBA(), pattern: Protocol.Overlay.LineStylePattern.Dashed},\n      itemSeparator: {color: mainColor.toProtocolRGBA(), pattern: Protocol.Overlay.LineStylePattern.Dotted},\n      lineSeparator: {color: mainColor.toProtocolRGBA(), pattern: Protocol.Overlay.LineStylePattern.Dashed},\n      mainDistributedSpace: {hatchColor: mainColor.toProtocolRGBA()},\n      crossDistributedSpace: {hatchColor: mainColor.toProtocolRGBA()},\n    };\n  }\n\n  _buildScrollSnapContainerHighlightConfig(_nodeId: number): Protocol.Overlay.ScrollSnapContainerHighlightConfig {\n    return {\n      snapAreaBorder: {\n        color: Common.Color.PageHighlight.GridBorder.toProtocolRGBA(),\n        pattern: Protocol.Overlay.LineStylePattern.Dashed,\n      },\n      snapportBorder: {color: Common.Color.PageHighlight.GridBorder.toProtocolRGBA()},\n      scrollMarginColor: Common.Color.PageHighlight.Margin.toProtocolRGBA(),\n      scrollPaddingColor: Common.Color.PageHighlight.Padding.toProtocolRGBA(),\n    };\n  }\n\n  highlightGridInOverlay(nodeId: number): void {\n    this._gridHighlights.set(nodeId, this._buildGridHighlightConfig(nodeId));\n    this._updateHighlightsInOverlay();\n  }\n\n  isGridHighlighted(nodeId: number): boolean {\n    return this._gridHighlights.has(nodeId);\n  }\n\n  colorOfGrid(nodeId: number): Common.Color.Color {\n    let color = this._colors.get(nodeId);\n    if (!color) {\n      color = this._gridColorGenerator.next();\n      this._colors.set(nodeId, color);\n    }\n\n    return color;\n  }\n\n  setColorOfGrid(nodeId: number, color: Common.Color.Color): void {\n    this._colors.set(nodeId, color);\n  }\n\n  hideGridInOverlay(nodeId: number): void {\n    if (this._gridHighlights.has(nodeId)) {\n      this._gridHighlights.delete(nodeId);\n      this._updateHighlightsInOverlay();\n    }\n  }\n\n  highlightScrollSnapInOverlay(nodeId: number): void {\n    this._scrollSnapHighlights.set(nodeId, this._buildScrollSnapContainerHighlightConfig(nodeId));\n    this._updateHighlightsInOverlay();\n  }\n\n  isScrollSnapHighlighted(nodeId: number): boolean {\n    return this._scrollSnapHighlights.has(nodeId);\n  }\n\n  hideScrollSnapInOverlay(nodeId: number): void {\n    if (this._scrollSnapHighlights.has(nodeId)) {\n      this._scrollSnapHighlights.delete(nodeId);\n      this._updateHighlightsInOverlay();\n    }\n  }\n\n  highlightFlexInOverlay(nodeId: number): void {\n    this._flexHighlights.set(nodeId, this._buildFlexContainerHighlightConfig(nodeId));\n    this._updateHighlightsInOverlay();\n  }\n\n  isFlexHighlighted(nodeId: number): boolean {\n    return this._flexHighlights.has(nodeId);\n  }\n\n  colorOfFlex(nodeId: number): Common.Color.Color {\n    let color = this._colors.get(nodeId);\n    if (!color) {\n      color = this._flexColorGenerator.next();\n      this._colors.set(nodeId, color);\n    }\n\n    return color;\n  }\n\n  setColorOfFlex(nodeId: number, color: Common.Color.Color): void {\n    this._colors.set(nodeId, color);\n  }\n\n  hideFlexInOverlay(nodeId: number): void {\n    if (this._flexHighlights.has(nodeId)) {\n      this._flexHighlights.delete(nodeId);\n      this._updateHighlightsInOverlay();\n    }\n  }\n\n  hideAllInOverlay(): void {\n    this._flexHighlights.clear();\n    this._gridHighlights.clear();\n    this._scrollSnapHighlights.clear();\n    this._updateHighlightsInOverlay();\n  }\n\n  refreshHighlights(): void {\n    const gridsNeedUpdate = this._updateHighlightsForDeletedNodes(this._gridHighlights);\n    const flexboxesNeedUpdate = this._updateHighlightsForDeletedNodes(this._flexHighlights);\n    const scrollSnapsNeedUpdate = this._updateHighlightsForDeletedNodes(this._scrollSnapHighlights);\n    if (flexboxesNeedUpdate || gridsNeedUpdate || scrollSnapsNeedUpdate) {\n      this._updateHighlightsInOverlay();\n    }\n  }\n\n  _updateHighlightsForDeletedNodes(highlights: Map<number, unknown>): boolean {\n    let needsUpdate = false;\n    for (const nodeId of highlights.keys()) {\n      if (this._model.getDOMModel().nodeForId(nodeId) === null) {\n        highlights.delete(nodeId);\n        needsUpdate = true;\n      }\n    }\n    return needsUpdate;\n  }\n\n  resetOverlay(): void {\n    for (const nodeId of this._gridHighlights.keys()) {\n      this._gridHighlights.set(nodeId, this._buildGridHighlightConfig(nodeId));\n    }\n    for (const nodeId of this._flexHighlights.keys()) {\n      this._flexHighlights.set(nodeId, this._buildFlexContainerHighlightConfig(nodeId));\n    }\n    for (const nodeId of this._scrollSnapHighlights.keys()) {\n      this._scrollSnapHighlights.set(nodeId, this._buildScrollSnapContainerHighlightConfig(nodeId));\n    }\n    this._updateHighlightsInOverlay();\n  }\n\n  _updateHighlightsInOverlay(): void {\n    const hasNodesToHighlight = this._gridHighlights.size > 0 || this._flexHighlights.size > 0;\n    this._model.setShowViewportSizeOnResize(!hasNodesToHighlight);\n    this._updateGridHighlightsInOverlay();\n    this._updateFlexHighlightsInOverlay();\n    this._updateScrollSnapHighlightsInOverlay();\n  }\n\n  _updateGridHighlightsInOverlay(): void {\n    const overlayModel = this._model;\n    const gridNodeHighlightConfigs = [];\n    for (const [nodeId, gridHighlightConfig] of this._gridHighlights.entries()) {\n      gridNodeHighlightConfigs.push({nodeId, gridHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowGridOverlays({gridNodeHighlightConfigs});\n  }\n\n  _updateFlexHighlightsInOverlay(): void {\n    if (!this._flexEnabled) {\n      return;\n    }\n    const overlayModel = this._model;\n    const flexNodeHighlightConfigs = [];\n    for (const [nodeId, flexContainerHighlightConfig] of this._flexHighlights.entries()) {\n      flexNodeHighlightConfigs.push({nodeId, flexContainerHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowFlexOverlays({flexNodeHighlightConfigs});\n  }\n\n  _updateScrollSnapHighlightsInOverlay(): void {\n    const overlayModel = this._model;\n    const scrollSnapHighlightConfigs = [];\n    for (const [nodeId, scrollSnapContainerHighlightConfig] of this._scrollSnapHighlights.entries()) {\n      scrollSnapHighlightConfigs.push({nodeId, scrollSnapContainerHighlightConfig});\n    }\n    overlayModel.target().overlayAgent().invoke_setShowScrollSnapOverlays({scrollSnapHighlightConfigs});\n  }\n}\n\n/**\n * @interface\n */\nexport interface DOMModel {\n  nodeForId(nodeId: number): void;\n}\n/**\n * @interface\n */\nexport interface OverlayAgent {\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  invoke_setShowGridOverlays(param: {\n    gridNodeHighlightConfigs: Array<{\n      nodeId: number,\n      gridHighlightConfig: Protocol.Overlay.GridHighlightConfig,\n    }>,\n  }): void;\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  invoke_setShowFlexOverlays(param: {\n    flexNodeHighlightConfigs: Array<{\n      nodeId: number,\n      flexContainerHighlightConfig: Protocol.Overlay.FlexContainerHighlightConfig,\n    }>,\n  }): void;\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  invoke_setShowScrollSnapOverlays(param: {\n    scrollSnapHighlightConfigs: Array<{\n      nodeId: number,\n    }>,\n  }): void;\n}\n\n/**\n * @interface\n */\nexport interface Target {\n  overlayAgent(): OverlayAgent;\n}\n\n/**\n * @interface\n */\nexport interface OverlayModel {\n  getDOMModel(): DOMModel;\n\n  target(): Target;\n\n  setShowViewportSizeOnResize(value: boolean): void;\n}\n"]}