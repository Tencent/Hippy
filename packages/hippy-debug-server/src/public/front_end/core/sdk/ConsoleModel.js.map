{"version":3,"file":"ConsoleModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ConsoleModel.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Protocol from '../../generated/protocol.js';\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as i18n from '../i18n/i18n.js';\n\nimport {FrontendMessageSource, FrontendMessageType} from './ConsoleModelTypes.js';\nexport {FrontendMessageSource, FrontendMessageType} from './ConsoleModelTypes.js';\n\nimport type {EventData} from './CPUProfilerModel.js';\nimport {CPUProfilerModel, Events as CPUProfilerModelEvents} from './CPUProfilerModel.js';  // eslint-disable-line no-unused-vars\nimport type {Location} from './DebuggerModel.js';\nimport {Events as DebuggerModelEvents} from './DebuggerModel.js';  // eslint-disable-line no-unused-vars\nimport {LogModel} from './LogModel.js';\nimport {RemoteObject} from './RemoteObject.js';\nimport {Events as ResourceTreeModelEvents, ResourceTreeModel} from './ResourceTreeModel.js';\nimport type {ExecutionContext} from './RuntimeModel.js';\nimport {Events as RuntimeModelEvents, RuntimeModel} from './RuntimeModel.js';  // eslint-disable-line no-unused-vars\nimport type {Target} from './Target.js';\nimport {TargetManager} from './TargetManager.js';\nimport type {Observer} from './TargetManager.js';\n\nconst UIStrings = {\n  /**\n  *@description Text shown when the main frame (page) of the website was navigated to a different URL.\n  *@example {https://example.com} PH1\n  */\n  navigatedToS: 'Navigated to {PH1}',\n  /**\n  *@description Text shown in the console when a performance profile (with the given name) was started.\n  *@example {title} PH1\n  */\n  profileSStarted: 'Profile \\'{PH1}\\' started.',\n  /**\n  *@description Text shown in the console when a performance profile (with the given name) was stopped.\n  *@example {name} PH1\n  */\n  profileSFinished: 'Profile \\'{PH1}\\' finished.',\n  /**\n  *@description Error message shown in the console after the user tries to save a JavaScript value to a temporary variable.\n  */\n  failedToSaveToTempVariable: 'Failed to save to temp variable.',\n};\n\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/ConsoleModel.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nlet settingsInstance: ConsoleModel;\n\nexport class ConsoleModel extends Common.ObjectWrapper.ObjectWrapper implements Observer {\n  _messages: ConsoleMessage[];\n  _messageByExceptionId: Map<RuntimeModel, Map<number, ConsoleMessage>>;\n  _warnings: number;\n  _errors: number;\n  _violations: number;\n  _pageLoadSequenceNumber: number;\n  _targetListeners: WeakMap<Target, Common.EventTarget.EventDescriptor[]>;\n\n  private constructor() {\n    super();\n\n    this._messages = [];\n    this._messageByExceptionId = new Map();\n    this._warnings = 0;\n    this._errors = 0;\n    this._violations = 0;\n    this._pageLoadSequenceNumber = 0;\n    this._targetListeners = new WeakMap();\n\n    TargetManager.instance().observeTargets(this);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n  } = {forceNew: null}): ConsoleModel {\n    const {forceNew} = opts;\n    if (!settingsInstance || forceNew) {\n      settingsInstance = new ConsoleModel();\n    }\n\n    return settingsInstance;\n  }\n\n  targetAdded(target: Target): void {\n    const resourceTreeModel = target.model(ResourceTreeModel);\n    if (!resourceTreeModel || resourceTreeModel.cachedResourcesLoaded()) {\n      this._initTarget(target);\n      return;\n    }\n\n    const eventListener = resourceTreeModel.addEventListener(ResourceTreeModelEvents.CachedResourcesLoaded, () => {\n      Common.EventTarget.EventTarget.removeEventListeners([eventListener]);\n      this._initTarget(target);\n    });\n  }\n\n  _initTarget(target: Target): void {\n    const eventListeners = [];\n\n    const cpuProfilerModel = target.model(CPUProfilerModel);\n    if (cpuProfilerModel) {\n      eventListeners.push(cpuProfilerModel.addEventListener(\n          CPUProfilerModelEvents.ConsoleProfileStarted, this._consoleProfileStarted.bind(this, cpuProfilerModel)));\n      eventListeners.push(cpuProfilerModel.addEventListener(\n          CPUProfilerModelEvents.ConsoleProfileFinished, this._consoleProfileFinished.bind(this, cpuProfilerModel)));\n    }\n\n    const resourceTreeModel = target.model(ResourceTreeModel);\n    if (resourceTreeModel && !target.parentTarget()) {\n      eventListeners.push(resourceTreeModel.addEventListener(\n          ResourceTreeModelEvents.MainFrameNavigated, this._mainFrameNavigated, this));\n    }\n\n    const runtimeModel = target.model(RuntimeModel);\n    if (runtimeModel) {\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.ExceptionThrown, this._exceptionThrown.bind(this, runtimeModel)));\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.ExceptionRevoked, this._exceptionRevoked.bind(this, runtimeModel)));\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.ConsoleAPICalled, this._consoleAPICalled.bind(this, runtimeModel)));\n      if (!target.parentTarget()) {\n        eventListeners.push(runtimeModel.debuggerModel().addEventListener(\n            DebuggerModelEvents.GlobalObjectCleared, this._clearIfNecessary, this));\n      }\n      eventListeners.push(runtimeModel.addEventListener(\n          RuntimeModelEvents.QueryObjectRequested, this._queryObjectRequested.bind(this, runtimeModel)));\n    }\n\n    this._targetListeners.set(target, eventListeners);\n  }\n\n  targetRemoved(target: Target): void {\n    const runtimeModel = target.model(RuntimeModel);\n    if (runtimeModel) {\n      this._messageByExceptionId.delete(runtimeModel);\n    }\n    Common.EventTarget.EventTarget.removeEventListeners(this._targetListeners.get(target) || []);\n  }\n\n  async evaluateCommandInConsole(\n      executionContext: ExecutionContext, originatingMessage: ConsoleMessage, expression: string,\n      useCommandLineAPI: boolean): Promise<void> {\n    const result = await executionContext.evaluate(\n        {\n          expression: expression,\n          objectGroup: 'console',\n          includeCommandLineAPI: useCommandLineAPI,\n          silent: false,\n          returnByValue: false,\n          generatePreview: true,\n          replMode: true,\n          allowUnsafeEvalBlockedByCSP: false,\n          disableBreaks: undefined,\n          throwOnSideEffect: undefined,\n          timeout: undefined,\n        },\n        Common.Settings.Settings.instance().moduleSetting('consoleUserActivationEval').get(), /* awaitPromise */ false);\n    Host.userMetrics.actionTaken(Host.UserMetrics.Action.ConsoleEvaluated);\n    if ('error' in result) {\n      return;\n    }\n    await Common.Console.Console.instance().showPromise();\n    this.dispatchEventToListeners(\n        Events.CommandEvaluated,\n        {result: result.object, commandMessage: originatingMessage, exceptionDetails: result.exceptionDetails});\n  }\n\n  addCommandMessage(executionContext: ExecutionContext, text: string): ConsoleMessage {\n    const commandMessage = new ConsoleMessage(\n        executionContext.runtimeModel, Protocol.Log.LogEntrySource.Javascript, null, text, FrontendMessageType.Command);\n    commandMessage.setExecutionContextId(executionContext.id);\n    this.addMessage(commandMessage);\n    return commandMessage;\n  }\n\n  addMessage(msg: ConsoleMessage): void {\n    msg._pageLoadSequenceNumber = this._pageLoadSequenceNumber;\n    if (msg.source === FrontendMessageSource.ConsoleAPI &&\n        msg.type === Protocol.Runtime.ConsoleAPICalledEventType.Clear) {\n      this._clearIfNecessary();\n    }\n\n    this._messages.push(msg);\n    const runtimeModel = msg.runtimeModel();\n    if (msg._exceptionId && runtimeModel) {\n      let modelMap = this._messageByExceptionId.get(runtimeModel);\n      if (!modelMap) {\n        modelMap = new Map();\n        this._messageByExceptionId.set(runtimeModel, modelMap);\n      }\n      modelMap.set(msg._exceptionId, msg);\n    }\n    this._incrementErrorWarningCount(msg);\n    this.dispatchEventToListeners(Events.MessageAdded, msg);\n  }\n\n  _exceptionThrown(runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent): void {\n    const exceptionWithTimestamp = (event.data as ExceptionWithTimestamp);\n    const consoleMessage = ConsoleMessage.fromException(\n        runtimeModel, exceptionWithTimestamp.details, undefined, exceptionWithTimestamp.timestamp, undefined);\n    consoleMessage.setExceptionId(exceptionWithTimestamp.details.exceptionId);\n    this.addMessage(consoleMessage);\n  }\n\n  _exceptionRevoked(runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent): void {\n    const exceptionId = (event.data as number);\n    const modelMap = this._messageByExceptionId.get(runtimeModel);\n    const exceptionMessage = modelMap ? modelMap.get(exceptionId) : null;\n    if (!exceptionMessage) {\n      return;\n    }\n    this._errors--;\n    exceptionMessage.level = Protocol.Log.LogEntryLevel.Verbose;\n    this.dispatchEventToListeners(Events.MessageUpdated, exceptionMessage);\n  }\n\n  _consoleAPICalled(runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent): void {\n    const call = (event.data as ConsoleAPICall);\n    let level: Protocol.Log.LogEntryLevel = Protocol.Log.LogEntryLevel.Info;\n    if (call.type === Protocol.Runtime.ConsoleAPICalledEventType.Debug) {\n      level = Protocol.Log.LogEntryLevel.Verbose;\n    } else if (\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Error ||\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Assert) {\n      level = Protocol.Log.LogEntryLevel.Error;\n    } else if (call.type === Protocol.Runtime.ConsoleAPICalledEventType.Warning) {\n      level = Protocol.Log.LogEntryLevel.Warning;\n    } else if (\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Info ||\n        call.type === Protocol.Runtime.ConsoleAPICalledEventType.Log) {\n      level = Protocol.Log.LogEntryLevel.Info;\n    }\n    let message = '';\n    if (call.args.length && call.args[0].unserializableValue) {\n      message = call.args[0].unserializableValue;\n    } else if (call.args.length && (typeof call.args[0].value !== 'object' || call.args[0].value === null)) {\n      message = String(call.args[0].value);\n    } else if (call.args.length && call.args[0].description) {\n      message = call.args[0].description;\n    }\n    const callFrame = call.stackTrace && call.stackTrace.callFrames.length ? call.stackTrace.callFrames[0] : null;\n    const consoleMessage = new ConsoleMessage(\n        runtimeModel, FrontendMessageSource.ConsoleAPI, level, (message as string), call.type,\n        callFrame ? callFrame.url : undefined, callFrame ? callFrame.lineNumber : undefined,\n        callFrame ? callFrame.columnNumber : undefined, call.args, call.stackTrace, call.timestamp,\n        call.executionContextId, undefined, undefined, call.context);\n    this.addMessage(consoleMessage);\n  }\n\n  _queryObjectRequested(runtimeModel: RuntimeModel, event: Common.EventTarget.EventTargetEvent): void {\n    const data = (event.data as {\n      objects: RemoteObject,\n    });\n    const consoleMessage = new ConsoleMessage(\n        runtimeModel, FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Info, '',\n        FrontendMessageType.QueryObjectResult, undefined, undefined, undefined, [data.objects]);\n    this.addMessage(consoleMessage);\n  }\n\n  _clearIfNecessary(): void {\n    if (!Common.Settings.Settings.instance().moduleSetting('preserveConsoleLog').get()) {\n      this._clear();\n    }\n    ++this._pageLoadSequenceNumber;\n  }\n\n  _mainFrameNavigated(event: Common.EventTarget.EventTargetEvent): void {\n    if (Common.Settings.Settings.instance().moduleSetting('preserveConsoleLog').get()) {\n      Common.Console.Console.instance().log(i18nString(UIStrings.navigatedToS, {PH1: event.data.url}));\n    }\n  }\n\n  _consoleProfileStarted(cpuProfilerModel: CPUProfilerModel, event: Common.EventTarget.EventTargetEvent): void {\n    const data = (event.data as EventData);\n    this._addConsoleProfileMessage(\n        cpuProfilerModel, Protocol.Runtime.ConsoleAPICalledEventType.Profile, data.scriptLocation,\n        i18nString(UIStrings.profileSStarted, {PH1: data.title}));\n  }\n\n  _consoleProfileFinished(cpuProfilerModel: CPUProfilerModel, event: Common.EventTarget.EventTargetEvent): void {\n    const data = (event.data as EventData);\n    this._addConsoleProfileMessage(\n        cpuProfilerModel, Protocol.Runtime.ConsoleAPICalledEventType.ProfileEnd, data.scriptLocation,\n        i18nString(UIStrings.profileSFinished, {PH1: data.title}));\n  }\n\n  _addConsoleProfileMessage(\n      cpuProfilerModel: CPUProfilerModel, type: MessageType, scriptLocation: Location, messageText: string): void {\n    const script = scriptLocation.script();\n    const callFrames = [{\n      functionName: '',\n      scriptId: scriptLocation.scriptId,\n      url: script ? script.contentURL() : '',\n      lineNumber: scriptLocation.lineNumber,\n      columnNumber: scriptLocation.columnNumber || 0,\n    }];\n    this.addMessage(new ConsoleMessage(\n        cpuProfilerModel.runtimeModel(), FrontendMessageSource.ConsoleAPI, Protocol.Log.LogEntryLevel.Info, messageText,\n        type, undefined, undefined, undefined, undefined, {callFrames}));\n  }\n\n  _incrementErrorWarningCount(msg: ConsoleMessage): void {\n    if (msg.source === Protocol.Log.LogEntrySource.Violation) {\n      this._violations++;\n      return;\n    }\n    switch (msg.level) {\n      case Protocol.Log.LogEntryLevel.Warning:\n        this._warnings++;\n        break;\n      case Protocol.Log.LogEntryLevel.Error:\n        this._errors++;\n        break;\n    }\n  }\n\n  messages(): ConsoleMessage[] {\n    return this._messages;\n  }\n\n  requestClearMessages(): void {\n    for (const logModel of TargetManager.instance().models(LogModel)) {\n      logModel.requestClear();\n    }\n    for (const runtimeModel of TargetManager.instance().models(RuntimeModel)) {\n      runtimeModel.discardConsoleEntries();\n    }\n    this._clear();\n  }\n\n  _clear(): void {\n    this._messages = [];\n    this._messageByExceptionId.clear();\n    this._errors = 0;\n    this._warnings = 0;\n    this._violations = 0;\n    this.dispatchEventToListeners(Events.ConsoleCleared);\n  }\n\n  errors(): number {\n    return this._errors;\n  }\n\n  warnings(): number {\n    return this._warnings;\n  }\n\n  violations(): number {\n    return this._violations;\n  }\n\n  async saveToTempVariable(currentExecutionContext: ExecutionContext|null, remoteObject: RemoteObject|null):\n      Promise<void> {\n    if (!remoteObject || !currentExecutionContext) {\n      failedToSave(null);\n      return;\n    }\n    const executionContext = (currentExecutionContext as ExecutionContext);\n\n    const result = await executionContext.globalObject(/* objectGroup */ '', /* generatePreview */ false);\n    if ('error' in result || Boolean(result.exceptionDetails) || !result.object) {\n      failedToSave('object' in result && result.object || null);\n      return;\n    }\n\n    const globalObject = result.object;\n    const callFunctionResult =\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // @ts-expect-error\n        await globalObject.callFunction(saveVariable, [RemoteObject.toCallArgument(remoteObject)]);\n    globalObject.release();\n    if (callFunctionResult.wasThrown || !callFunctionResult.object || callFunctionResult.object.type !== 'string') {\n      failedToSave(callFunctionResult.object || null);\n    } else {\n      const text = (callFunctionResult.object.value as string);\n      const message = this.addCommandMessage(executionContext, text);\n      this.evaluateCommandInConsole(executionContext, message, text, /* useCommandLineAPI */ false);\n    }\n    if (callFunctionResult.object) {\n      callFunctionResult.object.release();\n    }\n\n    function saveVariable(this: Window, value: Protocol.Runtime.CallArgument): string {\n      const prefix = 'temp';\n      let index = 1;\n      while ((prefix + index) in this) {\n        ++index;\n      }\n      const name = prefix + index;\n      // @ts-ignore Assignment to global object\n      this[name] = value;\n      return name;\n    }\n\n    function failedToSave(result: RemoteObject|null): void {\n      let message = i18nString(UIStrings.failedToSaveToTempVariable);\n      if (result) {\n        message = (message + ' ' + result.description as Common.UIString.LocalizedString);\n      }\n      Common.Console.Console.instance().error(message);\n    }\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ConsoleCleared = 'ConsoleCleared',\n  MessageAdded = 'MessageAdded',\n  MessageUpdated = 'MessageUpdated',\n  CommandEvaluated = 'CommandEvaluated',\n}\n\n\nexport class ConsoleMessage {\n  _runtimeModel: RuntimeModel|null;\n  source: MessageSource;\n  level: Protocol.Log.LogEntryLevel|null;\n  messageText: string;\n  _type: MessageType;\n  url: string|undefined;\n  line: number;\n  column: number;\n  parameters: (string|RemoteObject|Protocol.Runtime.RemoteObject)[]|undefined;\n  stackTrace: Protocol.Runtime.StackTrace|undefined;\n  timestamp: number;\n  executionContextId: number;\n  scriptId: string|null;\n  workerId: string|null;\n  context: string|null|undefined;\n  _originatingConsoleMessage: ConsoleMessage|null;\n  _pageLoadSequenceNumber: number|undefined;\n  _exceptionId: number|undefined;\n\n  constructor(\n      runtimeModel: RuntimeModel|null, source: MessageSource, level: Protocol.Log.LogEntryLevel|null,\n      messageText: string, type?: MessageType, url?: string|null, line?: number, column?: number,\n      parameters?: (string|RemoteObject|Protocol.Runtime.RemoteObject)[], stackTrace?: Protocol.Runtime.StackTrace,\n      timestamp?: number, executionContextId?: number, scriptId?: string|null, workerId?: string|null,\n      context?: string) {\n    this._runtimeModel = runtimeModel;\n    this.source = source;\n    this.level = (level as Protocol.Log.LogEntryLevel | null);\n    this.messageText = messageText;\n    this._type = type || Protocol.Runtime.ConsoleAPICalledEventType.Log;\n    this.url = url || undefined;\n    this.line = line || 0;\n    this.column = column || 0;\n    this.parameters = parameters;\n    this.stackTrace = stackTrace;\n    this.timestamp = timestamp || Date.now();\n    this.executionContextId = executionContextId || 0;\n    this.scriptId = scriptId || null;\n    this.workerId = workerId || null;\n\n    if (!this.executionContextId && this._runtimeModel) {\n      if (this.scriptId) {\n        this.executionContextId = this._runtimeModel.executionContextIdForScriptId(this.scriptId);\n      } else if (this.stackTrace) {\n        this.executionContextId = this._runtimeModel.executionContextForStackTrace(this.stackTrace);\n      }\n    }\n\n    if (context) {\n      const match = context.match(/[^#]*/);\n      this.context = match && match[0];\n    }\n    this._originatingConsoleMessage = null;\n    this._pageLoadSequenceNumber = undefined;\n    this._exceptionId = undefined;\n  }\n\n  get type(): MessageType {\n    return this._type;\n  }\n\n  static fromException(\n      runtimeModel: RuntimeModel, exceptionDetails: Protocol.Runtime.ExceptionDetails,\n      messageType?: Protocol.Runtime.ConsoleAPICalledEventType|FrontendMessageType, timestamp?: number,\n      forceUrl?: string): ConsoleMessage {\n    return new ConsoleMessage(\n        runtimeModel, Protocol.Log.LogEntrySource.Javascript, Protocol.Log.LogEntryLevel.Error,\n        RuntimeModel.simpleTextFromException(exceptionDetails), messageType, forceUrl || exceptionDetails.url,\n        exceptionDetails.lineNumber, exceptionDetails.columnNumber,\n        exceptionDetails.exception ? [RemoteObject.fromLocalObject(exceptionDetails.text), exceptionDetails.exception] :\n                                     undefined,\n        exceptionDetails.stackTrace, timestamp, exceptionDetails.executionContextId, exceptionDetails.scriptId);\n  }\n\n  runtimeModel(): RuntimeModel|null {\n    return this._runtimeModel;\n  }\n\n  target(): Target|null {\n    return this._runtimeModel ? this._runtimeModel.target() : null;\n  }\n\n  setOriginatingMessage(originatingMessage: ConsoleMessage): void {\n    this._originatingConsoleMessage = originatingMessage;\n    this.executionContextId = originatingMessage.executionContextId;\n  }\n\n  setExecutionContextId(executionContextId: number): void {\n    this.executionContextId = executionContextId;\n  }\n\n  setExceptionId(exceptionId: number): void {\n    this._exceptionId = exceptionId;\n  }\n\n  originatingMessage(): ConsoleMessage|null {\n    return this._originatingConsoleMessage;\n  }\n\n  isGroupMessage(): boolean {\n    return this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroup ||\n        this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed ||\n        this.type === Protocol.Runtime.ConsoleAPICalledEventType.EndGroup;\n  }\n\n  isGroupStartMessage(): boolean {\n    return this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroup ||\n        this.type === Protocol.Runtime.ConsoleAPICalledEventType.StartGroupCollapsed;\n  }\n\n  isErrorOrWarning(): boolean {\n    return (this.level === Protocol.Log.LogEntryLevel.Warning || this.level === Protocol.Log.LogEntryLevel.Error);\n  }\n\n  isGroupable(): boolean {\n    const isUngroupableError = this.level === Protocol.Log.LogEntryLevel.Error &&\n        (this.source === Protocol.Log.LogEntrySource.Javascript || this.source === Protocol.Log.LogEntrySource.Network);\n    return (\n        this.source !== FrontendMessageSource.ConsoleAPI && this.type !== FrontendMessageType.Command &&\n        this.type !== FrontendMessageType.Result && this.type !== FrontendMessageType.System && !isUngroupableError);\n  }\n\n  groupCategoryKey(): string {\n    return [this.source, this.level, this.type, this._pageLoadSequenceNumber].join(':');\n  }\n\n  isEqual(msg: ConsoleMessage|null): boolean {\n    if (!msg) {\n      return false;\n    }\n\n    if (!this._isEqualStackTraces(this.stackTrace, msg.stackTrace)) {\n      return false;\n    }\n\n    if (this.parameters) {\n      if (!msg.parameters || this.parameters.length !== msg.parameters.length) {\n        return false;\n      }\n\n      for (let i = 0; i < msg.parameters.length; ++i) {\n        const msgParam = msg.parameters[i];\n        const param = this.parameters[i];\n        if (typeof msgParam === 'string' || typeof param === 'string') {\n          // TODO(chromium:1136435): Remove this case.\n          return false;\n        }\n        // Never treat objects as equal - their properties might change over time. Errors can be treated as equal\n        // since they are always formatted as strings.\n        if (msgParam.type === 'object' && msgParam.subtype !== 'error') {\n          return false;\n        }\n        if (param.type !== msgParam.type || param.value !== msgParam.value ||\n            param.description !== msgParam.description) {\n          return false;\n        }\n      }\n    }\n\n    const watchExpressionRegex = /^watch-expression-\\d+.devtools$/;\n    const bothAreWatchExpressions =\n        watchExpressionRegex.test(this.url || '') && watchExpressionRegex.test(msg.url || '');\n\n    return (this.runtimeModel() === msg.runtimeModel()) && (this.source === msg.source) && (this.type === msg.type) &&\n        (this.level === msg.level) && (this.line === msg.line) && (this.url === msg.url) &&\n        (bothAreWatchExpressions || this.scriptId === msg.scriptId) && (this.messageText === msg.messageText) &&\n        (this.executionContextId === msg.executionContextId);\n  }\n\n  _isEqualStackTraces(\n      stackTrace1: Protocol.Runtime.StackTrace|undefined, stackTrace2: Protocol.Runtime.StackTrace|undefined): boolean {\n    if (!stackTrace1 !== !stackTrace2) {\n      return false;\n    }\n    if (!stackTrace1 || !stackTrace2) {\n      return true;\n    }\n    const callFrames1 = stackTrace1.callFrames;\n    const callFrames2 = stackTrace2.callFrames;\n    if (callFrames1.length !== callFrames2.length) {\n      return false;\n    }\n    for (let i = 0, n = callFrames1.length; i < n; ++i) {\n      if (callFrames1[i].url !== callFrames2[i].url || callFrames1[i].functionName !== callFrames2[i].functionName ||\n          callFrames1[i].lineNumber !== callFrames2[i].lineNumber ||\n          callFrames1[i].columnNumber !== callFrames2[i].columnNumber) {\n        return false;\n      }\n    }\n    return this._isEqualStackTraces(stackTrace1.parent, stackTrace2.parent);\n  }\n}\n\nexport type MessageSource = Protocol.Log.LogEntrySource|FrontendMessageSource;\nexport type MessageLevel = Protocol.Log.LogEntryLevel;\nexport type MessageType = Protocol.Runtime.ConsoleAPICalledEventType|FrontendMessageType;\n\nexport const MessageSourceDisplayName = new Map<MessageSource, string>(([\n  [Protocol.Log.LogEntrySource.XML, 'xml'],\n  [Protocol.Log.LogEntrySource.Javascript, 'javascript'],\n  [Protocol.Log.LogEntrySource.Network, 'network'],\n  [FrontendMessageSource.ConsoleAPI, 'console-api'],\n  [Protocol.Log.LogEntrySource.Storage, 'storage'],\n  [Protocol.Log.LogEntrySource.Appcache, 'appcache'],\n  [Protocol.Log.LogEntrySource.Rendering, 'rendering'],\n  [FrontendMessageSource.CSS, 'css'],\n  [Protocol.Log.LogEntrySource.Security, 'security'],\n  [Protocol.Log.LogEntrySource.Deprecation, 'deprecation'],\n  [Protocol.Log.LogEntrySource.Worker, 'worker'],\n  [Protocol.Log.LogEntrySource.Violation, 'violation'],\n  [Protocol.Log.LogEntrySource.Intervention, 'intervention'],\n  [Protocol.Log.LogEntrySource.Recommendation, 'recommendation'],\n  [Protocol.Log.LogEntrySource.Other, 'other'],\n]));\n\nexport interface ConsoleAPICall {\n  type: MessageType;\n  args: Protocol.Runtime.RemoteObject[];\n  executionContextId: number;\n  timestamp: number;\n  stackTrace?: Protocol.Runtime.StackTrace;\n  context?: string;\n}\n\nexport interface ExceptionWithTimestamp {\n  timestamp: number;\n  details: Protocol.Runtime.ExceptionDetails;\n}\n"]}