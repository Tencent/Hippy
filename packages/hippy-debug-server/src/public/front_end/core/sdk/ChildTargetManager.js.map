{"version":3,"file":"ChildTargetManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/ChildTargetManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2018 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport type * as ProtocolClient from '../protocol_client/protocol_client.js'; // eslint-disable-line no-unused-vars\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {ParallelConnection} from './Connections.js';\nimport type {Target} from './Target.js';\nimport {Capability, Type} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\nimport {Events as TargetManagerEvents, TargetManager} from './TargetManager.js';\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _lastAnonymousTargetId = 0;\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _attachCallback: ((arg0: {\n                        target: Target,\n                        waitingForDebugger: boolean,\n                      }) => Promise<void>)|undefined;\n\nexport class ChildTargetManager extends SDKModel implements ProtocolProxyApi.TargetDispatcher {\n  _targetManager: TargetManager;\n  _parentTarget: Target;\n  _targetAgent: ProtocolProxyApi.TargetApi;\n  _targetInfos: Map<string, Protocol.Target.TargetInfo>;\n  _childTargets: Map<string, Target>;\n  _parallelConnections: Map<string, ProtocolClient.InspectorBackend.Connection>;\n  _parentTargetId: string|null;\n\n  constructor(parentTarget: Target) {\n    super(parentTarget);\n    this._targetManager = parentTarget.targetManager();\n    this._parentTarget = parentTarget;\n    this._targetAgent = parentTarget.targetAgent();\n    this._targetInfos = new Map();\n\n    this._childTargets = new Map();\n\n    this._parallelConnections = new Map();\n\n    this._parentTargetId = null;\n\n    parentTarget.registerTargetDispatcher(this);\n    this._targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: true, flatten: true});\n\n    if (!parentTarget.parentTarget() && !Host.InspectorFrontendHost.isUnderTest()) {\n      this._targetAgent.invoke_setDiscoverTargets({discover: true});\n      this._targetAgent.invoke_setRemoteLocations({locations: [{host: 'localhost', port: 9229}]});\n    }\n  }\n\n  static install(attachCallback?: ((arg0: {\n                                     target: Target,\n                                     waitingForDebugger: boolean,\n                                   }) => Promise<void>)): void {\n    _attachCallback = attachCallback;\n    SDKModel.register(ChildTargetManager, {capabilities: Capability.Target, autostart: true});\n  }\n\n  childTargets(): Target[] {\n    return Array.from(this._childTargets.values());\n  }\n\n  async suspendModel(): Promise<void> {\n    await this._targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: false, flatten: true});\n  }\n\n  async resumeModel(): Promise<void> {\n    await this._targetAgent.invoke_setAutoAttach({autoAttach: true, waitForDebuggerOnStart: true, flatten: true});\n  }\n\n  dispose(): void {\n    for (const sessionId of this._childTargets.keys()) {\n      this.detachedFromTarget({sessionId, targetId: undefined});\n    }\n  }\n\n  targetCreated({targetInfo}: Protocol.Target.TargetCreatedEvent): void {\n    this._targetInfos.set(targetInfo.targetId, targetInfo);\n    this._fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TargetCreated, targetInfo);\n  }\n\n  targetInfoChanged({targetInfo}: Protocol.Target.TargetInfoChangedEvent): void {\n    this._targetInfos.set(targetInfo.targetId, targetInfo);\n    const target = this._childTargets.get(targetInfo.targetId);\n    if (target) {\n      target.updateTargetInfo(targetInfo);\n    }\n    this._fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TargetInfoChanged, targetInfo);\n  }\n\n  targetDestroyed({targetId}: Protocol.Target.TargetDestroyedEvent): void {\n    this._targetInfos.delete(targetId);\n    this._fireAvailableTargetsChanged();\n    this.dispatchEventToListeners(Events.TargetDestroyed, targetId);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  targetCrashed({targetId, status, errorCode}: Protocol.Target.TargetCrashedEvent): void {\n  }\n\n  _fireAvailableTargetsChanged(): void {\n    TargetManager.instance().dispatchEventToListeners(\n        TargetManagerEvents.AvailableTargetsChanged, [...this._targetInfos.values()]);\n  }\n\n  async _getParentTargetId(): Promise<string> {\n    if (!this._parentTargetId) {\n      this._parentTargetId = (await this._parentTarget.targetAgent().invoke_getTargetInfo({})).targetInfo.targetId;\n    }\n    return this._parentTargetId;\n  }\n\n  attachedToTarget({sessionId, targetInfo, waitingForDebugger}: Protocol.Target.AttachedToTargetEvent): void {\n    if (this._parentTargetId === targetInfo.targetId) {\n      return;\n    }\n\n    let targetName = '';\n    if (targetInfo.type === 'worker' && targetInfo.title && targetInfo.title !== targetInfo.url) {\n      targetName = targetInfo.title;\n    } else if (targetInfo.type !== 'iframe') {\n      const parsedURL = Common.ParsedURL.ParsedURL.fromString(targetInfo.url);\n      targetName = parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + (++_lastAnonymousTargetId);\n    }\n\n    let type = Type.Browser;\n    if (targetInfo.type === 'iframe') {\n      type = Type.Frame;\n    }\n    // TODO(lfg): ensure proper capabilities for child pages (e.g. portals).\n    else if (targetInfo.type === 'page') {\n      type = Type.Frame;\n    } else if (targetInfo.type === 'worker') {\n      type = Type.Worker;\n    } else if (targetInfo.type === 'service_worker') {\n      type = Type.ServiceWorker;\n    }\n\n    const target = this._targetManager.createTarget(\n        targetInfo.targetId, targetName, type, this._parentTarget, sessionId, undefined, undefined, targetInfo);\n    this._childTargets.set(sessionId, target);\n\n    if (_attachCallback) {\n      _attachCallback({target, waitingForDebugger}).then(() => {\n        target.runtimeAgent().invoke_runIfWaitingForDebugger();\n      });\n    } else {\n      target.runtimeAgent().invoke_runIfWaitingForDebugger();\n    }\n  }\n\n  detachedFromTarget({sessionId}: Protocol.Target.DetachedFromTargetEvent): void {\n    if (this._parallelConnections.has(sessionId)) {\n      this._parallelConnections.delete(sessionId);\n    } else {\n      const session = this._childTargets.get(sessionId);\n      if (session) {\n        session.dispose('target terminated');\n        this._childTargets.delete(sessionId);\n      }\n    }\n  }\n\n  receivedMessageFromTarget({}: Protocol.Target.ReceivedMessageFromTargetEvent): void {\n    // We use flatten protocol.\n  }\n\n  async createParallelConnection(onMessage: (arg0: (Object|string)) => void):\n      Promise<ProtocolClient.InspectorBackend.Connection> {\n    // The main Target id is actually just `main`, instead of the real targetId.\n    // Get the real id (requires an async operation) so that it can be used synchronously later.\n    const targetId = await this._getParentTargetId();\n    const {connection, sessionId} =\n        await this._createParallelConnectionAndSessionForTarget(this._parentTarget, targetId);\n    connection.setOnMessage(onMessage);\n    this._parallelConnections.set(sessionId, connection);\n    return connection;\n  }\n\n  async _createParallelConnectionAndSessionForTarget(target: Target, targetId: string): Promise<{\n    connection: ProtocolClient.InspectorBackend.Connection,\n    sessionId: string,\n  }> {\n    const targetAgent = target.targetAgent();\n    const targetRouter = (target.router() as ProtocolClient.InspectorBackend.SessionRouter);\n    const sessionId = (await targetAgent.invoke_attachToTarget({targetId, flatten: true})).sessionId;\n    const connection = new ParallelConnection(targetRouter.connection(), sessionId);\n    targetRouter.registerSession(target, sessionId, connection);\n    connection.setOnDisconnect(() => {\n      targetRouter.unregisterSession(sessionId);\n      targetAgent.invoke_detachFromTarget({sessionId});\n    });\n    return {connection, sessionId};\n  }\n\n  targetInfos(): Protocol.Target.TargetInfo[] {\n    return Array.from(this._targetInfos.values());\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  TargetCreated = 'TargetCreated',\n  TargetDestroyed = 'TargetDestroyed',\n  TargetInfoChanged = 'TargetInfoChanged',\n}\n"]}