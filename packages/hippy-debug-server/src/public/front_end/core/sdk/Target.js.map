{"version":3,"file":"Target.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Target.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type {TargetManager} from './TargetManager.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class Target extends ProtocolClient.InspectorBackend.TargetBase {\n  _targetManager: TargetManager;\n  _name: string;\n  _inspectedURL: string;\n  _inspectedURLName: string;\n  _capabilitiesMask: number;\n  _type: Type;\n  _parentTarget: Target|null;\n  _id: string;\n  _modelByConstructor: Map<new(arg1: Target) => SDKModel, SDKModel>;\n  _isSuspended: boolean;\n  _targetInfo: Protocol.Target.TargetInfo|undefined;\n  _creatingModels?: boolean;\n\n  constructor(\n      targetManager: TargetManager, id: string, name: string, type: Type, parentTarget: Target|null, sessionId: string,\n      suspended: boolean, connection: ProtocolClient.InspectorBackend.Connection|null,\n      targetInfo?: Protocol.Target.TargetInfo) {\n    const needsNodeJSPatching = type === Type.Node;\n    super(needsNodeJSPatching, parentTarget, sessionId, connection);\n    this._targetManager = targetManager;\n    this._name = name;\n    this._inspectedURL = '';\n    this._inspectedURLName = '';\n    this._capabilitiesMask = 0;\n    switch (type) {\n      case Type.Frame:\n        this._capabilitiesMask = Capability.Browser | Capability.Storage | Capability.DOM | Capability.JS |\n            Capability.Log | Capability.Network | Capability.Target | Capability.Tracing | Capability.Emulation |\n            Capability.Input | Capability.Inspector | Capability.Audits | Capability.WebAuthn | Capability.IO |\n            Capability.Media;\n        if (!parentTarget) {\n          // This matches backend exposing certain capabilities only for the main frame.\n          this._capabilitiesMask |=\n              Capability.DeviceEmulation | Capability.ScreenCapture | Capability.Security | Capability.ServiceWorker;\n          // TODO(dgozman): we report service workers for the whole frame tree on the main frame,\n          // while we should be able to only cover the subtree corresponding to the target.\n        }\n        break;\n      case Type.ServiceWorker:\n        this._capabilitiesMask = Capability.JS | Capability.Log | Capability.Network | Capability.Target |\n            Capability.Inspector | Capability.IO;\n        if (!parentTarget) {\n          this._capabilitiesMask |= Capability.Browser;\n        }\n        break;\n      case Type.Worker:\n        this._capabilitiesMask =\n            Capability.JS | Capability.Log | Capability.Network | Capability.Target | Capability.IO | Capability.Media;\n        break;\n      case Type.Node:\n        this._capabilitiesMask = Capability.JS;\n        break;\n      case Type.Browser:\n        this._capabilitiesMask = Capability.Target | Capability.IO;\n        break;\n    }\n    this._type = type;\n    this._parentTarget = parentTarget;\n    this._id = id;\n    /* } */\n    this._modelByConstructor = new Map();\n    this._isSuspended = suspended;\n    this._targetInfo = targetInfo;\n  }\n\n  createModels(required: Set<new(arg1: Target) => SDKModel>): void {\n    this._creatingModels = true;\n    const registeredModels = Array.from(SDKModel.registeredModels.entries());\n    // Create early models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.early) {\n        this.model(modelClass);\n      }\n    }\n    // Create autostart and required models.\n    for (const [modelClass, info] of registeredModels) {\n      if (info.autostart || required.has(modelClass)) {\n        this.model(modelClass);\n      }\n    }\n    this._creatingModels = false;\n  }\n\n  id(): string {\n    return this._id;\n  }\n\n  name(): string {\n    return this._name || this._inspectedURLName;\n  }\n\n  type(): Type {\n    return this._type;\n  }\n\n  markAsNodeJSForTest(): void {\n    super.markAsNodeJSForTest();\n    this._type = Type.Node;\n  }\n\n  targetManager(): TargetManager {\n    return this._targetManager;\n  }\n\n  hasAllCapabilities(capabilitiesMask: number): boolean {\n    // TODO(dgozman): get rid of this method, once we never observe targets with\n    // capability mask.\n    return (this._capabilitiesMask & capabilitiesMask) === capabilitiesMask;\n  }\n\n  decorateLabel(label: string): string {\n    return (this._type === Type.Worker || this._type === Type.ServiceWorker) ? '\\u2699 ' + label : label;\n  }\n\n  parentTarget(): Target|null {\n    return this._parentTarget;\n  }\n\n  dispose(reason: string): void {\n    super.dispose(reason);\n    this._targetManager.removeTarget(this);\n    for (const model of this._modelByConstructor.values()) {\n      model.dispose();\n    }\n  }\n\n  model<T extends SDKModel>(modelClass: new(arg1: Target) => T): T|null {\n    if (!this._modelByConstructor.get(modelClass)) {\n      const info = SDKModel.registeredModels.get(modelClass);\n      if (info === undefined) {\n        throw 'Model class is not registered @' + new Error().stack;\n      }\n      if ((this._capabilitiesMask & info.capabilities) === info.capabilities) {\n        const model = new modelClass(this);\n        this._modelByConstructor.set(modelClass, model);\n        if (!this._creatingModels) {\n          this._targetManager.modelAdded(this, modelClass, model);\n        }\n      }\n    }\n    return (this._modelByConstructor.get(modelClass) as T) || null;\n  }\n\n  models(): Map<new(arg1: Target) => SDKModel, SDKModel> {\n    return this._modelByConstructor;\n  }\n\n  inspectedURL(): string {\n    return this._inspectedURL;\n  }\n\n  setInspectedURL(inspectedURL: string): void {\n    this._inspectedURL = inspectedURL;\n    const parsedURL = Common.ParsedURL.ParsedURL.fromString(inspectedURL);\n    this._inspectedURLName = parsedURL ? parsedURL.lastPathComponentWithFragment() : '#' + this._id;\n    if (!this.parentTarget()) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.inspectedURLChanged(inspectedURL || '');\n    }\n    this._targetManager.onInspectedURLChange(this);\n    if (!this._name) {\n      this._targetManager.onNameChange(this);\n    }\n  }\n\n  async suspend(reason?: string): Promise<void> {\n    if (this._isSuspended) {\n      return;\n    }\n    this._isSuspended = true;\n\n    await Promise.all(Array.from(this.models().values(), m => m.preSuspendModel(reason)));\n    await Promise.all(Array.from(this.models().values(), m => m.suspendModel(reason)));\n  }\n\n  async resume(): Promise<void> {\n    if (!this._isSuspended) {\n      return;\n    }\n    this._isSuspended = false;\n\n    await Promise.all(Array.from(this.models().values(), m => m.resumeModel()));\n    await Promise.all(Array.from(this.models().values(), m => m.postResumeModel()));\n  }\n\n  suspended(): boolean {\n    return this._isSuspended;\n  }\n\n  updateTargetInfo(targetInfo: Protocol.Target.TargetInfo): void {\n    this._targetInfo = targetInfo;\n  }\n\n  targetInfo(): Protocol.Target.TargetInfo|undefined {\n    return this._targetInfo;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Type {\n  Frame = 'frame',\n  ServiceWorker = 'service-worker',\n  Worker = 'worker',\n  Node = 'node',\n  Browser = 'browser',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Capability {\n  Browser = 1 << 0,\n  DOM = 1 << 1,\n  JS = 1 << 2,\n  Log = 1 << 3,\n  Network = 1 << 4,\n  Target = 1 << 5,\n  ScreenCapture = 1 << 6,\n  Tracing = 1 << 7,\n  Emulation = 1 << 8,\n  Security = 1 << 9,\n  Input = 1 << 10,\n  Inspector = 1 << 11,\n  DeviceEmulation = 1 << 12,\n  Storage = 1 << 13,\n  ServiceWorker = 1 << 14,\n  Audits = 1 << 15,\n  WebAuthn = 1 << 16,\n  IO = 1 << 17,\n  Media = 1 << 18,\n  None = 0,\n}\n"]}