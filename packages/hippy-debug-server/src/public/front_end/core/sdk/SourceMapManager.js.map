{"version":3,"file":"SourceMapManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SourceMapManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as i18n from '../i18n/i18n.js';\nimport * as Platform from '../platform/platform.js';\n\nimport type {FrameAssociated} from './FrameAssociated.js'; // eslint-disable-line no-unused-vars\nimport type {Target} from './Target.js';\nimport {Events as TargetManagerEvents, TargetManager} from './TargetManager.js';  // eslint-disable-line no-unused-vars\nimport type {SourceMap} from './SourceMap.js';\nimport {TextSourceMap} from './SourceMap.js';  // eslint-disable-line no-unused-vars\n\nconst UIStrings = {\n  /**\n  *@description Error message when failing to load a source map text\n  *@example {An error occurred} PH1\n  */\n  devtoolsFailedToLoadSourcemapS: 'DevTools failed to load source map: {PH1}',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/SourceMapManager.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class SourceMapManager<T extends FrameAssociated> extends Common.ObjectWrapper.ObjectWrapper {\n  _target: Target;\n  _isEnabled: boolean;\n  _relativeSourceURL: Map<T, string>;\n  _relativeSourceMapURL: Map<T, string>;\n  _resolvedSourceMapId: Map<T, string>;\n  _sourceMapById: Map<string, SourceMap>;\n  _sourceMapIdToLoadingClients: Platform.MapUtilities.Multimap<string, T>;\n  _sourceMapIdToClients: Platform.MapUtilities.Multimap<string, T>;\n\n  constructor(target: Target) {\n    super();\n\n    this._target = target;\n    this._isEnabled = true;\n\n    this._relativeSourceURL = new Map();\n    this._relativeSourceMapURL = new Map();\n    this._resolvedSourceMapId = new Map();\n\n    this._sourceMapById = new Map();\n    this._sourceMapIdToLoadingClients = new Platform.MapUtilities.Multimap();\n    this._sourceMapIdToClients = new Platform.MapUtilities.Multimap();\n\n    TargetManager.instance().addEventListener(TargetManagerEvents.InspectedURLChanged, this._inspectedURLChanged, this);\n  }\n\n  setEnabled(isEnabled: boolean): void {\n    if (isEnabled === this._isEnabled) {\n      return;\n    }\n    this._isEnabled = isEnabled;\n    // We need this copy, because `this._resolvedSourceMapId` is getting modified\n    // in the loop body and trying to iterate over it at the same time leads to\n    // an infinite loop.\n    const clients = [...this._resolvedSourceMapId.keys()];\n    for (const client of clients) {\n      const relativeSourceURL = this._relativeSourceURL.get(client);\n      const relativeSourceMapURL = this._relativeSourceMapURL.get(client);\n      this.detachSourceMap(client);\n      this.attachSourceMap(client, relativeSourceURL, relativeSourceMapURL);\n    }\n  }\n\n  _inspectedURLChanged(event: Common.EventTarget.EventTargetEvent): void {\n    if (event.data !== this._target) {\n      return;\n    }\n\n    // We need this copy, because `this._resolvedSourceMapId` is getting modified\n    // in the loop body and trying to iterate over it at the same time leads to\n    // an infinite loop.\n    const prevSourceMapIds = new Map(this._resolvedSourceMapId);\n    for (const [client, prevSourceMapId] of prevSourceMapIds) {\n      const relativeSourceURL = this._relativeSourceURL.get(client);\n      const relativeSourceMapURL = this._relativeSourceMapURL.get(client);\n      if (relativeSourceURL === undefined || relativeSourceMapURL === undefined) {\n        continue;\n      }\n      const resolvedUrls = this._resolveRelativeURLs(relativeSourceURL, relativeSourceMapURL);\n      if (resolvedUrls !== null && prevSourceMapId !== resolvedUrls.sourceMapId) {\n        this.detachSourceMap(client);\n        this.attachSourceMap(client, relativeSourceURL, relativeSourceMapURL);\n      }\n    }\n  }\n\n  sourceMapForClient(client: T): SourceMap|null {\n    const sourceMapId = this._resolvedSourceMapId.get(client);\n    if (!sourceMapId) {\n      return null;\n    }\n    return this._sourceMapById.get(sourceMapId) || null;\n  }\n\n  clientsForSourceMap(sourceMap: SourceMap): T[] {\n    const sourceMapId = this._getSourceMapId(sourceMap.compiledURL(), sourceMap.url());\n    if (this._sourceMapIdToClients.has(sourceMapId)) {\n      return [...this._sourceMapIdToClients.get(sourceMapId)];\n    }\n    return [...this._sourceMapIdToLoadingClients.get(sourceMapId)];\n  }\n\n  _getSourceMapId(sourceURL: string, sourceMapURL: string): string {\n    return `${sourceURL}:${sourceMapURL}`;\n  }\n\n  _resolveRelativeURLs(sourceURL: string, sourceMapURL: string): {\n    sourceURL: string,\n    sourceMapURL: string,\n    sourceMapId: string,\n  }|null {\n    // |sourceURL| can be a random string, but is generally an absolute path.\n    // Complete it to inspected page url for relative links.\n    const resolvedSourceURL = Common.ParsedURL.ParsedURL.completeURL(this._target.inspectedURL(), sourceURL);\n    if (!resolvedSourceURL) {\n      return null;\n    }\n    const resolvedSourceMapURL = Common.ParsedURL.ParsedURL.completeURL(resolvedSourceURL, sourceMapURL);\n    if (!resolvedSourceMapURL) {\n      return null;\n    }\n    return {\n      sourceURL: resolvedSourceURL,\n      sourceMapURL: resolvedSourceMapURL,\n      sourceMapId: this._getSourceMapId(resolvedSourceURL, resolvedSourceMapURL),\n    };\n  }\n\n  attachSourceMap(client: T, relativeSourceURL: string|undefined, relativeSourceMapURL: string|undefined): void {\n    // TODO(chromium:1011811): Strengthen the type to obsolte the undefined check once core/sdk/ is fully typescriptified.\n    if (relativeSourceURL === undefined || !relativeSourceMapURL) {\n      return;\n    }\n    console.assert(!this._resolvedSourceMapId.has(client), 'SourceMap is already attached to client');\n    const resolvedURLs = this._resolveRelativeURLs(relativeSourceURL, relativeSourceMapURL);\n    if (!resolvedURLs) {\n      return;\n    }\n    this._relativeSourceURL.set(client, relativeSourceURL);\n    this._relativeSourceMapURL.set(client, relativeSourceMapURL);\n\n    const {sourceURL, sourceMapURL, sourceMapId} = resolvedURLs;\n    this._resolvedSourceMapId.set(client, sourceMapId);\n\n    if (!this._isEnabled) {\n      return;\n    }\n\n    this.dispatchEventToListeners(Events.SourceMapWillAttach, client);\n\n    if (this._sourceMapById.has(sourceMapId)) {\n      attach.call(this, sourceMapId, client);\n      return;\n    }\n    if (!this._sourceMapIdToLoadingClients.has(sourceMapId)) {\n      TextSourceMap.load(sourceMapURL, sourceURL, client.createPageResourceLoadInitiator())\n          .catch(error => {\n            Common.Console.Console.instance().warn(\n                i18nString(UIStrings.devtoolsFailedToLoadSourcemapS, {PH1: error.message}));\n            return null;\n          })\n          .then(onSourceMap.bind(this, sourceMapId));\n    }\n    this._sourceMapIdToLoadingClients.set(sourceMapId, client);\n\n    function onSourceMap(this: SourceMapManager<T>, sourceMapId: string, sourceMap: SourceMap|null): void {\n      this._sourceMapLoadedForTest();\n      const clients = this._sourceMapIdToLoadingClients.get(sourceMapId);\n      this._sourceMapIdToLoadingClients.deleteAll(sourceMapId);\n      if (!clients.size) {\n        return;\n      }\n      if (!sourceMap) {\n        for (const client of clients) {\n          this.dispatchEventToListeners(Events.SourceMapFailedToAttach, client);\n        }\n        return;\n      }\n      this._sourceMapById.set(sourceMapId, sourceMap);\n      for (const client of clients) {\n        attach.call(this, sourceMapId, client);\n      }\n    }\n\n    function attach(this: SourceMapManager<T>, sourceMapId: string, client: T): void {\n      this._sourceMapIdToClients.set(sourceMapId, client);\n      const sourceMap = this._sourceMapById.get(sourceMapId);\n      this.dispatchEventToListeners(Events.SourceMapAttached, {client: client, sourceMap: sourceMap});\n    }\n  }\n\n  detachSourceMap(client: T): void {\n    const sourceMapId = this._resolvedSourceMapId.get(client);\n    this._relativeSourceURL.delete(client);\n    this._relativeSourceMapURL.delete(client);\n    this._resolvedSourceMapId.delete(client);\n\n    if (!sourceMapId) {\n      return;\n    }\n    if (!this._sourceMapIdToClients.hasValue(sourceMapId, client)) {\n      if (this._sourceMapIdToLoadingClients.delete(sourceMapId, client)) {\n        this.dispatchEventToListeners(Events.SourceMapFailedToAttach, client);\n      }\n      return;\n    }\n    this._sourceMapIdToClients.delete(sourceMapId, client);\n    const sourceMap = this._sourceMapById.get(sourceMapId);\n    if (!sourceMap) {\n      return;\n    }\n    if (!this._sourceMapIdToClients.has(sourceMapId)) {\n      this._sourceMapById.delete(sourceMapId);\n    }\n    this.dispatchEventToListeners(Events.SourceMapDetached, {client: client, sourceMap: sourceMap});\n  }\n\n  _sourceMapLoadedForTest(): void {\n  }\n\n  dispose(): void {\n    TargetManager.instance().removeEventListener(\n        TargetManagerEvents.InspectedURLChanged, this._inspectedURLChanged, this);\n  }\n}\n\nexport const Events = {\n  SourceMapWillAttach: Symbol('SourceMapWillAttach'),\n  SourceMapFailedToAttach: Symbol('SourceMapFailedToAttach'),\n  SourceMapAttached: Symbol('SourceMapAttached'),\n  SourceMapDetached: Symbol('SourceMapDetached'),\n};\n"]}