{"version":3,"file":"SecurityOriginManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/SecurityOriginManager.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAK7B,OAAO,EAAC,UAAU,EAAC,MAAM,aAAa,CAAC;AACvC,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC,MAAM,OAAO,qBAAsB,SAAQ,QAAQ;IACjD,mBAAmB,CAAS;IAC5B,8BAA8B,CAAc;IAC5C,gBAAgB,CAAc;IAC9B,YAAY,MAAc;QACxB,KAAK,CAAC,MAAM,CAAC,CAAC;QAEd,qEAAqE;QACrE,yEAAyE;QACzE,yEAAyE;QACzE,kEAAkE;QAClE,IAAI,CAAC,mBAAmB,GAAG,EAAE,CAAC;QAC9B,IAAI,CAAC,8BAA8B,GAAG,EAAE,CAAC;QAEzC,IAAI,CAAC,gBAAgB,GAAG,IAAI,GAAG,EAAE,CAAC;IACpC,CAAC;IAED,qBAAqB,CAAC,eAA4B;QAChD,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;QACzC,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAExC,KAAK,MAAM,MAAM,IAAI,UAAU,EAAE;YAC/B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBACtC,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,qBAAqB,EAAE,MAAM,CAAC,CAAC;aACrE;SACF;QAED,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;YAC1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;gBAC3B,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,mBAAmB,EAAE,MAAM,CAAC,CAAC;aACnE;SACF;IACH,CAAC;IAED,eAAe;QACb,OAAO,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACpC,CAAC;IAED,kBAAkB;QAChB,OAAO,IAAI,CAAC,mBAAmB,CAAC;IAClC,CAAC;IAED,6BAA6B;QAC3B,OAAO,IAAI,CAAC,8BAA8B,CAAC;IAC7C,CAAC;IAED,qBAAqB,CAAC,cAAsB,EAAE,yBAAiC;QAC7E,IAAI,CAAC,mBAAmB,GAAG,cAAc,CAAC;QAC1C,IAAI,CAAC,8BAA8B,GAAG,yBAAyB,IAAI,IAAI,CAAC;QACxE,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,yBAAyB,EAAE;YAC9D,kBAAkB,EAAE,IAAI,CAAC,mBAAmB;YAC5C,6BAA6B,EAAE,IAAI,CAAC,8BAA8B;SACnE,CAAC,CAAC;IACL,CAAC;CACF;AAED,wDAAwD;AACxD,+CAA+C;AAC/C,MAAM,CAAN,IAAY,MAIX;AAJD,WAAY,MAAM;IAChB,qDAA2C,CAAA;IAC3C,yDAA+C,CAAA;IAC/C,iEAAuD,CAAA;AACzD,CAAC,EAJW,MAAM,KAAN,MAAM,QAIjB;AAGD,kFAAkF;AAClF,QAAQ,CAAC,QAAQ,CAAC,qBAAqB,EAAE,EAAC,YAAY,EAAE,UAAU,CAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class SecurityOriginManager extends SDKModel {\n  _mainSecurityOrigin: string;\n  _unreachableMainSecurityOrigin: string|null;\n  _securityOrigins: Set<string>;\n  constructor(target: Target) {\n    super(target);\n\n    // if a URL is unreachable, the browser will jump to an error page at\n    // 'chrome-error://chromewebdata/', and |this._mainSecurityOrigin| stores\n    // its origin. In this situation, the original unreachable URL's security\n    // origin will be stored in |this._unreachableMainSecurityOrigin|.\n    this._mainSecurityOrigin = '';\n    this._unreachableMainSecurityOrigin = '';\n\n    this._securityOrigins = new Set();\n  }\n\n  updateSecurityOrigins(securityOrigins: Set<string>): void {\n    const oldOrigins = this._securityOrigins;\n    this._securityOrigins = securityOrigins;\n\n    for (const origin of oldOrigins) {\n      if (!this._securityOrigins.has(origin)) {\n        this.dispatchEventToListeners(Events.SecurityOriginRemoved, origin);\n      }\n    }\n\n    for (const origin of this._securityOrigins) {\n      if (!oldOrigins.has(origin)) {\n        this.dispatchEventToListeners(Events.SecurityOriginAdded, origin);\n      }\n    }\n  }\n\n  securityOrigins(): string[] {\n    return [...this._securityOrigins];\n  }\n\n  mainSecurityOrigin(): string {\n    return this._mainSecurityOrigin;\n  }\n\n  unreachableMainSecurityOrigin(): string|null {\n    return this._unreachableMainSecurityOrigin;\n  }\n\n  setMainSecurityOrigin(securityOrigin: string, unreachableSecurityOrigin: string): void {\n    this._mainSecurityOrigin = securityOrigin;\n    this._unreachableMainSecurityOrigin = unreachableSecurityOrigin || null;\n    this.dispatchEventToListeners(Events.MainSecurityOriginChanged, {\n      mainSecurityOrigin: this._mainSecurityOrigin,\n      unreachableMainSecurityOrigin: this._unreachableMainSecurityOrigin,\n    });\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  SecurityOriginAdded = 'SecurityOriginAdded',\n  SecurityOriginRemoved = 'SecurityOriginRemoved',\n  MainSecurityOriginChanged = 'MainSecurityOriginChanged',\n}\n\n\n// TODO(jarhar): this is the only usage of Capability.None. Do something about it!\nSDKModel.register(SecurityOriginManager, {capabilities: Capability.None, autostart: false});\n"]}