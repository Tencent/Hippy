{"version":3,"file":"CSSMatchedStyles.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/CSSMatchedStyles.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as TextUtils from '../../models/text_utils/text_utils.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {cssMetadata, CustomVariableRegex, VariableRegex} from './CSSMetadata.js';\nimport type {CSSModel} from './CSSModel.js';       // eslint-disable-line no-unused-vars\nimport type {CSSProperty} from './CSSProperty.js'; // eslint-disable-line no-unused-vars\nimport {CSSKeyframesRule, CSSStyleRule} from './CSSRule.js';\nimport {CSSStyleDeclaration, Type} from './CSSStyleDeclaration.js';\nimport type {DOMNode} from './DOMModel.js'; // eslint-disable-line no-unused-vars\n\nexport class CSSMatchedStyles {\n  _cssModel: CSSModel;\n  _node: DOMNode;\n  _addedStyles: Map<CSSStyleDeclaration, DOMNode>;\n  _matchingSelectors: Map<number, Map<string, boolean>>;\n  _keyframes: CSSKeyframesRule[];\n  _nodeForStyle: Map<CSSStyleDeclaration, DOMNode|null>;\n  _inheritedStyles: Set<CSSStyleDeclaration>;\n  _mainDOMCascade: DOMInheritanceCascade;\n  _pseudoDOMCascades: Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>;\n  _styleToDOMCascade: Map<CSSStyleDeclaration, DOMInheritanceCascade>;\n\n  constructor(\n      cssModel: CSSModel, node: DOMNode, inlinePayload: Protocol.CSS.CSSStyle|null,\n      attributesPayload: Protocol.CSS.CSSStyle|null, matchedPayload: Protocol.CSS.RuleMatch[],\n      pseudoPayload: Protocol.CSS.PseudoElementMatches[], inheritedPayload: Protocol.CSS.InheritedStyleEntry[],\n      animationsPayload: Protocol.CSS.CSSKeyframesRule[]) {\n    this._cssModel = cssModel;\n    this._node = node;\n    this._addedStyles = new Map();\n    this._matchingSelectors = new Map();\n    this._keyframes = [];\n    if (animationsPayload) {\n      this._keyframes = animationsPayload.map(rule => new CSSKeyframesRule(cssModel, rule));\n    }\n\n    this._nodeForStyle = new Map();\n    this._inheritedStyles = new Set();\n\n    matchedPayload = cleanUserAgentPayload(matchedPayload);\n    for (const inheritedResult of inheritedPayload) {\n      inheritedResult.matchedCSSRules = cleanUserAgentPayload(inheritedResult.matchedCSSRules);\n    }\n\n    this._mainDOMCascade = this._buildMainCascade(inlinePayload, attributesPayload, matchedPayload, inheritedPayload);\n    this._pseudoDOMCascades = this._buildPseudoCascades(pseudoPayload);\n\n    this._styleToDOMCascade = new Map();\n    for (const domCascade of Array.from(this._pseudoDOMCascades.values()).concat(this._mainDOMCascade)) {\n      for (const style of domCascade.styles()) {\n        this._styleToDOMCascade.set(style, domCascade);\n      }\n    }\n\n    function cleanUserAgentPayload(payload: Protocol.CSS.RuleMatch[]): Protocol.CSS.RuleMatch[] {\n      for (const ruleMatch of payload) {\n        cleanUserAgentSelectors(ruleMatch);\n      }\n\n      // Merge UA rules that are sequential and have similar selector/media.\n      const cleanMatchedPayload = [];\n      for (const ruleMatch of payload) {\n        const lastMatch = cleanMatchedPayload[cleanMatchedPayload.length - 1];\n        if (!lastMatch || ruleMatch.rule.origin !== 'user-agent' || lastMatch.rule.origin !== 'user-agent' ||\n            ruleMatch.rule.selectorList.text !== lastMatch.rule.selectorList.text ||\n            mediaText(ruleMatch) !== mediaText(lastMatch)) {\n          cleanMatchedPayload.push(ruleMatch);\n          continue;\n        }\n        mergeRule(ruleMatch, lastMatch);\n      }\n      return cleanMatchedPayload;\n\n      function mergeRule(from: Protocol.CSS.RuleMatch, to: Protocol.CSS.RuleMatch): void {\n        const shorthands = (new Map() as Map<string, string>);\n        const properties = (new Map() as Map<string, string>);\n        for (const entry of to.rule.style.shorthandEntries) {\n          shorthands.set(entry.name, entry.value);\n        }\n        for (const entry of to.rule.style.cssProperties) {\n          properties.set(entry.name, entry.value);\n        }\n        for (const entry of from.rule.style.shorthandEntries) {\n          shorthands.set(entry.name, entry.value);\n        }\n        for (const entry of from.rule.style.cssProperties) {\n          properties.set(entry.name, entry.value);\n        }\n        to.rule.style.shorthandEntries = [...shorthands.entries()].map(([name, value]) => ({name, value}));\n        to.rule.style.cssProperties = [...properties.entries()].map(([name, value]) => ({name, value}));\n      }\n\n      function mediaText(ruleMatch: Protocol.CSS.RuleMatch): string|null {\n        if (!ruleMatch.rule.media) {\n          return null;\n        }\n        return ruleMatch.rule.media.map(media => media.text).join(', ');\n      }\n\n      function cleanUserAgentSelectors(ruleMatch: Protocol.CSS.RuleMatch): void {\n        const {matchingSelectors, rule} = ruleMatch;\n        if (rule.origin !== 'user-agent' || !matchingSelectors.length) {\n          return;\n        }\n        rule.selectorList.selectors = rule.selectorList.selectors.filter((item, i) => matchingSelectors.includes(i));\n        rule.selectorList.text = rule.selectorList.selectors.map(item => item.text).join(', ');\n        ruleMatch.matchingSelectors = matchingSelectors.map((item, i) => i);\n      }\n    }\n  }\n\n  _buildMainCascade(\n      inlinePayload: Protocol.CSS.CSSStyle|null, attributesPayload: Protocol.CSS.CSSStyle|null,\n      matchedPayload: Protocol.CSS.RuleMatch[],\n      inheritedPayload: Protocol.CSS.InheritedStyleEntry[]): DOMInheritanceCascade {\n    const nodeCascades: NodeCascade[] = [];\n\n    const nodeStyles: CSSStyleDeclaration[] = [];\n\n    function addAttributesStyle(this: CSSMatchedStyles): void {\n      if (!attributesPayload) {\n        return;\n      }\n      const style = new CSSStyleDeclaration(this._cssModel, null, attributesPayload, Type.Attributes);\n      this._nodeForStyle.set(style, this._node);\n      nodeStyles.push(style);\n    }\n\n    // Inline style has the greatest specificity.\n    if (inlinePayload && this._node.nodeType() === Node.ELEMENT_NODE) {\n      const style = new CSSStyleDeclaration(this._cssModel, null, inlinePayload, Type.Inline);\n      this._nodeForStyle.set(style, this._node);\n      nodeStyles.push(style);\n    }\n\n    // Add rules in reverse order to match the cascade order.\n    let addedAttributesStyle;\n    for (let i = matchedPayload.length - 1; i >= 0; --i) {\n      const rule = new CSSStyleRule(this._cssModel, matchedPayload[i].rule);\n      if ((rule.isInjected() || rule.isUserAgent()) && !addedAttributesStyle) {\n        // Show element's Style Attributes after all author rules.\n        addedAttributesStyle = true;\n        addAttributesStyle.call(this);\n      }\n      this._nodeForStyle.set(rule.style, this._node);\n      nodeStyles.push(rule.style);\n      this._addMatchingSelectors(this._node, rule, matchedPayload[i].matchingSelectors);\n    }\n\n    if (!addedAttributesStyle) {\n      addAttributesStyle.call(this);\n    }\n    nodeCascades.push(new NodeCascade(this, nodeStyles, false /* isInherited */));\n\n    // Walk the node structure and identify styles with inherited properties.\n    let parentNode: (DOMNode|null) = this._node.parentNode;\n    for (let i = 0; parentNode && inheritedPayload && i < inheritedPayload.length; ++i) {\n      const inheritedStyles = [];\n      const entryPayload = inheritedPayload[i];\n      const inheritedInlineStyle = entryPayload.inlineStyle ?\n          new CSSStyleDeclaration(this._cssModel, null, entryPayload.inlineStyle, Type.Inline) :\n          null;\n      if (inheritedInlineStyle && this._containsInherited(inheritedInlineStyle)) {\n        this._nodeForStyle.set(inheritedInlineStyle, parentNode);\n        inheritedStyles.push(inheritedInlineStyle);\n        this._inheritedStyles.add(inheritedInlineStyle);\n      }\n\n      const inheritedMatchedCSSRules = entryPayload.matchedCSSRules || [];\n      for (let j = inheritedMatchedCSSRules.length - 1; j >= 0; --j) {\n        const inheritedRule = new CSSStyleRule(this._cssModel, inheritedMatchedCSSRules[j].rule);\n        this._addMatchingSelectors(parentNode, inheritedRule, inheritedMatchedCSSRules[j].matchingSelectors);\n        if (!this._containsInherited(inheritedRule.style)) {\n          continue;\n        }\n        if (containsStyle(nodeStyles, inheritedRule.style) ||\n            containsStyle(this._inheritedStyles, inheritedRule.style)) {\n          continue;\n        }\n        this._nodeForStyle.set(inheritedRule.style, parentNode);\n        inheritedStyles.push(inheritedRule.style);\n        this._inheritedStyles.add(inheritedRule.style);\n      }\n      parentNode = parentNode.parentNode;\n      nodeCascades.push(new NodeCascade(this, inheritedStyles, true /* isInherited */));\n    }\n\n    return new DOMInheritanceCascade(nodeCascades);\n\n    function containsStyle(\n        styles: CSSStyleDeclaration[]|Set<CSSStyleDeclaration>, query: CSSStyleDeclaration): boolean {\n      if (!query.styleSheetId || !query.range) {\n        return false;\n      }\n      for (const style of styles) {\n        if (query.styleSheetId === style.styleSheetId && style.range && query.range.equal(style.range)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  _buildPseudoCascades(pseudoPayload: Protocol.CSS.PseudoElementMatches[]):\n      Map<Protocol.DOM.PseudoType, DOMInheritanceCascade> {\n    const pseudoCascades = new Map<Protocol.DOM.PseudoType, DOMInheritanceCascade>();\n    if (!pseudoPayload) {\n      return pseudoCascades;\n    }\n    for (let i = 0; i < pseudoPayload.length; ++i) {\n      const entryPayload = pseudoPayload[i];\n      // PseudoElement nodes are not created unless \"content\" css property is set.\n      const pseudoElement = this._node.pseudoElements().get(entryPayload.pseudoType) || null;\n      const pseudoStyles = [];\n      const rules = entryPayload.matches || [];\n      for (let j = rules.length - 1; j >= 0; --j) {\n        const pseudoRule = new CSSStyleRule(this._cssModel, rules[j].rule);\n        pseudoStyles.push(pseudoRule.style);\n        this._nodeForStyle.set(pseudoRule.style, pseudoElement);\n        if (pseudoElement) {\n          this._addMatchingSelectors(pseudoElement, pseudoRule, rules[j].matchingSelectors);\n        }\n      }\n      const nodeCascade = new NodeCascade(this, pseudoStyles, false /* isInherited */);\n      pseudoCascades.set(entryPayload.pseudoType, new DOMInheritanceCascade([nodeCascade]));\n    }\n    return pseudoCascades;\n  }\n\n  _addMatchingSelectors(this: CSSMatchedStyles, node: DOMNode, rule: CSSStyleRule, matchingSelectorIndices: number[]):\n      void {\n    for (const matchingSelectorIndex of matchingSelectorIndices) {\n      const selector = rule.selectors[matchingSelectorIndex];\n      this._setSelectorMatches(node, selector.text, true);\n    }\n  }\n\n  node(): DOMNode {\n    return this._node;\n  }\n\n  cssModel(): CSSModel {\n    return this._cssModel;\n  }\n\n  hasMatchingSelectors(rule: CSSStyleRule): boolean {\n    const matchingSelectors = this.matchingSelectors(rule);\n    return matchingSelectors.length > 0 && this.mediaMatches(rule.style);\n  }\n\n  matchingSelectors(rule: CSSStyleRule): number[] {\n    const node = this.nodeForStyle(rule.style);\n    if (!node || typeof node.id !== 'number') {\n      return [];\n    }\n    const map = this._matchingSelectors.get(node.id);\n    if (!map) {\n      return [];\n    }\n    const result = [];\n    for (let i = 0; i < rule.selectors.length; ++i) {\n      if (map.get(rule.selectors[i].text)) {\n        result.push(i);\n      }\n    }\n    return result;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  recomputeMatchingSelectors(rule: CSSStyleRule): Promise<any> {\n    const node = this.nodeForStyle(rule.style);\n    if (!node) {\n      return Promise.resolve();\n    }\n    const promises = [];\n    for (const selector of rule.selectors) {\n      promises.push(querySelector.call(this, node, selector.text));\n    }\n    return Promise.all(promises);\n\n    async function querySelector(this: CSSMatchedStyles, node: DOMNode, selectorText: string): Promise<void> {\n      const ownerDocument = node.ownerDocument;\n      if (!ownerDocument) {\n        return;\n      }\n      // We assume that \"matching\" property does not ever change during the\n      // MatchedStyleResult's lifetime.\n      if (typeof node.id === 'number') {\n        const map = this._matchingSelectors.get(node.id);\n        if (map && map.has(selectorText)) {\n          return;\n        }\n      }\n\n      if (typeof ownerDocument.id !== 'number') {\n        return;\n      }\n      const matchingNodeIds = await this._node.domModel().querySelectorAll(ownerDocument.id, selectorText);\n\n      if (matchingNodeIds) {\n        if (typeof node.id === 'number') {\n          this._setSelectorMatches(node, selectorText, matchingNodeIds.indexOf(node.id) !== -1);\n        } else {\n          this._setSelectorMatches(node, selectorText, false);\n        }\n      }\n    }\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  addNewRule(rule: CSSStyleRule, node: DOMNode): Promise<any> {\n    this._addedStyles.set(rule.style, node);\n    return this.recomputeMatchingSelectors(rule);\n  }\n\n  _setSelectorMatches(node: DOMNode, selectorText: string, value: boolean): void {\n    if (typeof node.id !== 'number') {\n      return;\n    }\n    let map = this._matchingSelectors.get(node.id);\n    if (!map) {\n      map = new Map();\n      this._matchingSelectors.set(node.id, map);\n    }\n    map.set(selectorText, value);\n  }\n\n  mediaMatches(style: CSSStyleDeclaration): boolean {\n    if (!style.parentRule) {\n      return true;\n    }\n    const media = (style.parentRule as CSSStyleRule).media;\n    for (let i = 0; media && i < media.length; ++i) {\n      if (!media[i].active()) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  nodeStyles(): CSSStyleDeclaration[] {\n    return this._mainDOMCascade.styles();\n  }\n\n  keyframes(): CSSKeyframesRule[] {\n    return this._keyframes;\n  }\n\n  pseudoStyles(pseudoType: Protocol.DOM.PseudoType): CSSStyleDeclaration[] {\n    const domCascade = this._pseudoDOMCascades.get(pseudoType);\n    return domCascade ? domCascade.styles() : [];\n  }\n\n  pseudoTypes(): Set<Protocol.DOM.PseudoType> {\n    return new Set(this._pseudoDOMCascades.keys());\n  }\n\n  _containsInherited(style: CSSStyleDeclaration): boolean {\n    const properties = style.allProperties();\n    for (let i = 0; i < properties.length; ++i) {\n      const property = properties[i];\n      // Does this style contain non-overridden inherited property?\n      if (property.activeInStyle() && cssMetadata().isPropertyInherited(property.name)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  nodeForStyle(style: CSSStyleDeclaration): DOMNode|null {\n    return this._addedStyles.get(style) || this._nodeForStyle.get(style) || null;\n  }\n\n  availableCSSVariables(style: CSSStyleDeclaration): string[] {\n    const domCascade = this._styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.availableCSSVariables(style) : [];\n  }\n\n  computeCSSVariable(style: CSSStyleDeclaration, variableName: string): string|null {\n    const domCascade = this._styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.computeCSSVariable(style, variableName) : null;\n  }\n\n  computeValue(style: CSSStyleDeclaration, value: string): string|null {\n    const domCascade = this._styleToDOMCascade.get(style) || null;\n    return domCascade ? domCascade.computeValue(style, value) : null;\n  }\n\n  /**\n   * Same as computeValue, but to be used for `var(--name [,...])` values only\n   */\n  computeSingleVariableValue(style: CSSStyleDeclaration, cssVariableValue: string): {\n    computedValue: string|null,\n    fromFallback: boolean,\n  }|null {\n    const domCascade = this._styleToDOMCascade.get(style) || null;\n    const cssVariableValueNoSpaces = cssVariableValue.replace(/\\s/g, '');\n    return domCascade ? domCascade.computeSingleVariableValue(style, cssVariableValueNoSpaces) : null;\n  }\n\n  isInherited(style: CSSStyleDeclaration): boolean {\n    return this._inheritedStyles.has(style);\n  }\n\n  propertyState(property: CSSProperty): PropertyState|null {\n    const domCascade = this._styleToDOMCascade.get(property.ownerStyle);\n    return domCascade ? domCascade.propertyState(property) : null;\n  }\n\n  resetActiveProperties(): void {\n    this._mainDOMCascade.reset();\n    for (const domCascade of this._pseudoDOMCascades.values()) {\n      domCascade.reset();\n    }\n  }\n}\n\nclass NodeCascade {\n  _matchedStyles: CSSMatchedStyles;\n  _styles: CSSStyleDeclaration[];\n  _isInherited: boolean;\n  _propertiesState: Map<CSSProperty, PropertyState>;\n  _activeProperties: Map<string, CSSProperty>;\n  constructor(matchedStyles: CSSMatchedStyles, styles: CSSStyleDeclaration[], isInherited: boolean) {\n    this._matchedStyles = matchedStyles;\n    this._styles = styles;\n    this._isInherited = isInherited;\n    this._propertiesState = new Map();\n    this._activeProperties = new Map();\n  }\n\n  _computeActiveProperties(): void {\n    this._propertiesState.clear();\n    this._activeProperties.clear();\n\n    for (const style of this._styles) {\n      const rule = style.parentRule;\n      // Compute cascade for CSSStyleRules only.\n      if (rule && !(rule instanceof CSSStyleRule)) {\n        continue;\n      }\n      if (rule && !this._matchedStyles.hasMatchingSelectors(rule)) {\n        continue;\n      }\n\n      for (const property of style.allProperties()) {\n        // Do not pick non-inherited properties from inherited styles.\n        const metadata = cssMetadata();\n        if (this._isInherited && !metadata.isPropertyInherited(property.name)) {\n          continue;\n        }\n\n        if (!property.activeInStyle()) {\n          this._propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n\n        const canonicalName = metadata.canonicalPropertyName(property.name);\n        const isPropShorthand = Boolean(metadata.longhands(canonicalName));\n\n        if (isPropShorthand) {\n          const longhandsFromShort =\n              (property.value.match(CustomVariableRegex) || []).map(e => e.replace(CustomVariableRegex, '$2'));\n          longhandsFromShort.forEach(longhandProperty => {\n            if (metadata.isCSSPropertyName(longhandProperty)) {\n              const activeProperty = this._activeProperties.get(longhandProperty);\n              if (!activeProperty) {\n                this._activeProperties.set(longhandProperty, property);\n              } else {\n                this._propertiesState.set(activeProperty, PropertyState.Overloaded);\n                this._activeProperties.set(longhandProperty, property);\n              }\n            }\n          });\n        }\n\n        const activeProperty = this._activeProperties.get(canonicalName);\n        if (activeProperty && (activeProperty.important || !property.important)) {\n          this._propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n\n        if (activeProperty) {\n          this._propertiesState.set(activeProperty, PropertyState.Overloaded);\n        }\n        this._propertiesState.set(property, PropertyState.Active);\n        this._activeProperties.set(canonicalName, property);\n      }\n    }\n  }\n}\n\nclass DOMInheritanceCascade {\n  _nodeCascades: NodeCascade[];\n  _propertiesState: Map<CSSProperty, PropertyState>;\n  _availableCSSVariables: Map<NodeCascade, Map<string, string>>;\n  _computedCSSVariables: Map<NodeCascade, Map<string, string|null>>;\n  _initialized: boolean;\n  _styleToNodeCascade: Map<CSSStyleDeclaration, NodeCascade>;\n  constructor(nodeCascades: NodeCascade[]) {\n    this._nodeCascades = nodeCascades;\n    this._propertiesState = new Map();\n    this._availableCSSVariables = new Map();\n    this._computedCSSVariables = new Map();\n    this._initialized = false;\n\n    this._styleToNodeCascade = new Map();\n    for (const nodeCascade of nodeCascades) {\n      for (const style of nodeCascade._styles) {\n        this._styleToNodeCascade.set(style, nodeCascade);\n      }\n    }\n  }\n\n  availableCSSVariables(style: CSSStyleDeclaration): string[] {\n    const nodeCascade = this._styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return [];\n    }\n    this._ensureInitialized();\n    const availableCSSVariables = this._availableCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables) {\n      return [];\n    }\n    return Array.from(availableCSSVariables.keys());\n  }\n\n  computeCSSVariable(style: CSSStyleDeclaration, variableName: string): string|null {\n    const nodeCascade = this._styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return null;\n    }\n    this._ensureInitialized();\n    const availableCSSVariables = this._availableCSSVariables.get(nodeCascade);\n    const computedCSSVariables = this._computedCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables || !computedCSSVariables) {\n      return null;\n    }\n    return this._innerComputeCSSVariable(availableCSSVariables, computedCSSVariables, variableName);\n  }\n\n  computeValue(style: CSSStyleDeclaration, value: string): string|null {\n    const nodeCascade = this._styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return null;\n    }\n    this._ensureInitialized();\n    const availableCSSVariables = this._availableCSSVariables.get(nodeCascade);\n    const computedCSSVariables = this._computedCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables || !computedCSSVariables) {\n      return null;\n    }\n    return this._innerComputeValue(availableCSSVariables, computedCSSVariables, value);\n  }\n\n  computeSingleVariableValue(style: CSSStyleDeclaration, cssVariableValue: string): {\n    computedValue: string|null,\n    fromFallback: boolean,\n  }|null {\n    const nodeCascade = this._styleToNodeCascade.get(style);\n    if (!nodeCascade) {\n      return null;\n    }\n    this._ensureInitialized();\n    const availableCSSVariables = this._availableCSSVariables.get(nodeCascade);\n    const computedCSSVariables = this._computedCSSVariables.get(nodeCascade);\n    if (!availableCSSVariables || !computedCSSVariables) {\n      return null;\n    }\n    const computedValue = this._innerComputeValue(availableCSSVariables, computedCSSVariables, cssVariableValue);\n    const {variableName} = this._getCSSVariableNameAndFallback(cssVariableValue);\n\n    return {computedValue, fromFallback: variableName !== null && !availableCSSVariables.has(variableName)};\n  }\n\n  _getCSSVariableNameAndFallback(cssVariableValue: string): {\n    variableName: string|null,\n    fallback: string|null,\n  } {\n    const match = cssVariableValue.match(/^var\\((--[a-zA-Z0-9-_]+)[,]?\\s*(.*)\\)$/);\n    return {variableName: match && match[1], fallback: match && match[2]};\n  }\n\n  _innerComputeCSSVariable(\n      availableCSSVariables: Map<string, string>, computedCSSVariables: Map<string, string|null>,\n      variableName: string): string|null {\n    if (!availableCSSVariables.has(variableName)) {\n      return null;\n    }\n    if (computedCSSVariables.has(variableName)) {\n      return computedCSSVariables.get(variableName) || null;\n    }\n    // Set dummy value to avoid infinite recursion.\n    computedCSSVariables.set(variableName, null);\n    const definedValue = availableCSSVariables.get(variableName);\n    if (definedValue === undefined || definedValue === null) {\n      return null;\n    }\n    const computedValue = this._innerComputeValue(availableCSSVariables, computedCSSVariables, definedValue);\n    computedCSSVariables.set(variableName, computedValue);\n    return computedValue;\n  }\n\n  _innerComputeValue(\n      availableCSSVariables: Map<string, string>, computedCSSVariables: Map<string, string|null>, value: string): string\n      |null {\n    const results = TextUtils.TextUtils.Utils.splitStringByRegexes(value, [VariableRegex]);\n    const tokens = [];\n    for (const result of results) {\n      if (result.regexIndex === -1) {\n        tokens.push(result.value);\n        continue;\n      }\n      // process var() function\n      const {variableName, fallback} = this._getCSSVariableNameAndFallback(result.value);\n      if (!variableName) {\n        return null;\n      }\n      const computedValue = this._innerComputeCSSVariable(availableCSSVariables, computedCSSVariables, variableName);\n      if (computedValue === null && !fallback) {\n        return null;\n      }\n      if (computedValue === null) {\n        tokens.push(fallback);\n      } else {\n        tokens.push(computedValue);\n      }\n    }\n    return tokens.map(token => token ? token.trim() : '').join(' ');\n  }\n\n  styles(): CSSStyleDeclaration[] {\n    return Array.from(this._styleToNodeCascade.keys());\n  }\n\n  propertyState(property: CSSProperty): PropertyState|null {\n    this._ensureInitialized();\n    return this._propertiesState.get(property) || null;\n  }\n\n  reset(): void {\n    this._initialized = false;\n    this._propertiesState.clear();\n    this._availableCSSVariables.clear();\n    this._computedCSSVariables.clear();\n  }\n\n  _ensureInitialized(): void {\n    if (this._initialized) {\n      return;\n    }\n    this._initialized = true;\n\n    const activeProperties = new Map<string, CSSProperty>();\n    for (const nodeCascade of this._nodeCascades) {\n      nodeCascade._computeActiveProperties();\n      for (const entry of nodeCascade._propertiesState.entries()) {\n        const property = (entry[0] as CSSProperty);\n        const state = (entry[1] as PropertyState);\n        if (state === PropertyState.Overloaded) {\n          this._propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n        const canonicalName = cssMetadata().canonicalPropertyName(property.name);\n        if (activeProperties.has(canonicalName)) {\n          this._propertiesState.set(property, PropertyState.Overloaded);\n          continue;\n        }\n        activeProperties.set(canonicalName, property);\n        this._propertiesState.set(property, PropertyState.Active);\n      }\n    }\n    // If every longhand of the shorthand is not active, then the shorthand is not active too.\n    for (const entry of activeProperties.entries()) {\n      const canonicalName = (entry[0] as string);\n      const shorthandProperty = (entry[1] as CSSProperty);\n      const shorthandStyle = shorthandProperty.ownerStyle;\n      const longhands = shorthandStyle.longhandProperties(shorthandProperty.name);\n      if (!longhands.length) {\n        continue;\n      }\n      let hasActiveLonghands = false;\n      for (const longhand of longhands) {\n        const longhandCanonicalName = cssMetadata().canonicalPropertyName(longhand.name);\n        const longhandActiveProperty = activeProperties.get(longhandCanonicalName);\n        if (!longhandActiveProperty) {\n          continue;\n        }\n        if (longhandActiveProperty.ownerStyle === shorthandStyle) {\n          hasActiveLonghands = true;\n          break;\n        }\n      }\n      if (hasActiveLonghands) {\n        continue;\n      }\n      activeProperties.delete(canonicalName);\n      this._propertiesState.set(shorthandProperty, PropertyState.Overloaded);\n    }\n\n    // Work inheritance chain backwards to compute visible CSS Variables.\n    const accumulatedCSSVariables = new Map<string, string>();\n    for (let i = this._nodeCascades.length - 1; i >= 0; --i) {\n      const nodeCascade = this._nodeCascades[i];\n      const variableNames = [];\n      for (const entry of nodeCascade._activeProperties.entries()) {\n        const propertyName = (entry[0] as string);\n        const property = (entry[1] as CSSProperty);\n        if (propertyName.startsWith('--')) {\n          accumulatedCSSVariables.set(propertyName, property.value);\n          variableNames.push(propertyName);\n        }\n      }\n      const availableCSSVariablesMap = new Map(accumulatedCSSVariables);\n      const computedVariablesMap = new Map();\n      this._availableCSSVariables.set(nodeCascade, availableCSSVariablesMap);\n      this._computedCSSVariables.set(nodeCascade, computedVariablesMap);\n      for (const variableName of variableNames) {\n        accumulatedCSSVariables.delete(variableName);\n        accumulatedCSSVariables.set(\n            // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n            // @ts-expect-error\n            variableName, this._innerComputeCSSVariable(availableCSSVariablesMap, computedVariablesMap, variableName));\n      }\n    }\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum PropertyState {\n  Active = 'Active',\n  Overloaded = 'Overloaded',\n}\n"]}