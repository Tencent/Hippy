{"version":3,"file":"LogModel.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/LogModel.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,IAAI,MAAM,iBAAiB,CAAC;AAKxC,OAAO,EAAC,UAAU,EAAC,MAAM,aAAa,CAAC;AACvC,OAAO,EAAC,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvC,MAAM,OAAO,QAAS,SAAQ,QAAQ;IACpC,SAAS,CAA0B;IACnC,YAAY,MAAc;QACxB,KAAK,CAAC,MAAM,CAAC,CAAC;QACd,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QACnC,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,qBAAqB,CAAC,WAAW,EAAE,EAAE;YAC7C,IAAI,CAAC,SAAS,CAAC,4BAA4B,CAAC;gBAC1C,MAAM,EAAE;oBACN,EAAC,IAAI,2BAA4C,EAAE,SAAS,EAAE,GAAG,EAAC;oBAClE,EAAC,IAAI,+BAA8C,EAAE,SAAS,EAAE,EAAE,EAAC;oBACnE,EAAC,IAAI,mCAAgD,EAAE,SAAS,EAAE,GAAG,EAAC;oBACtE,EAAC,IAAI,qCAAiD,EAAE,SAAS,EAAE,CAAC,CAAC,EAAC;oBACtE,EAAC,IAAI,yBAA2C,EAAE,SAAS,EAAE,GAAG,EAAC;oBACjE,EAAC,IAAI,2CAAoD,EAAE,SAAS,EAAE,EAAE,EAAC;oBACzE,EAAC,IAAI,6CAAqD,EAAE,SAAS,EAAE,CAAC,CAAC,EAAC;iBAC3E;aACF,CAAC,CAAC;SACJ;IACH,CAAC;IAED,UAAU,CAAC,EAAC,KAAK,EAA+B;QAC9C,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,UAAU,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;IAC5E,CAAC;IAED,YAAY;QACV,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;IAChC,CAAC;CACF;AAED,wDAAwD;AACxD,+CAA+C;AAC/C,MAAM,CAAN,IAAY,MAEX;AAFD,WAAY,MAAM;IAChB,mCAAyB,CAAA;AAC3B,CAAC,EAFW,MAAM,KAAN,MAAM,QAEjB;AAGD,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,EAAC,YAAY,EAAE,UAAU,CAAC,GAAG,EAAE,SAAS,EAAE,IAAI,EAAC,CAAC,CAAC","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Host from '../host/host.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\nimport * as Protocol from '../../generated/protocol.js';\n\nimport type {Target} from './Target.js';\nimport {Capability} from './Target.js';\nimport {SDKModel} from './SDKModel.js';\n\nexport class LogModel extends SDKModel implements ProtocolProxyApi.LogDispatcher {\n  _logAgent: ProtocolProxyApi.LogApi;\n  constructor(target: Target) {\n    super(target);\n    target.registerLogDispatcher(this);\n    this._logAgent = target.logAgent();\n    this._logAgent.invoke_enable();\n    if (!Host.InspectorFrontendHost.isUnderTest()) {\n      this._logAgent.invoke_startViolationsReport({\n        config: [\n          {name: Protocol.Log.ViolationSettingName.LongTask, threshold: 200},\n          {name: Protocol.Log.ViolationSettingName.LongLayout, threshold: 30},\n          {name: Protocol.Log.ViolationSettingName.BlockedEvent, threshold: 100},\n          {name: Protocol.Log.ViolationSettingName.BlockedParser, threshold: -1},\n          {name: Protocol.Log.ViolationSettingName.Handler, threshold: 150},\n          {name: Protocol.Log.ViolationSettingName.RecurringHandler, threshold: 50},\n          {name: Protocol.Log.ViolationSettingName.DiscouragedAPIUse, threshold: -1},\n        ],\n      });\n    }\n  }\n\n  entryAdded({entry}: Protocol.Log.EntryAddedEvent): void {\n    this.dispatchEventToListeners(Events.EntryAdded, {logModel: this, entry});\n  }\n\n  requestClear(): void {\n    this._logAgent.invoke_clear();\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  EntryAdded = 'EntryAdded',\n}\n\n\nSDKModel.register(LogModel, {capabilities: Capability.Log, autostart: true});\n"]}