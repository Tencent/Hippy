{"version":3,"file":"Connections.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Connections.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';\nimport * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport * as Root from '../root/root.js';\n\nimport {TargetManager} from './TargetManager.js';\n\nexport class MainConnection implements ProtocolClient.InspectorBackend.Connection {\n  _onMessage: ((arg0: (Object|string)) => void)|null;\n  _onDisconnect: ((arg0: string) => void)|null;\n  _messageBuffer: string;\n  _messageSize: number;\n  _eventListeners: Common.EventTarget.EventDescriptor[];\n  constructor() {\n    this._onMessage = null;\n    this._onDisconnect = null;\n    this._messageBuffer = '';\n    this._messageSize = 0;\n    this._eventListeners = [\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.DispatchMessage, this._dispatchMessage, this),\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n          Host.InspectorFrontendHostAPI.Events.DispatchMessageChunk, this._dispatchMessageChunk, this),\n    ];\n  }\n\n  setOnMessage(onMessage: (arg0: (Object|string)) => void): void {\n    this._onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this._onDisconnect = onDisconnect;\n  }\n\n  sendRawMessage(message: string): void {\n    if (this._onMessage) {\n      Host.InspectorFrontendHost.InspectorFrontendHostInstance.sendMessageToBackend(message);\n    }\n  }\n\n  _dispatchMessage(event: Common.EventTarget.EventTargetEvent): void {\n    if (this._onMessage) {\n      this._onMessage.call(null, (event.data as string));\n    }\n  }\n\n  _dispatchMessageChunk(event: Common.EventTarget.EventTargetEvent): void {\n    const messageChunk = (event.data['messageChunk'] as string);\n    const messageSize = (event.data['messageSize'] as number);\n    if (messageSize) {\n      this._messageBuffer = '';\n      this._messageSize = messageSize;\n    }\n    this._messageBuffer += messageChunk;\n    if (this._messageBuffer.length === this._messageSize && this._onMessage) {\n      this._onMessage.call(null, this._messageBuffer);\n      this._messageBuffer = '';\n      this._messageSize = 0;\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    const onDisconnect = this._onDisconnect;\n    Common.EventTarget.EventTarget.removeEventListeners(this._eventListeners);\n    this._onDisconnect = null;\n    this._onMessage = null;\n\n    if (onDisconnect) {\n      onDisconnect.call(null, 'force disconnect');\n    }\n  }\n}\n\nexport class WebSocketConnection implements ProtocolClient.InspectorBackend.Connection {\n  _socket: WebSocket|null;\n  _onMessage: ((arg0: (Object|string)) => void)|null;\n  _onDisconnect: ((arg0: string) => void)|null;\n  _onWebSocketDisconnect: (() => void)|null;\n  _connected: boolean;\n  _messages: string[];\n  constructor(url: string, onWebSocketDisconnect: () => void) {\n    this._socket = new WebSocket(url);\n    this._socket.onerror = this._onError.bind(this);\n    this._socket.onopen = this._onOpen.bind(this);\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._socket.onmessage = (messageEvent: MessageEvent<any>): void => {\n      if (this._onMessage) {\n        this._onMessage.call(null, (messageEvent.data as string));\n      }\n    };\n    this._socket.onclose = this._onClose.bind(this);\n\n    this._onMessage = null;\n    this._onDisconnect = null;\n    this._onWebSocketDisconnect = onWebSocketDisconnect;\n    this._connected = false;\n    this._messages = [];\n  }\n\n  setOnMessage(onMessage: (arg0: (Object|string)) => void): void {\n    this._onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this._onDisconnect = onDisconnect;\n  }\n\n  _onError(): void {\n    if (this._onWebSocketDisconnect) {\n      this._onWebSocketDisconnect.call(null);\n    }\n    if (this._onDisconnect) {\n      // This is called if error occurred while connecting.\n      this._onDisconnect.call(null, 'connection failed');\n    }\n    this._close();\n  }\n\n  _onOpen(): void {\n    this._connected = true;\n    if (this._socket) {\n      this._socket.onerror = console.error;\n      for (const message of this._messages) {\n        this._socket.send(message);\n      }\n    }\n    this._messages = [];\n  }\n\n  _onClose(): void {\n    if (this._onWebSocketDisconnect) {\n      this._onWebSocketDisconnect.call(null);\n    }\n    if (this._onDisconnect) {\n      this._onDisconnect.call(null, 'websocket closed');\n    }\n    this._close();\n  }\n\n  _close(callback?: (() => void)): void {\n    if (this._socket) {\n      this._socket.onerror = null;\n      this._socket.onopen = null;\n      this._socket.onclose = callback || null;\n      this._socket.onmessage = null;\n      this._socket.close();\n      this._socket = null;\n    }\n    this._onWebSocketDisconnect = null;\n  }\n\n  sendRawMessage(message: string): void {\n    if (this._connected && this._socket) {\n      this._socket.send(message);\n    } else {\n      this._messages.push(message);\n    }\n  }\n\n  disconnect(): Promise<void> {\n    return new Promise(fulfill => {\n      this._close(() => {\n        if (this._onDisconnect) {\n          this._onDisconnect.call(null, 'force disconnect');\n        }\n        fulfill();\n      });\n    });\n  }\n}\n\nexport class StubConnection implements ProtocolClient.InspectorBackend.Connection {\n  _onMessage: ((arg0: (Object|string)) => void)|null;\n  _onDisconnect: ((arg0: string) => void)|null;\n  constructor() {\n    this._onMessage = null;\n    this._onDisconnect = null;\n  }\n\n  setOnMessage(onMessage: (arg0: (Object|string)) => void): void {\n    this._onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this._onDisconnect = onDisconnect;\n  }\n\n  sendRawMessage(message: string): void {\n    setTimeout(this._respondWithError.bind(this, message), 0);\n  }\n\n  _respondWithError(message: string): void {\n    const messageObject = JSON.parse(message);\n    const error = {\n      message: 'This is a stub connection, can\\'t dispatch message.',\n      code: ProtocolClient.InspectorBackend.DevToolsStubErrorCode,\n      data: messageObject,\n    };\n    if (this._onMessage) {\n      this._onMessage.call(null, {id: messageObject.id, error: error});\n    }\n  }\n\n  async disconnect(): Promise<void> {\n    if (this._onDisconnect) {\n      this._onDisconnect.call(null, 'force disconnect');\n    }\n    this._onDisconnect = null;\n    this._onMessage = null;\n  }\n}\n\nexport class ParallelConnection implements ProtocolClient.InspectorBackend.Connection {\n  _connection: ProtocolClient.InspectorBackend.Connection;\n  _sessionId: string;\n  _onMessage: ((arg0: Object) => void)|null;\n  _onDisconnect: ((arg0: string) => void)|null;\n  constructor(connection: ProtocolClient.InspectorBackend.Connection, sessionId: string) {\n    this._connection = connection;\n    this._sessionId = sessionId;\n    this._onMessage = null;\n    this._onDisconnect = null;\n  }\n\n  setOnMessage(onMessage: (arg0: Object) => void): void {\n    this._onMessage = onMessage;\n  }\n\n  setOnDisconnect(onDisconnect: (arg0: string) => void): void {\n    this._onDisconnect = onDisconnect;\n  }\n\n  sendRawMessage(message: string): void {\n    const messageObject = JSON.parse(message);\n    // If the message isn't for a specific session, it must be for the root session.\n    if (!messageObject.sessionId) {\n      messageObject.sessionId = this._sessionId;\n    }\n    this._connection.sendRawMessage(JSON.stringify(messageObject));\n  }\n\n  async disconnect(): Promise<void> {\n    if (this._onDisconnect) {\n      this._onDisconnect.call(null, 'force disconnect');\n    }\n    this._onDisconnect = null;\n    this._onMessage = null;\n  }\n}\n\nexport async function initMainConnection(\n    createMainTarget: () => Promise<void>, websocketConnectionLost: () => void): Promise<void> {\n  ProtocolClient.InspectorBackend.Connection.setFactory(_createMainConnection.bind(null, websocketConnectionLost));\n  await createMainTarget();\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.connectionReady();\n  Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n      Host.InspectorFrontendHostAPI.Events.ReattachMainTarget, () => {\n        const target = TargetManager.instance().mainTarget();\n        if (target) {\n          const router = target.router();\n          if (router) {\n            router.connection().disconnect();\n          }\n        }\n        createMainTarget();\n      });\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function _createMainConnection(websocketConnectionLost: () => void): ProtocolClient.InspectorBackend.Connection {\n  const wsParam = Root.Runtime.Runtime.queryParam('ws');\n  const wssParam = Root.Runtime.Runtime.queryParam('wss');\n  if (wsParam || wssParam) {\n    const ws = wsParam ? `ws://${wsParam}` : `wss://${wssParam}`;\n    return new WebSocketConnection(ws, websocketConnectionLost);\n  }\n  if (Host.InspectorFrontendHost.InspectorFrontendHostInstance.isHostedMode()) {\n    return new StubConnection();\n  }\n\n  return new MainConnection();\n}\n"]}