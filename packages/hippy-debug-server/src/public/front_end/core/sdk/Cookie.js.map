{"version":3,"file":"Cookie.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/Cookie.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Protocol from '../../generated/protocol.js';\n\nexport class Cookie {\n  _name: string;\n  _value: string;\n  _type: Type|null|undefined;\n  _attributes: {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [x: string]: any,\n  };\n  _size: number;\n  _priority: Protocol.Network.CookiePriority;\n  _cookieLine: string|null;\n  constructor(name: string, value: string, type?: Type|null, priority?: Protocol.Network.CookiePriority) {\n    this._name = name;\n    this._value = value;\n    this._type = type;\n    this._attributes = {};\n    this._size = 0;\n    this._priority = (priority || 'Medium' as Protocol.Network.CookiePriority);\n    this._cookieLine = null;\n  }\n\n  static fromProtocolCookie(protocolCookie: Protocol.Network.Cookie): Cookie {\n    const cookie = new Cookie(protocolCookie.name, protocolCookie.value, null, protocolCookie.priority);\n    cookie.addAttribute('domain', protocolCookie['domain']);\n    cookie.addAttribute('path', protocolCookie['path']);\n    if (protocolCookie['expires']) {\n      cookie.addAttribute('expires', protocolCookie['expires'] * 1000);\n    }\n    if (protocolCookie['httpOnly']) {\n      cookie.addAttribute('httpOnly');\n    }\n    if (protocolCookie['secure']) {\n      cookie.addAttribute('secure');\n    }\n    if (protocolCookie['sameSite']) {\n      cookie.addAttribute('sameSite', protocolCookie['sameSite']);\n    }\n    if (protocolCookie.sameParty) {\n      cookie.addAttribute('sameParty');\n    }\n    if ('sourcePort' in protocolCookie) {\n      cookie.addAttribute('sourcePort', protocolCookie.sourcePort);\n    }\n    if ('sourceScheme' in protocolCookie) {\n      cookie.addAttribute('sourceScheme', protocolCookie.sourceScheme);\n    }\n    cookie.setSize(protocolCookie['size']);\n    return cookie;\n  }\n\n  key(): string {\n    return (this.domain() || '-') + ' ' + this.name() + ' ' + (this.path() || '-');\n  }\n\n  name(): string {\n    return this._name;\n  }\n\n  value(): string {\n    return this._value;\n  }\n\n  type(): Type|null|undefined {\n    return this._type;\n  }\n\n  httpOnly(): boolean {\n    return 'httponly' in this._attributes;\n  }\n\n  secure(): boolean {\n    return 'secure' in this._attributes;\n  }\n\n  sameSite(): Protocol.Network.CookieSameSite {\n    // TODO(allada) This should not rely on _attributes and instead store them individually.\n    // when attributes get added via addAttribute() they are lowercased, hence the lowercasing of samesite here\n    return /** @type {!Protocol.Network.CookieSameSite} */ this._attributes['samesite'] as\n        Protocol.Network.CookieSameSite;\n  }\n\n  /** boolean\n   */\n  sameParty(): boolean {\n    return 'sameparty' in this._attributes;\n  }\n\n  priority(): Protocol.Network.CookiePriority {\n    return this._priority;\n  }\n\n  session(): boolean {\n    // RFC 2965 suggests using Discard attribute to mark session cookies, but this does not seem to be widely used.\n    // Check for absence of explicitly max-age or expiry date instead.\n    return !('expires' in this._attributes || 'max-age' in this._attributes);\n  }\n\n  path(): string {\n    return /** @type {string} */ this._attributes['path'] as string;\n  }\n\n  domain(): string {\n    return /** @type {string} */ this._attributes['domain'] as string;\n  }\n\n  expires(): number {\n    return /** @type {number} */ this._attributes['expires'] as number;\n  }\n\n  maxAge(): number {\n    return /** @type {number} */ this._attributes['max-age'] as number;\n  }\n\n  sourcePort(): number {\n    return /** @type {number} */ this._attributes['sourceport'] as number;\n  }\n\n  sourceScheme(): Protocol.Network.CookieSourceScheme {\n    return /** @type {Protocol.Network.CookieSourceScheme} */ this._attributes['sourcescheme'] as\n        Protocol.Network.CookieSourceScheme;\n  }\n\n  size(): number {\n    return this._size;\n  }\n\n  /**\n   * @deprecated\n   */\n  url(): string|null {\n    if (!this.domain() || !this.path()) {\n      return null;\n    }\n    let port = '';\n    const sourcePort = this.sourcePort();\n    // Do not include standard ports to ensure the back-end will change standard ports according to the scheme.\n    if (sourcePort && sourcePort !== 80 && sourcePort !== 443) {\n      port = `:${this.sourcePort()}`;\n    }\n    // We must not consider the this.sourceScheme() here, otherwise it will be impossible to set a cookie without\n    // the Secure attribute from a secure origin.\n    return (this.secure() ? 'https://' : 'http://') + this.domain() + port + this.path();\n  }\n\n  setSize(size: number): void {\n    this._size = size;\n  }\n\n  expiresDate(requestDate: Date): Date|null {\n    // RFC 6265 indicates that the max-age attribute takes precedence over the expires attribute\n    if (this.maxAge()) {\n      return new Date(requestDate.getTime() + 1000 * this.maxAge());\n    }\n\n    if (this.expires()) {\n      return new Date(this.expires());\n    }\n\n    return null;\n  }\n\n  addAttribute(key: string, value?: string|number|boolean): void {\n    const normalizedKey = key.toLowerCase();\n    switch (normalizedKey) {\n      case 'priority':\n        this._priority = (value as Protocol.Network.CookiePriority);\n        break;\n      default:\n        this._attributes[normalizedKey] = value;\n    }\n  }\n\n  setCookieLine(cookieLine: string): void {\n    this._cookieLine = cookieLine;\n  }\n\n  getCookieLine(): string|null {\n    return this._cookieLine;\n  }\n\n  matchesSecurityOrigin(securityOrigin: string): boolean {\n    const hostname = new URL(securityOrigin).hostname;\n    return Cookie.isDomainMatch(this.domain(), hostname);\n  }\n\n  static isDomainMatch(domain: string, hostname: string): boolean {\n    // This implementation mirrors\n    // https://source.chromium.org/search?q=net::cookie_util::IsDomainMatch()\n    //\n    // Can domain match in two ways; as a domain cookie (where the cookie\n    // domain begins with \".\") or as a host cookie (where it doesn't).\n\n    // Some consumers of the CookieMonster expect to set cookies on\n    // URLs like http://.strange.url.  To retrieve cookies in this instance,\n    // we allow matching as a host cookie even when the domain_ starts with\n    // a period.\n    if (hostname === domain) {\n      return true;\n    }\n\n    // Domain cookie must have an initial \".\".  To match, it must be\n    // equal to url's host with initial period removed, or a suffix of\n    // it.\n\n    // Arguably this should only apply to \"http\" or \"https\" cookies, but\n    // extension cookie tests currently use the funtionality, and if we\n    // ever decide to implement that it should be done by preventing\n    // such cookies from being set.\n    if (!domain || domain[0] !== '.') {\n      return false;\n    }\n\n    // The host with a \".\" prefixed.\n    if (domain.substr(1) === hostname) {\n      return true;\n    }\n\n    // A pure suffix of the host (ok since we know the domain already\n    // starts with a \".\")\n    return hostname.length > domain.length && hostname.endsWith(domain);\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Type {\n  Request = 0,\n  Response = 1,\n}\n\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Attributes {\n  Name = 'name',\n  Value = 'value',\n  Size = 'size',\n  Domain = 'domain',\n  Path = 'path',\n  Expires = 'expires',\n  HttpOnly = 'httpOnly',\n  Secure = 'secure',\n  SameSite = 'sameSite',\n  SameParty = 'sameParty',\n  SourceScheme = 'sourceScheme',\n  SourcePort = 'sourcePort',\n  Priority = 'priority',\n}\n\n\n/**\n * A `CookieReference` uniquely identifies a cookie by the triple (name,domain,path). Additionally, a context may be\n * included to make it clear which site under Application>Cookies should be opened when revealing a `CookieReference`.\n */\nexport class CookieReference {\n  _name: string;\n  _domain: string;\n  _path: string;\n  _contextUrl: string|undefined;\n  constructor(name: string, domain: string, path: string, contextUrl: string|undefined) {\n    this._name = name;\n    this._domain = domain;\n    this._path = path;\n    this._contextUrl = contextUrl;\n  }\n\n  domain(): string {\n    return this._domain;\n  }\n\n  contextUrl(): string|undefined {\n    return this._contextUrl;\n  }\n}\n"]}