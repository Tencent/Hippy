{"version":3,"file":"PageResourceLoader.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/PageResourceLoader.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as Host from '../host/host.js';  // eslint-disable-line no-unused-vars\nimport * as i18n from '../i18n/i18n.js';\nimport type * as Protocol from '../../generated/protocol.js';\n\nimport {FrameManager} from './FrameManager.js';\nimport {IOModel} from './IOModel.js';\nimport {MultitargetNetworkManager} from './NetworkManager.js';\nimport {NetworkManager} from './NetworkManager.js';\nimport type {ResourceTreeFrame} from './ResourceTreeModel.js';\nimport {Events as ResourceTreeModelEvents, ResourceTreeModel} from './ResourceTreeModel.js';  // eslint-disable-line no-unused-vars\nimport type {Target} from './Target.js';\nimport {TargetManager} from './TargetManager.js';\n\nconst UIStrings = {\n  /**\n  *@description Error message for canceled source map loads\n  */\n  loadCanceledDueToReloadOf: 'Load canceled due to reload of inspected page',\n  /**\n  *@description Error message for canceled source map loads\n  */\n  loadCanceledDueToLoadTimeout: 'Load canceled due to load timeout',\n};\nconst str_ = i18n.i18n.registerUIStrings('core/sdk/PageResourceLoader.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport type PageResourceLoadInitiator = {\n  target: null,\n  frameId: Protocol.Page.FrameId,\n  initiatorUrl: string|null,\n}|{\n  target: Target,\n  frameId: Protocol.Page.FrameId | null,\n  initiatorUrl: string | null,\n};\n\nexport interface PageResource {\n  success: boolean|null;\n  errorMessage?: string;\n  initiator: PageResourceLoadInitiator;\n  url: string;\n  size: number|null;\n}\n\nlet pageResourceLoader: PageResourceLoader|null = null;\n\n/**\n * The page resource loader is a bottleneck for all DevTools-initiated resource loads. For each such load, it keeps a\n * `PageResource` object around that holds meta information. This can be as the basis for reporting to the user which\n * resources were loaded, and whether there was a load error.\n */\nexport class PageResourceLoader extends Common.ObjectWrapper.ObjectWrapper {\n  _currentlyLoading: number;\n  _maxConcurrentLoads: number;\n  _pageResources: Map<string, PageResource>;\n  _queuedLoads: {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    resolve: (arg0: any) => void,\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    reject: (arg0: any) => void,\n  }[];\n  _loadOverride: ((arg0: string) => Promise<{\n                    success: boolean,\n                    content: string,\n                    errorDescription: Host.ResourceLoader.LoadErrorDescription,\n                  }>)|null;\n  _loadTimeout: number;\n  constructor(\n      loadOverride: ((arg0: string) => Promise<{\n                       success: boolean,\n                       content: string,\n                       errorDescription: Host.ResourceLoader.LoadErrorDescription,\n                     }>)|null,\n      maxConcurrentLoads: number, loadTimeout: number) {\n    super();\n    this._currentlyLoading = 0;\n    this._maxConcurrentLoads = maxConcurrentLoads;\n    this._pageResources = new Map();\n    this._queuedLoads = [];\n    TargetManager.instance().addModelListener(\n        ResourceTreeModel, ResourceTreeModelEvents.MainFrameNavigated, this._onMainFrameNavigated, this);\n    this._loadOverride = loadOverride;\n    this._loadTimeout = loadTimeout;\n  }\n\n  static instance({forceNew, loadOverride, maxConcurrentLoads, loadTimeout}: {\n    forceNew: boolean,\n    loadOverride: (null|((arg0: string) => Promise<{\n                           success: boolean,\n                           content: string,\n                           errorDescription: Host.ResourceLoader.LoadErrorDescription,\n                         }>)),\n    maxConcurrentLoads: number,\n    loadTimeout: number,\n  } = {\n    forceNew: false,\n    loadOverride: null,\n    maxConcurrentLoads: 500,\n    loadTimeout: 30000,\n  }): PageResourceLoader {\n    if (!pageResourceLoader || forceNew) {\n      pageResourceLoader = new PageResourceLoader(loadOverride, maxConcurrentLoads, loadTimeout);\n    }\n\n    return pageResourceLoader;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _onMainFrameNavigated(event: any): void {\n    const mainFrame = (event.data as ResourceTreeFrame);\n    if (!mainFrame.isTopFrame()) {\n      return;\n    }\n    for (const {reject} of this._queuedLoads) {\n      reject(new Error(i18nString(UIStrings.loadCanceledDueToReloadOf)));\n    }\n    this._queuedLoads = [];\n    this._pageResources.clear();\n    this.dispatchEventToListeners(Events.Update);\n  }\n\n  getResourcesLoaded(): Map<string, PageResource> {\n    return this._pageResources;\n  }\n\n  /**\n   * Loading is the number of currently loading and queued items. Resources is the total number of resources,\n   * including loading and queued resources, but not including resources that are still loading but scheduled\n   * for cancelation.;\n   */\n  getNumberOfResources(): {\n    loading: number,\n    queued: number,\n    resources: number,\n  } {\n    return {loading: this._currentlyLoading, queued: this._queuedLoads.length, resources: this._pageResources.size};\n  }\n\n  async _acquireLoadSlot(): Promise<void> {\n    this._currentlyLoading++;\n    if (this._currentlyLoading > this._maxConcurrentLoads) {\n      const pair: {\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        resolve: (arg0: any) => void,\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        reject: (arg0: any) => void,\n      } = {resolve: (): void => {}, reject: (): void => {}};\n      const waitForCapacity = new Promise((resolve, reject) => {\n        pair.resolve = resolve;\n        pair.reject = reject;\n      });\n      this._queuedLoads.push(pair);\n      await waitForCapacity;\n    }\n  }\n\n  _releaseLoadSlot(): void {\n    this._currentlyLoading--;\n    const entry = this._queuedLoads.shift();\n    if (entry) {\n      entry.resolve(undefined);\n    }\n  }\n\n  static async _withTimeout<T>(promise: Promise<T>, timeout: number): Promise<T> {\n    const timeoutPromise = new Promise<T>(\n        (_, reject) => setTimeout(reject, timeout, new Error(i18nString(UIStrings.loadCanceledDueToLoadTimeout))));\n    return Promise.race([promise, timeoutPromise]);\n  }\n\n  static makeKey(url: string, initiator: PageResourceLoadInitiator): string {\n    if (initiator.frameId) {\n      return `${url}-${initiator.frameId}`;\n    }\n    if (initiator.target) {\n      return `${url}-${initiator.target.id()}`;\n    }\n    throw new Error('Invalid initiator');\n  }\n\n  async loadResource(url: string, initiator: PageResourceLoadInitiator): Promise<{\n    content: string,\n  }> {\n    const key = PageResourceLoader.makeKey(url, initiator);\n    const pageResource: PageResource = {success: null, size: null, errorMessage: undefined, url, initiator};\n    this._pageResources.set(key, pageResource);\n    this.dispatchEventToListeners(Events.Update);\n    try {\n      await this._acquireLoadSlot();\n      const resultPromise = this._dispatchLoad(url, initiator);\n      const result = await PageResourceLoader._withTimeout(resultPromise, this._loadTimeout);\n      pageResource.errorMessage = result.errorDescription.message;\n      pageResource.success = result.success;\n      if (result.success) {\n        pageResource.size = result.content.length;\n        return {content: result.content};\n      }\n      throw new Error(result.errorDescription.message);\n    } catch (e) {\n      if (pageResource.errorMessage === undefined) {\n        pageResource.errorMessage = e.message;\n      }\n      if (pageResource.success === null) {\n        pageResource.success = false;\n      }\n      throw e;\n    } finally {\n      this._releaseLoadSlot();\n      this.dispatchEventToListeners(Events.Update);\n    }\n  }\n\n  async _dispatchLoad(url: string, initiator: PageResourceLoadInitiator): Promise<{\n    success: boolean,\n    content: string,\n    errorDescription: Host.ResourceLoader.LoadErrorDescription,\n  }> {\n    let failureReason: string|null = null;\n    if (this._loadOverride) {\n      return this._loadOverride(url);\n    }\n    const parsedURL = new Common.ParsedURL.ParsedURL(url);\n    const eligibleForLoadFromTarget = getLoadThroughTargetSetting().get() && parsedURL && parsedURL.isHttpOrHttps();\n    Host.userMetrics.developerResourceScheme(this._getDeveloperResourceScheme(parsedURL));\n    if (eligibleForLoadFromTarget) {\n      try {\n        if (initiator.target) {\n          Host.userMetrics.developerResourceLoaded(Host.UserMetrics.DeveloperResourceLoaded.LoadThroughPageViaTarget);\n          const result = await this._loadFromTarget(initiator.target, initiator.frameId, url);\n          return result;\n        }\n        const frame = FrameManager.instance().getFrame(initiator.frameId || '');\n        if (frame) {\n          Host.userMetrics.developerResourceLoaded(Host.UserMetrics.DeveloperResourceLoaded.LoadThroughPageViaFrame);\n          const result = await this._loadFromTarget(frame.resourceTreeModel().target(), initiator.frameId, url);\n          return result;\n        }\n      } catch (e) {\n        if (e instanceof Error) {\n          Host.userMetrics.developerResourceLoaded(Host.UserMetrics.DeveloperResourceLoaded.LoadThroughPageFailure);\n          failureReason = e.message;\n        }\n      }\n      Host.userMetrics.developerResourceLoaded(Host.UserMetrics.DeveloperResourceLoaded.LoadThroughPageFallback);\n      console.warn('Fallback triggered', url, initiator);\n    } else {\n      const code = getLoadThroughTargetSetting().get() ? Host.UserMetrics.DeveloperResourceLoaded.FallbackPerProtocol :\n                                                         Host.UserMetrics.DeveloperResourceLoaded.FallbackPerOverride;\n      Host.userMetrics.developerResourceLoaded(code);\n    }\n\n    const result = await MultitargetNetworkManager.instance().loadResource(url);\n    if (eligibleForLoadFromTarget && !result.success) {\n      Host.userMetrics.developerResourceLoaded(Host.UserMetrics.DeveloperResourceLoaded.FallbackFailure);\n    }\n    if (failureReason) {\n      // In case we have a success, add a note about why the load through the target failed.\n      result.errorDescription.message =\n          `Fetch through target failed: ${failureReason}; Fallback: ${result.errorDescription.message}`;\n    }\n    return result;\n  }\n\n  _getDeveloperResourceScheme(parsedURL: Common.ParsedURL.ParsedURL|null): Host.UserMetrics.DeveloperResourceScheme {\n    if (!parsedURL || parsedURL.scheme === '') {\n      return Host.UserMetrics.DeveloperResourceScheme.SchemeUnknown;\n    }\n    const isLocalhost = parsedURL.host === 'localhost' || parsedURL.host.endsWith('.localhost');\n    switch (parsedURL.scheme) {\n      case 'file':\n        return Host.UserMetrics.DeveloperResourceScheme.SchemeFile;\n      case 'data':\n        return Host.UserMetrics.DeveloperResourceScheme.SchemeData;\n      case 'blob':\n        return Host.UserMetrics.DeveloperResourceScheme.SchemeBlob;\n      case 'http':\n        return isLocalhost ? Host.UserMetrics.DeveloperResourceScheme.SchemeHttpLocalhost :\n                             Host.UserMetrics.DeveloperResourceScheme.SchemeHttp;\n      case 'https':\n        return isLocalhost ? Host.UserMetrics.DeveloperResourceScheme.SchemeHttpsLocalhost :\n                             Host.UserMetrics.DeveloperResourceScheme.SchemeHttps;\n    }\n    return Host.UserMetrics.DeveloperResourceScheme.SchemeOther;\n  }\n\n  async _loadFromTarget(target: Target, frameId: string|null, url: string): Promise<{\n    success: boolean,\n    content: string,\n    errorDescription: {\n      statusCode: number,\n      netError: number|undefined,\n      netErrorName: string|undefined,\n      message: string,\n      urlValid: undefined,\n    },\n  }> {\n    const networkManager = (target.model(NetworkManager) as NetworkManager);\n    const ioModel = (target.model(IOModel) as IOModel);\n    const resource =\n        await networkManager.loadNetworkResource(frameId || '', url, {disableCache: true, includeCredentials: true});\n    try {\n      const content = resource.stream ? await ioModel.readToString(resource.stream) : '';\n      return {\n        success: resource.success,\n        content,\n        errorDescription: {\n          statusCode: resource.httpStatusCode || 0,\n          netError: resource.netError,\n          netErrorName: resource.netErrorName,\n          message: Host.ResourceLoader.netErrorToMessage(\n                       resource.netError, resource.httpStatusCode, resource.netErrorName) ||\n              '',\n          urlValid: undefined,\n        },\n      };\n    } finally {\n      if (resource.stream) {\n        ioModel.close(resource.stream);\n      }\n    }\n  }\n}\n\nexport function getLoadThroughTargetSetting(): Common.Settings.Setting<boolean> {\n  return Common.Settings.Settings.instance().createSetting('loadThroughTarget', true);\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  Update = 'Update',\n}\n"]}