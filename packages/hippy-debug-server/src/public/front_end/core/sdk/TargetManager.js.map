{"version":3,"file":"TargetManager.js","sourceRoot":"","sources":["../../../../../../front_end/core/sdk/TargetManager.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../common/common.js';\nimport * as Platform from '../platform/platform.js';\nimport type * as ProtocolClient from '../protocol_client/protocol_client.js';\nimport type * as Protocol from '../../generated/protocol.js';\nimport type {Type as TargetType} from './Target.js';\nimport {Target} from './Target.js';\nimport type {SDKModel} from './SDKModel.js';\n\nlet targetManagerInstance: TargetManager|undefined;\n\nexport class TargetManager extends Common.ObjectWrapper.ObjectWrapper {\n  _targets: Set<Target>;\n  _observers: Set<Observer>;\n  _modelListeners: Platform.MapUtilities.Multimap<string|symbol, {\n    modelClass: new(arg1: Target) => SDKModel,\n    thisObject: (Object|undefined),\n    listener: (arg0: Common.EventTarget.EventTargetEvent) => void,\n  }>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _modelObservers: Platform.MapUtilities.Multimap<new(arg1: Target) => SDKModel, SDKModelObserver<any>>;\n  _isSuspended: boolean;\n\n  private constructor() {\n    super();\n    this._targets = new Set();\n    this._observers = new Set();\n    this._modelListeners = new Platform.MapUtilities.Multimap();\n    this._modelObservers = new Platform.MapUtilities.Multimap();\n    this._isSuspended = false;\n  }\n\n  static instance({forceNew}: {\n    forceNew: boolean,\n  } = {forceNew: false}): TargetManager {\n    if (!targetManagerInstance || forceNew) {\n      targetManagerInstance = new TargetManager();\n    }\n\n    return targetManagerInstance;\n  }\n\n  static removeInstance(): void {\n    targetManagerInstance = undefined;\n  }\n\n  onInspectedURLChange(target: Target): void {\n    this.dispatchEventToListeners(Events.InspectedURLChanged, target);\n  }\n\n  onNameChange(target: Target): void {\n    this.dispatchEventToListeners(Events.NameChanged, target);\n  }\n\n  async suspendAllTargets(reason?: string): Promise<void> {\n    if (this._isSuspended) {\n      return;\n    }\n    this._isSuspended = true;\n    this.dispatchEventToListeners(Events.SuspendStateChanged);\n    const suspendPromises = Array.from(this._targets.values(), target => target.suspend(reason));\n    await Promise.all(suspendPromises);\n  }\n\n  async resumeAllTargets(): Promise<void> {\n    if (!this._isSuspended) {\n      return;\n    }\n    this._isSuspended = false;\n    this.dispatchEventToListeners(Events.SuspendStateChanged);\n    const resumePromises = Array.from(this._targets.values(), target => target.resume());\n    await Promise.all(resumePromises);\n  }\n\n  allTargetsSuspended(): boolean {\n    return this._isSuspended;\n  }\n\n  models<T extends SDKModel>(modelClass: new(arg1: Target) => T): T[] {\n    const result = [];\n    for (const target of this._targets) {\n      const model = target.model(modelClass);\n      if (model) {\n        result.push(model);\n      }\n    }\n    return result;\n  }\n\n  inspectedURL(): string {\n    const mainTarget = this.mainTarget();\n    return mainTarget ? mainTarget.inspectedURL() : '';\n  }\n\n  observeModels<T extends SDKModel>(modelClass: new(arg1: Target) => T, observer: SDKModelObserver<T>): void {\n    const models = this.models(modelClass);\n    this._modelObservers.set(modelClass, observer);\n    for (const model of models) {\n      observer.modelAdded(model);\n    }\n  }\n\n  unobserveModels<T extends SDKModel>(modelClass: new(arg1: Target) => SDKModel, observer: SDKModelObserver<T>): void {\n    this._modelObservers.delete(modelClass, observer);\n  }\n\n  modelAdded(target: Target, modelClass: new(arg1: Target) => SDKModel, model: SDKModel): void {\n    for (const observer of this._modelObservers.get(modelClass).values()) {\n      observer.modelAdded(model);\n    }\n  }\n\n  _modelRemoved(target: Target, modelClass: new(arg1: Target) => SDKModel, model: SDKModel): void {\n    for (const observer of this._modelObservers.get(modelClass).values()) {\n      observer.modelRemoved(model);\n    }\n  }\n\n  addModelListener(\n      modelClass: new(arg1: Target) => SDKModel, eventType: string|symbol,\n      listener: (arg0: Common.EventTarget.EventTargetEvent) => void, thisObject?: Object): void {\n    for (const model of this.models(modelClass)) {\n      model.addEventListener(eventType, listener, thisObject);\n    }\n    this._modelListeners.set(eventType, {modelClass: modelClass, thisObject: thisObject, listener: listener});\n  }\n\n  removeModelListener(\n      modelClass: new(arg1: Target) => SDKModel, eventType: string|symbol,\n      listener: (arg0: Common.EventTarget.EventTargetEvent) => void, thisObject?: Object): void {\n    if (!this._modelListeners.has(eventType)) {\n      return;\n    }\n\n    for (const model of this.models(modelClass)) {\n      model.removeEventListener(eventType, listener, thisObject);\n    }\n\n    for (const info of this._modelListeners.get(eventType)) {\n      if (info.modelClass === modelClass && info.listener === listener && info.thisObject === thisObject) {\n        this._modelListeners.delete(eventType, info);\n      }\n    }\n  }\n\n  observeTargets(targetObserver: Observer): void {\n    if (this._observers.has(targetObserver)) {\n      throw new Error('Observer can only be registered once');\n    }\n    for (const target of this._targets) {\n      targetObserver.targetAdded(target);\n    }\n    this._observers.add(targetObserver);\n  }\n\n  unobserveTargets(targetObserver: Observer): void {\n    this._observers.delete(targetObserver);\n  }\n\n  createTarget(\n      id: string, name: string, type: TargetType, parentTarget: Target|null, sessionId?: string,\n      waitForDebuggerInPage?: boolean, connection?: ProtocolClient.InspectorBackend.Connection,\n      targetInfo?: Protocol.Target.TargetInfo): Target {\n    const target = new Target(\n        this, id, name, type, parentTarget, sessionId || '', this._isSuspended, connection || null, targetInfo);\n    if (waitForDebuggerInPage) {\n      // @ts-ignore TODO(1063322): Find out where pageAgent() is set on Target/TargetBase.\n      target.pageAgent().waitForDebugger();\n    }\n    target.createModels(new Set(this._modelObservers.keysArray()));\n    this._targets.add(target);\n\n    // Iterate over a copy. _observers might be modified during iteration.\n    for (const observer of [...this._observers]) {\n      observer.targetAdded(target);\n    }\n\n    for (const modelClass of target.models().keys()) {\n      const model = (target.models().get(modelClass) as SDKModel);\n      this.modelAdded(target, modelClass, model);\n    }\n\n    for (const key of this._modelListeners.keysArray()) {\n      for (const info of this._modelListeners.get(key)) {\n        const model = target.model(info.modelClass);\n        if (model) {\n          model.addEventListener(key, info.listener, info.thisObject);\n        }\n      }\n    }\n\n    return target;\n  }\n\n  removeTarget(target: Target): void {\n    if (!this._targets.has(target)) {\n      return;\n    }\n\n    this._targets.delete(target);\n    for (const modelClass of target.models().keys()) {\n      const model = (target.models().get(modelClass) as SDKModel);\n      this._modelRemoved(target, modelClass, model);\n    }\n\n    // Iterate over a copy. _observers might be modified during iteration.\n    for (const observer of [...this._observers]) {\n      observer.targetRemoved(target);\n    }\n\n    for (const key of this._modelListeners.keysArray()) {\n      for (const info of this._modelListeners.get(key)) {\n        const model = target.model(info.modelClass);\n        if (model) {\n          model.removeEventListener(key, info.listener, info.thisObject);\n        }\n      }\n    }\n  }\n\n  targets(): Target[] {\n    return [...this._targets];\n  }\n\n  targetById(id: string): Target|null {\n    // TODO(dgozman): add a map id -> target.\n    return this.targets().find(target => target.id() === id) || null;\n  }\n\n  mainTarget(): Target|null {\n    return this._targets.size ? this._targets.values().next().value : null;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  AvailableTargetsChanged = 'AvailableTargetsChanged',\n  InspectedURLChanged = 'InspectedURLChanged',\n  NameChanged = 'NameChanged',\n  SuspendStateChanged = 'SuspendStateChanged',\n}\n\nexport class Observer {\n  targetAdded(_target: Target): void {\n  }\n  targetRemoved(_target: Target): void {\n  }\n}\n\nexport class SDKModelObserver<T> {\n  modelAdded(_model: T): void {\n  }\n  modelRemoved(_model: T): void {\n  }\n}\n"]}