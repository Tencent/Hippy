{"version":3,"file":"InspectorBackend.js","sourceRoot":"","sources":["../../../../../../front_end/core/protocol_client/InspectorBackend.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2011 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport {NodeURL} from './NodeURL.js';\nimport type * as ProtocolProxyApi from '../../generated/protocol-proxy-api.js';\n\nexport const ProtocolError = Symbol('Protocol.Error');\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// ProtocolError has previously been typed as string and needs to\n// be updated in the generated code like protocol.d.ts too.\nexport type ProtocolError = string;\n\nexport const DevToolsStubErrorCode = -32015;\n// TODO(dgozman): we are not reporting generic errors in tests, but we should\n// instead report them and just have some expected errors in test expectations.\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _GenericError = -32000;\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst _ConnectionClosedErrorCode = -32001;\n\nexport type Message = {\n  sessionId?: string,\n  url?: string,\n  id?: number,\n  error?: Object|null,\n  result?: Object|null,\n  method?: string,\n  params?: Array<string>,\n};\n\nexport class InspectorBackend {\n  _agentPrototypes: Map<string, _AgentPrototype>;\n  _dispatcherPrototypes: Map<string, _DispatcherPrototype>;\n  _initialized: boolean;\n\n  constructor() {\n    this._agentPrototypes = new Map();\n    this._dispatcherPrototypes = new Map();\n    this._initialized = false;\n  }\n\n  static reportProtocolError(error: string, messageObject: Object): void {\n    console.error(error + ': ' + JSON.stringify(messageObject));\n  }\n\n  static reportProtocolWarning(error: string, messageObject: Object): void {\n    console.warn(error + ': ' + JSON.stringify(messageObject));\n  }\n\n  isInitialized(): boolean {\n    return this._initialized;\n  }\n\n  _addAgentGetterMethodToProtocolTargetPrototype(domain: string): void {\n    let upperCaseLength = 0;\n    while (upperCaseLength < domain.length && domain[upperCaseLength].toLowerCase() !== domain[upperCaseLength]) {\n      ++upperCaseLength;\n    }\n\n    const methodName = domain.substr(0, upperCaseLength).toLowerCase() + domain.slice(upperCaseLength) + 'Agent';\n\n    function agentGetter(this: TargetBase): _AgentPrototype {\n      return this._agents[domain];\n    }\n\n    // @ts-ignore Method code generation\n    TargetBase.prototype[methodName] = agentGetter;\n\n    function registerDispatcher(this: TargetBase, dispatcher: _DispatcherPrototype): void {\n      this.registerDispatcher(domain, dispatcher);\n    }\n\n    // @ts-ignore Method code generation\n    TargetBase.prototype['register' + domain + 'Dispatcher'] = registerDispatcher;\n\n    function unregisterDispatcher(this: TargetBase, dispatcher: _DispatcherPrototype): void {\n      this.unregisterDispatcher(domain, dispatcher);\n    }\n\n    // @ts-ignore Method code generation\n    TargetBase.prototype['unregister' + domain + 'Dispatcher'] = unregisterDispatcher;\n  }\n\n  _agentPrototype(domain: string): _AgentPrototype {\n    if (!this._agentPrototypes.has(domain)) {\n      this._agentPrototypes.set(domain, new _AgentPrototype(domain));\n      this._addAgentGetterMethodToProtocolTargetPrototype(domain);\n    }\n\n    return /** @type {!_AgentPrototype} */ this._agentPrototypes.get(domain) as _AgentPrototype;\n  }\n\n  _dispatcherPrototype(domain: string): _DispatcherPrototype {\n    if (!this._dispatcherPrototypes.has(domain)) {\n      this._dispatcherPrototypes.set(domain, new _DispatcherPrototype());\n    }\n    return /** @type {!_DispatcherPrototype} */ this._dispatcherPrototypes.get(domain) as _DispatcherPrototype;\n  }\n\n  registerCommand(\n      method: string, signature: {\n        name: string,\n        type: string,\n        optional: boolean,\n      }[],\n      replyArgs: string[]): void {\n    const domainAndMethod = method.split('.');\n    this._agentPrototype(domainAndMethod[0]).registerCommand(domainAndMethod[1], signature, replyArgs);\n    this._initialized = true;\n  }\n\n  registerEnum(type: string, values: Object): void {\n    const domainAndName = type.split('.');\n    const domain = domainAndName[0];\n    // @ts-ignore Protocol global namespace pollution\n    if (!Protocol[domain]) {\n      // @ts-ignore Protocol global namespace pollution\n      Protocol[domain] = {};\n    }\n\n    // @ts-ignore Protocol global namespace pollution\n    Protocol[domain][domainAndName[1]] = values;\n    this._initialized = true;\n  }\n\n  registerEvent(eventName: string, params: Object): void {\n    const domain = eventName.split('.')[0];\n    this._dispatcherPrototype(domain).registerEvent(eventName, params);\n    this._initialized = true;\n  }\n\n  wrapClientCallback<T, S>(\n      clientCallback: (arg0: (T|undefined)) => void, errorPrefix: string, constructor?: (new(arg1: S) => T),\n      defaultValue?: T): (arg0: string|null, arg1: S) => void {\n    /**\n     * @template S\n     */\n    function callbackWrapper(error: string|null, value: S): void {\n      if (error) {\n        console.error(errorPrefix + error);\n        clientCallback(defaultValue);\n        return;\n      }\n      if (constructor) {\n        // @ts-ignore Special casting\n        clientCallback(new constructor(value));\n      } else {\n        // @ts-ignore Special casting\n        clientCallback(value);\n      }\n    }\n    return callbackWrapper;\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _factory: () => Connection;\n\nexport class Connection {\n  _onMessage!: ((arg0: Object) => void)|null;\n  constructor() {\n  }\n\n  setOnMessage(_onMessage: (arg0: (Object|string)) => void): void {\n  }\n\n  setOnDisconnect(_onDisconnect: (arg0: string) => void): void {\n  }\n\n  sendRawMessage(_message: string): void {\n  }\n\n  disconnect(): Promise<void> {\n    throw new Error('not implemented');\n  }\n\n  static setFactory(factory: () => Connection): void {\n    _factory = factory;\n  }\n\n  static getFactory(): () => Connection {\n    return _factory;\n  }\n}\n\ntype SendRawMessageCallback = (...args: unknown[]) => void;  // eslint-disable-line no-unused-vars\n\nexport const test = {\n  /**\n   * This will get called for every protocol message.\n   * ProtocolClient.test.dumpProtocol = console.log\n   */\n  dumpProtocol: null as ((arg0: string) => void) | null,\n\n  /**\n   * Runs a function when no protocol activity is present.\n   * ProtocolClient.test.deprecatedRunAfterPendingDispatches(() => console.log('done'))\n   */\n  deprecatedRunAfterPendingDispatches: null as ((arg0: () => void) => void) | null,\n\n  /**\n   * Sends a raw message over main connection.\n   * ProtocolClient.test.sendRawMessage('Page.enable', {}, console.log)\n   */\n  sendRawMessage: null as ((arg0: string, arg1: Object|null, arg2: SendRawMessageCallback) => void) | null,\n\n  /**\n   * Set to true to not log any errors.\n   */\n  suppressRequestErrors: false as boolean,\n\n  /**\n   * Set to get notified about any messages sent over protocol.\n   */\n  onMessageSent: null as\n          ((message: {domain: string, method: string, params: Object, id: number, sessionId?: string},\n            target: TargetBase|null) => void) |\n      null,\n\n  /**\n   * Set to get notified about any messages received over protocol.\n   */\n  onMessageReceived: null as ((message: Object, target: TargetBase|null) => void) | null,\n};\n\nconst LongPollingMethods = new Set<string>(['CSS.takeComputedStyleUpdates']);\n\nexport class SessionRouter {\n  _connection: Connection;\n  _lastMessageId: number;\n  _pendingResponsesCount: number;\n  _pendingLongPollingMessageIds: Set<number>;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _domainToLogger: Map<any, any>;\n  _sessions: Map<string, {\n    target: TargetBase,\n    callbacks: Map<number, _CallbackWithDebugInfo>,\n    proxyConnection: ((Connection | undefined)|null),\n  }>;\n  _pendingScripts: (() => void)[];\n\n  constructor(connection: Connection) {\n    this._connection = connection;\n    this._lastMessageId = 1;\n    this._pendingResponsesCount = 0;\n    this._pendingLongPollingMessageIds = new Set();\n    this._domainToLogger = new Map();\n\n    this._sessions = new Map();\n\n    this._pendingScripts = [];\n\n    test.deprecatedRunAfterPendingDispatches = this._deprecatedRunAfterPendingDispatches.bind(this);\n    test.sendRawMessage = this._sendRawMessageForTesting.bind(this);\n\n    this._connection.setOnMessage(this._onMessage.bind(this));\n\n    this._connection.setOnDisconnect(reason => {\n      const session = this._sessions.get('');\n      if (session) {\n        session.target.dispose(reason);\n      }\n    });\n  }\n\n  registerSession(target: TargetBase, sessionId: string, proxyConnection?: Connection|null): void {\n    // Only the Audits panel uses proxy connections. If it is ever possible to have multiple active at the\n    // same time, it should be tested thoroughly.\n    if (proxyConnection) {\n      for (const session of this._sessions.values()) {\n        if (session.proxyConnection) {\n          console.error('Multiple simultaneous proxy connections are currently unsupported');\n          break;\n        }\n      }\n    }\n\n    this._sessions.set(sessionId, {target, callbacks: new Map(), proxyConnection});\n  }\n\n  unregisterSession(sessionId: string): void {\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    for (const callback of session.callbacks.values()) {\n      SessionRouter.dispatchUnregisterSessionError(callback);\n    }\n    this._sessions.delete(sessionId);\n  }\n\n  _getTargetBySessionId(sessionId: string): TargetBase|null {\n    const session = this._sessions.get(sessionId ? sessionId : '');\n    if (!session) {\n      return null;\n    }\n    return session.target;\n  }\n\n  _nextMessageId(): number {\n    return this._lastMessageId++;\n  }\n\n  connection(): Connection {\n    return this._connection;\n  }\n\n  sendMessage(sessionId: string, domain: string, method: string, params: Object|null, callback: _Callback): void {\n    const messageId = this._nextMessageId();\n    const messageObject: Message = {\n      id: messageId,\n      method: method,\n    };\n\n    if (params) {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // @ts-expect-error\n      messageObject.params = params;\n    }\n    if (sessionId) {\n      messageObject.sessionId = sessionId;\n    }\n\n    if (test.dumpProtocol) {\n      test.dumpProtocol('frontend: ' + JSON.stringify(messageObject));\n    }\n\n    if (test.onMessageSent) {\n      const paramsObject = JSON.parse(JSON.stringify(params || {}));\n      test.onMessageSent(\n          {domain, method, params: (paramsObject as Object), id: messageId, sessionId},\n          this._getTargetBySessionId(sessionId));\n    }\n\n    ++this._pendingResponsesCount;\n    if (LongPollingMethods.has(method)) {\n      this._pendingLongPollingMessageIds.add(messageId);\n    }\n\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      return;\n    }\n    session.callbacks.set(messageId, {callback, method});\n    this._connection.sendRawMessage(JSON.stringify(messageObject));\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _sendRawMessageForTesting(method: string, params: Object|null, callback: ((...arg0: any[]) => void)|null): void {\n    const domain = method.split('.')[0];\n    this.sendMessage('', domain, method, params, callback || ((): void => {}));\n  }\n\n  _onMessage(message: string|Object): void {\n    if (test.dumpProtocol) {\n      test.dumpProtocol('backend: ' + ((typeof message === 'string') ? message : JSON.stringify(message)));\n    }\n\n    if (test.onMessageReceived) {\n      const messageObjectCopy = JSON.parse((typeof message === 'string') ? message : JSON.stringify(message));\n      test.onMessageReceived((messageObjectCopy as Object), this._getTargetBySessionId(messageObjectCopy.sessionId));\n    }\n\n    const messageObject = ((typeof message === 'string') ? JSON.parse(message) : message as Message);\n\n    // Send all messages to proxy connections.\n    let suppressUnknownMessageErrors = false;\n    for (const session of this._sessions.values()) {\n      if (!session.proxyConnection) {\n        continue;\n      }\n\n      if (!session.proxyConnection._onMessage) {\n        InspectorBackend.reportProtocolError(\n            'Protocol Error: the session has a proxyConnection with no _onMessage', messageObject);\n        continue;\n      }\n\n      session.proxyConnection._onMessage(messageObject);\n      suppressUnknownMessageErrors = true;\n    }\n\n    const sessionId = messageObject.sessionId || '';\n    const session = this._sessions.get(sessionId);\n    if (!session) {\n      if (!suppressUnknownMessageErrors) {\n        InspectorBackend.reportProtocolError('Protocol Error: the message with wrong session id', messageObject);\n      }\n      return;\n    }\n\n    // If this message is directly for the target controlled by the proxy connection, don't handle it.\n    if (session.proxyConnection) {\n      return;\n    }\n\n    if (session.target._needsNodeJSPatching) {\n      NodeURL.patch(messageObject);\n    }\n\n    if ('id' in messageObject) {  // just a response for some request\n      const callback = session.callbacks.get(messageObject.id);\n      session.callbacks.delete(messageObject.id);\n      if (!callback) {\n        if (!suppressUnknownMessageErrors) {\n          InspectorBackend.reportProtocolError('Protocol Error: the message with wrong id', messageObject);\n        }\n        return;\n      }\n\n      callback.callback(messageObject.error, messageObject.result);\n      --this._pendingResponsesCount;\n      this._pendingLongPollingMessageIds.delete(messageObject.id);\n\n      if (this._pendingScripts.length && !this._hasOutstandingNonLongPollingRequests()) {\n        this._deprecatedRunAfterPendingDispatches();\n      }\n    } else {\n      if (!('method' in messageObject)) {\n        InspectorBackend.reportProtocolError('Protocol Error: the message without method', messageObject);\n        return;\n      }\n\n      const method = messageObject.method.split('.');\n      const domainName = method[0];\n      if (!(domainName in session.target._dispatchers)) {\n        InspectorBackend.reportProtocolError(\n            `Protocol Error: the message ${messageObject.method} is for non-existing domain '${domainName}'`,\n            messageObject);\n        return;\n      }\n      session.target._dispatchers[domainName].dispatch(method[1], (messageObject as {\n                                                         method: string,\n                                                         params: Array<string>| null,\n                                                       }));\n    }\n  }\n\n  _hasOutstandingNonLongPollingRequests(): boolean {\n    return this._pendingResponsesCount - this._pendingLongPollingMessageIds.size > 0;\n  }\n\n  _deprecatedRunAfterPendingDispatches(script?: (() => void)): void {\n    if (script) {\n      this._pendingScripts.push(script);\n    }\n\n    // Execute all promises.\n    setTimeout(() => {\n      if (!this._hasOutstandingNonLongPollingRequests()) {\n        this._executeAfterPendingDispatches();\n      } else {\n        this._deprecatedRunAfterPendingDispatches();\n      }\n    }, 0);\n  }\n\n  _executeAfterPendingDispatches(): void {\n    if (!this._hasOutstandingNonLongPollingRequests()) {\n      const scripts = this._pendingScripts;\n      this._pendingScripts = [];\n      for (let id = 0; id < scripts.length; ++id) {\n        scripts[id]();\n      }\n    }\n  }\n\n  static dispatchConnectionError(callback: _Callback, method: string): void {\n    const error = {\n      message: `Connection is closed, can\\'t dispatch pending call to ${method}`,\n      code: _ConnectionClosedErrorCode,\n      data: null,\n    };\n    setTimeout(() => callback(error, null), 0);\n  }\n\n  static dispatchUnregisterSessionError({callback, method}: _CallbackWithDebugInfo): void {\n    const error = {\n      message: `Session is unregistering, can\\'t dispatch pending call to ${method}`,\n      code: _ConnectionClosedErrorCode,\n      data: null,\n    };\n    setTimeout(() => callback(error, null), 0);\n  }\n}\n\nexport class TargetBase {\n  _needsNodeJSPatching: boolean;\n  _sessionId: string;\n  _router: SessionRouter|null;\n  _agents: {\n    [x: string]: _AgentPrototype,\n  };\n  _dispatchers: {\n    [x: string]: _DispatcherPrototype,\n  };\n  constructor(\n      needsNodeJSPatching: boolean, parentTarget: TargetBase|null, sessionId: string, connection: Connection|null) {\n    this._needsNodeJSPatching = needsNodeJSPatching;\n    this._sessionId = sessionId;\n\n    if ((!parentTarget && connection) || (!parentTarget && sessionId) || (connection && sessionId)) {\n      throw new Error('Either connection or sessionId (but not both) must be supplied for a child target');\n    }\n\n    let router: SessionRouter;\n    if (sessionId && parentTarget && parentTarget._router) {\n      router = parentTarget._router;\n    } else if (connection) {\n      router = new SessionRouter(connection);\n    } else {\n      router = new SessionRouter(_factory());\n    }\n\n    this._router = router;\n\n    router.registerSession(this, this._sessionId);\n\n    this._agents = {};\n    for (const [domain, agentPrototype] of inspectorBackend._agentPrototypes) {\n      this._agents[domain] = Object.create((agentPrototype as _AgentPrototype));\n      this._agents[domain]._target = this;\n    }\n\n    this._dispatchers = {};\n    for (const [domain, dispatcherPrototype] of inspectorBackend._dispatcherPrototypes) {\n      this._dispatchers[domain] = Object.create((dispatcherPrototype as _DispatcherPrototype));\n      this._dispatchers[domain]._dispatchers = [];\n    }\n  }\n\n  registerDispatcher(domain: string, dispatcher: Object): void {\n    if (!this._dispatchers[domain]) {\n      return;\n    }\n    this._dispatchers[domain].addDomainDispatcher(dispatcher);\n  }\n\n  unregisterDispatcher(domain: string, dispatcher: Object): void {\n    if (!this._dispatchers[domain]) {\n      return;\n    }\n    this._dispatchers[domain].removeDomainDispatcher(dispatcher);\n  }\n\n  dispose(_reason: string): void {\n    if (!this._router) {\n      return;\n    }\n    this._router.unregisterSession(this._sessionId);\n    this._router = null;\n  }\n\n  isDisposed(): boolean {\n    return !this._router;\n  }\n\n  markAsNodeJSForTest(): void {\n    this._needsNodeJSPatching = true;\n  }\n\n  router(): SessionRouter|null {\n    return this._router;\n  }\n\n  // Agent accessors, keep alphabetically sorted.\n\n  accessibilityAgent(): ProtocolProxyApi.AccessibilityApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  animationAgent(): ProtocolProxyApi.AnimationApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  applicationCacheAgent(): ProtocolProxyApi.ApplicationCacheApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  auditsAgent(): ProtocolProxyApi.AuditsApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  backgroundServiceAgent(): ProtocolProxyApi.BackgroundServiceApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  cacheStorageAgent(): ProtocolProxyApi.CacheStorageApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  cssAgent(): ProtocolProxyApi.CSSApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  databaseAgent(): ProtocolProxyApi.DatabaseApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  debuggerAgent(): ProtocolProxyApi.DebuggerApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  deviceOrientationAgent(): ProtocolProxyApi.DeviceOrientationApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  domAgent(): ProtocolProxyApi.DOMApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  domdebuggerAgent(): ProtocolProxyApi.DOMDebuggerApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  domsnapshotAgent(): ProtocolProxyApi.DOMSnapshotApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  domstorageAgent(): ProtocolProxyApi.DOMStorageApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  emulationAgent(): ProtocolProxyApi.EmulationApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  heapProfilerAgent(): ProtocolProxyApi.HeapProfilerApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  indexedDBAgent(): ProtocolProxyApi.IndexedDBApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  inputAgent(): ProtocolProxyApi.InputApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  ioAgent(): ProtocolProxyApi.IOApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  inspectorAgent(): ProtocolProxyApi.InspectorApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  layerTreeAgent(): ProtocolProxyApi.LayerTreeApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  logAgent(): ProtocolProxyApi.LogApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  mediaAgent(): ProtocolProxyApi.MediaApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  memoryAgent(): ProtocolProxyApi.MemoryApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  networkAgent(): ProtocolProxyApi.NetworkApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  overlayAgent(): ProtocolProxyApi.OverlayApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  pageAgent(): ProtocolProxyApi.PageApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  profilerAgent(): ProtocolProxyApi.ProfilerApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  performanceAgent(): ProtocolProxyApi.PerformanceApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  runtimeAgent(): ProtocolProxyApi.RuntimeApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  securityAgent(): ProtocolProxyApi.SecurityApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  serviceWorkerAgent(): ProtocolProxyApi.ServiceWorkerApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  storageAgent(): ProtocolProxyApi.StorageApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  targetAgent(): ProtocolProxyApi.TargetApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  tracingAgent(): ProtocolProxyApi.TracingApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  webAudioAgent(): ProtocolProxyApi.WebAudioApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  webAuthnAgent(): ProtocolProxyApi.WebAuthnApi {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  // Dispatcher registration, keep alphabetically sorted.\n  registerAnimationDispatcher(_dispatcher: ProtocolProxyApi.AnimationDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerApplicationCacheDispatcher(_dispatcher: ProtocolProxyApi.ApplicationCacheDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerAuditsDispatcher(_dispatcher: ProtocolProxyApi.AuditsDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerCSSDispatcher(_dispatcher: ProtocolProxyApi.CSSDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerDatabaseDispatcher(_dispatcher: ProtocolProxyApi.DatabaseDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerBackgroundServiceDispatcher(_dispatcher: ProtocolProxyApi.BackgroundServiceDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerDebuggerDispatcher(_dispatcher: ProtocolProxyApi.DebuggerDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  unregisterDebuggerDispatcher(_dispatcher: ProtocolProxyApi.DebuggerDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerDOMDispatcher(_dispatcher: ProtocolProxyApi.DOMDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerDOMStorageDispatcher(_dispatcher: ProtocolProxyApi.DOMStorageDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerHeapProfilerDispatcher(_dispatcher: ProtocolProxyApi.HeapProfilerDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n  registerInspectorDispatcher(_dispatcher: ProtocolProxyApi.InspectorDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n  registerLayerTreeDispatcher(_dispatcher: ProtocolProxyApi.LayerTreeDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerLogDispatcher(_dispatcher: ProtocolProxyApi.LogDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerMediaDispatcher(_dispatcher: ProtocolProxyApi.MediaDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerNetworkDispatcher(_dispatcher: ProtocolProxyApi.NetworkDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerOverlayDispatcher(_dispatcher: ProtocolProxyApi.OverlayDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerPageDispatcher(_dispatcher: ProtocolProxyApi.PageDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerProfilerDispatcher(_dispatcher: ProtocolProxyApi.ProfilerDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerRuntimeDispatcher(_dispatcher: ProtocolProxyApi.RuntimeDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerSecurityDispatcher(_dispatcher: ProtocolProxyApi.SecurityDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerServiceWorkerDispatcher(_dispatcher: ProtocolProxyApi.ServiceWorkerDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerStorageDispatcher(_dispatcher: ProtocolProxyApi.StorageDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerTargetDispatcher(_dispatcher: ProtocolProxyApi.TargetDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerTracingDispatcher(_dispatcher: ProtocolProxyApi.TracingDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n\n  registerWebAudioDispatcher(_dispatcher: ProtocolProxyApi.WebAudioDispatcher): void {\n    throw new Error('Implemented in InspectorBackend.js');\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass _AgentPrototype {\n  _replyArgs: {\n    [x: string]: string[],\n  };\n  _domain: string;\n  _target!: TargetBase;\n  constructor(domain: string) {\n    this._replyArgs = {};\n    this._domain = domain;\n  }\n\n  registerCommand(\n      methodName: string, signature: {\n        name: string,\n        type: string,\n        optional: boolean,\n      }[],\n      replyArgs: string[]): void {\n    const domainAndMethod = this._domain + '.' + methodName;\n\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function sendMessagePromise(this: _AgentPrototype, _vararg: any): Promise<any> {\n      const params = Array.prototype.slice.call(arguments);\n      return _AgentPrototype.prototype._sendMessageToBackendPromise.call(this, domainAndMethod, signature, params);\n    }\n\n    // @ts-ignore Method code generation\n    this[methodName] = sendMessagePromise;\n\n    function invoke(this: _AgentPrototype, request: Object|undefined = {}): Promise<Object|null> {\n      return this._invoke(domainAndMethod, request);\n    }\n\n    // @ts-ignore Method code generation\n    this['invoke_' + methodName] = invoke;\n\n    this._replyArgs[domainAndMethod] = replyArgs;\n  }\n\n  _prepareParameters(\n      method: string, signature: {\n        name: string,\n        type: string,\n        optional: boolean,\n      }[],\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      args: any[], errorCallback: (arg0: string) => void): Object|null {\n    const params: {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [x: string]: any,\n    } = {};\n    let hasParams = false;\n\n    for (const param of signature) {\n      const paramName = param['name'];\n      const typeName = param['type'];\n      const optionalFlag = param['optional'];\n\n      if (!args.length && !optionalFlag) {\n        errorCallback(\n            `Protocol Error: Invalid number of arguments for method '${method}' call. ` +\n            `It must have the following arguments ${JSON.stringify(signature)}'.`);\n        return null;\n      }\n\n      const value = args.shift();\n      if (optionalFlag && typeof value === 'undefined') {\n        continue;\n      }\n\n      if (typeof value !== typeName) {\n        errorCallback(\n            `Protocol Error: Invalid type of argument '${paramName}' for method '${method}' call. ` +\n            `It must be '${typeName}' but it is '${typeof value}'.`);\n        return null;\n      }\n\n      params[paramName] = value;\n      hasParams = true;\n    }\n\n    if (args.length) {\n      errorCallback(`Protocol Error: Extra ${args.length} arguments in a call to method '${method}'.`);\n      return null;\n    }\n\n    return hasParams ? params : null;\n  }\n\n  _sendMessageToBackendPromise(\n      method: string, signature: {\n        name: string,\n        type: string,\n        optional: boolean,\n      }[],\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      args: any[]): Promise<any> {\n    let errorMessage;\n    function onError(message: string): void {\n      console.error(message);\n      errorMessage = message;\n    }\n    const params = this._prepareParameters(method, signature, args, onError);\n    if (errorMessage) {\n      return Promise.resolve(null);\n    }\n\n    return new Promise(resolve => {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const callback = (error: any, result: any): void => {\n        if (error) {\n          if (!test.suppressRequestErrors && error.code !== DevToolsStubErrorCode && error.code !== _GenericError &&\n              error.code !== _ConnectionClosedErrorCode) {\n            console.error('Request ' + method + ' failed. ' + JSON.stringify(error));\n          }\n\n          resolve(null);\n          return;\n        }\n\n        const args = this._replyArgs[method];\n        resolve(result && args.length ? result[args[0]] : undefined);\n      };\n\n      if (!this._target._router) {\n        SessionRouter.dispatchConnectionError(callback, method);\n      } else {\n        this._target._router.sendMessage(this._target._sessionId, this._domain, method, params, callback);\n      }\n    });\n  }\n\n  _invoke(method: string, request: Object|null): Promise<Object> {\n    return new Promise(fulfill => {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const callback = (error: any, result: any): void => {\n        if (error && !test.suppressRequestErrors && error.code !== DevToolsStubErrorCode &&\n            error.code !== _GenericError && error.code !== _ConnectionClosedErrorCode) {\n          console.error('Request ' + method + ' failed. ' + JSON.stringify(error));\n        }\n\n        if (!result) {\n          result = {};\n        }\n        if (error) {\n          // TODO(crbug.com/1011811): Remove Old lookup of ProtocolError\n          result[ProtocolError] = error.message;\n          // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          result.getError = (): any => {\n            return error.message;\n          };\n        } else {\n          result.getError = (): undefined => {\n            return undefined;\n          };\n        }\n        fulfill(result);\n      };\n\n      if (!this._target._router) {\n        SessionRouter.dispatchConnectionError(callback, method);\n      } else {\n        this._target._router.sendMessage(this._target._sessionId, this._domain, method, request, callback);\n      }\n    });\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nclass _DispatcherPrototype {\n  _eventArgs: {\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [x: string]: any,\n  };\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _dispatchers!: any[];\n  constructor() {\n    this._eventArgs = {};\n  }\n\n  registerEvent(eventName: string, params: Object): void {\n    this._eventArgs[eventName] = params;\n  }\n\n  addDomainDispatcher(dispatcher: Object): void {\n    this._dispatchers.push(dispatcher);\n  }\n\n  removeDomainDispatcher(dispatcher: Object): void {\n    const index = this._dispatchers.indexOf(dispatcher);\n    if (index === -1) {\n      return;\n    }\n    this._dispatchers.splice(index, 1);\n  }\n\n  dispatch(functionName: string, messageObject: {\n    method: string,\n    params: ({\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      [x: string]: any,\n    }|undefined)|null,\n  }): void {\n    if (!this._dispatchers.length) {\n      return;\n    }\n\n    if (!this._eventArgs[messageObject.method]) {\n      InspectorBackend.reportProtocolWarning(\n          `Protocol Warning: Attempted to dispatch an unspecified method '${messageObject.method}'`, messageObject);\n      return;\n    }\n\n    const messageArgument = {...messageObject.params};\n\n    for (let index = 0; index < this._dispatchers.length; ++index) {\n      const dispatcher = this._dispatchers[index];\n\n      if (functionName in dispatcher) {\n        dispatcher[functionName].call(dispatcher, messageArgument);\n      }\n    }\n  }\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport type _Callback = (arg0: Object|null, arg1: Object|null) => void;\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface _CallbackWithDebugInfo {\n  callback: (arg0: Object|null, arg1: Object|null) => void;\n  method: string;\n}\n\nexport const inspectorBackend = new InspectorBackend();\n"]}