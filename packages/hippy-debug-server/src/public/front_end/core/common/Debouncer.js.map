{"version":3,"file":"Debouncer.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/Debouncer.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B;;GAEG;AACH,uDAAuD;AAEvD,MAAM,CAAC,MAAM,QAAQ,GAAG,UAAS,IAAc,EAAE,KAAa;IAC5D,IAAI,KAAK,GAAG,CAAC,CAAC;IACd,MAAM,SAAS,GAAG,GAAS,EAAE;QAC3B,YAAY,CAAC,KAAK,CAAC,CAAC;QACpB,KAAK,GAAG,UAAU,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,EAAE,KAAK,CAAC,CAAC;IAC1C,CAAC,CAAC;IACF,OAAO,SAAS,CAAC;AACnB,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/**\n * Debounce utility function, ensures that the function passed in is only called once the function stops being called and the delay has expired.\n */\n/* eslint-disable rulesdir/no_underscored_properties */\n\nexport const debounce = function(func: Function, delay: number): Function {\n  let timer = 0;\n  const debounced = (): void => {\n    clearTimeout(timer);\n    timer = setTimeout(() => func(), delay);\n  };\n  return debounced;\n};\n"]}