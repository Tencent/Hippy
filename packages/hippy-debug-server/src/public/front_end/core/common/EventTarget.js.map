{"version":3,"file":"EventTarget.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/EventTarget.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAW7B,MAAM,UAAU,oBAAoB,CAAC,SAA4B;IAC/D,KAAK,MAAM,SAAS,IAAI,SAAS,EAAE;QACjC,SAAS,CAAC,WAAW,CAAC,mBAAmB,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,CAAC,QAAQ,EAAE,SAAS,CAAC,UAAU,CAAC,CAAC;KAC1G;IACD,sDAAsD;IACtD,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtB,CAAC;AACD,MAAM,OAAO,WAAW;IACtB,gBAAgB,CAAC,SAAwB,EAAE,QAA0C,EAAE,UAAmB;QAExG,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IACD,mEAAmE;IACnE,8DAA8D;IAC9D,IAAI,CAAC,SAAwB;QAC3B,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IACD,mBAAmB,CAAC,SAAwB,EAAE,QAA0C,EAAE,UAAmB;QAC3G,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IACD,iBAAiB,CAAC,SAAwB;QACxC,MAAM,IAAI,KAAK,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IACD,6DAA6D;IAC7D,mEAAmE;IACnE,8DAA8D;IAC9D,wBAAwB,CAAC,SAAwB,EAAE,SAAe;IAClE,CAAC;IAED,MAAM,CAAC,oBAAoB,GAAG,oBAAoB,CAAC;;AAGrD,mEAAmE;AACnE,8DAA8D;AAC9D,MAAM,UAAU,SAAS,CAAC,IAAY,EAAE,SAAc,EAAE,EAAE,SAA6B,MAAM;IAC3F,MAAM,GAAG,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IAC7E,MAAM,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;AAC5B,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties, @typescript-eslint/no-unused-vars */\n\nexport interface EventDescriptor {\n  eventTarget: EventTarget;\n  eventType: string|symbol;\n  thisObject?: Object;\n  listener: (arg0: EventTargetEvent) => void;\n}\n\nexport function removeEventListeners(eventList: EventDescriptor[]): void {\n  for (const eventInfo of eventList) {\n    eventInfo.eventTarget.removeEventListener(eventInfo.eventType, eventInfo.listener, eventInfo.thisObject);\n  }\n  // Do not hold references on unused event descriptors.\n  eventList.splice(0);\n}\nexport class EventTarget {\n  addEventListener(eventType: string|symbol, listener: (arg0: EventTargetEvent) => void, thisObject?: Object):\n      EventDescriptor {\n    throw new Error('not implemented');\n  }\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  once(eventType: string|symbol): Promise<any> {\n    throw new Error('not implemented');\n  }\n  removeEventListener(eventType: string|symbol, listener: (arg0: EventTargetEvent) => void, thisObject?: Object): void {\n    throw new Error('not implemented');\n  }\n  hasEventListeners(eventType: string|symbol): boolean {\n    throw new Error('not implemented');\n  }\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  dispatchEventToListeners(eventType: string|symbol, eventData?: any): void {\n  }\n\n  static removeEventListeners = removeEventListeners;\n}\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function fireEvent(name: string, detail: any = {}, target: HTMLElement|Window = window): void {\n  const evt = new CustomEvent(name, {bubbles: true, cancelable: true, detail});\n  target.dispatchEvent(evt);\n}\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport interface EventTargetEvent<T = any> {\n  data: T;\n}\n"]}