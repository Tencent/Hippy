{"version":3,"file":"ParsedURL.js","sourceRoot":"","sources":["../../../../../../front_end/core/common/ParsedURL.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2012 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Platform from '../platform/platform.js';\nimport * as Root from '../root/root.js';\n\nexport class ParsedURL {\n  isValid: boolean;\n  url: string;\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  queryParams: string;\n  fragment: string;\n  folderPathComponents: string;\n  lastPathComponent: string;\n  _blobInnerScheme: string|undefined;\n  _displayName?: string;\n  _dataURLDisplayName?: string;\n\n  constructor(url: string) {\n    this.isValid = false;\n    this.url = url;\n    this.scheme = '';\n    this.user = '';\n    this.host = '';\n    this.port = '';\n    this.path = '';\n    this.queryParams = '';\n    this.fragment = '';\n    this.folderPathComponents = '';\n    this.lastPathComponent = '';\n\n    const isBlobUrl = this.url.startsWith('blob:');\n    const urlToMatch = isBlobUrl ? url.substring(5) : url;\n    const match = urlToMatch.match(ParsedURL._urlRegex());\n    if (match) {\n      this.isValid = true;\n      if (isBlobUrl) {\n        this._blobInnerScheme = match[2].toLowerCase();\n        this.scheme = 'blob';\n      } else {\n        this.scheme = match[2].toLowerCase();\n      }\n      this.user = match[3];\n      this.host = match[4];\n      this.port = match[5];\n      this.path = match[6] || '/';\n      this.queryParams = match[7] || '';\n      this.fragment = match[8];\n    } else {\n      if (this.url.startsWith('data:')) {\n        this.scheme = 'data';\n        return;\n      }\n      if (this.url.startsWith('blob:')) {\n        this.scheme = 'blob';\n        return;\n      }\n      if (this.url === 'about:blank') {\n        this.scheme = 'about';\n        return;\n      }\n      this.path = this.url;\n    }\n\n    const lastSlashIndex = this.path.lastIndexOf('/');\n    if (lastSlashIndex !== -1) {\n      this.folderPathComponents = this.path.substring(0, lastSlashIndex);\n      this.lastPathComponent = this.path.substring(lastSlashIndex + 1);\n    } else {\n      this.lastPathComponent = this.path;\n    }\n  }\n\n  static fromString(string: string): ParsedURL|null {\n    const parsedURL = new ParsedURL(string.toString());\n    if (parsedURL.isValid) {\n      return parsedURL;\n    }\n    return null;\n  }\n\n  static platformPathToURL(fileSystemPath: string): string {\n    fileSystemPath = fileSystemPath.replace(/\\\\/g, '/');\n    if (!fileSystemPath.startsWith('file://')) {\n      if (fileSystemPath.startsWith('/')) {\n        fileSystemPath = 'file://' + fileSystemPath;\n      } else {\n        fileSystemPath = 'file:///' + fileSystemPath;\n      }\n    }\n    return fileSystemPath;\n  }\n\n  static urlToPlatformPath(fileURL: string, isWindows?: boolean): string {\n    console.assert(fileURL.startsWith('file://'), 'This must be a file URL.');\n    if (isWindows) {\n      return fileURL.substr('file:///'.length).replace(/\\//g, '\\\\');\n    }\n    return fileURL.substr('file://'.length);\n  }\n\n  static urlWithoutHash(url: string): string {\n    const hashIndex = url.indexOf('#');\n    if (hashIndex !== -1) {\n      return url.substr(0, hashIndex);\n    }\n    return url;\n  }\n\n  static _urlRegex(): RegExp {\n    if (ParsedURL._urlRegexInstance) {\n      return ParsedURL._urlRegexInstance;\n    }\n    // RegExp groups:\n    // 1 - scheme, hostname, ?port\n    // 2 - scheme (using the RFC3986 grammar)\n    // 3 - ?user:password\n    // 4 - hostname\n    // 5 - ?port\n    // 6 - ?path\n    // 7 - ?query\n    // 8 - ?fragment\n    const schemeRegex = /([A-Za-z][A-Za-z0-9+.-]*):\\/\\//;\n    const userRegex = /(?:([A-Za-z0-9\\-._~%!$&'()*+,;=:]*)@)?/;\n    const hostRegex = /((?:\\[::\\d?\\])|(?:[^\\s\\/:]*))/;\n    const portRegex = /(?::([\\d]+))?/;\n    const pathRegex = /(\\/[^#?]*)?/;\n    const queryRegex = /(?:\\?([^#]*))?/;\n    const fragmentRegex = /(?:#(.*))?/;\n\n    ParsedURL._urlRegexInstance = new RegExp(\n        '^(' + schemeRegex.source + userRegex.source + hostRegex.source + portRegex.source + ')' + pathRegex.source +\n        queryRegex.source + fragmentRegex.source + '$');\n    return ParsedURL._urlRegexInstance;\n  }\n\n  static extractPath(url: string): string {\n    const parsedURL = this.fromString(url);\n    return parsedURL ? parsedURL.path : '';\n  }\n\n  static extractOrigin(url: string): string {\n    const parsedURL = this.fromString(url);\n    return parsedURL ? parsedURL.securityOrigin() : '';\n  }\n\n  static extractExtension(url: string): string {\n    url = ParsedURL.urlWithoutHash(url);\n    const indexOfQuestionMark = url.indexOf('?');\n    if (indexOfQuestionMark !== -1) {\n      url = url.substr(0, indexOfQuestionMark);\n    }\n    const lastIndexOfSlash = url.lastIndexOf('/');\n    if (lastIndexOfSlash !== -1) {\n      url = url.substr(lastIndexOfSlash + 1);\n    }\n    const lastIndexOfDot = url.lastIndexOf('.');\n    if (lastIndexOfDot !== -1) {\n      url = url.substr(lastIndexOfDot + 1);\n      const lastIndexOfPercent = url.indexOf('%');\n      if (lastIndexOfPercent !== -1) {\n        return url.substr(0, lastIndexOfPercent);\n      }\n      return url;\n    }\n    return '';\n  }\n\n  static extractName(url: string): string {\n    let index = url.lastIndexOf('/');\n    const pathAndQuery = index !== -1 ? url.substr(index + 1) : url;\n    index = pathAndQuery.indexOf('?');\n    return index < 0 ? pathAndQuery : pathAndQuery.substr(0, index);\n  }\n\n  static completeURL(baseURL: string, href: string): string|null {\n    // Return special URLs as-is.\n    const trimmedHref = href.trim();\n    if (trimmedHref.startsWith('data:') || trimmedHref.startsWith('blob:') || trimmedHref.startsWith('javascript:') ||\n        trimmedHref.startsWith('mailto:')) {\n      return href;\n    }\n\n    // Return absolute URLs as-is.\n    const parsedHref = this.fromString(trimmedHref);\n    if (parsedHref && parsedHref.scheme) {\n      return trimmedHref;\n    }\n\n    const parsedURL = this.fromString(baseURL);\n    if (!parsedURL) {\n      return null;\n    }\n\n    if (parsedURL.isDataURL()) {\n      return href;\n    }\n\n    if (href.length > 1 && href.charAt(0) === '/' && href.charAt(1) === '/') {\n      // href starts with \"//\" which is a full URL with the protocol dropped (use the baseURL protocol).\n      return parsedURL.scheme + ':' + href;\n    }\n\n    const securityOrigin = parsedURL.securityOrigin();\n    const pathText = parsedURL.path;\n    const queryText = parsedURL.queryParams ? '?' + parsedURL.queryParams : '';\n\n    // Empty href resolves to a URL without fragment.\n    if (!href.length) {\n      return securityOrigin + pathText + queryText;\n    }\n\n    if (href.charAt(0) === '#') {\n      return securityOrigin + pathText + queryText + href;\n    }\n\n    if (href.charAt(0) === '?') {\n      return securityOrigin + pathText + href;\n    }\n\n    const hrefMatches = href.match(/^[^#?]*/);\n    if (!hrefMatches || !href.length) {\n      throw new Error('Invalid href');\n    }\n    let hrefPath: string = hrefMatches[0];\n    const hrefSuffix = href.substring(hrefPath.length);\n    if (hrefPath.charAt(0) !== '/') {\n      hrefPath = parsedURL.folderPathComponents + '/' + hrefPath;\n    }\n    return securityOrigin + Root.Runtime.Runtime.normalizePath(hrefPath) + hrefSuffix;\n  }\n\n  static splitLineAndColumn(string: string): {\n    url: string,\n    lineNumber: (number|undefined),\n    columnNumber: (number|undefined),\n  } {\n    // Only look for line and column numbers in the path to avoid matching port numbers.\n    const beforePathMatch = string.match(ParsedURL._urlRegex());\n    let beforePath = '';\n    let pathAndAfter: string = string;\n    if (beforePathMatch) {\n      beforePath = beforePathMatch[1];\n      pathAndAfter = string.substring(beforePathMatch[1].length);\n    }\n\n    const lineColumnRegEx = /(?::(\\d+))?(?::(\\d+))?$/;\n    const lineColumnMatch = lineColumnRegEx.exec(pathAndAfter);\n    let lineNumber;\n    let columnNumber;\n    console.assert(Boolean(lineColumnMatch));\n    if (!lineColumnMatch) {\n      return {url: string, lineNumber: 0, columnNumber: 0};\n    }\n\n    if (typeof (lineColumnMatch[1]) === 'string') {\n      lineNumber = parseInt(lineColumnMatch[1], 10);\n      // Immediately convert line and column to 0-based numbers.\n      lineNumber = isNaN(lineNumber) ? undefined : lineNumber - 1;\n    }\n    if (typeof (lineColumnMatch[2]) === 'string') {\n      columnNumber = parseInt(lineColumnMatch[2], 10);\n      columnNumber = isNaN(columnNumber) ? undefined : columnNumber - 1;\n    }\n\n    let url: string = beforePath + pathAndAfter.substring(0, pathAndAfter.length - lineColumnMatch[0].length);\n    if (lineColumnMatch[1] === undefined && lineColumnMatch[2] === undefined) {\n      const wasmCodeOffsetRegex = /wasm-function\\[\\d+\\]:0x([a-z0-9]+)$/g;\n      const wasmCodeOffsetMatch = wasmCodeOffsetRegex.exec(pathAndAfter);\n      if (wasmCodeOffsetMatch && typeof (wasmCodeOffsetMatch[1]) === 'string') {\n        url = ParsedURL.removeWasmFunctionInfoFromURL(url);\n        columnNumber = parseInt(wasmCodeOffsetMatch[1], 16);\n        columnNumber = isNaN(columnNumber) ? undefined : columnNumber;\n      }\n    }\n\n    return {url, lineNumber, columnNumber};\n  }\n\n  static removeWasmFunctionInfoFromURL(url: string): string {\n    const wasmFunctionRegEx = /:wasm-function\\[\\d+\\]/;\n    const wasmFunctionIndex = url.search(wasmFunctionRegEx);\n    if (wasmFunctionIndex === -1) {\n      return url;\n    }\n    return url.substring(0, wasmFunctionIndex);\n  }\n\n  static isRelativeURL(url: string): boolean {\n    return !(/^[A-Za-z][A-Za-z0-9+.-]*:/.test(url));\n  }\n\n  get displayName(): string {\n    if (this._displayName) {\n      return this._displayName;\n    }\n\n    if (this.isDataURL()) {\n      return this.dataURLDisplayName();\n    }\n    if (this.isBlobURL()) {\n      return this.url;\n    }\n    if (this.isAboutBlank()) {\n      return this.url;\n    }\n\n    this._displayName = this.lastPathComponent;\n    if (!this._displayName) {\n      this._displayName = (this.host || '') + '/';\n    }\n    if (this._displayName === '/') {\n      this._displayName = this.url;\n    }\n    return this._displayName;\n  }\n\n  dataURLDisplayName(): string {\n    if (this._dataURLDisplayName) {\n      return this._dataURLDisplayName;\n    }\n    if (!this.isDataURL()) {\n      return '';\n    }\n    this._dataURLDisplayName = Platform.StringUtilities.trimEndWithMaxLength(this.url, 20);\n    return this._dataURLDisplayName;\n  }\n\n  isAboutBlank(): boolean {\n    return this.url === 'about:blank';\n  }\n\n  isDataURL(): boolean {\n    return this.scheme === 'data';\n  }\n\n  isHttpOrHttps(): boolean {\n    return this.scheme === 'http' || this.scheme === 'https';\n  }\n\n  isBlobURL(): boolean {\n    return this.url.startsWith('blob:');\n  }\n\n  lastPathComponentWithFragment(): string {\n    return this.lastPathComponent + (this.fragment ? '#' + this.fragment : '');\n  }\n\n  domain(): string {\n    if (this.isDataURL()) {\n      return 'data:';\n    }\n    return this.host + (this.port ? ':' + this.port : '');\n  }\n\n  securityOrigin(): string {\n    if (this.isDataURL()) {\n      return 'data:';\n    }\n    const scheme = this.isBlobURL() ? this._blobInnerScheme : this.scheme;\n    return scheme + '://' + this.domain();\n  }\n\n  urlWithoutScheme(): string {\n    if (this.scheme && this.url.startsWith(this.scheme + '://')) {\n      return this.url.substring(this.scheme.length + 3);\n    }\n    return this.url;\n  }\n\n  static _urlRegexInstance: RegExp|null = null;\n}\n"]}