{"version":3,"file":"LinearMemoryValueInterpreter.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\nimport * as ComponentHelpers from '../helpers/helpers.js';\nimport * as IconButton from '../icon_button/icon_button.js';\n\nimport {ValueInterpreterDisplay} from './ValueInterpreterDisplay.js';\nimport {ValueInterpreterSettings} from './ValueInterpreterSettings.js';\n\nimport type {ValueDisplayData} from './ValueInterpreterDisplay.js';\nimport type {ValueType, ValueTypeMode} from './ValueInterpreterDisplayUtils.js';\nimport {Endianness} from './ValueInterpreterDisplayUtils.js';\nimport type {TypeToggleEvent, ValueInterpreterSettingsData} from './ValueInterpreterSettings.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Tooltip text that appears when hovering over the gear button to open and close settings in the Linear Memory Inspector. These settings\n  *             allow the user to change the value type to view, such as 32-bit Integer, or 32-bit Float.\n  */\n  toggleValueTypeSettings: 'Toggle value type settings',\n  /**\n  *@description Tooltip text that appears when hovering over the 'Little Endian' or 'Big Endian' setting in the Linear Memory Inspector.\n  */\n  changeEndianness: 'Change `Endianness`',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('ui/components/linear_memory_inspector/LinearMemoryValueInterpreter.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst {render, html} = LitHtml;\nconst getStyleSheets = ComponentHelpers.GetStylesheet.getStyleSheets;\n\nexport class EndiannessChangedEvent extends Event {\n  data: Endianness;\n\n  constructor(endianness: Endianness) {\n    super('endiannesschanged');\n    this.data = endianness;\n  }\n}\n\nexport class ValueTypeToggledEvent extends Event {\n  data: {type: ValueType, checked: boolean};\n\n  constructor(type: ValueType, checked: boolean) {\n    super('valuetypetoggled');\n    this.data = {type, checked};\n  }\n}\n\nexport interface LinearMemoryValueInterpreterData {\n  value: ArrayBuffer;\n  valueTypes: Set<ValueType>;\n  endianness: Endianness;\n  valueTypeModes?: Map<ValueType, ValueTypeMode>;\n  memoryLength: number;\n}\n\nexport class LinearMemoryValueInterpreter extends HTMLElement {\n  static litTagName = LitHtml.literal`devtools-linear-memory-inspector-interpreter`;\n\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private endianness = Endianness.Little;\n  private buffer = new ArrayBuffer(0);\n  private valueTypes: Set<ValueType> = new Set();\n  private valueTypeModeConfig: Map<ValueType, ValueTypeMode> = new Map();\n  private memoryLength = 0;\n  private showSettings = false;\n\n  constructor() {\n    super();\n    this.shadow.adoptedStyleSheets = [\n      ...getStyleSheets('ui/legacy/inspectorCommon.css', {enableLegacyPatching: false}),\n    ];\n  }\n\n  set data(data: LinearMemoryValueInterpreterData) {\n    this.endianness = data.endianness;\n    this.buffer = data.value;\n    this.valueTypes = data.valueTypes;\n    this.valueTypeModeConfig = data.valueTypeModes || new Map();\n    this.memoryLength = data.memoryLength;\n    this.render();\n  }\n\n  private render(): void {\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    render(html`\n      <style>\n        :host {\n          flex: auto;\n          display: flex;\n        }\n\n        .value-interpreter {\n          --text-highlight-color: #80868b;\n\n          border: var(--legacy-divider-border);\n          background-color: var(--color-background-elevation-1);\n          overflow: hidden;\n          width: 400px;\n        }\n\n        .settings-toolbar {\n          min-height: 26px;\n          display: flex;\n          flex-wrap: nowrap;\n          justify-content: space-between;\n          padding-left: 12px;\n          padding-right: 12px;\n          align-items: center;\n        }\n\n        .settings-toolbar-button {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          width: 20px;\n          height: 20px;\n          border: none;\n          background-color: transparent;\n          cursor: pointer;\n        }\n\n        .settings-toolbar-button devtools-icon {\n          height: 14px;\n          width: 14px;\n          min-height: 14px;\n          min-width: 14px;\n        }\n\n        .settings-toolbar-button.active devtools-icon {\n          --icon-color: var(--color-primary);\n        }\n\n        .divider {\n          display: block;\n          height: 1px;\n          margin-bottom: 12px;\n          background-color: var(--color-details-hairline, #d0d0d0); /* stylelint-disable-line plugin/use_theme_colors */\n          /* See: crbug.com/1152736 for color variable migration. */\n        }\n      </style>\n      <div class=\"value-interpreter\">\n        <div class=\"settings-toolbar\">\n          ${this.renderEndiannessSetting()}\n          <button data-settings=\"true\" class=\"settings-toolbar-button ${this.showSettings ? 'active' : ''}\" title=${i18nString(UIStrings.toggleValueTypeSettings)} @click=${this.onSettingsToggle}>\n            <${IconButton.Icon.Icon.litTagName}\n              .data=${{ iconName: 'settings_14x14_icon', color: 'var(--color-text-secondary)', width: '14px' } as IconButton.Icon.IconWithName}>\n            </${IconButton.Icon.Icon.litTagName}>\n          </button>\n        </div>\n        <span class=\"divider\"></span>\n        <div>\n          ${this.showSettings ?\n            html`\n              <${ValueInterpreterSettings.litTagName}\n                .data=${{ valueTypes: this.valueTypes } as ValueInterpreterSettingsData}\n                @typetoggle=${this.onTypeToggle}>\n              </${ValueInterpreterSettings.litTagName}>` :\n            html`\n              <${ValueInterpreterDisplay.litTagName}\n                .data=${{\n                  buffer: this.buffer,\n                  valueTypes: this.valueTypes,\n                  endianness: this.endianness,\n                  valueTypeModes: this.valueTypeModeConfig,\n                  memoryLength: this.memoryLength,\n                } as ValueDisplayData}>\n              </${ValueInterpreterDisplay.litTagName}>`}\n        </div>\n      </div>\n    `,\n      this.shadow, { host: this },\n    );\n    // clang-format on\n  }\n\n  private onEndiannessChange(event: Event): void {\n    event.preventDefault();\n    const select = event.target as HTMLInputElement;\n    const endianness = select.value as Endianness;\n    this.dispatchEvent(new EndiannessChangedEvent(endianness));\n  }\n\n  private renderEndiannessSetting(): LitHtml.TemplateResult {\n    const onEnumSettingChange = this.onEndiannessChange.bind(this);\n    // Disabled until https://crbug.com/1079231 is fixed.\n    // clang-format off\n    return html`\n    <label data-endianness-setting=\"true\" title=${i18nString(UIStrings.changeEndianness)}>\n      <select class=\"chrome-select\"\n        style=\"border: none; background-color: transparent; cursor: pointer;\"\n        data-endianness=\"true\" @change=${onEnumSettingChange}>\n        ${[Endianness.Little, Endianness.Big].map(endianness => {\n            return html`<option value=${endianness} .selected=${this.endianness === endianness}>${\n                i18n.i18n.lockedString(endianness)}</option>`;\n        })}\n      </select>\n    </label>\n    `;\n    // clang-format on\n  }\n\n  private onSettingsToggle(): void {\n    this.showSettings = !this.showSettings;\n    this.render();\n  }\n\n  private onTypeToggle(e: TypeToggleEvent): void {\n    this.dispatchEvent(new ValueTypeToggledEvent(e.data.type, e.data.checked));\n  }\n}\n\n\nComponentHelpers.CustomElements.defineComponent(\n    'devtools-linear-memory-inspector-interpreter', LinearMemoryValueInterpreter);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-linear-memory-inspector-interpreter': LinearMemoryValueInterpreter;\n  }\n}\n"]}