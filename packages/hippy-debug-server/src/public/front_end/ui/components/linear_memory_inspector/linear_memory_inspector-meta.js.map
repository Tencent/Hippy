{"version":3,"file":"linear_memory_inspector-meta.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/linear_memory_inspector/linear_memory_inspector-meta.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,EAAE,MAAM,wBAAwB,CAAC;AAK7C,OAAO,KAAK,IAAI,MAAM,4BAA4B,CAAC;AACnD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,eAAe,EAAE,kBAAkB;IACnC;;MAEE;IACF,mBAAmB,EAAE,uBAAuB;CAC7C,CAAC;AACF,MAAM,IAAI,GACN,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,uEAAuE,EAAE,SAAS,CAAC,CAAC;AACpH,MAAM,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAExF,IAAI,iCAA2E,CAAC;AAEhF,KAAK,UAAU,+BAA+B;IAC5C,IAAI,CAAC,iCAAiC,EAAE;QACtC,iCAAiC,GAAG,MAAM,MAAM,CAAC,8BAA8B,CAAC,CAAC;KAClF;IACD,OAAO,iCAAiC,CAAC;AAC3C,CAAC;AAED,EAAE,CAAC,WAAW,CAAC,qBAAqB,CAAC;IACnC,QAAQ,iCAA+C;IACvD,EAAE,EAAE,yBAAyB;IAC7B,KAAK,EAAE,cAAc,CAAC,SAAS,CAAC,eAAe,CAAC;IAChD,aAAa,EAAE,cAAc,CAAC,SAAS,CAAC,mBAAmB,CAAC;IAC5D,KAAK,EAAE,GAAG;IACV,WAAW,6BAA0C;IACrD,KAAK,CAAC,QAAQ;QACZ,MAAM,qBAAqB,GAAG,MAAM,+BAA+B,EAAE,CAAC;QACtE,OAAO,qBAAqB,CAAC,yBAAyB,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;IAC5E,CAAC;CACF,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as UI from '../../legacy/legacy.js';\n\n// eslint-disable-next-line rulesdir/es_modules_import\nimport type * as LinearMemoryInspector from './linear_memory_inspector.js';\n\nimport * as i18n from '../../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Title of the Linear Memory Inspector tool\n  */\n  memoryInspector: 'Memory Inspector',\n  /**\n  *@description Command for showing the 'Memory Inspector' tool\n  */\n  showMemoryInspector: 'Show Memory Inspector',\n};\nconst str_ =\n    i18n.i18n.registerUIStrings('ui/components/linear_memory_inspector/linear_memory_inspector-meta.ts', UIStrings);\nconst i18nLazyString = i18n.i18n.getLazilyComputedLocalizedString.bind(undefined, str_);\n\nlet loadedLinearMemoryInspectorModule: (typeof LinearMemoryInspector|undefined);\n\nasync function loadLinearMemoryInspectorModule(): Promise<typeof LinearMemoryInspector> {\n  if (!loadedLinearMemoryInspectorModule) {\n    loadedLinearMemoryInspectorModule = await import('./linear_memory_inspector.js');\n  }\n  return loadedLinearMemoryInspectorModule;\n}\n\nUI.ViewManager.registerViewExtension({\n  location: UI.ViewManager.ViewLocationValues.DRAWER_VIEW,\n  id: 'linear-memory-inspector',\n  title: i18nLazyString(UIStrings.memoryInspector),\n  commandPrompt: i18nLazyString(UIStrings.showMemoryInspector),\n  order: 100,\n  persistence: UI.ViewManager.ViewPersistence.CLOSEABLE,\n  async loadView() {\n    const LinearMemoryInspector = await loadLinearMemoryInspectorModule();\n    return LinearMemoryInspector.LinearMemoryInspectorPane.Wrapper.instance();\n  },\n});\n"]}