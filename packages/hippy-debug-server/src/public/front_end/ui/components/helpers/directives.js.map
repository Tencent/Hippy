{"version":3,"file":"directives.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/helpers/directives.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,OAAO,MAAM,4BAA4B,CAAC;AAEtD;;;;;;;GAOG;AACH,MAAM,oBAAqB,SAAQ,OAAO,CAAC,SAAS,CAAC,SAAS;IAC5D,YAAY,QAAoC;QAC9C,KAAK,CAAC,QAAQ,CAAC,CAAC;QAEhB,IAAI,QAAQ,CAAC,IAAI,KAAK,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,EAAE;YAC1D,MAAM,IAAI,KAAK,CAAC,gEAAgE,CAAC,CAAC;SACnF;IACH,CAAC;IAED,MAAM,CAAC,IAAmC,EAAE,CAAC,QAAQ,CAA8C;QACjG,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACzB,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,SAAqC;IAC5C,CAAC;CACF;AAED,MAAM,CAAC,MAAM,oBAAoB,GAAG,OAAO,CAAC,SAAS,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as LitHtml from '../../lit-html/lit-html.js';\n\n/**\n * Provides a hook to get a callback when a LitHtml node is rendered into the DOM:\n * @example\n *\n * ```\n * <p on-render=${nodeRenderedCallback(node => ...)}>\n * ```\n */\nclass NodeRenderedCallback extends LitHtml.Directive.Directive {\n  constructor(partInfo: LitHtml.Directive.PartInfo) {\n    super(partInfo);\n\n    if (partInfo.type !== LitHtml.Directive.PartType.ATTRIBUTE) {\n      throw new Error('Node rendered callback directive must be used as an attribute.');\n    }\n  }\n\n  update(part: LitHtml.Directive.ElementPart, [callback]: LitHtml.Directive.DirectiveParameters<this>): void {\n    callback(part.element);\n  }\n\n  /*\n   * Because this directive doesn't render anything, there's no implementation\n   * here for the render method. But we need it to state that it takes in a\n   * callback function at the callsite. Without this definition, the types in\n   * the update() method above don't get correctly picked up.\n   */\n  render(_callback: (domNode: Element) => void): void {\n  }\n}\n\nexport const nodeRenderedCallback = LitHtml.Directive.directive(NodeRenderedCallback);\n"]}