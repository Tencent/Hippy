{"version":3,"file":"Icon.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/components/icon_button/Icon.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../ui/components/helpers/helpers.js';\nimport * as LitHtml from '../../../ui/lit-html/lit-html.js';\nimport * as Coordinator from '../render_coordinator/render_coordinator.js';\n\nexport interface IconWithPath {\n  iconPath: string;\n  color: string;\n  width?: string;\n  height?: string;\n}\n\nexport interface IconWithName {\n  iconName: string;\n  color: string;\n  width?: string;\n  height?: string;\n}\n\nexport type IconData = IconWithPath|IconWithName;\n\nconst isString = (value: string|undefined): value is string => value !== undefined;\nconst coordinator = Coordinator.RenderCoordinator.RenderCoordinator.instance();\n\nexport class Icon extends HTMLElement {\n  static litTagName = LitHtml.literal`devtools-icon`;\n\n  private readonly shadow = this.attachShadow({mode: 'open'});\n\n  private iconPath: Readonly<string> = '';\n  private color: Readonly<string> = 'rgb(110 110 110)';\n  private width: Readonly<string> = '100%';\n  private height: Readonly<string> = '100%';\n  private iconName?: Readonly<string>;\n\n  set data(data: IconData) {\n    const {width, height} = data;\n    this.color = data.color;\n    this.width = isString(width) ? width : (isString(height) ? height : this.width);\n    this.height = isString(height) ? height : (isString(width) ? width : this.height);\n    if ('iconPath' in data) {\n      this.iconPath = data.iconPath;\n    } else {\n      this.iconPath = new URL(`../../../Images/${data.iconName}.svg`, import.meta.url).toString();\n      this.iconName = data.iconName;\n    }\n    this.render();\n  }\n\n  get data(): IconData {\n    const commonData = {\n      color: this.color,\n      width: this.width,\n      height: this.height,\n    };\n    if (this.iconName) {\n      return {\n        ...commonData,\n        iconName: this.iconName,\n      };\n    }\n    return {\n      ...commonData,\n      iconPath: this.iconPath,\n    };\n  }\n\n  private getStyles(): {[key: string]: string} {\n    const {iconPath, width, height, color} = this;\n    const commonStyles = {\n      width,\n      height,\n      display: 'block',\n    };\n    if (color) {\n      return {\n        ...commonStyles,\n        webkitMaskImage: `url(${iconPath})`,\n        webkitMaskPosition: 'center',\n        webkitMaskRepeat: 'no-repeat',\n        // We are setting this to 99% to work around an issue where non-standard zoom levels would cause the icon to clip.\n        webkitMaskSize: '99%',\n        backgroundColor: `var(--icon-color, ${color})`,\n      };\n    }\n    return {\n      ...commonStyles,\n      backgroundImage: `url(${iconPath})`,\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      // We are setting this to 99% to work around an issue where non-standard zoom levels would cause the icon to clip.\n      backgroundSize: '99%',\n    };\n  }\n\n  private render(): void {\n    coordinator.write(() => {\n      // clang-format off\n      LitHtml.render(LitHtml.html`\n        <style>\n          :host {\n            display: inline-block;\n            white-space: nowrap;\n          }\n        </style>\n        <div class=\"icon-basic\" style=${LitHtml.Directives.styleMap(this.getStyles())}></div>\n      `, this.shadow);\n      // clang-format on\n    });\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-icon', Icon);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-icon': Icon;\n  }\n}\n"]}