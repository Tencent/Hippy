{"version":3,"file":"lazy-children.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/components/docs/tree_outline/lazy-children.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,eAAe,MAAM,uEAAuE,CAAC;AACzG,OAAO,KAAK,gBAAgB,MAAM,0BAA0B,CAAC;AAC7D,OAAO,KAAK,WAAW,MAAM,oCAAoC,CAAC;AAElE,MAAM,gBAAgB,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;AACpD,MAAM,eAAe,CAAC,oBAAoB,EAAE,CAAC;AAE7C,KAAK,UAAU,eAAe;IAC5B,MAAM,eAAe,GAAoD;QACvE;YACE,YAAY,EAAE,IAAI;YAClB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC9B;oBACE,YAAY,EAAE,KAAK;oBACnB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAC,YAAY,EAAE,KAAK,EAAC,EAAE,EAAC,YAAY,EAAE,KAAK,EAAC,EAAE,EAAC,YAAY,EAAE,KAAK,EAAC,CAAC,CAAC;iBACvG;aACF,CAAC;SACH;QACD;YACE,YAAY,EAAE,SAAS;YACvB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC9B,EAAC,YAAY,EAAE,KAAK,EAAC;gBACrB,EAAC,YAAY,EAAE,KAAK,EAAC;aACtB,CAAC;SACH;KACF,CAAC;IAEF,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;QAC3B,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE,GAAG,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;AACL,CAAC;AAED,MAAM,IAAI,GAAoD;IAC5D,eAAe,EAAE,WAAW,CAAC,WAAW,CAAC,eAAe;IACxD,IAAI,EAAE;QACJ;YACE,YAAY,EAAE,SAAS;YACvB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC9B;oBACE,YAAY,EAAE,QAAQ;oBACtB,KAAK,CAAC,QAAQ;wBACZ,MAAM,QAAQ,GAAG,MAAM,eAAe,EAAE,CAAC;wBACzC,OAAO,QAAQ,CAAC;oBAClB,CAAC;iBACF;aACF,CAAC;SACH;QACD;YACE,YAAY,EAAE,UAAU;YACxB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;gBAC9B;oBACE,YAAY,EAAE,QAAQ;iBACvB;gBACD;oBACE,YAAY,EAAE,SAAS;iBACxB;gBACD;oBACE,YAAY,EAAE,OAAO;iBACtB;gBACD;oBACE,YAAY,EAAE,UAAU;iBACzB;aACF,CAAC;SAEH;KACF;CAEF,CAAC;AACF,MAAM,SAAS,GAAG,IAAI,WAAW,CAAC,WAAW,CAAC,WAAW,EAAU,CAAC;AACpE,SAAS,CAAC,YAAY,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,CAAC;AACvE,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;AAEtB,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;AAC7D,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC,EAAE,gBAAgB,CAAC,OAAO,EAAE,GAAG,EAAE;IAC5E,SAAS,CAAC,iBAAiB,EAAE,CAAC;AAChC,CAAC,CAAC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as FrontendHelpers from '../../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as ComponentHelpers from '../../helpers/helpers.js';\nimport * as TreeOutline from '../../tree_outline/tree_outline.js';\n\nawait ComponentHelpers.ComponentServerSetup.setup();\nawait FrontendHelpers.initializeGlobalVars();\n\nasync function loadInSomeNodes(): Promise<TreeOutline.TreeOutlineUtils.TreeNode<string>[]> {\n  const europeanOffices: TreeOutline.TreeOutlineUtils.TreeNode<string>[] = [\n    {\n      treeNodeData: 'UK',\n      children: () => Promise.resolve([\n        {\n          treeNodeData: 'LON',\n          children: () => Promise.resolve([{treeNodeData: '6PS'}, {treeNodeData: 'CSG'}, {treeNodeData: 'BEL'}]),\n        },\n      ]),\n    },\n    {\n      treeNodeData: 'Germany',\n      children: () => Promise.resolve([\n        {treeNodeData: 'MUC'},\n        {treeNodeData: 'BER'},\n      ]),\n    },\n  ];\n\n  return new Promise(resolve => {\n    setTimeout(() => resolve(europeanOffices), 250);\n  });\n}\n\nconst data: TreeOutline.TreeOutline.TreeOutlineData<string> = {\n  defaultRenderer: TreeOutline.TreeOutline.defaultRenderer,\n  tree: [\n    {\n      treeNodeData: 'Offices',\n      children: () => Promise.resolve([\n        {\n          treeNodeData: 'Europe',\n          async children() {\n            const children = await loadInSomeNodes();\n            return children;\n          },\n        },\n      ]),\n    },\n    {\n      treeNodeData: 'Products',\n      children: () => Promise.resolve([\n        {\n          treeNodeData: 'Chrome',\n        },\n        {\n          treeNodeData: 'YouTube',\n        },\n        {\n          treeNodeData: 'Drive',\n        },\n        {\n          treeNodeData: 'Calendar',\n        },\n      ]),\n\n    },\n  ],\n\n};\nconst component = new TreeOutline.TreeOutline.TreeOutline<string>();\ncomponent.setAttribute('toplevelbordercolor', 'var(--color-syntax-1)');\ncomponent.data = data;\n\ndocument.getElementById('container')?.appendChild(component);\ndocument.getElementById('recursively-expand')?.addEventListener('click', () => {\n  component.expandRecursively();\n});\n"]}