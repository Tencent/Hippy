{"version":3,"file":"webvitals.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/components/docs/webvitals/webvitals.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,eAAe,MAAM,uEAAuE,CAAC;AACzG,OAAO,KAAK,kBAAkB,MAAM,sDAAsD,CAAC;AAC3F,OAAO,KAAK,gBAAgB,MAAM,0BAA0B,CAAC;AAE7D,MAAM,eAAe,CAAC,oBAAoB,EAAE,CAAC;AAC7C,MAAM,gBAAgB,CAAC,oBAAoB,CAAC,KAAK,EAAE,CAAC;AAEpD,MAAM,SAAS,GAAG,IAAI,kBAAkB,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;AAC/E,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE,WAAW,CAAC,SAAS,CAAC,CAAC;AAE7D,SAAS,CAAC,IAAI,GAAG;IACf,SAAS,EAAE,CAAC;IACZ,QAAQ,EAAE,IAAI;IACd,WAAW,EAAE,KAAK;IAClB,IAAI,EAAE,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,SAAS,EAAE,CAAC,EAAC,CAAC,CAAC;IAC7F,IAAI,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,SAAS,EAAE,CAAC,EAAC,CAAC,CAAC;IAChD,YAAY,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAC,SAAS,EAAE,CAAC,EAAC,CAAC,CAAC;IACjF,SAAS,EAAE;QACT,EAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAC;QAC3B,EAAC,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE,EAAE,EAAC;KAC3B;IACD,oBAAoB,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC;CACzC,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as FrontendHelpers from '../../../../../test/unittests/front_end/helpers/EnvironmentHelpers.js';\nimport * as TimelineComponents from '../../../../panels/timeline/components/components.js';\nimport * as ComponentHelpers from '../../helpers/helpers.js';\n\nawait FrontendHelpers.initializeGlobalVars();\nawait ComponentHelpers.ComponentServerSetup.setup();\n\nconst component = new TimelineComponents.WebVitalsTimeline.WebVitalsTimeline();\ndocument.getElementById('container')?.appendChild(component);\n\ncomponent.data = {\n  startTime: 0,\n  duration: 1000,\n  maxDuration: 15000,\n  fcps: [0, 250, 500, 750, 1000, 1250, 1500, 2000, 3000, 4000, 5000].map(t => ({timestamp: t})),\n  lcps: [190, 380, 700].map(t => ({timestamp: t})),\n  layoutShifts: [200, 210, 220, 222, 225, 227, 230, 500].map(t => ({timestamp: t})),\n  longTasks: [\n    {start: 300, duration: 400},\n    {start: 850, duration: 50},\n  ],\n  mainFrameNavigations: [500, 1500, 12000],\n};\n"]}