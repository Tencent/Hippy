{"version":3,"file":"sample-data.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/components/docs/tree_outline/sample-data.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,oCAAoC,CAAC;AAG5C,MAAM,CAAC,MAAM,aAAa,GAAG;IAC3B,YAAY,EAAE,KAAK;CACpB,CAAC;AACF,MAAM,CAAC,MAAM,sBAAsB,GAAoD;IACrF;QACE,YAAY,EAAE,SAAS;QACvB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;YAC9B;gBACE,YAAY,EAAE,QAAQ;gBACtB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;oBAC9B;wBACE,YAAY,EAAE,IAAI;wBAClB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;4BAC9B;gCACE,YAAY,EAAE,KAAK;gCACnB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,EAAC,YAAY,EAAE,KAAK,EAAC,EAAE,EAAC,YAAY,EAAE,KAAK,EAAC,EAAE,aAAa,CAAC,CAAC;6BAC/F;yBACF,CAAC;qBACH;oBACD;wBACE,YAAY,EAAE,SAAS;wBACvB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;4BAC9B,EAAC,YAAY,EAAE,KAAK,EAAC;4BACrB,EAAC,YAAY,EAAE,KAAK,EAAC;yBACtB,CAAC;qBACH;iBACF,CAAC;aACH;SACF,CAAC;KACH;IACD;QACE,YAAY,EAAE,UAAU;QACxB,QAAQ,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC;YAC9B;gBACE,YAAY,EAAE,QAAQ;aACvB;YACD;gBACE,YAAY,EAAE,SAAS;aACxB;YACD;gBACE,YAAY,EAAE,OAAO;aACtB;YACD;gBACE,YAAY,EAAE,UAAU;aACzB;SACF,CAAC;KACH;CACF,CAAC","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport '../../tree_outline/tree_outline.js';\nimport type * as TreeOutline from '../../tree_outline/tree_outline.js';\n\nexport const belgraveHouse = {\n  treeNodeData: 'BEL',\n};\nexport const officesAndProductsData: TreeOutline.TreeOutlineUtils.TreeNode<string>[] = [\n  {\n    treeNodeData: 'Offices',\n    children: () => Promise.resolve([\n      {\n        treeNodeData: 'Europe',\n        children: () => Promise.resolve([\n          {\n            treeNodeData: 'UK',\n            children: () => Promise.resolve([\n              {\n                treeNodeData: 'LON',\n                children: () => Promise.resolve([{treeNodeData: '6PS'}, {treeNodeData: 'CSG'}, belgraveHouse]),\n              },\n            ]),\n          },\n          {\n            treeNodeData: 'Germany',\n            children: () => Promise.resolve([\n              {treeNodeData: 'MUC'},\n              {treeNodeData: 'BER'},\n            ]),\n          },\n        ]),\n      },\n    ]),\n  },\n  {\n    treeNodeData: 'Products',\n    children: () => Promise.resolve([\n      {\n        treeNodeData: 'Chrome',\n      },\n      {\n        treeNodeData: 'YouTube',\n      },\n      {\n        treeNodeData: 'Drive',\n      },\n      {\n        treeNodeData: 'Calendar',\n      },\n    ]),\n  },\n];\n"]}