{"version":3,"file":"SourcesTextEditor.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/source_frame/SourcesTextEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\nimport * as TextEditor from '../text_editor/text_editor.js';\n\nconst whitespaceStyleInjectedSet = new WeakSet<Document>();\n\nexport class SourcesTextEditor extends TextEditor.CodeMirrorTextEditor.CodeMirrorTextEditor {\n  _delegate: SourcesTextEditorDelegate;\n  _gutterMouseMove: (event: Event) => void;\n  _gutterMouseOut: () => void;\n  _tokenHighlighter: TokenHighlighter;\n  _gutters: string[];\n  _isHandlingMouseDownEvent: boolean;\n  _autocompleteConfig: UI.TextEditor.AutocompleteConfig|null;\n  _infoBarDiv: Element|null;\n  _selectionBeforeSearch?: TextUtils.TextRange.TextRange;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _executionLine?: any;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _executionLineTailMarker?: any;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _indentationLevel?: any;\n  _autoAppendedSpaces?: TextEditor.CodeMirrorTextEditor.TextEditorPositionHandle[];\n\n  constructor(delegate: SourcesTextEditorDelegate, codeMirrorOptions?: UI.TextEditor.Options) {\n    const defaultCodeMirrorOptions: UI.TextEditor.Options = {\n      lineNumbers: true,\n      lineWrapping: false,\n      bracketMatchingSetting: Common.Settings.Settings.instance().moduleSetting('textEditorBracketMatching'),\n      padBottom: Common.Settings.Settings.instance().moduleSetting('allowScrollPastEof').get(),\n      lineWiseCopyCut: true,\n      devtoolsAccessibleName: undefined,\n      mimeType: undefined,\n      autoHeight: undefined,\n      maxHighlightLength: undefined,\n      placeholder: undefined,\n      inputStyle: undefined,\n    };\n    if (codeMirrorOptions) {\n      Object.assign(defaultCodeMirrorOptions, codeMirrorOptions);\n    }\n\n    super(defaultCodeMirrorOptions);\n\n    this.codeMirror().addKeyMap({'Enter': 'smartNewlineAndIndent', 'Esc': 'sourcesDismiss'});\n\n    this._delegate = delegate;\n\n    this.codeMirror().on('cursorActivity', this._cursorActivity.bind(this));\n    this.codeMirror().on('gutterClick', this._gutterClick.bind(this));\n    this.codeMirror().on('scroll', this._scroll.bind(this));\n    this.codeMirror().on('focus', this._focus.bind(this));\n    this.codeMirror().on('blur', this._blur.bind(this));\n    this.codeMirror().on('beforeSelectionChange', this._fireBeforeSelectionChanged.bind(this));\n    this.codeMirror().on('gutterContextMenu', this._gutterContextMenu.bind(this));\n    this.element.addEventListener('contextmenu', this._textAreaContextMenu.bind(this), false);\n    this._gutterMouseMove = (event: Event): void => {\n      const mouseEvent = (event as MouseEvent);\n      this.element.classList.toggle(\n          'CodeMirror-gutter-hovered',\n          mouseEvent.clientX < this.codeMirror().getGutterElement().getBoundingClientRect().right);\n    };\n    this._gutterMouseOut = (): void => {\n      this.element.classList.toggle('CodeMirror-gutter-hovered', false);\n    };\n\n    this.codeMirror().addKeyMap(_BlockIndentController);\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._tokenHighlighter = new TokenHighlighter(this, (this.codeMirror() as any));\n\n    this._gutters = [lineNumbersGutterType];\n    this.codeMirror().setOption('gutters', this._gutters.slice());\n\n    this.codeMirror().setOption('electricChars', false);\n    this.codeMirror().setOption('smartIndent', false);\n\n    this._isHandlingMouseDownEvent = false;\n    function updateAnticipateJumpFlag(this: SourcesTextEditor, value: boolean): void {\n      this._isHandlingMouseDownEvent = value;\n    }\n\n    this.element.addEventListener('mousedown', updateAnticipateJumpFlag.bind(this, true), true);\n    this.element.addEventListener('mousedown', updateAnticipateJumpFlag.bind(this, false), false);\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorIndent')\n        .addChangeListener(this._onUpdateEditorIndentation, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorAutoDetectIndent')\n        .addChangeListener(this._onUpdateEditorIndentation, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('showWhitespacesInEditor')\n        .addChangeListener(this._updateWhitespace, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorCodeFolding')\n        .addChangeListener(this._updateCodeFolding, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('allowScrollPastEof')\n        .addChangeListener(this._updateScrollPastEof, this);\n    this._updateCodeFolding();\n\n    this._autocompleteConfig = {\n      isWordChar: TextUtils.TextUtils.Utils.isWordChar,\n      substituteRangeCallback: undefined,\n      tooltipCallback: undefined,\n      suggestionsCallback: undefined,\n      anchorBehavior: undefined,\n    };\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorAutocompletion')\n        .addChangeListener(this._updateAutocomplete, this);\n    this._updateAutocomplete();\n\n    this._onUpdateEditorIndentation();\n    this._setupWhitespaceHighlight();\n\n    this._infoBarDiv = null;\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  static getForCodeMirror(codeMirrorEditor: any): SourcesTextEditor {\n    return TextEditor.CodeMirrorTextEditor.CodeMirrorTextEditor.getForCodeMirror(codeMirrorEditor) as SourcesTextEditor;\n  }\n\n  attachInfobar(infobar: UI.Infobar.Infobar): void {\n    if (!this._infoBarDiv) {\n      this._infoBarDiv = document.createElement('div');\n      this._infoBarDiv.classList.add('flex-none');\n      this.element.insertBefore(this._infoBarDiv, this.element.firstChild);\n    }\n    this._infoBarDiv.appendChild(infobar.element);\n    infobar.setParentView(this);\n    this.doResize();\n  }\n\n  static _guessIndentationLevel(lines: string[]): string {\n    const tabRegex = /^\\t+/;\n    let tabLines = 0;\n    /**\n     * Maps the indentation level to its frequency in |lines|.\n     */\n    const indents = new Map<number, number>();\n    for (let lineNumber = 0; lineNumber < lines.length; ++lineNumber) {\n      const text = lines[lineNumber];\n      if (text.length === 0 || !TextUtils.TextUtils.Utils.isSpaceChar(text[0])) {\n        continue;\n      }\n      if (tabRegex.test(text)) {\n        ++tabLines;\n        continue;\n      }\n      let i = 0;\n      while (i < text.length && TextUtils.TextUtils.Utils.isSpaceChar(text[i])) {\n        ++i;\n      }\n      if (i % 2 !== 0) {\n        continue;\n      }\n      indents.set(i, 1 + (indents.get(i) || 0));\n    }\n    const linesCountPerIndentThreshold = 3 * lines.length / 100;\n    if (tabLines && tabLines > linesCountPerIndentThreshold) {\n      return '\\t';\n    }\n    let minimumIndent: number = Infinity;\n    for (const [indent, frequency] of indents) {\n      if (frequency < linesCountPerIndentThreshold) {\n        continue;\n      }\n      if (minimumIndent > indent) {\n        minimumIndent = indent;\n      }\n    }\n    if (minimumIndent === Infinity) {\n      return Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n    }\n    return ' '.repeat(minimumIndent);\n  }\n\n  _isSearchActive(): boolean {\n    return Boolean(this._tokenHighlighter.highlightedRegex());\n  }\n\n  scrollToLine(lineNumber: number): void {\n    super.scrollToLine(lineNumber);\n    this._scroll();\n  }\n\n  highlightSearchResults(regex: RegExp, range: TextUtils.TextRange.TextRange|null): void {\n    function innerHighlightRegex(this: SourcesTextEditor): void {\n      if (range) {\n        this.scrollLineIntoView(range.startLine);\n        if (range.endColumn > TextEditor.CodeMirrorTextEditor.CodeMirrorTextEditor.maxHighlightLength) {\n          this.setSelection(range);\n        } else {\n          this.setSelection(TextUtils.TextRange.TextRange.createFromLocation(range.startLine, range.startColumn));\n        }\n      }\n      this._tokenHighlighter.highlightSearchResults(regex, range);\n    }\n\n    if (!this._selectionBeforeSearch) {\n      this._selectionBeforeSearch = this.selection();\n    }\n\n    this.codeMirror().operation(innerHighlightRegex.bind(this));\n  }\n\n  cancelSearchResultsHighlight(): void {\n    this.codeMirror().operation(this._tokenHighlighter.highlightSelectedTokens.bind(this._tokenHighlighter));\n\n    if (this._selectionBeforeSearch) {\n      this._reportJump(this._selectionBeforeSearch, this.selection());\n      delete this._selectionBeforeSearch;\n    }\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.TextMarker\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  removeHighlight(highlightDescriptor: any): void {\n    highlightDescriptor.clear();\n  }\n\n  // https://crbug.com/1151919 * = CodeMirror.TextMarker<CodeMirror.MarkerRange>\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  highlightRange(range: TextUtils.TextRange.TextRange, cssClass: string): any {\n    cssClass = 'CodeMirror-persist-highlight ' + cssClass;\n    const pos = TextUtils.CodeMirrorUtils.toPos(range);\n    ++pos.end.ch;\n    return this.codeMirror().markText(\n        pos.start, pos.end, {className: cssClass, startStyle: cssClass + '-start', endStyle: cssClass + '-end'});\n  }\n\n  installGutter(type: string, leftToNumbers: boolean): void {\n    if (this._gutters.indexOf(type) !== -1) {\n      return;\n    }\n\n    if (leftToNumbers) {\n      this._gutters.unshift(type);\n    } else {\n      this._gutters.push(type);\n    }\n\n    this.codeMirror().setOption('gutters', this._gutters.slice());\n    this.refresh();\n  }\n\n  uninstallGutter(type: string): void {\n    const index = this._gutters.indexOf(type);\n    if (index === -1) {\n      return;\n    }\n    this.codeMirror().clearGutter(type);\n    this._gutters.splice(index, 1);\n    this.codeMirror().setOption('gutters', this._gutters.slice());\n    this.refresh();\n  }\n\n  setGutterDecoration(lineNumber: number, type: string, element: Element|null): void {\n    console.assert(this._gutters.indexOf(type) !== -1, 'Cannot decorate unexisting gutter.');\n    this.codeMirror().setGutterMarker(lineNumber, type, element);\n  }\n\n  setExecutionLocation(lineNumber: number, columnNumber: number): void {\n    this.clearPositionHighlight();\n\n    this._executionLine = this.codeMirror().getLineHandle(lineNumber);\n    if (!this._executionLine) {\n      return;\n    }\n\n    this.showExecutionLineBackground();\n    this.codeMirror().addLineClass(this._executionLine, 'wrap', 'cm-execution-line-outline');\n    let token = this.tokenAtTextPosition(lineNumber, columnNumber);\n\n    if (token && !token.type && token.startColumn + 1 === token.endColumn) {\n      const tokenContent = this.codeMirror().getLine(lineNumber)[token.startColumn];\n      if (tokenContent === '.' || tokenContent === '(') {\n        token = this.tokenAtTextPosition(lineNumber, token.endColumn + 1);\n      }\n    }\n\n    let endColumn;\n    if (token && token.type) {\n      endColumn = token.endColumn;\n    } else {\n      endColumn = this.codeMirror().getLine(lineNumber).length;\n    }\n\n    this._executionLineTailMarker = this.codeMirror().markText(\n        {line: lineNumber, ch: columnNumber}, {line: lineNumber, ch: endColumn}, {className: 'cm-execution-line-tail'});\n  }\n\n  showExecutionLineBackground(): void {\n    if (this._executionLine) {\n      this.codeMirror().addLineClass(this._executionLine, 'wrap', 'cm-execution-line');\n    }\n  }\n\n  hideExecutionLineBackground(): void {\n    if (this._executionLine) {\n      this.codeMirror().removeLineClass(this._executionLine, 'wrap', 'cm-execution-line');\n    }\n  }\n\n  clearExecutionLine(): void {\n    this.clearPositionHighlight();\n\n    if (this._executionLine) {\n      this.hideExecutionLineBackground();\n      this.codeMirror().removeLineClass(this._executionLine, 'wrap', 'cm-execution-line-outline');\n    }\n    delete this._executionLine;\n\n    if (this._executionLineTailMarker) {\n      this._executionLineTailMarker.clear();\n    }\n    delete this._executionLineTailMarker;\n  }\n\n  toggleLineClass(lineNumber: number, className: string, toggled: boolean): void {\n    if (this.hasLineClass(lineNumber, className) === toggled) {\n      return;\n    }\n\n    const lineHandle = this.codeMirror().getLineHandle(lineNumber);\n    if (!lineHandle) {\n      return;\n    }\n\n    if (toggled) {\n      this.codeMirror().addLineClass(lineHandle, 'gutter', className);\n      this.codeMirror().addLineClass(lineHandle, 'wrap', className);\n    } else {\n      this.codeMirror().removeLineClass(lineHandle, 'gutter', className);\n      this.codeMirror().removeLineClass(lineHandle, 'wrap', className);\n    }\n  }\n\n  hasLineClass(lineNumber: number, className: string): boolean {\n    const lineInfo = this.codeMirror().lineInfo(lineNumber);\n    if (!lineInfo) {\n      return false;\n    }\n    const wrapClass = lineInfo.wrapClass;\n    if (!wrapClass) {\n      return false;\n    }\n    const classNames = wrapClass.split(' ');\n    return classNames.indexOf(className) !== -1;\n  }\n\n  /**\n   * |instance| is actually a CodeMirror.Editor\n   */\n  _gutterClick(_instance: Object, lineNumber: number, gutterType: string, event: MouseEvent): void {\n    this.dispatchEventToListeners(Events.GutterClick, {gutterType, lineNumber, event});\n  }\n\n  _textAreaContextMenu(event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    event.consume(true);  // Consume event now to prevent document from handling the async menu\n\n    const textSelection = this.selection();\n    this._delegate.populateTextAreaContextMenu(contextMenu, textSelection.startLine, textSelection.startColumn)\n        .then(() => {\n          contextMenu.appendApplicableItems(this);\n          contextMenu.show();\n        });\n  }\n\n  /**\n   * |instance| is actually a CodeMirror.Editor\n   */\n  _gutterContextMenu(_instance: Object, lineNumber: number, _gutterType: string, event: MouseEvent): void {\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    event.consume(true);  // Consume event now to prevent document from handling the async menu\n\n    this._delegate.populateLineGutterContextMenu(contextMenu, lineNumber).then(() => {\n      contextMenu.appendApplicableItems(this);\n      contextMenu.show();\n    });\n  }\n\n  editRange(range: TextUtils.TextRange.TextRange, text: string, origin?: string): TextUtils.TextRange.TextRange {\n    const newRange = super.editRange(range, text, origin);\n    if (Common.Settings.Settings.instance().moduleSetting('textEditorAutoDetectIndent').get()) {\n      this._onUpdateEditorIndentation();\n    }\n\n    return newRange;\n  }\n\n  _onUpdateEditorIndentation(): void {\n    this._setEditorIndentation(\n        TextUtils.CodeMirrorUtils.pullLines(this.codeMirror(), LinesToScanForIndentationGuessing));\n  }\n\n  _setEditorIndentation(lines: string[]): void {\n    const extraKeys = {};\n    let indent = Common.Settings.Settings.instance().moduleSetting('textEditorIndent').get();\n    if (Common.Settings.Settings.instance().moduleSetting('textEditorAutoDetectIndent').get()) {\n      indent = SourcesTextEditor._guessIndentationLevel(lines);\n    }\n\n    if (indent === '\\t') {\n      this.codeMirror().setOption('indentWithTabs', true);\n      this.codeMirror().setOption('indentUnit', 4);\n    } else {\n      this.codeMirror().setOption('indentWithTabs', false);\n      this.codeMirror().setOption('indentUnit', indent.length);\n      /**\n       * TODO: |codeMirror| is really a CodeMirror.Editor\n       */\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function tab(codeMirror: any): any {\n        if (codeMirror.somethingSelected()) {\n          return CodeMirror.Pass;\n        }\n        const pos = codeMirror.getCursor('head');\n        codeMirror.replaceRange(indent.substring(pos.ch % indent.length), codeMirror.getCursor());\n      }\n\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // @ts-expect-error\n      extraKeys.Tab = tab;\n    }\n\n    this.codeMirror().setOption('extraKeys', extraKeys);\n    this._indentationLevel = indent;\n  }\n\n  indent(): string {\n    return this._indentationLevel;\n  }\n\n  _onAutoAppendedSpaces(): void {\n    this._autoAppendedSpaces = this._autoAppendedSpaces || [];\n\n    for (let i = 0; i < this._autoAppendedSpaces.length; ++i) {\n      const position = this._autoAppendedSpaces[i].resolve();\n      if (!position) {\n        continue;\n      }\n      const line = this.line(position.lineNumber);\n      if (line.length === position.columnNumber && TextUtils.TextUtils.Utils.lineIndent(line).length === line.length) {\n        this.codeMirror().replaceRange(\n            '', new CodeMirror.Pos(position.lineNumber, 0),\n            new CodeMirror.Pos(position.lineNumber, position.columnNumber));\n      }\n    }\n\n    this._autoAppendedSpaces = [];\n    const selections = this.selections();\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      this._autoAppendedSpaces.push(this.textEditorPositionHandle(selection.startLine, selection.startColumn));\n    }\n  }\n\n  _cursorActivity(): void {\n    if (!this._isSearchActive()) {\n      this.codeMirror().operation(this._tokenHighlighter.highlightSelectedTokens.bind(this._tokenHighlighter));\n    }\n\n    const start = this.codeMirror().getCursor('anchor');\n    const end = this.codeMirror().getCursor('head');\n    this.dispatchEventToListeners(Events.SelectionChanged, TextUtils.CodeMirrorUtils.toRange(start, end));\n  }\n\n  _reportJump(from: TextUtils.TextRange.TextRange|null, to: TextUtils.TextRange.TextRange|null): void {\n    if (from && to && from.equal(to)) {\n      return;\n    }\n    this.dispatchEventToListeners(Events.JumpHappened, {from: from, to: to});\n  }\n\n  _scroll(): void {\n    const topmostLineNumber = this.codeMirror().lineAtHeight(this.codeMirror().getScrollInfo().top, 'local');\n    this.dispatchEventToListeners(Events.ScrollChanged, topmostLineNumber);\n  }\n\n  _focus(): void {\n    this.dispatchEventToListeners(Events.EditorFocused);\n  }\n\n  _blur(): void {\n    this.dispatchEventToListeners(Events.EditorBlurred);\n  }\n\n  // https://crbug.com/1151919 * = {ranges: !Array.<{head: !CodeMirror.Pos, anchor: !CodeMirror.Pos}>}\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _fireBeforeSelectionChanged(_codeMirror: typeof CodeMirror, selection: any): void {\n    if (!this._isHandlingMouseDownEvent) {\n      return;\n    }\n    if (!selection.ranges.length) {\n      return;\n    }\n\n    const primarySelection = selection.ranges[0];\n    this._reportJump(\n        this.selection(), TextUtils.CodeMirrorUtils.toRange(primarySelection.anchor, primarySelection.head));\n  }\n\n  dispose(): void {\n    super.dispose();\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorIndent')\n        .removeChangeListener(this._onUpdateEditorIndentation, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorAutoDetectIndent')\n        .removeChangeListener(this._onUpdateEditorIndentation, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('showWhitespacesInEditor')\n        .removeChangeListener(this._updateWhitespace, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('textEditorCodeFolding')\n        .removeChangeListener(this._updateCodeFolding, this);\n    Common.Settings.Settings.instance()\n        .moduleSetting('allowScrollPastEof')\n        .removeChangeListener(this._updateScrollPastEof, this);\n  }\n\n  setText(text: string): void {\n    this._setEditorIndentation(text.split('\\n').slice(0, LinesToScanForIndentationGuessing));\n    super.setText(text);\n  }\n\n  _updateWhitespace(): void {\n    this.setMimeType(this.mimeType());\n  }\n\n  _updateCodeFolding(): void {\n    if (Common.Settings.Settings.instance().moduleSetting('textEditorCodeFolding').get()) {\n      this.installGutter('CodeMirror-foldgutter', false);\n      this.element.addEventListener('mousemove', this._gutterMouseMove);\n      this.element.addEventListener('mouseout', this._gutterMouseOut);\n      this.codeMirror().setOption('foldGutter', true);\n      this.codeMirror().setOption('foldOptions', {minFoldSize: 1});\n    } else {\n      this.codeMirror().execCommand('unfoldAll');\n      this.element.removeEventListener('mousemove', this._gutterMouseMove);\n      this.element.removeEventListener('mouseout', this._gutterMouseOut);\n      this.uninstallGutter('CodeMirror-foldgutter');\n      this.codeMirror().setOption('foldGutter', false);\n    }\n  }\n\n  _updateScrollPastEof(): void {\n    this.toggleScrollPastEof(Common.Settings.Settings.instance().moduleSetting('allowScrollPastEof').get());\n  }\n\n  rewriteMimeType(mimeType: string): string {\n    this._setupWhitespaceHighlight();\n    const whitespaceMode = Common.Settings.Settings.instance().moduleSetting('showWhitespacesInEditor').get();\n    this.element.classList.toggle('show-whitespaces', whitespaceMode === 'all');\n\n    if (whitespaceMode === 'all') {\n      return this._allWhitespaceOverlayMode(mimeType);\n    }\n    if (whitespaceMode === 'trailing') {\n      return this._trailingWhitespaceOverlayMode(mimeType);\n    }\n\n    return mimeType;\n  }\n\n  _allWhitespaceOverlayMode(mimeType: string): string {\n    let modeName = CodeMirror.mimeModes[mimeType] ?\n        (CodeMirror.mimeModes[mimeType].name || CodeMirror.mimeModes[mimeType]) :\n        CodeMirror.mimeModes['text/plain'];\n    modeName += '+all-whitespaces';\n    if (CodeMirror.modes[modeName]) {\n      return modeName;\n    }\n\n    /**\n     * TODO: |config| is really a CodeMirror.EditorConfiguration\n     */\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function modeConstructor(config: Object, _parserConfig: any): CodeMirror.Mode<any> {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function nextToken(stream: any): string|null {\n        if (stream.peek() === ' ') {\n          let spaces = 0;\n          while (spaces < MaximumNumberOfWhitespacesPerSingleSpan && stream.peek() === ' ') {\n            ++spaces;\n            stream.next();\n          }\n          return 'whitespace whitespace-' + spaces;\n        }\n        while (!stream.eol() && stream.peek() !== ' ') {\n          stream.next();\n        }\n        return null;\n      }\n      const whitespaceMode = {token: nextToken};\n      return CodeMirror.overlayMode(CodeMirror.getMode(config, mimeType), whitespaceMode, false);\n    }\n    CodeMirror.defineMode(modeName, modeConstructor);\n    return modeName;\n  }\n\n  _trailingWhitespaceOverlayMode(mimeType: string): string {\n    let modeName = CodeMirror.mimeModes[mimeType] ?\n        (CodeMirror.mimeModes[mimeType].name || CodeMirror.mimeModes[mimeType]) :\n        CodeMirror.mimeModes['text/plain'];\n    modeName += '+trailing-whitespaces';\n    if (CodeMirror.modes[modeName]) {\n      return modeName;\n    }\n\n    /**\n     * TODO: |config| is really a CodeMirror.EditorConfiguration\n     */\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    function modeConstructor(config: Object, _parserConfig: any): CodeMirror.Mode<any> {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      function nextToken(stream: any): 'trailing-whitespace'|null {\n        if (stream.match(/^\\s+$/, true)) {\n          return true ? 'trailing-whitespace' : null;\n        }\n        do {\n          stream.next();\n        } while (!stream.eol() && stream.peek() !== ' ');\n        return null;\n      }\n      const whitespaceMode = {token: nextToken};\n      return CodeMirror.overlayMode(CodeMirror.getMode(config, mimeType), whitespaceMode, false);\n    }\n    CodeMirror.defineMode(modeName, modeConstructor);\n    return modeName;\n  }\n\n  _setupWhitespaceHighlight(): void {\n    const doc = (this.element.ownerDocument as Document);\n    if (whitespaceStyleInjectedSet.has(doc) ||\n        !Common.Settings.Settings.instance().moduleSetting('showWhitespacesInEditor').get()) {\n      return;\n    }\n    whitespaceStyleInjectedSet.add(doc);\n    const classBase = '.show-whitespaces .CodeMirror .cm-whitespace-';\n    const spaceChar = '·';\n    let spaceChars = '';\n    let rules = '';\n    for (let i = 1; i <= MaximumNumberOfWhitespacesPerSingleSpan; ++i) {\n      spaceChars += spaceChar;\n      const rule = classBase + i + '::before { content: \\'' + spaceChars + '\\';}\\n';\n      rules += rule;\n    }\n    const style = doc.createElement('style');\n    style.textContent = rules;\n    doc.head.appendChild(style);\n  }\n\n  configureAutocomplete(config: UI.TextEditor.AutocompleteConfig|null): void {\n    this._autocompleteConfig = config;\n    this._updateAutocomplete();\n  }\n\n  _updateAutocomplete(): void {\n    super.configureAutocomplete(\n        Common.Settings.Settings.instance().moduleSetting('textEditorAutocompletion').get() ? this._autocompleteConfig :\n                                                                                              null);\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  GutterClick = 'GutterClick',\n  SelectionChanged = 'SelectionChanged',\n  ScrollChanged = 'ScrollChanged',\n  EditorFocused = 'EditorFocused',\n  EditorBlurred = 'EditorBlurred',\n  JumpHappened = 'JumpHappened',\n}\n\nexport class SourcesTextEditorDelegate {\n  populateLineGutterContextMenu(_contextMenu: UI.ContextMenu.ContextMenu, _lineNumber: number): Promise<void> {\n    throw new Error('Not implemented');\n  }\n  populateTextAreaContextMenu(_contextMenu: UI.ContextMenu.ContextMenu, _lineNumber: number, _columnNumber: number):\n      Promise<void> {\n    throw new Error('Not implemented');\n  }\n}\n\n// https://crbug.com/1151919 * = !CodeMirror.Editor\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nCodeMirror.commands.smartNewlineAndIndent = function(codeMirror: any): void {\n  codeMirror.operation(innerSmartNewlineAndIndent.bind(null, codeMirror));\n  // https://crbug.com/1151919 * = !CodeMirror.Editor\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  function innerSmartNewlineAndIndent(codeMirror: any): void {\n    const selections = codeMirror.listSelections();\n    const replacements = [];\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      const cur = CodeMirror.cmpPos(selection.head, selection.anchor) < 0 ? selection.head : selection.anchor;\n      const line = codeMirror.getLine(cur.line);\n      const indent = TextUtils.TextUtils.Utils.lineIndent(line);\n      replacements.push('\\n' + indent.substring(0, Math.min(cur.ch, indent.length)));\n    }\n    // @ts-ignore replaceSelection has not been added to the types yet.\n    codeMirror.replaceSelections(replacements);\n    SourcesTextEditor.getForCodeMirror(codeMirror)._onAutoAppendedSpaces();\n  }\n};\n\n// https://crbug.com/1151919 * = !CodeMirror.Editor\n// @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nCodeMirror.commands.sourcesDismiss = function(codeMirror: any): Object|undefined {\n  if (codeMirror.listSelections().length === 1 && SourcesTextEditor.getForCodeMirror(codeMirror)._isSearchActive()) {\n    return CodeMirror.Pass;\n  }\n  // @ts-ignore https://crbug.com/1151919 CodeMirror types are incorrect\n  return CodeMirror.commands.dismiss(codeMirror);\n};\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _BlockIndentController = {\n  name: 'blockIndentKeymap',\n\n  // https://crbug.com/1151919 * = !CodeMirror.Editor\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  Enter: function(codeMirror: any): any {\n    let selections = codeMirror.listSelections();\n    const replacements = [];\n    let allSelectionsAreCollapsedBlocks = false;\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      const start = CodeMirror.cmpPos(selection.head, selection.anchor) < 0 ? selection.head : selection.anchor;\n      const line = codeMirror.getLine(start.line);\n      const indent = TextUtils.TextUtils.Utils.lineIndent(line);\n      let indentToInsert = '\\n' + indent + SourcesTextEditor.getForCodeMirror(codeMirror).indent();\n      let isCollapsedBlock = false;\n      if (selection.head.ch === 0) {\n        return CodeMirror.Pass;\n      }\n      if (line.substr(selection.head.ch - 1, 2) === '{}') {\n        indentToInsert += '\\n' + indent;\n        isCollapsedBlock = true;\n      } else if (line.substr(selection.head.ch - 1, 1) !== '{') {\n        return CodeMirror.Pass;\n      }\n      if (i > 0 && allSelectionsAreCollapsedBlocks !== isCollapsedBlock) {\n        return CodeMirror.Pass;\n      }\n      replacements.push(indentToInsert);\n      allSelectionsAreCollapsedBlocks = isCollapsedBlock;\n    }\n    codeMirror.replaceSelections(replacements);\n    if (!allSelectionsAreCollapsedBlocks) {\n      SourcesTextEditor.getForCodeMirror(codeMirror)._onAutoAppendedSpaces();\n      return;\n    }\n    selections = codeMirror.listSelections();\n    const updatedSelections = [];\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      const line = codeMirror.getLine(selection.head.line - 1);\n      const position = new CodeMirror.Pos(selection.head.line - 1, line.length);\n      updatedSelections.push({head: position, anchor: position});\n    }\n    codeMirror.setSelections(updatedSelections);\n    SourcesTextEditor.getForCodeMirror(codeMirror)._onAutoAppendedSpaces();\n  },\n\n  // https://crbug.com/1151919 * = !CodeMirror.Editor\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  '\\'}\\'': function(codeMirror: any): any {\n    if (codeMirror.somethingSelected()) {\n      return CodeMirror.Pass;\n    }\n    let selections = codeMirror.listSelections();\n    let replacements: string[] = [];\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      const line = codeMirror.getLine(selection.head.line);\n      if (line !== TextUtils.TextUtils.Utils.lineIndent(line)) {\n        return CodeMirror.Pass;\n      }\n      replacements.push('}');\n    }\n    codeMirror.replaceSelections(replacements);\n    selections = codeMirror.listSelections();\n    replacements = [];\n    const updatedSelections = [];\n    for (let i = 0; i < selections.length; ++i) {\n      const selection = selections[i];\n      const matchingBracket = codeMirror.findMatchingBracket(selection.head);\n      if (!matchingBracket || !matchingBracket.match) {\n        return;\n      }\n      updatedSelections.push({head: selection.head, anchor: new CodeMirror.Pos(selection.head.line, 0)});\n      const line = codeMirror.getLine(matchingBracket.to.line);\n      const indent = TextUtils.TextUtils.Utils.lineIndent(line);\n      replacements.push(indent + '}');\n    }\n    codeMirror.setSelections(updatedSelections);\n    codeMirror.replaceSelections(replacements);\n  },\n};\n\nexport class TokenHighlighter {\n  _textEditor: SourcesTextEditor;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _codeMirror: any;\n  _highlightDescriptor!: {\n    overlay: {\n      // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      token: (arg0: any) => string | null,\n    },\n    // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    selectionStart: any,\n  }|undefined;\n  _highlightRegex?: RegExp;\n  _highlightRange?: TextUtils.TextRange.TextRange|null;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _searchResultMarker?: any;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _searchMatchLength?: any;\n  // https://crbug.com/1151919 * = !CodeMirror.Editor\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(textEditor: SourcesTextEditor, codeMirror: any) {\n    this._textEditor = textEditor;\n    this._codeMirror = codeMirror;\n  }\n\n  highlightSearchResults(regex: RegExp, range: TextUtils.TextRange.TextRange|null): void {\n    const oldRegex = this._highlightRegex;\n    this._highlightRegex = regex;\n    this._highlightRange = range;\n    if (this._searchResultMarker) {\n      this._searchResultMarker.clear();\n      delete this._searchResultMarker;\n    }\n    if (this._highlightDescriptor && this._highlightDescriptor.selectionStart) {\n      this._codeMirror.removeLineClass(this._highlightDescriptor.selectionStart.line, 'wrap', 'cm-line-with-selection');\n    }\n    const selectionStart = this._highlightRange ?\n        new CodeMirror.Pos(this._highlightRange.startLine, this._highlightRange.startColumn) :\n        null;\n    if (selectionStart) {\n      this._codeMirror.addLineClass(selectionStart.line, 'wrap', 'cm-line-with-selection');\n    }\n    if (oldRegex && this._highlightRegex.toString() === oldRegex.toString()) {\n      // Do not re-add overlay mode if regex did not change for better performance.\n      if (this._highlightDescriptor) {\n        this._highlightDescriptor.selectionStart = selectionStart;\n      }\n    } else {\n      this._removeHighlight();\n      this._setHighlighter(this._searchHighlighter.bind(this, this._highlightRegex), selectionStart);\n    }\n    if (this._highlightRange) {\n      const pos = TextUtils.CodeMirrorUtils.toPos(this._highlightRange);\n      this._searchResultMarker = this._codeMirror.markText(pos.start, pos.end, {className: 'cm-column-with-selection'});\n    }\n  }\n\n  highlightedRegex(): RegExp|undefined {\n    return this._highlightRegex;\n  }\n\n  highlightSelectedTokens(): void {\n    delete this._highlightRegex;\n    delete this._highlightRange;\n    if (this._highlightDescriptor && this._highlightDescriptor.selectionStart) {\n      this._codeMirror.removeLineClass(this._highlightDescriptor.selectionStart.line, 'wrap', 'cm-line-with-selection');\n    }\n    this._removeHighlight();\n    const selectionStart = this._codeMirror.getCursor('start');\n    const selectionEnd = this._codeMirror.getCursor('end');\n    if (selectionStart.line !== selectionEnd.line) {\n      return;\n    }\n    if (selectionStart.ch === selectionEnd.ch) {\n      return;\n    }\n    const selections = this._codeMirror.getSelections();\n    if (selections.length > 1) {\n      return;\n    }\n    const selectedText = selections[0];\n    if (this._isWord(selectedText, selectionStart.line, selectionStart.ch, selectionEnd.ch)) {\n      if (selectionStart) {\n        this._codeMirror.addLineClass(selectionStart.line, 'wrap', 'cm-line-with-selection');\n      }\n      this._setHighlighter(this._tokenHighlighter.bind(this, selectedText, selectionStart), selectionStart);\n    }\n  }\n\n  _isWord(selectedText: string, lineNumber: number, startColumn: number, endColumn: number): boolean {\n    const line = this._codeMirror.getLine(lineNumber);\n    const leftBound = startColumn === 0 || !TextUtils.TextUtils.Utils.isWordChar(line.charAt(startColumn - 1));\n    const rightBound = endColumn === line.length || !TextUtils.TextUtils.Utils.isWordChar(line.charAt(endColumn));\n    return leftBound && rightBound && TextUtils.TextUtils.Utils.isWord(selectedText);\n  }\n\n  _removeHighlight(): void {\n    if (this._highlightDescriptor) {\n      this._codeMirror.removeOverlay(this._highlightDescriptor.overlay);\n      delete this._highlightDescriptor;\n    }\n  }\n\n  // https://crbug.com/1151919 * = !CodeMirror.StringStream\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _searchHighlighter(regex: RegExp, stream: any): string|null {\n    if (stream.column() === 0) {\n      delete this._searchMatchLength;\n    }\n    if (this._searchMatchLength) {\n      if (this._searchMatchLength > 2) {\n        for (let i = 0; i < this._searchMatchLength - 2; ++i) {\n          stream.next();\n        }\n        this._searchMatchLength = 1;\n        return 'search-highlight';\n      }\n      stream.next();\n      delete this._searchMatchLength;\n      return 'search-highlight search-highlight-end';\n    }\n    const match = stream.string.slice(stream.pos).match(regex);\n    if (match) {\n      if (match.index === 0) {\n        stream.next();\n        const matchLength = match[0].length;\n        if (matchLength === 1) {\n          return 'search-highlight search-highlight-full';\n        }\n        this._searchMatchLength = matchLength;\n        return 'search-highlight search-highlight-start';\n      }\n      stream.pos += (match.index as number);\n    } else {\n      stream.skipToEnd();\n    }\n    return null;\n  }\n\n  // https://crbug.com/1151919 * = !CodeMirror.Position selectionStart\n  // https://crbug.com/1151919 * = !CodeMirror.StringStream stream\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _tokenHighlighter(token: string, selectionStart: any, stream: any): string|null {\n    const tokenFirstChar = token.charAt(0);\n    if (stream.match(token) && (stream.eol() || !TextUtils.TextUtils.Utils.isWordChar((stream.peek() as string)))) {\n      return stream.column() === selectionStart.ch ? 'token-highlight column-with-selection' : 'token-highlight';\n    }\n    let eatenChar;\n    do {\n      eatenChar = stream.next();\n    } while (eatenChar && (TextUtils.TextUtils.Utils.isWordChar(eatenChar) || stream.peek() !== tokenFirstChar));\n    return null;\n  }\n\n  // https://crbug.com/1151919 * = !CodeMirror.StringStream\n  // https://crbug.com/1151919 * = ?CodeMirror.Position\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  _setHighlighter(highlighter: (arg0: any) => string | null, selectionStart: any): void {\n    const overlayMode = {token: highlighter};\n    this._codeMirror.addOverlay(overlayMode);\n    this._highlightDescriptor = {overlay: overlayMode, selectionStart: selectionStart};\n  }\n}\n\nconst LinesToScanForIndentationGuessing = 1000;\nconst MaximumNumberOfWhitespacesPerSingleSpan = 16;\nexport const lineNumbersGutterType = 'CodeMirror-linenumbers';\n\nexport interface GutterClickEventData {\n  gutterType: string;\n  lineNumber: number;\n  event: MouseEvent;\n}\n"]}