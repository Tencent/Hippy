{"version":3,"file":"DataGrid.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/data_grid/DataGrid.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2008 Apple Inc. All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *        notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *        notice, this list of conditions and the following disclaimer in the\n *        documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE INC. ``AS IS'' AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\n * PURPOSE ARE DISCLAIMED.         IN NO EVENT SHALL APPLE INC. OR\n * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable rulesdir/check_license_header */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as UI from '../../legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description Accessible text label for expandible nodes in datagrids\n  */\n  expanded: 'expanded',\n  /**\n  *@description accessible name for expandible nodes in datagrids\n  */\n  collapsed: 'collapsed',\n  /**\n  *@description Accessible text for datagrid\n  *@example {Coverage grid} PH1\n  *@example {expanded} PH2\n  */\n  sRowS: '{PH1} Row {PH2}',\n  /**\n  *@description Number of rows in a grid\n  *@example {1} PH1\n  */\n  rowsS: 'Rows: {PH1}',\n  /**\n  * @description Default Accessible Text for a Datagrid. This text is read to the user by a\n  * screenreader when they navigate to a table structure. The placeholders tell the user something\n  * brief about the table contents i.e. the topic and how much data is in it.\n  * @example {Network} PH1\n  * @example {Rows: 27} PH2\n  */\n  sSUseTheUpAndDownArrowKeysTo:\n      '{PH1} {PH2}, use the up and down arrow keys to navigate and interact with the rows of the table; Use browse mode to read cell by cell.',\n  /**\n  *@description A context menu item in the Data Grid of a data grid\n  */\n  sortByString: 'Sort By',\n  /**\n  *@description A context menu item in data grids to reset the columns to their default weight\n  */\n  resetColumns: 'Reset Columns',\n  /**\n  *@description A context menu item in data grids to list header options.\n  */\n  headerOptions: 'Header Options',\n  /**\n  *@description Text to refresh the page\n  */\n  refresh: 'Refresh',\n  /**\n  *@description A context menu item in the Data Grid of a data grid\n  */\n  addNew: 'Add new',\n  /**\n  *@description A context menu item in the Data Grid of a data grid\n  *@example {pattern} PH1\n  */\n  editS: 'Edit \"{PH1}\"',\n  /**\n  *@description Text to delete something\n  */\n  delete: 'Delete',\n  /**\n  *@description Depth of a node in the datagrid\n  *@example {1} PH1\n  */\n  levelS: 'level {PH1}',\n  /**\n  *@description Text exposed to screen readers on checked items.\n  */\n  checked: 'checked',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/data_grid/DataGrid.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nconst elementToLongTextMap = new WeakMap<Element, string>();\n\nconst nodeToColumnIdMap = new WeakMap<Node, string>();\n\nconst elementToSortIconMap = new WeakMap<Element, UI.Icon.Icon>();\n\nconst elementToPreferedWidthMap = new WeakMap<Element, number>();\n\nconst elementToPositionMap = new WeakMap<Element, number>();\n\nconst elementToIndexMap = new WeakMap<Element, number>();\n\nexport class DataGridImpl<T> extends Common.ObjectWrapper.ObjectWrapper {\n  element: HTMLDivElement;\n  _displayName: string;\n  _editCallback: ((arg0: any, arg1: string, arg2: any, arg3: any) => any)|undefined;\n  _deleteCallback: ((arg0: any) => any)|undefined;\n  _refreshCallback: (() => any)|undefined;\n  _headerTable: Element;\n  _headerTableHeaders: {\n    [x: string]: Element,\n  };\n  _scrollContainer: Element;\n  _dataTable: Element;\n  _inline: boolean;\n  _columnsArray: ColumnDescriptor[];\n  _columns: {\n    [x: string]: ColumnDescriptor,\n  };\n  visibleColumnsArray: ColumnDescriptor[];\n  _cellClass: string|null;\n  _headerTableColumnGroup: Element;\n  _headerTableBody: HTMLTableSectionElement;\n  _headerRow: Element;\n  _dataTableColumnGroup: Element;\n  dataTableBody: Element;\n  _topFillerRow: HTMLElement;\n  _bottomFillerRow: HTMLElement;\n  _editing: boolean;\n  selectedNode: DataGridNode<T>|null;\n  expandNodesWhenArrowing: boolean;\n  indentWidth: number;\n  _resizers: HTMLElement[];\n  _columnWidthsInitialized: boolean;\n  _cornerWidth: number;\n  _resizeMethod: ResizeMethod;\n  _headerContextMenuCallback: ((arg0: UI.ContextMenu.SubMenu) => void)|null;\n  _rowContextMenuCallback: ((arg0: UI.ContextMenu.ContextMenu, arg1: DataGridNode<T>) => void)|null;\n  elementToDataGridNode: WeakMap<Node, DataGridNode<T>>;\n  disclosureColumnId?: string;\n  _sortColumnCell?: Element;\n  _rootNode?: DataGridNode<T>;\n  _editingNode?: DataGridNode<T>|null;\n  _columnWeightsSetting?: Common.Settings.Setting<any>;\n  creationNode?: CreationDataGridNode<any>;\n  _currentResizer?: EventTarget|null;\n  _dataGridWidget?: any;\n\n  constructor(dataGridParameters: Parameters) {\n    super();\n    const {displayName, columns: columnsArray, editCallback, deleteCallback, refreshCallback} = dataGridParameters;\n    this.element = document.createElement('div');\n    this.element.classList.add('data-grid');\n    UI.Utils.appendStyle(this.element, 'ui/legacy/components/data_grid/dataGrid.css', {enableLegacyPatching: false});\n    this.element.tabIndex = 0;\n    this.element.addEventListener('keydown', this._keyDown.bind(this), false);\n    this.element.addEventListener('contextmenu', this._contextMenu.bind(this), true);\n    this.element.addEventListener('focusin', event => {\n      this.updateGridAccessibleNameOnFocus();\n      event.consume(true);\n    });\n    this.element.addEventListener('focusout', event => {\n      this.updateGridAccessibleName(/* text */ '');\n      event.consume(true);\n    });\n\n    UI.ARIAUtils.markAsApplication(this.element);\n    this._displayName = displayName;\n\n    this._editCallback = editCallback;\n    this._deleteCallback = deleteCallback;\n    this._refreshCallback = refreshCallback;\n\n    const headerContainer = this.element.createChild('div', 'header-container');\n    this._headerTable = headerContainer.createChild('table', 'header');\n    // Hide the header table from screen readers since titles are also added to data table.\n    UI.ARIAUtils.markAsHidden(this._headerTable);\n    this._headerTableHeaders = {};\n    this._scrollContainer = this.element.createChild('div', 'data-container');\n    this._dataTable = this._scrollContainer.createChild('table', 'data');\n\n    // FIXME: Add a createCallback which is different from editCallback and has different\n    // behavior when creating a new node.\n    if (editCallback) {\n      this._dataTable.addEventListener('dblclick', this._ondblclick.bind(this), false);\n    }\n    this._dataTable.addEventListener('mousedown', this._mouseDownInDataTable.bind(this));\n    this._dataTable.addEventListener('click', this._clickInDataTable.bind(this), true);\n\n    this._inline = false;\n\n    this._columnsArray = [];\n    this._columns = {};\n    this.visibleColumnsArray = columnsArray;\n\n    columnsArray.forEach(column => this._innerAddColumn(column));\n\n    this._cellClass = null;\n\n    this._headerTableColumnGroup = this._headerTable.createChild('colgroup');\n    this._headerTableBody = (this._headerTable.createChild('tbody') as HTMLTableSectionElement);\n    this._headerRow = this._headerTableBody.createChild('tr');\n\n    this._dataTableColumnGroup = this._dataTable.createChild('colgroup');\n    this.dataTableBody = this._dataTable.createChild('tbody');\n    this._topFillerRow = (this.dataTableBody.createChild('tr', 'data-grid-filler-row revealed') as HTMLElement);\n    this._bottomFillerRow = (this.dataTableBody.createChild('tr', 'data-grid-filler-row revealed') as HTMLElement);\n\n    this.setVerticalPadding(0, 0);\n    this._refreshHeader();\n\n    this._editing = false;\n    this.selectedNode = null;\n    this.expandNodesWhenArrowing = false;\n    this.setRootNode((new DataGridNode() as DataGridNode<T>));\n\n    this.setHasSelection(false);\n\n    this.indentWidth = 15;\n    this._resizers = [];\n    this._columnWidthsInitialized = false;\n    this._cornerWidth = CornerWidth;\n    this._resizeMethod = ResizeMethod.Nearest;\n\n    this._headerContextMenuCallback = null;\n    this._rowContextMenuCallback = null;\n\n    this.elementToDataGridNode = new WeakMap();\n  }\n\n  _firstSelectableNode(): DataGridNode<T>|null|undefined {\n    let firstSelectableNode: (DataGridNode<T>|undefined) = this._rootNode;\n    while (firstSelectableNode && !firstSelectableNode.selectable) {\n      firstSelectableNode = firstSelectableNode.traverseNextNode(true) || undefined;\n    }\n    return firstSelectableNode;\n  }\n\n  _lastSelectableNode(): DataGridNode<T>|undefined {\n    let lastSelectableNode: DataGridNode<T>|(DataGridNode<T>| undefined) = this._rootNode;\n    let iterator: (DataGridNode<T>|undefined) = this._rootNode;\n    while (iterator) {\n      if (iterator.selectable) {\n        lastSelectableNode = iterator;\n      }\n      iterator = iterator.traverseNextNode(true) || undefined;\n    }\n    return lastSelectableNode;\n  }\n\n  setElementContent(element: Element, value: any): void {\n    const columnId = this.columnIdFromNode(element);\n    if (!columnId) {\n      return;\n    }\n    const column = this._columns[columnId];\n    if (column.dataType === DataType.Boolean) {\n      DataGridImpl.setElementBoolean(element, (Boolean(value) as boolean));\n    } else if (value !== null) {\n      DataGridImpl.setElementText(element, (value as string), Boolean(column.longText));\n    }\n  }\n\n  static setElementText(element: Element, newText: string, longText: boolean): void {\n    if (longText && newText.length > 1000) {\n      element.textContent = Platform.StringUtilities.trimEndWithMaxLength(newText, 1000);\n      UI.Tooltip.Tooltip.install(element, newText);\n      elementToLongTextMap.set(element, newText);\n    } else {\n      element.textContent = newText;\n      UI.Tooltip.Tooltip.install(element, '');\n      elementToLongTextMap.delete(element);\n    }\n  }\n\n  static setElementBoolean(element: Element, value: boolean): void {\n    element.textContent = value ? '\\u2713' : '';\n    UI.Tooltip.Tooltip.install(element, '');\n  }\n\n  setStriped(isStriped: boolean): void {\n    this.element.classList.toggle('striped-data-grid', isStriped);\n  }\n\n  setFocusable(focusable: boolean): void {\n    this.element.tabIndex = focusable ? 0 : -1;\n    if (focusable === false) {\n      UI.ARIAUtils.removeRole(this.element);\n    }\n  }\n\n  setHasSelection(hasSelected: boolean): void {\n    // 'no-selection' class causes datagrid to have a focus-indicator border\n    this.element.classList.toggle('no-selection', !hasSelected);\n  }\n\n  updateGridAccessibleName(text?: string): void {\n    // Update the label with the provided text or the current selected node\n    const accessibleText =\n        (this.selectedNode && this.selectedNode.existingElement()) ? this.selectedNode.nodeAccessibleText : '';\n    if (this.element === this.element.ownerDocument.deepActiveElement()) {\n      // Only alert if the datagrid has focus\n      UI.ARIAUtils.alert(text ? text : accessibleText);\n    }\n  }\n\n  updateGridAccessibleNameOnFocus(): void {\n    // When a grid gets focus\n    // 1) If an item is selected - Read the content of the row\n    let accessibleText;\n    if (this.selectedNode && this.selectedNode.existingElement()) {\n      // TODO(l10n): Don't concatenate strings.\n      let expandText = '';\n      if (this.selectedNode.hasChildren()) {\n        expandText = this.selectedNode.expanded ? i18nString(UIStrings.expanded) : i18nString(UIStrings.collapsed);\n      }\n      const rowHeader = i18nString(UIStrings.sRowS, {PH1: this._displayName, PH2: expandText});\n      accessibleText = `${rowHeader} ${this.selectedNode.nodeAccessibleText}`;\n    } else {\n      // 2) If there is no selected item - Read the name of the grid and give instructions\n      if (!this._rootNode) {\n        return;\n      }\n      const children = this._enumerateChildren(this._rootNode, [], 1);\n      const items = i18nString(UIStrings.rowsS, {PH1: children.length});\n      accessibleText = i18nString(UIStrings.sSUseTheUpAndDownArrowKeysTo, {PH1: this._displayName, PH2: items});\n    }\n    UI.ARIAUtils.alert(accessibleText);\n  }\n\n  headerTableBody(): Element {\n    return this._headerTableBody;\n  }\n\n  _innerAddColumn(column: ColumnDescriptor, position?: number): void {\n    column.defaultWeight = column.weight;\n\n    const columnId = column.id;\n    if (columnId in this._columns) {\n      this._innerRemoveColumn(columnId);\n    }\n\n    if (position === undefined) {\n      position = this._columnsArray.length;\n    }\n\n    this._columnsArray.splice(position, 0, column);\n    this._columns[columnId] = column;\n    if (column.disclosure) {\n      this.disclosureColumnId = columnId;\n    }\n\n    const cell = document.createElement('th');\n    cell.className = columnId + '-column';\n    nodeToColumnIdMap.set(cell, columnId);\n    this._headerTableHeaders[columnId] = cell;\n\n    const div = document.createElement('div');\n    if (column.titleDOMFragment) {\n      div.appendChild(column.titleDOMFragment);\n    } else {\n      div.textContent = column.title || null;\n    }\n    cell.appendChild(div);\n\n    if (column.sort) {\n      cell.classList.add(column.sort);\n      this._sortColumnCell = cell;\n    }\n\n    if (column.sortable) {\n      cell.addEventListener('click', this._clickInHeaderCell.bind(this), false);\n      cell.classList.add('sortable');\n      const icon = UI.Icon.Icon.create('', 'sort-order-icon');\n      cell.createChild('div', 'sort-order-icon-container').appendChild(icon);\n      elementToSortIconMap.set(cell, icon);\n    }\n  }\n\n  addColumn(column: ColumnDescriptor, position?: number): void {\n    this._innerAddColumn(column, position);\n  }\n\n  _innerRemoveColumn(columnId: string): void {\n    const column = this._columns[columnId];\n    if (!column) {\n      return;\n    }\n    delete this._columns[columnId];\n    const index = this._columnsArray.findIndex(columnConfig => columnConfig.id === columnId);\n    this._columnsArray.splice(index, 1);\n    const cell = this._headerTableHeaders[columnId];\n    if (cell.parentElement) {\n      cell.parentElement.removeChild(cell);\n    }\n    delete this._headerTableHeaders[columnId];\n  }\n\n  removeColumn(columnId: string): void {\n    this._innerRemoveColumn(columnId);\n  }\n\n  setCellClass(cellClass: string): void {\n    this._cellClass = cellClass;\n  }\n\n  _refreshHeader(): void {\n    this._headerTableColumnGroup.removeChildren();\n    this._dataTableColumnGroup.removeChildren();\n    this._headerRow.removeChildren();\n    this._topFillerRow.removeChildren();\n    this._bottomFillerRow.removeChildren();\n\n    for (let i = 0; i < this.visibleColumnsArray.length; ++i) {\n      const column = this.visibleColumnsArray[i];\n      const columnId = column.id;\n      const headerColumn = (this._headerTableColumnGroup.createChild('col') as HTMLElement);\n      const dataColumn = (this._dataTableColumnGroup.createChild('col') as HTMLElement);\n      if (column.width) {\n        headerColumn.style.width = column.width;\n        dataColumn.style.width = column.width;\n      }\n      this._headerRow.appendChild(this._headerTableHeaders[columnId]);\n      const topFillerRowCell = (this._topFillerRow.createChild('th', 'top-filler-td') as HTMLTableCellElement);\n      topFillerRowCell.textContent = column.title || null;\n      topFillerRowCell.scope = 'col';\n      const bottomFillerRowChild = this._bottomFillerRow.createChild('td', 'bottom-filler-td');\n      nodeToColumnIdMap.set(bottomFillerRowChild, columnId);\n    }\n\n    this._headerRow.createChild('th', 'corner');\n    const topFillerRowCornerCell = (this._topFillerRow.createChild('th', 'corner') as HTMLTableCellElement);\n    topFillerRowCornerCell.classList.add('top-filler-td');\n    topFillerRowCornerCell.scope = 'col';\n    this._bottomFillerRow.createChild('td', 'corner').classList.add('bottom-filler-td');\n    this._headerTableColumnGroup.createChild('col', 'corner');\n    this._dataTableColumnGroup.createChild('col', 'corner');\n  }\n\n  protected setVerticalPadding(top: number, bottom: number): void {\n    const topPx = top + 'px';\n    const bottomPx = (top || bottom) ? bottom + 'px' : 'auto';\n    if (this._topFillerRow.style.height === topPx && this._bottomFillerRow.style.height === bottomPx) {\n      return;\n    }\n    this._topFillerRow.style.height = topPx;\n    this._bottomFillerRow.style.height = bottomPx;\n    this.dispatchEventToListeners(Events.PaddingChanged);\n  }\n\n  protected setRootNode(rootNode: DataGridNode<T>): void {\n    if (this._rootNode) {\n      this._rootNode.removeChildren();\n      this._rootNode.dataGrid = null;\n      this._rootNode._isRoot = false;\n    }\n    this._rootNode = rootNode;\n    rootNode._isRoot = true;\n    rootNode.setHasChildren(false);\n    rootNode._expanded = true;\n    rootNode._revealed = true;\n    rootNode.selectable = false;\n    rootNode.dataGrid = this;\n  }\n\n  rootNode(): DataGridNode<T> {\n    let rootNode: DataGridNode<T>|(DataGridNode<T>| undefined) = this._rootNode;\n    if (!rootNode) {\n      rootNode = new DataGridNode();\n      this.setRootNode(rootNode);\n    }\n    return rootNode;\n  }\n\n  _ondblclick(event: Event): void {\n    if (this._editing || this._editingNode) {\n      return;\n    }\n\n    const columnId = this.columnIdFromNode((event.target as Node));\n    if (!columnId || !this._columns[columnId].editable) {\n      return;\n    }\n    this._startEditing((event.target as Node));\n  }\n\n  _startEditingColumnOfDataGridNode(node: DataGridNode<T>, cellIndex: number): void {\n    this._editing = true;\n    this._editingNode = node;\n    this._editingNode.select();\n\n    const editingNodeElement = this._editingNode._element;\n    if (!editingNodeElement) {\n      return;\n    }\n    const element = editingNodeElement.children[cellIndex];\n    const elementLongText = elementToLongTextMap.get(element);\n    if (elementLongText) {\n      element.textContent = elementLongText;\n    }\n    const column = this.visibleColumnsArray[cellIndex];\n    if (column.dataType === DataType.Boolean) {\n      const checkboxLabel = UI.UIUtils.CheckboxLabel.create(undefined, (node.data[column.id] as boolean));\n      UI.ARIAUtils.setAccessibleName(checkboxLabel, column.title || '');\n\n      let hasChanged = false;\n      checkboxLabel.style.height = '100%';\n      const checkboxElement = checkboxLabel.checkboxElement;\n      checkboxElement.classList.add('inside-datagrid');\n      const initialValue = checkboxElement.checked;\n\n      checkboxElement.addEventListener('change', () => {\n        hasChanged = true;\n        this._editingCommitted(element, checkboxElement.checked, initialValue, undefined, 'forward');\n      }, false);\n\n      checkboxElement.addEventListener('keydown', event => {\n        if (event.key === 'Tab') {\n          event.consume(true);\n          hasChanged = true;\n          return this._editingCommitted(\n              element, checkboxElement.checked, initialValue, undefined, event.shiftKey ? 'backward' : 'forward');\n        }\n        if (event.key === ' ') {\n          event.consume(true);\n          checkboxElement.checked = !checkboxElement.checked;\n        } else if (event.key === 'Enter') {\n          event.consume(true);\n          hasChanged = true;\n          this._editingCommitted(element, checkboxElement.checked, initialValue, undefined, 'forward');\n        }\n      }, false);\n\n      checkboxElement.addEventListener('blur', () => {\n        if (hasChanged) {\n          return;\n        }\n        this._editingCommitted(element, checkboxElement.checked, checkboxElement.checked, undefined, 'next');\n      }, false);\n\n      element.innerHTML = '';\n      element.appendChild(checkboxLabel);\n      checkboxElement.focus();\n    } else {\n      UI.InplaceEditor.InplaceEditor.startEditing(element, this._startEditingConfig(element));\n      const componentSelection = element.getComponentSelection();\n      if (componentSelection) {\n        componentSelection.selectAllChildren(element);\n      }\n    }\n  }\n\n  startEditingNextEditableColumnOfDataGridNode(node: DataGridNode<T>, columnIdentifier: string): void {\n    const column = this._columns[columnIdentifier];\n    const cellIndex = this.visibleColumnsArray.indexOf(column);\n    const nextEditableColumn = this._nextEditableColumn(cellIndex);\n    if (nextEditableColumn !== -1) {\n      this._startEditingColumnOfDataGridNode(node, nextEditableColumn);\n    }\n  }\n\n  _startEditing(target: Node): void {\n    const element = (UI.UIUtils.enclosingNodeOrSelfWithNodeName(target, 'td') as Element | null);\n    if (!element) {\n      return;\n    }\n\n    this._editingNode = this.dataGridNodeFromNode(target);\n    if (!this._editingNode) {\n      if (!this.creationNode) {\n        return;\n      }\n      this._editingNode = this.creationNode;\n    }\n\n    // Force editing the 1st column when editing the creation node\n    if (this._editingNode instanceof CreationDataGridNode && this._editingNode.isCreationNode) {\n      this._startEditingColumnOfDataGridNode(this._editingNode, this._nextEditableColumn(-1));\n      return;\n    }\n\n    const columnId = this.columnIdFromNode(target);\n    if (!columnId) {\n      return;\n    }\n    const column = this._columns[columnId];\n    const cellIndex = this.visibleColumnsArray.indexOf(column);\n    if (this._editingNode) {\n      this._startEditingColumnOfDataGridNode(this._editingNode, cellIndex);\n    }\n  }\n\n  renderInline(): void {\n    this.element.classList.add('inline');\n    this._cornerWidth = 0;\n    this._inline = true;\n    this.updateWidths();\n  }\n\n  _startEditingConfig(_element: Element): UI.InplaceEditor.Config<any> {\n    return new UI.InplaceEditor.Config(this._editingCommitted.bind(this), this._editingCancelled.bind(this));\n  }\n\n  _editingCommitted(element: Element, newText: any, oldText: any, context: string|undefined, moveDirection: string):\n      void {\n    const columnId = this.columnIdFromNode(element);\n    if (!columnId) {\n      this._editingCancelled(element);\n      return;\n    }\n    const column = this._columns[columnId];\n    const cellIndex = this.visibleColumnsArray.indexOf(column);\n    if (!this._editingNode) {\n      return;\n    }\n    const valueBeforeEditing =\n        (this._editingNode.data[columnId] === null ? '' : this._editingNode.data[columnId] as string | boolean);\n    const currentEditingNode = this._editingNode;\n\n    function moveToNextIfNeeded(this: DataGridImpl<T>, wasChange: boolean): void {\n      if (!moveDirection) {\n        return;\n      }\n\n      if (moveDirection === 'forward') {\n        const firstEditableColumn = this._nextEditableColumn(-1);\n        const isCreationNode = currentEditingNode instanceof CreationDataGridNode && currentEditingNode.isCreationNode;\n        if (isCreationNode && cellIndex === firstEditableColumn && !wasChange) {\n          return;\n        }\n\n        const nextEditableColumn = this._nextEditableColumn(cellIndex);\n        if (nextEditableColumn !== -1) {\n          this._startEditingColumnOfDataGridNode(currentEditingNode, nextEditableColumn);\n          return;\n        }\n\n        const nextDataGridNode = currentEditingNode.traverseNextNode(true, null, true);\n        if (nextDataGridNode) {\n          this._startEditingColumnOfDataGridNode(nextDataGridNode, firstEditableColumn);\n          return;\n        }\n        if (isCreationNode && wasChange && this.creationNode) {\n          this.addCreationNode(false);\n          this._startEditingColumnOfDataGridNode(this.creationNode, firstEditableColumn);\n          return;\n        }\n        return;\n      }\n\n      if (moveDirection === 'backward') {\n        const prevEditableColumn = this._nextEditableColumn(cellIndex, true);\n        if (prevEditableColumn !== -1) {\n          this._startEditingColumnOfDataGridNode(currentEditingNode, prevEditableColumn);\n          return;\n        }\n\n        const lastEditableColumn = this._nextEditableColumn(this.visibleColumnsArray.length, true);\n        const nextDataGridNode = currentEditingNode.traversePreviousNode(true, true);\n        if (nextDataGridNode) {\n          this._startEditingColumnOfDataGridNode(nextDataGridNode, lastEditableColumn);\n        }\n        return;\n      }\n    }\n\n    // Show trimmed text after editing.\n    this.setElementContent(element, newText);\n\n    if (valueBeforeEditing === newText) {\n      this._editingCancelled(element);\n      moveToNextIfNeeded.call(this, false);\n      return;\n    }\n\n    // Update the text in the datagrid that we typed\n    this._editingNode.data[columnId] = newText;\n    if (!this._editCallback) {\n      return;\n    }\n    // Make the callback - expects an editing node (table row), the column number that is being edited,\n    // the text that used to be there, and the new text.\n    this._editCallback(this._editingNode, columnId, valueBeforeEditing, newText);\n\n    if (this._editingNode instanceof CreationDataGridNode && this._editingNode.isCreationNode) {\n      this.addCreationNode(false);\n    }\n\n    this._editingCancelled(element);\n    moveToNextIfNeeded.call(this, true);\n  }\n\n  _editingCancelled(_element: Element): void {\n    this._editing = false;\n    this._editingNode = null;\n  }\n\n  _nextEditableColumn(cellIndex: number, moveBackward?: boolean): number {\n    const increment = moveBackward ? -1 : 1;\n    const columns = this.visibleColumnsArray;\n    for (let i = cellIndex + increment; (i >= 0) && (i < columns.length); i += increment) {\n      if (columns[i].editable) {\n        return i;\n      }\n    }\n    return -1;\n  }\n\n  sortColumnId(): string|null {\n    if (!this._sortColumnCell) {\n      return null;\n    }\n    return nodeToColumnIdMap.get(this._sortColumnCell) || null;\n  }\n\n  sortOrder(): string|null {\n    if (!this._sortColumnCell || this._sortColumnCell.classList.contains(Order.Ascending)) {\n      return Order.Ascending;\n    }\n    if (this._sortColumnCell.classList.contains(Order.Descending)) {\n      return Order.Descending;\n    }\n    return null;\n  }\n\n  isSortOrderAscending(): boolean {\n    return !this._sortColumnCell || this._sortColumnCell.classList.contains(Order.Ascending);\n  }\n\n  _autoSizeWidths(widths: number[], minPercent: number, maxPercent?: number): number[] {\n    if (minPercent) {\n      minPercent = Math.min(minPercent, Math.floor(100 / widths.length));\n    }\n    let totalWidth = 0;\n    for (let i = 0; i < widths.length; ++i) {\n      totalWidth += widths[i];\n    }\n    let totalPercentWidth = 0;\n    for (let i = 0; i < widths.length; ++i) {\n      let width = Math.round(100 * widths[i] / totalWidth);\n      if (minPercent && width < minPercent) {\n        width = minPercent;\n      } else if (maxPercent && width > maxPercent) {\n        width = maxPercent;\n      }\n      totalPercentWidth += width;\n      widths[i] = width;\n    }\n    let recoupPercent = totalPercentWidth - 100;\n\n    while (minPercent && recoupPercent > 0) {\n      for (let i = 0; i < widths.length; ++i) {\n        if (widths[i] > minPercent) {\n          --widths[i];\n          --recoupPercent;\n          if (!recoupPercent) {\n            break;\n          }\n        }\n      }\n    }\n\n    while (maxPercent && recoupPercent < 0) {\n      for (let i = 0; i < widths.length; ++i) {\n        if (widths[i] < maxPercent) {\n          ++widths[i];\n          ++recoupPercent;\n          if (!recoupPercent) {\n            break;\n          }\n        }\n      }\n    }\n\n    return widths;\n  }\n\n  /**\n   * The range of |minPercent| and |maxPercent| is [0, 100].\n   */\n  autoSizeColumns(minPercent: number, maxPercent?: number, maxDescentLevel?: number): void {\n    let widths: number[] = [];\n    for (let i = 0; i < this._columnsArray.length; ++i) {\n      widths.push((this._columnsArray[i].title || '').length);\n    }\n\n    maxDescentLevel = maxDescentLevel || 0;\n    if (!this._rootNode) {\n      return;\n    }\n    const children = this._enumerateChildren(this._rootNode, [], maxDescentLevel + 1);\n    for (let i = 0; i < children.length; ++i) {\n      const node = children[i];\n      for (let j = 0; j < this._columnsArray.length; ++j) {\n        const text = String(node.data[this._columnsArray[j].id]);\n        if (text.length > widths[j]) {\n          widths[j] = text.length;\n        }\n      }\n    }\n\n    widths = this._autoSizeWidths(widths, minPercent, maxPercent);\n\n    for (let i = 0; i < this._columnsArray.length; ++i) {\n      this._columnsArray[i].weight = widths[i];\n    }\n    this._columnWidthsInitialized = false;\n    this.updateWidths();\n  }\n\n  _enumerateChildren(rootNode: DataGridNode<T>, result: DataGridNode<T>[], maxLevel: number): DataGridNode<T>[] {\n    if (!rootNode._isRoot) {\n      result.push(rootNode);\n    }\n    if (!maxLevel) {\n      return [];\n    }\n    for (let i = 0; i < rootNode.children.length; ++i) {\n      this._enumerateChildren(rootNode.children[i], result, maxLevel - 1);\n    }\n    return result;\n  }\n\n  onResize(): void {\n    this.updateWidths();\n  }\n\n  // Updates the widths of the table, including the positions of the column\n  // resizers.\n  //\n  // IMPORTANT: This function MUST be called once after the element of the\n  // DataGrid is attached to its parent element and every subsequent time the\n  // width of the parent element is changed in order to make it possible to\n  // resize the columns.\n  //\n  // If this function is not called after the DataGrid is attached to its\n  // parent element, then the DataGrid's columns will not be resizable.\n  updateWidths(): void {\n    // Do not attempt to use offsetes if we're not attached to the document tree yet.\n    if (!this._columnWidthsInitialized && this.element.offsetWidth) {\n      // Give all the columns initial widths now so that during a resize,\n      // when the two columns that get resized get a percent value for\n      // their widths, all the other columns already have percent values\n      // for their widths.\n\n      // Use container size to avoid changes of table width caused by change of column widths.\n      const tableWidth = this.element.offsetWidth - this._cornerWidth;\n      const cells = this._headerTableBody.rows[0].cells;\n      const numColumns = cells.length - 1;  // Do not process corner column.\n      for (let i = 0; i < numColumns; i++) {\n        const column = this.visibleColumnsArray[i];\n        if (!column.weight) {\n          column.weight = 100 * cells[i].offsetWidth / tableWidth || 10;\n        }\n      }\n      this._columnWidthsInitialized = true;\n    }\n    this._applyColumnWeights();\n  }\n\n  indexOfVisibleColumn(columnId: string): number {\n    return this.visibleColumnsArray.findIndex(column => column.id === columnId);\n  }\n\n  setName(name: string): void {\n    this._columnWeightsSetting =\n        Common.Settings.Settings.instance().createSetting('dataGrid-' + name + '-columnWeights', {});\n    this._loadColumnWeights();\n  }\n\n  _resetColumnWeights(): void {\n    for (const column of this._columnsArray) {\n      if (!column.defaultWeight) {\n        continue;\n      }\n      column.weight = column.defaultWeight;\n    }\n    this._applyColumnWeights();\n    this._saveColumnWeights();\n  }\n\n  _loadColumnWeights(): void {\n    if (!this._columnWeightsSetting) {\n      return;\n    }\n    const weights = this._columnWeightsSetting.get();\n    for (let i = 0; i < this._columnsArray.length; ++i) {\n      const column = this._columnsArray[i];\n      const weight = weights[column.id];\n      if (weight) {\n        column.weight = weight;\n      }\n    }\n    this._applyColumnWeights();\n  }\n\n  _saveColumnWeights(): void {\n    if (!this._columnWeightsSetting) {\n      return;\n    }\n    const weights: {\n      [x: string]: any,\n    } = {};\n    for (let i = 0; i < this._columnsArray.length; ++i) {\n      const column = this._columnsArray[i];\n      weights[column.id] = column.weight;\n    }\n    this._columnWeightsSetting.set(weights);\n  }\n\n  wasShown(): void {\n    this._loadColumnWeights();\n  }\n\n  willHide(): void {\n  }\n\n  _applyColumnWeights(): void {\n    let tableWidth = this.element.offsetWidth - this._cornerWidth;\n    if (tableWidth <= 0) {\n      return;\n    }\n\n    let sumOfWeights = 0.0;\n    const fixedColumnWidths = [];\n    for (let i = 0; i < this.visibleColumnsArray.length; ++i) {\n      const column = this.visibleColumnsArray[i];\n      if (column.fixedWidth) {\n        const currentChild = this._headerTableColumnGroup.children[i];\n        const width = elementToPreferedWidthMap.get(currentChild) || this._headerTableBody.rows[0].cells[i].offsetWidth;\n        fixedColumnWidths[i] = width;\n        tableWidth -= width;\n      } else {\n        sumOfWeights += (this.visibleColumnsArray[i].weight || 0);\n      }\n    }\n    let sum = 0;\n    let lastOffset = 0;\n    const minColumnWidth = 14;  // px\n\n    for (let i = 0; i < this.visibleColumnsArray.length; ++i) {\n      const column = this.visibleColumnsArray[i];\n      let width;\n      if (column.fixedWidth) {\n        width = fixedColumnWidths[i];\n      } else {\n        sum += (column.weight || 0);\n        const offset = (sum * tableWidth / sumOfWeights) | 0;\n        width = Math.max(offset - lastOffset, minColumnWidth);\n        lastOffset = offset;\n      }\n      this._setPreferredWidth(i, width);\n    }\n\n    this._positionResizers();\n  }\n\n  setColumnsVisiblity(columnsVisibility: Set<string>): void {\n    this.visibleColumnsArray = [];\n    for (const column of this._columnsArray) {\n      if (columnsVisibility.has(column.id)) {\n        this.visibleColumnsArray.push(column);\n      }\n    }\n    this._refreshHeader();\n    this._applyColumnWeights();\n    const nodes = this._enumerateChildren(this.rootNode(), [], -1);\n    for (const node of nodes) {\n      node.refresh();\n    }\n  }\n\n  get scrollContainer(): HTMLElement {\n    return this._scrollContainer as HTMLElement;\n  }\n\n  _positionResizers(): void {\n    const headerTableColumns = this._headerTableColumnGroup.children;\n    const numColumns = headerTableColumns.length - 1;  // Do not process corner column.\n    const left: number[] = [];\n    const resizers = this._resizers;\n\n    while (resizers.length > numColumns - 1) {\n      const resizer = resizers.pop();\n      if (resizer) {\n        resizer.remove();\n      }\n    }\n\n    for (let i = 0; i < numColumns - 1; i++) {\n      // Get the width of the cell in the first (and only) row of the\n      // header table in order to determine the width of the column, since\n      // it is not possible to query a column for its width.\n      left[i] = (left[i - 1] || 0) + this._headerTableBody.rows[0].cells[i].offsetWidth;\n    }\n\n    // Make n - 1 resizers for n columns.\n    for (let i = 0; i < numColumns - 1; i++) {\n      let resizer: HTMLDivElement|HTMLElement = resizers[i];\n      if (!resizer) {\n        // This is the first call to updateWidth, so the resizers need\n        // to be created.\n        resizer = document.createElement('div');\n        elementToIndexMap.set(resizer, i);\n        resizer.classList.add('data-grid-resizer');\n        // This resizer is associated with the column to its right.\n        UI.UIUtils.installDragHandle(\n            resizer, this._startResizerDragging.bind(this), this._resizerDragging.bind(this),\n            this._endResizerDragging.bind(this), 'col-resize');\n        this.element.appendChild(resizer);\n        resizers.push((resizer as HTMLElement));\n      }\n      if (elementToPositionMap.get(resizer) !== left[i]) {\n        elementToPositionMap.set(resizer, left[i]);\n        resizer.style.left = left[i] + 'px';\n      }\n    }\n  }\n\n  addCreationNode(hasChildren?: boolean): void {\n    if (this.creationNode) {\n      this.creationNode.makeNormal();\n    }\n    const emptyData: {\n      [x: string]: any,\n    } = {};\n    for (const column in this._columns) {\n      emptyData[column] = null;\n    }\n    this.creationNode = new CreationDataGridNode(emptyData, hasChildren);\n    this.rootNode().appendChild(this.creationNode);\n  }\n\n  _keyDown(event: Event): void {\n    if (!(event instanceof KeyboardEvent)) {\n      return;\n    }\n    if (event.shiftKey || event.metaKey || event.ctrlKey || this._editing || UI.UIUtils.isEditing()) {\n      return;\n    }\n\n    let handled = false;\n    let nextSelectedNode;\n    if (!this.selectedNode) {\n      // Select the first or last node based on the arrow key direction\n      if (event.key === 'ArrowUp' && !event.altKey) {\n        nextSelectedNode = this._lastSelectableNode();\n      } else if (event.key === 'ArrowDown' && !event.altKey) {\n        nextSelectedNode = this._firstSelectableNode();\n      }\n      handled = nextSelectedNode ? true : false;\n    } else if (event.key === 'ArrowUp' && !event.altKey) {\n      nextSelectedNode = this.selectedNode.traversePreviousNode(true);\n      while (nextSelectedNode && !nextSelectedNode.selectable) {\n        nextSelectedNode = nextSelectedNode.traversePreviousNode(true);\n      }\n      handled = nextSelectedNode ? true : false;\n    } else if (event.key === 'ArrowDown' && !event.altKey) {\n      nextSelectedNode = this.selectedNode.traverseNextNode(true);\n      while (nextSelectedNode && !nextSelectedNode.selectable) {\n        nextSelectedNode = nextSelectedNode.traverseNextNode(true);\n      }\n      handled = nextSelectedNode ? true : false;\n    } else if (event.key === 'ArrowLeft') {\n      if (this.selectedNode.expanded) {\n        if (event.altKey) {\n          this.selectedNode.collapseRecursively();\n        } else {\n          this.selectedNode.collapse();\n        }\n        handled = true;\n      } else if (this.selectedNode.parent && !this.selectedNode.parent._isRoot) {\n        handled = true;\n        if (this.selectedNode.parent.selectable) {\n          nextSelectedNode = this.selectedNode.parent;\n          handled = nextSelectedNode ? true : false;\n        } else if (this.selectedNode.parent) {\n          this.selectedNode.parent.collapse();\n        }\n      }\n    } else if (event.key === 'ArrowRight') {\n      if (!this.selectedNode.revealed) {\n        this.selectedNode.reveal();\n        handled = true;\n      } else if (this.selectedNode.hasChildren()) {\n        handled = true;\n        if (this.selectedNode.expanded) {\n          nextSelectedNode = this.selectedNode.children[0];\n          handled = nextSelectedNode ? true : false;\n        } else {\n          if (event.altKey) {\n            this.selectedNode.expandRecursively();\n          } else {\n            this.selectedNode.expand();\n          }\n        }\n      }\n    } else if (event.keyCode === 8 || event.keyCode === 46) {\n      if (this._deleteCallback) {\n        handled = true;\n        this._deleteCallback(this.selectedNode);\n      }\n    } else if (event.key === 'Enter') {\n      if (this._editCallback) {\n        handled = true;\n        const selectedNodeElement = this.selectedNode._element;\n        if (!selectedNodeElement) {\n          return;\n        }\n        this._startEditing(selectedNodeElement.children[this._nextEditableColumn(-1)]);\n      } else {\n        this.dispatchEventToListeners(Events.OpenedNode, this.selectedNode);\n      }\n    }\n\n    if (nextSelectedNode) {\n      nextSelectedNode.reveal();\n      nextSelectedNode.select();\n    }\n\n    if ((event.key === 'ArrowUp' || event.key === 'ArrowDown' || event.key === 'ArrowLeft' ||\n         event.key === 'ArrowRight') &&\n        document.activeElement !== this.element) {\n      // crbug.com/1005449\n      // navigational keys pressed but current DataGrid panel has lost focus;\n      // re-focus to ensure subsequent keydowns can be registered within this DataGrid\n      this.element.focus();\n    }\n\n    if (handled) {\n      event.consume(true);\n    }\n  }\n\n  updateSelectionBeforeRemoval(root: DataGridNode<T>|null, _onlyAffectsSubtree: boolean): void {\n    let ancestor: (DataGridNode<T>|null) = this.selectedNode;\n    while (ancestor && ancestor !== root) {\n      ancestor = ancestor.parent;\n    }\n    // Selection is not in the subtree being deleted.\n    if (!ancestor) {\n      return;\n    }\n\n    let nextSelectedNode;\n    // Skip subtree being deleted when looking for the next selectable node.\n    for (ancestor = root; ancestor && !ancestor.nextSibling; ancestor = ancestor.parent) {\n    }\n    if (ancestor) {\n      nextSelectedNode = ancestor.nextSibling;\n    }\n    while (nextSelectedNode && !nextSelectedNode.selectable) {\n      nextSelectedNode = nextSelectedNode.traverseNextNode(true);\n    }\n    const isCreationNode = nextSelectedNode instanceof CreationDataGridNode && nextSelectedNode.isCreationNode;\n    if (!nextSelectedNode || isCreationNode) {\n      if (!root) {\n        return;\n      }\n      nextSelectedNode = root.traversePreviousNode(true);\n      while (nextSelectedNode && !nextSelectedNode.selectable) {\n        nextSelectedNode = nextSelectedNode.traversePreviousNode(true);\n      }\n    }\n    if (nextSelectedNode) {\n      nextSelectedNode.reveal();\n      nextSelectedNode.select();\n    } else if (this.selectedNode) {\n      this.selectedNode.deselect();\n    }\n  }\n\n  dataGridNodeFromNode(target: Node): DataGridNode<T>|null {\n    const rowElement = UI.UIUtils.enclosingNodeOrSelfWithNodeName(target, 'tr');\n    return (rowElement && this.elementToDataGridNode.get(rowElement)) || null;\n  }\n\n  columnIdFromNode(target: Node): string|null {\n    const cellElement = UI.UIUtils.enclosingNodeOrSelfWithNodeName(target, 'td');\n    return (cellElement && nodeToColumnIdMap.get(cellElement)) || null;\n  }\n\n  _clickInHeaderCell(event: Event): void {\n    const cell = UI.UIUtils.enclosingNodeOrSelfWithNodeName((event.target as Node), 'th');\n    if (!cell) {\n      return;\n    }\n    this._sortByColumnHeaderCell((cell as HTMLElement));\n  }\n\n  _sortByColumnHeaderCell(cell: Element): void {\n    if (!nodeToColumnIdMap.has(cell) || !cell.classList.contains('sortable')) {\n      return;\n    }\n\n    let sortOrder = Order.Ascending;\n    if ((cell === this._sortColumnCell) && this.isSortOrderAscending()) {\n      sortOrder = Order.Descending;\n    }\n\n    if (this._sortColumnCell) {\n      this._sortColumnCell.classList.remove(Order.Ascending, Order.Descending);\n    }\n    this._sortColumnCell = cell;\n\n    cell.classList.add(sortOrder);\n    const icon = elementToSortIconMap.get(cell);\n    if (!icon) {\n      return;\n    }\n    icon.setIconType(sortOrder === Order.Ascending ? 'smallicon-triangle-up' : 'smallicon-triangle-down');\n\n    this.dispatchEventToListeners(Events.SortingChanged);\n  }\n\n  markColumnAsSortedBy(columnId: string, sortOrder: Order): void {\n    if (this._sortColumnCell) {\n      this._sortColumnCell.classList.remove(Order.Ascending, Order.Descending);\n    }\n    this._sortColumnCell = this._headerTableHeaders[columnId];\n    this._sortColumnCell.classList.add(sortOrder);\n  }\n\n  headerTableHeader(columnId: string): Element {\n    return this._headerTableHeaders[columnId];\n  }\n\n  _mouseDownInDataTable(event: Event): void {\n    const target = (event.target as Node);\n    const gridNode = this.dataGridNodeFromNode(target);\n    if (!gridNode || !gridNode.selectable || gridNode.isEventWithinDisclosureTriangle((event as MouseEvent))) {\n      return;\n    }\n\n    const columnId = this.columnIdFromNode(target);\n    if (columnId && this._columns[columnId].nonSelectable) {\n      return;\n    }\n\n    if (/** @type {!MouseEvent} */ (event as MouseEvent).metaKey) {\n      if (gridNode.selected) {\n        gridNode.deselect();\n      } else {\n        gridNode.select();\n      }\n    } else {\n      gridNode.select();\n      this.dispatchEventToListeners(Events.OpenedNode, gridNode);\n    }\n  }\n\n  setHeaderContextMenuCallback(callback: ((arg0: UI.ContextMenu.SubMenu) => void)|null): void {\n    this._headerContextMenuCallback = callback;\n  }\n\n  setRowContextMenuCallback(callback: ((arg0: UI.ContextMenu.ContextMenu, arg1: DataGridNode<T>) => void)|null): void {\n    this._rowContextMenuCallback = callback;\n  }\n\n  _contextMenu(event: Event): void {\n    if (!(event instanceof MouseEvent)) {\n      return;\n    }\n    const contextMenu = new UI.ContextMenu.ContextMenu(event);\n    const target = (event.target as Node);\n\n    const sortableVisibleColumns = this.visibleColumnsArray.filter(column => {\n      return (column.sortable && column.title);\n    });\n\n    const sortableHiddenColumns = this._columnsArray.filter(\n        column => sortableVisibleColumns.indexOf(column) === -1 && column.allowInSortByEvenWhenHidden);\n\n    const sortableColumns = [...sortableVisibleColumns, ...sortableHiddenColumns];\n    if (sortableColumns.length > 0) {\n      const sortMenu = contextMenu.defaultSection().appendSubMenuItem(i18nString(UIStrings.sortByString));\n      for (const column of sortableColumns) {\n        const headerCell = this._headerTableHeaders[column.id];\n        sortMenu.defaultSection().appendItem(\n            (column.title as string), this._sortByColumnHeaderCell.bind(this, headerCell));\n      }\n    }\n\n    if (target.isSelfOrDescendant(this._headerTableBody)) {\n      if (this._headerContextMenuCallback) {\n        this._headerContextMenuCallback(contextMenu);\n      }\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.resetColumns), this._resetColumnWeights.bind(this));\n      contextMenu.show();\n      return;\n    }\n\n    // Add header context menu to a subsection available from the body\n    const headerSubMenu = contextMenu.defaultSection().appendSubMenuItem(i18nString(UIStrings.headerOptions));\n    if (this._headerContextMenuCallback) {\n      this._headerContextMenuCallback(headerSubMenu);\n    }\n    headerSubMenu.defaultSection().appendItem(i18nString(UIStrings.resetColumns), this._resetColumnWeights.bind(this));\n\n    const isContextMenuKey = (event.button === 0);\n    const gridNode = isContextMenuKey ? this.selectedNode : this.dataGridNodeFromNode(target);\n    const selectedNodeElement = this.selectedNode && this.selectedNode.existingElement();\n    if (isContextMenuKey && selectedNodeElement) {\n      const boundingRowRect = selectedNodeElement.getBoundingClientRect();\n      if (boundingRowRect) {\n        const x = (boundingRowRect.right + boundingRowRect.left) / 2;\n        const y = (boundingRowRect.bottom + boundingRowRect.top) / 2;\n        contextMenu.setX(x);\n        contextMenu.setY(y);\n      }\n    }\n    if (this._refreshCallback && (!gridNode || gridNode !== this.creationNode)) {\n      contextMenu.defaultSection().appendItem(i18nString(UIStrings.refresh), this._refreshCallback.bind(this));\n    }\n\n    if (gridNode && gridNode.selectable && !gridNode.isEventWithinDisclosureTriangle(event)) {\n      if (this._editCallback) {\n        if (gridNode === this.creationNode) {\n          const firstEditColumnIndex = this._nextEditableColumn(-1);\n          const tableCellElement = gridNode.element().children[firstEditColumnIndex];\n          contextMenu.defaultSection().appendItem(\n              i18nString(UIStrings.addNew), this._startEditing.bind(this, tableCellElement));\n        } else if (isContextMenuKey) {\n          const firstEditColumnIndex = this._nextEditableColumn(-1);\n          if (firstEditColumnIndex > -1) {\n            const firstColumn = this.visibleColumnsArray[firstEditColumnIndex];\n            if (firstColumn && firstColumn.editable) {\n              contextMenu.defaultSection().appendItem(\n                  i18nString(UIStrings.editS, {PH1: firstColumn.title}),\n                  this._startEditingColumnOfDataGridNode.bind(this, gridNode, firstEditColumnIndex));\n            }\n          }\n        } else {\n          const columnId = this.columnIdFromNode(target);\n          if (columnId && this._columns[columnId].editable) {\n            contextMenu.defaultSection().appendItem(\n                i18nString(UIStrings.editS, {PH1: this._columns[columnId].title}),\n                this._startEditing.bind(this, target));\n          }\n        }\n      }\n      if (this._deleteCallback && gridNode !== this.creationNode) {\n        contextMenu.defaultSection().appendItem(\n            i18nString(UIStrings.delete), this._deleteCallback.bind(this, gridNode));\n      }\n      if (this._rowContextMenuCallback) {\n        this._rowContextMenuCallback(contextMenu, gridNode);\n      }\n    }\n\n    contextMenu.show();\n  }\n\n  _clickInDataTable(event: Event): void {\n    const gridNode = this.dataGridNodeFromNode((event.target as Node));\n    if (!gridNode || !gridNode.hasChildren() || !gridNode.isEventWithinDisclosureTriangle((event as MouseEvent))) {\n      return;\n    }\n\n    if (gridNode.expanded) {\n      if (/** @type {!MouseEvent}*/ (event as MouseEvent).altKey) {\n        gridNode.collapseRecursively();\n      } else {\n        gridNode.collapse();\n      }\n    } else {\n      if (/** @type {!MouseEvent}*/ (event as MouseEvent).altKey) {\n        gridNode.expandRecursively();\n      } else {\n        gridNode.expand();\n      }\n    }\n  }\n\n  setResizeMethod(method: ResizeMethod): void {\n    this._resizeMethod = method;\n  }\n\n  _startResizerDragging(event: Event): boolean {\n    this._currentResizer = event.target;\n    return true;\n  }\n\n  _endResizerDragging(): void {\n    this._currentResizer = null;\n    this._saveColumnWeights();\n  }\n\n  _resizerDragging(event: MouseEvent): void {\n    const resizer = (this._currentResizer as HTMLElement);\n    if (!resizer) {\n      return;\n    }\n\n    // Constrain the dragpoint to be within the containing div of the\n    // datagrid.\n    let dragPoint: number = event.clientX - this.element.totalOffsetLeft();\n    const firstRowCells = this._headerTableBody.rows[0].cells;\n    let leftEdgeOfPreviousColumn = 0;\n    // Constrain the dragpoint to be within the space made up by the\n    // column directly to the left and the column directly to the right.\n    let leftCellIndex = elementToIndexMap.get(resizer);\n    if (leftCellIndex === undefined) {\n      return;\n    }\n    let rightCellIndex: number = leftCellIndex + 1;\n    for (let i = 0; i < leftCellIndex; i++) {\n      leftEdgeOfPreviousColumn += firstRowCells[i].offsetWidth;\n    }\n\n    // Differences for other resize methods\n    if (this._resizeMethod === ResizeMethod.Last) {\n      rightCellIndex = this._resizers.length;\n    } else if (this._resizeMethod === ResizeMethod.First) {\n      leftEdgeOfPreviousColumn += firstRowCells[leftCellIndex].offsetWidth - firstRowCells[0].offsetWidth;\n      leftCellIndex = 0;\n    }\n\n    const rightEdgeOfNextColumn =\n        leftEdgeOfPreviousColumn + firstRowCells[leftCellIndex].offsetWidth + firstRowCells[rightCellIndex].offsetWidth;\n\n    // Give each column some padding so that they don't disappear.\n    const leftMinimum = leftEdgeOfPreviousColumn + ColumnResizePadding;\n    const rightMaximum = rightEdgeOfNextColumn - ColumnResizePadding;\n    if (leftMinimum > rightMaximum) {\n      return;\n    }\n\n    dragPoint = Platform.NumberUtilities.clamp(dragPoint, leftMinimum, rightMaximum);\n\n    const position = (dragPoint - CenterResizerOverBorderAdjustment);\n    elementToPositionMap.set(resizer, position);\n    resizer.style.left = position + 'px';\n\n    this._setPreferredWidth(leftCellIndex, dragPoint - leftEdgeOfPreviousColumn);\n    this._setPreferredWidth(rightCellIndex, rightEdgeOfNextColumn - dragPoint);\n\n    const leftColumn = this.visibleColumnsArray[leftCellIndex];\n    const rightColumn = this.visibleColumnsArray[rightCellIndex];\n    if (leftColumn.weight && rightColumn.weight) {\n      const sumOfWeights = leftColumn.weight + rightColumn.weight;\n      const delta = rightEdgeOfNextColumn - leftEdgeOfPreviousColumn;\n      leftColumn.weight = (dragPoint - leftEdgeOfPreviousColumn) * sumOfWeights / delta;\n      rightColumn.weight = (rightEdgeOfNextColumn - dragPoint) * sumOfWeights / delta;\n    }\n\n    this._positionResizers();\n    event.preventDefault();\n  }\n\n  _setPreferredWidth(columnIndex: number, width: number): void {\n    const pxWidth = width + 'px';\n    const headerTableChildElement = (this._headerTableColumnGroup.children[columnIndex] as HTMLElement);\n    elementToPreferedWidthMap.set(headerTableChildElement, width);\n    headerTableChildElement.style.width = pxWidth;\n\n    const dataTableChildElement = (this._dataTableColumnGroup.children[columnIndex] as HTMLElement);\n    dataTableChildElement.style.width = pxWidth;\n  }\n\n  columnOffset(columnId: string): number {\n    if (!this.element.offsetWidth) {\n      return 0;\n    }\n    for (let i = 1; i < this.visibleColumnsArray.length; ++i) {\n      if (columnId === this.visibleColumnsArray[i].id) {\n        if (this._resizers[i - 1]) {\n          return elementToPositionMap.get(this._resizers[i - 1]) || 0;\n        }\n      }\n    }\n    return 0;\n  }\n\n  asWidget(): DataGridWidget<T> {\n    if (!this._dataGridWidget) {\n      this._dataGridWidget = new DataGridWidget(this);\n    }\n    return this._dataGridWidget;\n  }\n\n  topFillerRowElement(): HTMLElement {\n    return this._topFillerRow;\n  }\n}\n\n// Keep in sync with .data-grid col.corner style rule.\nexport const CornerWidth = 14;\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  SelectedNode = 'SelectedNode',\n  DeselectedNode = 'DeselectedNode',\n  OpenedNode = 'OpenedNode',\n  SortingChanged = 'SortingChanged',\n  PaddingChanged = 'PaddingChanged',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Order {\n  Ascending = 'sort-ascending',\n  Descending = 'sort-descending',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Align {\n  Center = 'center',\n  Right = 'right',\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum DataType {\n  String = 'String',\n  Boolean = 'Boolean',\n}\n\nexport const ColumnResizePadding = 24;\nexport const CenterResizerOverBorderAdjustment = 3;\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum ResizeMethod {\n  Nearest = 'nearest',\n  First = 'first',\n  Last = 'last',\n}\n\nexport type DataGridData = {\n  [key: string]: any,\n};\n\nexport class DataGridNode<T> extends Common.ObjectWrapper.ObjectWrapper {\n  _element: Element|null;\n  _expanded: boolean;\n  _selected: boolean;\n  _dirty: boolean;\n  _inactive: boolean;\n  key!: string;\n  _depth!: number|undefined;\n  _revealed!: boolean|undefined;\n  _attached: boolean;\n  _savedPosition: {\n    parent: DataGridNode<T>,\n    index: number,\n  }|null;\n  _shouldRefreshChildren: boolean;\n  _data: DataGridData;\n  _hasChildren: boolean;\n  children: DataGridNode<T>[];\n  dataGrid: DataGridImpl<T>|null;\n  parent: DataGridNode<T>|null;\n  previousSibling: DataGridNode<T>|null;\n  nextSibling: DataGridNode<T>|null;\n  disclosureToggleWidth: number;\n  selectable: boolean;\n  _isRoot: boolean;\n  nodeAccessibleText: string;\n  cellAccessibleTextMap: Map<string, string>;\n  isCreationNode: boolean;\n\n  constructor(data?: DataGridData|null, hasChildren?: boolean) {\n    super();\n    this._element = null;\n    this._expanded = false;\n    this._selected = false;\n    this._dirty = false;\n    this._inactive = false;\n    this._attached = false;\n    this._savedPosition = null;\n    this._shouldRefreshChildren = true;\n    this._data = data || {};\n    this._hasChildren = hasChildren || false;\n    this.children = [];\n    this.dataGrid = null;\n    this.parent = null;\n    this.previousSibling = null;\n    this.nextSibling = null;\n    this.disclosureToggleWidth = 10;\n\n    this.selectable = true;\n\n    this._isRoot = false;\n\n    this.nodeAccessibleText = '';\n    this.cellAccessibleTextMap = new Map();\n    this.isCreationNode = false;\n  }\n\n  element(): Element {\n    if (!this._element) {\n      const element = this.createElement();\n      this.createCells(element);\n    }\n    return this._element as Element;\n  }\n\n  protected createElement(): Element {\n    this._element = document.createElement('tr');\n    this._element.classList.add('data-grid-data-grid-node');\n    if (this.dataGrid) {\n      this.dataGrid.elementToDataGridNode.set(this._element, this);\n    }\n\n    if (this._hasChildren) {\n      this._element.classList.add('parent');\n    }\n    if (this.expanded) {\n      this._element.classList.add('expanded');\n    }\n    if (this.selected) {\n      this._element.classList.add('selected');\n    }\n    if (this.revealed) {\n      this._element.classList.add('revealed');\n    }\n    if (this._dirty) {\n      this._element.classList.add('dirty');\n    }\n    if (this._inactive) {\n      this._element.classList.add('inactive');\n    }\n    if (this.isCreationNode) {\n      this._element.classList.add('creation-node');\n    }\n    return this._element;\n  }\n\n  existingElement(): Element|null {\n    return this._element || null;\n  }\n\n  protected resetElement(): void {\n    this._element = null;\n  }\n\n  protected createCells(element: Element): void {\n    element.removeChildren();\n    if (!this.dataGrid || !this.parent) {\n      return;\n    }\n    const columnsArray = this.dataGrid.visibleColumnsArray;\n    const accessibleTextArray = [];\n    // Add depth if node is part of a tree\n    if (this._hasChildren || !this.parent._isRoot) {\n      accessibleTextArray.push(i18nString(UIStrings.levelS, {PH1: this.depth + 1}));\n    }\n    for (let i = 0; i < columnsArray.length; ++i) {\n      const column = columnsArray[i];\n      const cell = element.appendChild(this.createCell(column.id));\n      // Add each visibile cell to the node's accessible text by gathering 'Column Title: content'\n\n      if (column.dataType === DataType.Boolean && this.data[column.id] === true) {\n        this.setCellAccessibleName(i18nString(UIStrings.checked), cell, column.id);\n      }\n\n      accessibleTextArray.push(`${column.title}: ${this.cellAccessibleTextMap.get(column.id) || cell.textContent}`);\n    }\n    this.nodeAccessibleText = accessibleTextArray.join(', ');\n    element.appendChild(this.createTDWithClass('corner'));\n  }\n\n  get data(): DataGridData {\n    return this._data;\n  }\n\n  set data(x: DataGridData) {\n    this._data = x || {};\n    this.refresh();\n  }\n\n  get revealed(): boolean {\n    if (this._revealed !== undefined) {\n      return this._revealed;\n    }\n\n    let currentAncestor: (DataGridNode<T>|null) = this.parent;\n    while (currentAncestor && !currentAncestor._isRoot) {\n      if (!currentAncestor.expanded) {\n        this._revealed = false;\n        return false;\n      }\n\n      currentAncestor = currentAncestor.parent;\n    }\n\n    this.revealed = true;\n    return true;\n  }\n\n  set revealed(x: boolean) {\n    if (this._revealed === x) {\n      return;\n    }\n\n    this._revealed = x;\n\n    if (this._element) {\n      this._element.classList.toggle('revealed', this._revealed);\n    }\n\n    for (let i = 0; i < this.children.length; ++i) {\n      this.children[i].revealed = x && this.expanded;\n    }\n  }\n\n  isDirty(): boolean {\n    return this._dirty;\n  }\n\n  setDirty(dirty: boolean): void {\n    if (this._dirty === dirty) {\n      return;\n    }\n    this._dirty = dirty;\n    if (!this._element) {\n      return;\n    }\n    if (dirty) {\n      this._element.classList.add('dirty');\n    } else {\n      this._element.classList.remove('dirty');\n    }\n  }\n\n  isInactive(): boolean {\n    return this._inactive;\n  }\n\n  setInactive(inactive: boolean): void {\n    if (this._inactive === inactive) {\n      return;\n    }\n    this._inactive = inactive;\n    if (!this._element) {\n      return;\n    }\n    if (inactive) {\n      this._element.classList.add('inactive');\n    } else {\n      this._element.classList.remove('inactive');\n    }\n  }\n\n  hasChildren(): boolean {\n    return this._hasChildren;\n  }\n\n  setHasChildren(x: boolean): void {\n    if (this._hasChildren === x) {\n      return;\n    }\n\n    this._hasChildren = x;\n\n    if (!this._element) {\n      return;\n    }\n\n    this._element.classList.toggle('parent', this._hasChildren);\n    this._element.classList.toggle('expanded', this._hasChildren && this.expanded);\n  }\n\n  get depth(): number {\n    if (this._depth !== undefined) {\n      return this._depth;\n    }\n    if (this.parent && !this.parent._isRoot) {\n      this._depth = this.parent.depth + 1;\n    } else {\n      this._depth = 0;\n    }\n    return this._depth;\n  }\n\n  get leftPadding(): number {\n    return this.depth * (this.dataGrid ? this.dataGrid.indentWidth : 1);\n  }\n\n  get shouldRefreshChildren(): boolean {\n    return this._shouldRefreshChildren;\n  }\n\n  set shouldRefreshChildren(x: boolean) {\n    this._shouldRefreshChildren = x;\n    if (x && this.expanded) {\n      this.expand();\n    }\n  }\n\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(x: boolean) {\n    if (x) {\n      this.select();\n    } else {\n      this.deselect();\n    }\n  }\n\n  get expanded(): boolean {\n    return this._expanded;\n  }\n\n  set expanded(x: boolean) {\n    if (x) {\n      this.expand();\n    } else {\n      this.collapse();\n    }\n  }\n\n  refresh(): void {\n    if (!this.dataGrid) {\n      this._element = null;\n    }\n    if (!this._element) {\n      return;\n    }\n    this.createCells(this._element);\n  }\n\n  createTDWithClass(className: string): HTMLElement {\n    const cell = (document.createElement('td') as HTMLElement);\n    if (className) {\n      cell.className = className;\n    }\n    const cellClass = this.dataGrid ? this.dataGrid._cellClass : null;\n    if (cellClass) {\n      cell.classList.add(cellClass);\n    }\n    return cell;\n  }\n\n  createTD(columnId: string): HTMLElement {\n    const cell = this.createTDWithClass(columnId + '-column');\n    nodeToColumnIdMap.set(cell, columnId);\n\n    if (this.dataGrid) {\n      const alignment = this.dataGrid._columns[columnId].align;\n      if (alignment) {\n        cell.classList.add(alignment);\n      }\n\n      if (columnId === this.dataGrid.disclosureColumnId) {\n        cell.classList.add('disclosure');\n        if (this.leftPadding) {\n          cell.style.setProperty('padding-left', this.leftPadding + 'px');\n        }\n      }\n    }\n\n    return cell;\n  }\n\n  createCell(columnId: string): HTMLElement {\n    const cell = this.createTD(columnId);\n    const data = this.data[columnId];\n    if (data instanceof Node) {\n      cell.appendChild(data);\n    } else if (data !== null && this.dataGrid) {\n      this.dataGrid.setElementContent(cell, (data as string));\n    }\n\n    return cell;\n  }\n\n  setCellAccessibleName(name: string, cell: Element, columnId: string): void {\n    this.cellAccessibleTextMap.set(columnId, name);\n    // Mark all direct children of cell as hidden so cell name is properly announced\n    for (let i = 0; i < cell.children.length; i++) {\n      UI.ARIAUtils.markAsHidden(cell.children[i]);\n    }\n    UI.ARIAUtils.setAccessibleName(cell, name);\n  }\n\n  nodeSelfHeight(): number {\n    return 20;\n  }\n\n  appendChild(child: DataGridNode<T>): void {\n    this.insertChild(child, this.children.length);\n  }\n\n  resetNode(onlyCaches?: boolean): void {\n    // @TODO(allada) This is a hack to make sure ViewportDataGrid can clean up these caches. Try Not To Use.\n    delete this._depth;\n    delete this._revealed;\n    if (onlyCaches) {\n      return;\n    }\n    if (this.previousSibling) {\n      this.previousSibling.nextSibling = this.nextSibling;\n    }\n    if (this.nextSibling) {\n      this.nextSibling.previousSibling = this.previousSibling;\n    }\n    this.dataGrid = null;\n    this.parent = null;\n    this.nextSibling = null;\n    this.previousSibling = null;\n    this._attached = false;\n  }\n\n  insertChild(child: DataGridNode<T>, index: number): void {\n    if (!child) {\n      throw 'insertChild: Node can\\'t be undefined or null.';\n    }\n    if (child.parent === this) {\n      const currentIndex = this.children.indexOf(child);\n      if (currentIndex < 0) {\n        console.assert(false, 'Inconsistent DataGrid state');\n      }\n      if (currentIndex === index) {\n        return;\n      }\n      if (currentIndex < index) {\n        --index;\n      }\n    }\n\n    child.remove();\n\n    this.children.splice(index, 0, child);\n    this.setHasChildren(true);\n\n    child.parent = this;\n    child.dataGrid = this.dataGrid;\n    child.recalculateSiblings(index);\n\n    child._shouldRefreshChildren = true;\n\n    let current: (DataGridNode<T>|null)|DataGridNode<T> = child.children[0];\n    while (current) {\n      current.resetNode(true);\n      current.dataGrid = this.dataGrid;\n      current._attached = false;\n      current._shouldRefreshChildren = true;\n      current = current.traverseNextNode(false, child, true);\n    }\n\n    if (this.expanded) {\n      child._attach();\n    }\n    if (!this.revealed) {\n      child.revealed = false;\n    }\n  }\n\n  remove(): void {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n  }\n\n  removeChild(child: DataGridNode<T>): void {\n    if (!child) {\n      throw 'removeChild: Node can\\'t be undefined or null.';\n    }\n    if (child.parent !== this) {\n      throw 'removeChild: Node is not a child of this node.';\n    }\n\n    if (this.dataGrid) {\n      this.dataGrid.updateSelectionBeforeRemoval(child, false);\n    }\n\n    child._detach();\n    child.resetNode();\n    Platform.ArrayUtilities.removeElement(this.children, child, true);\n\n    if (this.children.length <= 0) {\n      this.setHasChildren(false);\n    }\n  }\n\n  removeChildren(): void {\n    if (this.dataGrid) {\n      this.dataGrid.updateSelectionBeforeRemoval(this, true);\n    }\n    for (let i = 0; i < this.children.length; ++i) {\n      const child = this.children[i];\n      child._detach();\n      child.resetNode();\n    }\n\n    this.children = [];\n    this.setHasChildren(false);\n  }\n\n  recalculateSiblings(myIndex: number): void {\n    if (!this.parent) {\n      return;\n    }\n\n    const previousChild = this.parent.children[myIndex - 1] || null;\n    if (previousChild) {\n      previousChild.nextSibling = this;\n    }\n    this.previousSibling = previousChild;\n\n    const nextChild = this.parent.children[myIndex + 1] || null;\n    if (nextChild) {\n      nextChild.previousSibling = this;\n    }\n    this.nextSibling = nextChild;\n  }\n\n  collapse(): void {\n    if (this._isRoot) {\n      return;\n    }\n    if (this._element) {\n      this._element.classList.remove('expanded');\n    }\n\n    this._expanded = false;\n    if (this.selected && this.dataGrid) {\n      this.dataGrid.updateGridAccessibleName(/* text */ i18nString(UIStrings.collapsed));\n    }\n\n    for (let i = 0; i < this.children.length; ++i) {\n      this.children[i].revealed = false;\n    }\n  }\n\n  collapseRecursively(): void {\n    let item: (DataGridNode<T>|null)|this = this;\n    while (item) {\n      if (item.expanded) {\n        item.collapse();\n      }\n      item = item.traverseNextNode(false, this, true);\n    }\n  }\n\n  populate(): void {\n  }\n\n  expand(): void {\n    if (!this._hasChildren || this.expanded) {\n      return;\n    }\n    if (this._isRoot) {\n      return;\n    }\n\n    if (this.revealed && !this._shouldRefreshChildren) {\n      for (let i = 0; i < this.children.length; ++i) {\n        this.children[i].revealed = true;\n      }\n    }\n\n    if (this._shouldRefreshChildren) {\n      for (let i = 0; i < this.children.length; ++i) {\n        this.children[i]._detach();\n      }\n\n      this.populate();\n\n      if (this._attached) {\n        for (let i = 0; i < this.children.length; ++i) {\n          const child = this.children[i];\n          if (this.revealed) {\n            child.revealed = true;\n          }\n          child._attach();\n        }\n      }\n\n      this._shouldRefreshChildren = false;\n    }\n\n    if (this._element) {\n      this._element.classList.add('expanded');\n    }\n    if (this.selected && this.dataGrid) {\n      this.dataGrid.updateGridAccessibleName(/* text */ i18nString(UIStrings.expanded));\n    }\n\n    this._expanded = true;\n  }\n\n  expandRecursively(): void {\n    let item: (DataGridNode<T>|null)|this = this;\n    while (item) {\n      item.expand();\n      item = item.traverseNextNode(false, this);\n    }\n  }\n\n  reveal(): void {\n    if (this._isRoot) {\n      return;\n    }\n    let currentAncestor: (DataGridNode<T>|null) = this.parent;\n    while (currentAncestor && !currentAncestor._isRoot) {\n      if (!currentAncestor.expanded) {\n        currentAncestor.expand();\n      }\n      currentAncestor = currentAncestor.parent;\n    }\n\n    this.element().scrollIntoViewIfNeeded(false);\n  }\n\n  select(supressSelectedEvent?: boolean): void {\n    if (!this.dataGrid || !this.selectable || this.selected) {\n      return;\n    }\n\n    if (this.dataGrid.selectedNode) {\n      this.dataGrid.selectedNode.deselect();\n    }\n\n    this._selected = true;\n    this.dataGrid.selectedNode = this;\n\n    if (this._element) {\n      this._element.classList.add('selected');\n      this.dataGrid.setHasSelection(true);\n      this.dataGrid.updateGridAccessibleName();\n    }\n\n    if (!supressSelectedEvent) {\n      this.dataGrid.dispatchEventToListeners(Events.SelectedNode, this);\n    }\n  }\n\n  revealAndSelect(): void {\n    if (this._isRoot) {\n      return;\n    }\n    this.reveal();\n    this.select();\n  }\n\n  deselect(supressDeselectedEvent?: boolean): void {\n    if (!this.dataGrid || this.dataGrid.selectedNode !== this || !this.selected) {\n      return;\n    }\n\n    this._selected = false;\n    this.dataGrid.selectedNode = null;\n\n    if (this._element) {\n      this._element.classList.remove('selected');\n      this.dataGrid.setHasSelection(false);\n      this.dataGrid.updateGridAccessibleName('');\n    }\n\n    if (!supressDeselectedEvent) {\n      this.dataGrid.dispatchEventToListeners(Events.DeselectedNode);\n    }\n  }\n\n  traverseNextNode(skipHidden: boolean, stayWithin?: DataGridNode<T>|null, dontPopulate?: boolean, info?: {\n    depthChange: number,\n  }): DataGridNode<T>|null {\n    if (!dontPopulate && this._hasChildren) {\n      this.populate();\n    }\n\n    if (info) {\n      info.depthChange = 0;\n    }\n\n    let node: (DataGridNode<T>|null)|this = (!skipHidden || this.revealed) ? this.children[0] : null;\n    if (node && (!skipHidden || this.expanded)) {\n      if (info) {\n        info.depthChange = 1;\n      }\n      return node;\n    }\n\n    if (this === stayWithin) {\n      return null;\n    }\n\n    node = (!skipHidden || this.revealed) ? this.nextSibling : null;\n    if (node) {\n      return node;\n    }\n\n    node = this;\n    while (node && !node._isRoot && !((!skipHidden || node.revealed) ? node.nextSibling : null) &&\n           node.parent !== stayWithin) {\n      if (info) {\n        info.depthChange -= 1;\n      }\n      node = node.parent;\n    }\n\n    if (!node) {\n      return null;\n    }\n\n    return (!skipHidden || node.revealed) ? node.nextSibling : null;\n  }\n\n  traversePreviousNode(skipHidden: boolean, dontPopulate?: boolean): DataGridNode<T>|null {\n    let node: (DataGridNode<T>|null) = (!skipHidden || this.revealed) ? this.previousSibling : null;\n    if (!dontPopulate && node && node._hasChildren) {\n      node.populate();\n    }\n\n    while (node &&\n           ((!skipHidden || (node.revealed && node.expanded)) ? node.children[node.children.length - 1] : null)) {\n      if (!dontPopulate && node._hasChildren) {\n        node.populate();\n      }\n      node = ((!skipHidden || (node.revealed && node.expanded)) ? node.children[node.children.length - 1] : null);\n    }\n\n    if (node) {\n      return node;\n    }\n\n    if (!this.parent || this.parent._isRoot) {\n      return null;\n    }\n\n    return this.parent;\n  }\n\n  isEventWithinDisclosureTriangle(event: MouseEvent): boolean {\n    if (!this._hasChildren) {\n      return false;\n    }\n    const cell = UI.UIUtils.enclosingNodeOrSelfWithNodeName((event.target as Node), 'td');\n    if (!cell || !(cell instanceof HTMLElement) || !cell.classList.contains('disclosure')) {\n      return false;\n    }\n\n    const left = cell.totalOffsetLeft() + this.leftPadding;\n    return event.pageX >= left && event.pageX <= left + this.disclosureToggleWidth;\n  }\n\n  _attach(): void {\n    if (!this.dataGrid || this._attached) {\n      return;\n    }\n\n    this._attached = true;\n\n    const previousNode = this.traversePreviousNode(true, true);\n    const previousElement = previousNode ? previousNode.element() : this.dataGrid._topFillerRow;\n    this.dataGrid.dataTableBody.insertBefore(this.element(), previousElement.nextSibling);\n\n    if (this.expanded) {\n      for (let i = 0; i < this.children.length; ++i) {\n        this.children[i]._attach();\n      }\n    }\n  }\n\n  _detach(): void {\n    if (!this._attached) {\n      return;\n    }\n\n    this._attached = false;\n\n    if (this._element) {\n      this._element.remove();\n    }\n\n    for (let i = 0; i < this.children.length; ++i) {\n      this.children[i]._detach();\n    }\n  }\n\n  savePosition(): void {\n    if (this._savedPosition) {\n      return;\n    }\n\n    if (!this.parent) {\n      throw 'savePosition: Node must have a parent.';\n    }\n    this._savedPosition = {parent: this.parent, index: this.parent.children.indexOf(this)};\n  }\n\n  restorePosition(): void {\n    if (!this._savedPosition) {\n      return;\n    }\n\n    if (this.parent !== this._savedPosition.parent) {\n      this._savedPosition.parent.insertChild(this, this._savedPosition.index);\n    }\n\n    this._savedPosition = null;\n  }\n}\n\nexport class CreationDataGridNode<T> extends DataGridNode<T> {\n  isCreationNode: boolean;\n  constructor(\n      data?: {\n        [x: string]: any,\n      }|null,\n      hasChildren?: boolean) {\n    super(data, hasChildren);\n    this.isCreationNode = true;\n  }\n\n  makeNormal(): void {\n    this.isCreationNode = false;\n  }\n}\n\nexport class DataGridWidget<T> extends UI.Widget.VBox {\n  _dataGrid: DataGridImpl<T>;\n  constructor(dataGrid: DataGridImpl<T>) {\n    super();\n    this._dataGrid = dataGrid;\n    this.element.appendChild(dataGrid.element);\n    this.setDefaultFocusedElement(dataGrid.element);\n  }\n\n  wasShown(): void {\n    this._dataGrid.wasShown();\n  }\n\n  willHide(): void {\n    this._dataGrid.willHide();\n  }\n\n  onResize(): void {\n    this._dataGrid.onResize();\n  }\n\n  elementsToRestoreScrollPositionsFor(): Element[] {\n    return [this._dataGrid._scrollContainer];\n  }\n}\nexport interface Parameters {\n  displayName: string;\n  columns: ColumnDescriptor[];\n  editCallback?: ((arg0: any, arg1: string, arg2: any, arg3: any) => any);\n  deleteCallback?: ((arg0: any) => any);\n  refreshCallback?: (() => any);\n}\nexport interface ColumnDescriptor {\n  id: string;\n  title?: Common.UIString.LocalizedString;\n  titleDOMFragment?: DocumentFragment|null;\n  sortable: boolean;\n  sort?: Order|null;\n  align?: Align|null;\n  width?: string;\n  fixedWidth?: boolean;\n  editable?: boolean;\n  nonSelectable?: boolean;\n  longText?: boolean;\n  disclosure?: boolean;\n  weight?: number;\n  allowInSortByEvenWhenHidden?: boolean;\n  dataType?: DataType|null;\n  defaultWeight?: number;\n}\n"]}