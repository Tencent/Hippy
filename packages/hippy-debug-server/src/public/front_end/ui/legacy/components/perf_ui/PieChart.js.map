{"version":3,"file":"PieChart.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/perf_ui/PieChart.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,OAAO,KAAK,gBAAgB,MAAM,wCAAwC,CAAC;AAC3E,OAAO,KAAK,OAAO,MAAM,+BAA+B,CAAC;AAEzD,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,GAAG,EAAC,GAAG,OAAO,CAAC;AAEpC,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AACtD,MAAM,SAAS,GAAG;IAChB;;MAEE;IACF,KAAK,EAAE,OAAO;CACf,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,0CAA0C,EAAE,SAAS,CAAC,CAAC;AAChG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAgBtE,6EAA6E;AAC7E,8EAA8E;AAC9E,2EAA2E;AAC3E,mBAAmB;AACnB,MAAM,OAAO,QAAS,SAAQ,WAAW;IACtB,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAC;IACpD,SAAS,GAAG,EAAE,CAAC;IACf,IAAI,GAAG,CAAC,CAAC;IACT,SAAS,GAAG,CAAC,GAAW,EAAU,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACjD,UAAU,GAAG,KAAK,CAAC;IACnB,KAAK,GAAG,CAAC,CAAC;IACV,MAAM,GAAqB,EAAE,CAAC;IAE9B,aAAa,GAAG,IAAI,CAAC;IACrB,aAAa,GAAG,CAAC,CAAC,CAAC;IAEV,MAAM,GAAG,KAAK,CAAC;IACxB,SAAS,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IAEjC,IAAI,IAAI,CAAC,IAAkB;QACzB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACtB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAChC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;QAClC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAE1B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,MAAM;QACZ,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9B,mBAAmB;QACnB,MAAM,MAAM,GAAG,IAAI,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gDAoGyB,IAAI,CAAC,SAAS,eAAe,IAAI,CAAC,SAAS;gDAC3C,IAAI,CAAC,IAAI,eAAe,IAAI,CAAC,IAAI;YACrE,GAAG,CAAA;;gCAEiB,IAAI,CAAC,IAAI,GAAG,CAAC;qFACwC,CAAC,GAAG,IAAI,CAAC,IAAI;wBAC1E,IAAI,CAAC,MAAM,6DAA6D,CAAC,GAAG,IAAI,CAAC,IAAI;cAC/F,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,EAAE;YACjC,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC;YAC9C,MAAM,QAAQ,GAAG,QAAQ,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3D,OAAO,GAAG,CAAA,sBAAsB,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;2BAC7C,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,QAAQ;yBACjD,KAAK,CAAC,KAAK,MAAM,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;+BAC5C,KAAK,CAAC,KAAK,OAAO,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC;QAC/E,CAAC,CAAC;;;;;;WAMH;;0CAE+B,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,YAAY,IAAI,CAAC,WAAW;2BAC/E,IAAI,CAAC,aAAa,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;gBAC9D,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE;;;;UAIlD,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAA;;YAEpB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,EAAE,KAAK,EAA0B,EAAE;YACzD,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,KAAK,KAAK,CAAC;YAC9C,OAAO,IAAI,CAAA;iDAC0B,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;2BAChD,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,aAAa,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;8CACzC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,CAAC;yEACA,KAAK,CAAC,KAAK;8CACtC,KAAK,CAAC,KAAK;qBACpC,CAAC;QACZ,CAAC,CAAC;6CACiC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE;uBAC1D,IAAI,CAAC,WAAW,aAAa,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;0CACzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;;0CAE1B,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC;;;SAG5D,CAAC,CAAC,CAAC,EAAE;KACT,CAAC;QACF,kBAAkB;QAClB,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,EAAC,IAAI,EAAE,IAAI,EAAC,CAAC,CAAC;IAC5C,CAAC;IAEO,cAAc,CAAC,KAAa;QAClC,OAAO,GAAS,EAAE;YAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC1B,CAAC,CAAC;IACJ,CAAC;IAEO,WAAW,CAAC,KAAa;QAC/B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,WAAW;QACjB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC1B,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;QACxB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAEO,mBAAmB;QACzB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,uEAAuE;QACvE,2EAA2E;QAC3E,wEAAwE;QACxE,0EAA0E;QAC1E,gBAAgB;QAChB,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAiB,iCAAiC,CAAC,CAAC;QACpG,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO;SACR;QACD,cAAc,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAEO,mBAAmB,CAAC,KAAa;QACvC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACxB,MAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAiB,kCAAkC,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;QACjH,IAAI,CAAC,cAAc,EAAE;YACnB,OAAO;SACR;QACD,cAAc,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAEO,gBAAgB;QACtB,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;SAC7B;aAAM,IAAI,IAAI,CAAC,aAAa,KAAK,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACxD,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;SAClD;IACH,CAAC;IAEO,oBAAoB;QAC1B,IAAI,IAAI,CAAC,aAAa,EAAE;YACtB,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAClD;aAAM,IAAI,IAAI,CAAC,aAAa,KAAK,CAAC,EAAE;YACnC,IAAI,CAAC,mBAAmB,EAAE,CAAC;SAC5B;aAAM;YACL,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;SAClD;IACH,CAAC;IAEO,SAAS,CAAC,KAAoB;QACpC,IAAI,OAAO,GAAG,KAAK,CAAC;QACpB,IAAI,KAAK,CAAC,GAAG,KAAK,WAAW,EAAE;YAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,OAAO,GAAG,IAAI,CAAC;SAChB;aAAM,IAAI,KAAK,CAAC,GAAG,KAAK,SAAS,EAAE;YAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,OAAO,GAAG,IAAI,CAAC;SAChB;QAED,IAAI,OAAO,EAAE;YACX,KAAK,CAAC,wBAAwB,EAAE,CAAC;YACjC,KAAK,CAAC,cAAc,EAAE,CAAC;SACxB;IACH,CAAC;IAEO,qBAAqB,CAAC,KAAY;QACxC,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QAC1B,IAAI,UAAU,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACzB,OAAO;SACR;QACD,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC;QACxD,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,IAAI,CAAC,SAAS,IAAI,UAAU,CAAC;QAC7B,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,MAAM,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACpC,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QACvB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACnB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACnB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACnB,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QACnB,MAAM,QAAQ,GAAG,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAE9C,MAAM,UAAU,GACZ,IAAI,EAAE,IAAI,EAAE,WAAW,QAAQ,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,QAAQ,MAAM,EAAE,IAAI,EAAE,IAAI,CAAC;QAC5G,OAAO,UAAU,CAAC;IACpB,CAAC;CACF;AAED,gBAAgB,CAAC,cAAc,CAAC,eAAe,CAAC,wBAAwB,EAAE,QAAQ,CAAC,CAAC","sourcesContent":["// Copyright (c) 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nimport * as ComponentHelpers from '../../../components/helpers/helpers.js';\nimport * as LitHtml from '../../../lit-html/lit-html.js';\n\nconst {render, html, svg} = LitHtml;\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nconst UIStrings = {\n  /**\n  *@description Text for sum\n  */\n  total: 'Total',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/perf_ui/PieChart.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport interface Slice {\n  value: number;\n  color: string;\n  title: string;\n}\n\nexport interface PieChartData {\n  chartName: string;\n  size: number;\n  formatter: (value: number) => string;\n  showLegend: boolean;\n  total: number;\n  slices: Slice[];\n}\n// If the slices are not available when constructing the pie chart, set .data\n// immediately, with total=0 and slices=[], so that the chart is rendered with\n// the correct initial size. This avoids a layout shift when the slices are\n// later populated.\nexport class PieChart extends HTMLElement {\n  private readonly shadow = this.attachShadow({mode: 'open'});\n  private chartName = '';\n  private size = 0;\n  private formatter = (val: number): string => String(val);\n  private showLegend = false;\n  private total = 0;\n  private slices: readonly Slice[] = [];\n\n  private totalSelected = true;\n  private sliceSelected = -1;\n\n  private readonly innerR = 0.618;\n  private lastAngle = -Math.PI / 2;\n\n  set data(data: PieChartData) {\n    this.chartName = data.chartName;\n    this.size = data.size;\n    this.formatter = data.formatter;\n    this.showLegend = data.showLegend;\n    this.total = data.total;\n    this.slices = data.slices;\n\n    this.render();\n  }\n\n  private render(): void {\n    this.lastAngle = -Math.PI / 2;\n    // clang-format off\n    const output = html`\n      <style>\n        .root {\n          align-items: center;\n          display: flex;\n          min-width: fit-content;\n          white-space: nowrap;\n        }\n\n        .chart-root {\n          position: relative;\n          overflow: hidden;\n        }\n\n        .pie-chart-foreground {\n          position: absolute;\n          width: 100%;\n          height: 100%;\n          z-index: 10;\n          top: 0;\n          display: flex;\n          pointer-events: none;\n        }\n\n        .pie-chart-total {\n          margin: auto;\n          padding: 2px 5px;\n          pointer-events: auto;\n        }\n\n        :focus {\n          outline-width: 0;\n        }\n\n        .pie-chart-total.selected {\n          font-weight: bold;\n        }\n\n        .chart-root .slice.selected {\n          stroke: var(--legacy-selection-bg-color);\n          stroke-opacity: 1;\n          stroke-width: 0.04;\n          stroke-linecap: round;\n          stroke-linejoin: round;\n        }\n\n        .pie-chart-legend {\n          margin-left: 30px;\n        }\n\n        .pie-chart-legend-row {\n          margin: 5px 2px 5px auto;\n          padding-right: 25px;\n        }\n\n        .pie-chart-legend-row.selected {\n          font-weight: bold;\n        }\n\n        .pie-chart-legend-row:focus-visible {\n          box-shadow: 0 0 0 2px var(--legacy-selection-bg-color) !important; /* stylelint-disable-line declaration-no-important */\n        }\n\n        .pie-chart-swatch {\n          display: inline-block;\n          width: 11px;\n          height: 11px;\n          margin: 0 6px;\n          top: 1px;\n          position: relative;\n          border: 1px solid rgb(100 100 100 / 20%); /* stylelint-disable-line plugin/use_theme_colors */\n          /* See: crbug.com/1152736 for color variable migration. */\n        }\n\n        .pie-chart-swatch.pie-chart-empty-swatch {\n          border: none;\n        }\n\n        .pie-chart-name {\n          display: inline-block;\n        }\n\n        .pie-chart-size {\n          display: inline-block;\n          text-align: right;\n          width: 70px;\n        }\n\n        @media (forced-colors: active) {\n          .pie-chart-swatch {\n            forced-color-adjust: none;\n            border-color: ButtonText;\n          }\n\n          .pie-chart-total {\n            forced-color-adjust: none;\n            background-color: canvas;\n          }\n        }\n      </style>\n      <div class=\"root\" role=\"group\" @keydown=${this.onKeyDown} aria-label=${this.chartName}>\n        <div class=\"chart-root\" style=\"width: ${this.size}px; height: ${this.size}px;\">\n          ${svg`\n          <svg>\n          <g transform=\"scale(${this.size / 2}) translate(1, 1) scale(0.99, 0.99)\">\n            <circle r=\"1\" stroke=\"hsl(0, 0%, 80%)\" fill=\"transparent\" stroke-width=${1 / this.size}></circle>\n            <circle r=${this.innerR} stroke=\"hsl(0, 0%, 80%)\" fill=\"transparent\" stroke-width=${1 / this.size}></circle>\n            ${this.slices.map((slice, index) => {\n              const selected = this.sliceSelected === index;\n              const tabIndex = selected && !this.showLegend ? '0' : '-1';\n              return svg`<path class=\"slice ${selected ? 'selected' : ''}\"\n                  @click=${this.onSliceClicked(index)} tabIndex=${tabIndex}\n                  fill=${slice.color} d=${this.getPathStringForSlice(slice)}\n                  aria-label=${slice.title} id=${selected ? 'selectedSlice' : ''}></path>`;\n            })}\n            <!-- This is so that the selected slice is re-drawn on top, to avoid re-ordering slices\n            just to render them properly. -->\n            <use href=\"#selectedSlice\" />\n            </g>\n          </svg>\n          `}\n          <div class=\"pie-chart-foreground\">\n            <div class=\"pie-chart-total ${this.totalSelected ? 'selected' : ''}\" @click=${this.selectTotal}\n                tabIndex=${this.totalSelected && !this.showLegend ? '1' : '-1'}>\n              ${this.total ? this.formatter(this.total) : ''}\n            </div>\n          </div>\n        </div>\n        ${this.showLegend ? html`\n        <div class=\"pie-chart-legend\">\n          ${this.slices.map((slice, index): LitHtml.TemplateResult => {\n            const selected = this.sliceSelected === index;\n            return html`\n              <div class=\"pie-chart-legend-row ${selected ? 'selected' : ''}\"\n                  @click=${this.onSliceClicked(index)} tabIndex=${selected ? '0' : '-1'}>\n                <div class=\"pie-chart-size\">${this.formatter(slice.value)}</div>\n                <div class=\"pie-chart-swatch\" style=\"background-color: ${slice.color};\"></div>\n                <div class=\"pie-chart-name\">${slice.title}</div>\n              </div>`;\n          })}\n          <div class=\"pie-chart-legend-row ${this.totalSelected ? 'selected' : ''}\"\n              @click=${this.selectTotal} tabIndex=${this.totalSelected ? '0' : '-1'}>\n            <div class=\"pie-chart-size\">${this.formatter(this.total)}</div>\n            <div class=\"pie-chart-swatch pie-chart-empty-swatch\"></div>\n            <div class=\"pie-chart-name\">${i18nString(UIStrings.total)}</div>\n          </div>\n        </div>\n        ` : ''}\n    `;\n    // clang-format on\n    render(output, this.shadow, {host: this});\n  }\n\n  private onSliceClicked(index: number): () => void {\n    return (): void => {\n      this.selectSlice(index);\n    };\n  }\n\n  private selectSlice(index: number): void {\n    this.totalSelected = false;\n    this.sliceSelected = index;\n    this.render();\n  }\n\n  private selectTotal(): void {\n    this.totalSelected = true;\n    this.sliceSelected = -1;\n    this.render();\n  }\n\n  private selectAndFocusTotal(): void {\n    this.selectTotal();\n    // In order for the :focus-visible styles to work, we need to focus the\n    // newly selected item. This is so that the outline is only shown for focus\n    // caused by keyboard events and not all focus e.g. showing a focus ring\n    // when we click on something is not necessary. The same goes for focusing\n    // slices below.\n    const totalLegendRow = this.shadow.querySelector<HTMLDivElement>('.pie-chart-legend > :last-child');\n    if (!totalLegendRow) {\n      return;\n    }\n    totalLegendRow.focus();\n  }\n\n  private selectAndFocusSlice(index: number): void {\n    this.selectSlice(index);\n    const sliceLegendRow = this.shadow.querySelector<HTMLDivElement>(`.pie-chart-legend > :nth-child(${index + 1})`);\n    if (!sliceLegendRow) {\n      return;\n    }\n    sliceLegendRow.focus();\n  }\n\n  private focusNextElement(): void {\n    if (this.totalSelected) {\n      this.selectAndFocusSlice(0);\n    } else if (this.sliceSelected === this.slices.length - 1) {\n      this.selectAndFocusTotal();\n    } else {\n      this.selectAndFocusSlice(this.sliceSelected + 1);\n    }\n  }\n\n  private focusPreviousElement(): void {\n    if (this.totalSelected) {\n      this.selectAndFocusSlice(this.slices.length - 1);\n    } else if (this.sliceSelected === 0) {\n      this.selectAndFocusTotal();\n    } else {\n      this.selectAndFocusSlice(this.sliceSelected - 1);\n    }\n  }\n\n  private onKeyDown(event: KeyboardEvent): void {\n    let handled = false;\n    if (event.key === 'ArrowDown') {\n      this.focusNextElement();\n      handled = true;\n    } else if (event.key === 'ArrowUp') {\n      this.focusPreviousElement();\n      handled = true;\n    }\n\n    if (handled) {\n      event.stopImmediatePropagation();\n      event.preventDefault();\n    }\n  }\n\n  private getPathStringForSlice(slice: Slice): string|undefined {\n    const value = slice.value;\n    let sliceAngle = value / this.total * 2 * Math.PI;\n    if (!isFinite(sliceAngle)) {\n      return;\n    }\n    sliceAngle = Math.min(sliceAngle, 2 * Math.PI * 0.9999);\n    const x1 = Math.cos(this.lastAngle);\n    const y1 = Math.sin(this.lastAngle);\n    this.lastAngle += sliceAngle;\n    const x2 = Math.cos(this.lastAngle);\n    const y2 = Math.sin(this.lastAngle);\n    const r2 = this.innerR;\n    const x3 = x2 * r2;\n    const y3 = y2 * r2;\n    const x4 = x1 * r2;\n    const y4 = y1 * r2;\n    const largeArc = sliceAngle > Math.PI ? 1 : 0;\n\n    const pathString =\n        `M${x1},${y1} A1,1,0,${largeArc},1,${x2},${y2} L${x3},${y3} A${r2},${r2},0,${largeArc},0,${x4},${y4} Z`;\n    return pathString;\n  }\n}\n\nComponentHelpers.CustomElements.defineComponent('devtools-perf-piechart', PieChart);\n\ndeclare global {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  interface HTMLElementTagNameMap {\n    'devtools-perf-piechart': PieChart;\n  }\n}\n"]}