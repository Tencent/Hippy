{"version":3,"file":"FontEditor.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/FontEditor.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as IconButton from '../../../components/icon_button/icon_button.js';\nimport * as UI from '../../legacy.js';\n\nimport * as FontEditorUnitConverter from './FontEditorUnitConverter.js';\nimport * as FontEditorUtils from './FontEditorUtils.js';\n\nconst UIStrings = {\n  /**\n  *@description Font editor label for font family selector\n  */\n  fontFamily: 'Font Family',\n  /**\n  *@description Section header for CSS property inputs\n  */\n  cssProperties: 'CSS Properties',\n  /**\n  *@description Font size slider label for Font Editor\n  */\n  fontSize: 'Font Size',\n  /**\n  *@description Line height slider label for Font Editor\n  */\n  lineHeight: 'Line Height',\n  /**\n  *@description Font weight slider label for Font Editor\n  */\n  fontWeight: 'Font Weight',\n  /**\n  *@description Label for letter-spacing labels\n  */\n  spacing: 'Spacing',\n  /**\n  *@description Label for numbered fallback selectors\n  *@example {2} PH1\n  */\n  fallbackS: 'Fallback {PH1}',\n  /**\n  *@description Announcement for deleting an empty font family selector in the Font Editor\n  *@example {2} PH1\n  */\n  thereIsNoValueToDeleteAtIndexS: 'There is no value to delete at index: {PH1}',\n  /**\n  *@description Announcement when deleting a font selector in the Font Editor\n  *@example {2} PH1\n  */\n  fontSelectorDeletedAtIndexS: 'Font Selector deleted at index: {PH1}',\n  /**\n  *@description Label for Font Editor button to delete font family/fallback selectors\n  *@example {Fallback 1} PH1\n  */\n  deleteS: 'Delete {PH1}',\n  /**\n  * @description Warning message for Font Editor invalid text input. The placeholder is the name of\n  * the CSS attribute that is incorrect.\n  * @example {font-size} PH1\n  */\n  PleaseEnterAValidValueForSText: '* Please enter a valid value for {PH1} text input',\n  /**\n  *@description Error text in Font Editor\n  *@example {font-size} PH1\n  */\n  thisPropertyIsSetToContainUnits:\n      'This property is set to contain units but does not have a defined corresponding unitsArray: {PH1}',\n  /**\n  *@description Label for slider input in the Font Editor.\n  *@example {font-size} PH1\n  */\n  sSliderInput: '{PH1} Slider Input',\n  /**\n  *@description Accessible label for a text input for a property in the Font Editor.\n  *@example {font-size} PH1\n  */\n  sTextInput: '{PH1} Text Input',\n  /**\n  *@description Font Editor units text box label\n  */\n  units: 'Units',\n  /**\n  * @description Accessible name for Font Editor unit input. The placeholder is the name of the font\n  * property that this UI input controls. e.g. font-size, line-height, line-weight.\n  * @example {font-size} PH1\n  */\n  sUnitInput: '{PH1} Unit Input',\n  /**\n  *@description Text used in the Font Editor for the key values selector\n  *@example {font-size} PH1\n  */\n  sKeyValueSelector: '{PH1} Key Value Selector',\n  /**\n  * @description Label for Font Editor toggle input type button. The placeholder is the name of the\n  * font property that this UI input controls. e.g. font-size, line-height, line-weight. Tooltip for\n  * a button next to the text input which allows the user to change the input type. When they click\n  * this button, the UI changes to allow the user to choose from a list of pre-selected font\n  * categories.\n  * @example {font-size} PH1\n  */\n  sToggleInputType: '{PH1} toggle input type',\n  /**\n  *@description Label for Font Editor alert in CSS Properties section when toggling inputs\n  */\n  selectorInputMode: 'Selector Input Mode',\n  /**\n  *@description Label for Font Editor alert in CSS Properties section when toggling inputs\n  */\n  sliderInputMode: 'Slider Input Mode',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/inline_editor/FontEditor.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\n\nexport class FontEditor extends UI.Widget.VBox {\n  _selectedNode: SDK.DOMModel.DOMNode|null;\n  _propertyMap: Map<string, string>;\n  _fontSelectorSection: HTMLElement;\n  _fontSelectors: FontEditor.FontSelectorObject[];\n  _fontsList: Map<string, string[]>[]|null;\n\n  constructor(propertyMap: Map<string, string>) {\n    super(true);\n    this.registerRequiredCSS('ui/legacy/components/inline_editor/fontEditor.css', {enableLegacyPatching: false});\n    this._selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n\n    this._propertyMap = propertyMap;\n    this.contentElement.tabIndex = 0;\n    this.setDefaultFocusedElement(this.contentElement);\n\n    // Font Selector Section\n    this._fontSelectorSection = this.contentElement.createChild('div', 'font-selector-section');\n    this._fontSelectorSection.createChild('h2', 'font-section-header').textContent = i18nString(UIStrings.fontFamily);\n\n    this._fontSelectors = [];\n\n    this._fontsList = null;\n\n    const propertyValue: string|undefined = this._propertyMap.get('font-family');\n\n    this._createFontSelectorSection(propertyValue);\n\n    //  CSS Font Property Section\n    const cssPropertySection = this.contentElement.createChild('div', 'font-section');\n    cssPropertySection.createChild('h2', 'font-section-header').textContent = i18nString(UIStrings.cssProperties);\n\n    // The regexes only handle valid property values as invalid values are not passed into the property map.\n    const fontSizePropertyInfo = this._getPropertyInfo('font-size', FontEditorUtils.FontSizeStaticParams.regex);\n\n    const lineHeightPropertyInfo = this._getPropertyInfo('line-height', FontEditorUtils.LineHeightStaticParams.regex);\n\n    const fontWeightPropertyInfo = this._getPropertyInfo('font-weight', FontEditorUtils.FontWeightStaticParams.regex);\n\n    const letterSpacingPropertyInfo =\n        this._getPropertyInfo('letter-spacing', FontEditorUtils.LetterSpacingStaticParams.regex);\n\n    new FontPropertyInputs(\n        'font-size', i18nString(UIStrings.fontSize), cssPropertySection, fontSizePropertyInfo,\n        FontEditorUtils.FontSizeStaticParams, this._updatePropertyValue.bind(this), this._resizePopout.bind(this),\n        /** hasUnits= */ true);\n    new FontPropertyInputs(\n        'line-height', i18nString(UIStrings.lineHeight), cssPropertySection, lineHeightPropertyInfo,\n        FontEditorUtils.LineHeightStaticParams, this._updatePropertyValue.bind(this), this._resizePopout.bind(this),\n        /** hasUnits= */ true);\n    new FontPropertyInputs(\n        'font-weight', i18nString(UIStrings.fontWeight), cssPropertySection, fontWeightPropertyInfo,\n        FontEditorUtils.FontWeightStaticParams, this._updatePropertyValue.bind(this), this._resizePopout.bind(this),\n        /** hasUnits= */ false);\n    new FontPropertyInputs(\n        'letter-spacing', i18nString(UIStrings.spacing), cssPropertySection, letterSpacingPropertyInfo,\n        FontEditorUtils.LetterSpacingStaticParams, this._updatePropertyValue.bind(this), this._resizePopout.bind(this),\n        /** hasUnits= */ true);\n  }\n\n  async _createFontSelectorSection(propertyValue?: string): Promise<void> {\n    if (propertyValue) {\n      // FIXME(crbug.com/1148434): propertyValue will not be split correctly for font family names that contain commas.\n      // e.g. font-family: \"Name,with,commas\"\n      const splitValue = propertyValue.split(',');\n      await this._createFontSelector(splitValue[0], /* isPrimary= */ true);\n      if (!FontEditorUtils.GlobalValues.includes(splitValue[0])) {\n        // We add one to the splitValue length so that we have an additional empty fallback selector\n        for (let i = 1; i < splitValue.length + 1; i++) {\n          this._createFontSelector(splitValue[i]);\n        }\n      }\n    } else {\n      this._createFontSelector('', true);\n    }\n    this._resizePopout();\n  }\n\n  async _createFontsList(): Promise<Map<string, string[]>[]> {\n    const computedFontArray = await FontEditorUtils.generateComputedFontArray();\n    const computedMap = new Map<string, string[]>();\n    const splicedArray = this._splitComputedFontArray(computedFontArray);\n\n    computedMap.set('Computed Fonts', splicedArray);\n    const systemMap = new Map<string, string[]>();\n    systemMap.set('System Fonts', FontEditorUtils.SystemFonts);\n    systemMap.set('Generic Families', FontEditorUtils.GenericFonts);\n\n    const fontList = [];\n    fontList.push(computedMap);\n    fontList.push(systemMap);\n    return fontList;\n  }\n\n  _splitComputedFontArray(computedFontArray: string[]): string[] {\n    const array: string[] = [];\n    for (const fontFamilyValue of computedFontArray) {\n      if (fontFamilyValue.includes(',')) {\n        const fonts = fontFamilyValue.split(',');\n        fonts.forEach(element => {\n          if (array.findIndex(item => item.toLowerCase() === element.trim().toLowerCase().replace(/\"/g, '\\'')) === -1) {\n            array.push(element.trim().replace(/\"/g, ''));\n          }\n        });\n      } else if (\n          array.findIndex(item => item.toLowerCase() === fontFamilyValue.toLowerCase().replace('\"', '\\'')) === -1) {\n        array.push(fontFamilyValue.replace(/\"/g, ''));\n      }\n    }\n    return array as string[];\n  }\n\n  async _createFontSelector(value: string, isPrimary?: boolean): Promise<void> {\n    // FIXME(crbug.com/1148434): Custom font family names that use single/double quotes in the font family name will not be handled correctly.\n    // e.g. font-family: \"FontWith\\\"DoubleQuotes\"\n    value = value ? value.trim() : '';\n    if (value) {\n      const firstChar = value.charAt(0);\n      if (firstChar === '\\'') {\n        value = value.replace(/'/g, '');\n      } else if (firstChar === '\"') {\n        value = value.replace(/\"/g, '');\n      }\n    }\n    const selectorField = this._fontSelectorSection.createChild('div', 'shadow-editor-field shadow-editor-flex-field');\n    if (!this._fontsList) {\n      this._fontsList = await this._createFontsList();\n    }\n    let label;\n    if (isPrimary) {\n      label = i18nString(UIStrings.fontFamily);\n      const globalValuesMap = new Map([['Global Values', FontEditorUtils.GlobalValues]]);\n      const primaryFontList = [...this._fontsList];\n      primaryFontList.push(globalValuesMap);\n      this._createSelector(selectorField, label, primaryFontList, value.trim());\n    } else {\n      label = i18nString(UIStrings.fallbackS, {PH1: this._fontSelectors.length});\n      this._createSelector(selectorField, label, this._fontsList, value.trim());\n    }\n  }\n\n  _deleteFontSelector(index: number, isGlobalValue?: boolean): void {\n    let fontSelectorObject: FontEditor.FontSelectorObject = this._fontSelectors[index];\n    const isPrimary = index === 0;\n    if (fontSelectorObject.input.value === '' && !isGlobalValue) {\n      UI.ARIAUtils.alert(i18nString(UIStrings.thereIsNoValueToDeleteAtIndexS, {PH1: index}));\n      return;\n    }\n    if (isPrimary) {\n      // When deleting the primary font selector, we overwrite the value of the primary selector\n      // with the value of the secondary selector and delete the secondary selector.\n      const secondarySelector = this._fontSelectors[1];\n      let newPrimarySelectorValue = '';\n      if (secondarySelector) {\n        newPrimarySelectorValue = secondarySelector.input.value;\n        fontSelectorObject = secondarySelector;\n      }\n      const primarySelector = this._fontSelectors[0].input;\n      primarySelector.value = newPrimarySelectorValue;\n      index = 1;\n    }\n    if (fontSelectorObject.input.parentNode) {\n      const hasSecondarySelector = this._fontSelectors.length > 1;\n      if (!isPrimary || hasSecondarySelector) {\n        const selectorElement = fontSelectorObject.input.parentElement;\n        if (selectorElement) {\n          selectorElement.remove();\n          this._fontSelectors.splice(index, 1);\n          this._updateFontSelectorList();\n        }\n      }\n      UI.ARIAUtils.alert(i18nString(UIStrings.fontSelectorDeletedAtIndexS, {PH1: index}));\n    }\n    this._onFontSelectorChanged();\n    this._resizePopout();\n    const focusIndex = isPrimary ? 0 : index - 1;\n    this._fontSelectors[focusIndex].input.focus();\n  }\n\n  _updateFontSelectorList(): void {\n    for (let i = 0; i < this._fontSelectors.length; i++) {\n      const fontSelectorObject = this._fontSelectors[i];\n      let label;\n      if (i === 0) {\n        label = i18nString(UIStrings.fontFamily);\n      } else {\n        label = i18nString(UIStrings.fallbackS, {PH1: i});\n      }\n      fontSelectorObject.label.textContent = label;\n      UI.ARIAUtils.setAccessibleName(fontSelectorObject.input, label);\n      fontSelectorObject.deleteButton.setTitle(i18nString(UIStrings.deleteS, {PH1: label}));\n      fontSelectorObject.index = i;\n    }\n  }\n\n  _getPropertyInfo(name: string, regex: RegExp): FontEditor.PropertyInfo {\n    const value = this._propertyMap.get(name);\n    if (value) {\n      const valueString = value;\n      const match = valueString.match(regex);\n      if (match) {\n        const retValue = match[1].charAt(0) === '+' ? match[1].substr(1) : match[1];\n        const retUnits = match[2] ? match[2] : '';\n        return {value: retValue, units: retUnits};\n      }\n      return {value: valueString, units: null};\n    }\n    return {value: null, units: null};\n  }\n\n  _createSelector(field: Element, label: string, options: Map<string, string[]>[], currentValue: string): void {\n    const index = this._fontSelectors.length;\n    const selectInput = (UI.UIUtils.createSelect(label, options) as HTMLSelectElement);\n    selectInput.value = currentValue;\n    const selectLabel = UI.UIUtils.createLabel(label, 'shadow-editor-label', selectInput);\n    selectInput.addEventListener('input', this._onFontSelectorChanged.bind(this), false);\n    // We want to prevent the Enter key from propagating to the SwatchPopoverHelper which will close the editor.\n    selectInput.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        event.consume();\n      }\n    }, false);\n    field.appendChild(selectLabel);\n    field.appendChild(selectInput);\n\n    const deleteToolbar = new UI.Toolbar.Toolbar('', field);\n    const deleteButton =\n        new UI.Toolbar.ToolbarButton(i18nString(UIStrings.deleteS, {PH1: label}), 'largeicon-trash-bin');\n    deleteToolbar.appendToolbarItem(deleteButton);\n    const fontSelectorObject = {label: selectLabel, input: selectInput, deleteButton, index};\n    deleteButton.addEventListener(UI.Toolbar.ToolbarButton.Events.Click, () => {\n      this._deleteFontSelector(fontSelectorObject.index);\n    });\n    deleteButton.element.addEventListener('keydown', (event: Event) => {\n      if (isEnterOrSpaceKey(event)) {\n        this._deleteFontSelector(fontSelectorObject.index);\n        event.consume();\n      }\n    }, false);\n    this._fontSelectors.push(fontSelectorObject);\n  }\n\n  _onFontSelectorChanged(): void {\n    let value = '';\n    const isGlobalValue = FontEditorUtils.GlobalValues.includes(this._fontSelectors[0].input.value);\n\n    if (isGlobalValue) {\n      for (let i = 1; i < this._fontSelectors.length; i++) {\n        this._deleteFontSelector(i, /** isGlobalValue= */ true);\n      }\n    }\n    for (const fontSelector of this._fontSelectors) {\n      const fontSelectorInput = fontSelector.input;\n      if (fontSelectorInput.value !== '') {\n        if (value === '') {\n          value = this._fontSelectors[0].input.value;\n        } else {\n          value += ', ' + fontSelectorInput.value;\n        }\n      }\n    }\n    // Add an extra blank selector as long as the last selector doesn't have an empty value, the primary\n    // selector's value is not a global value and if the list of selectors has not exceeded 10.\n    if (this._fontSelectors[this._fontSelectors.length - 1].input.value !== '' && !isGlobalValue &&\n        this._fontSelectors.length < 10) {\n      this._createFontSelector(/** value= */ '');\n      this._resizePopout();\n    }\n    this._updatePropertyValue('font-family', value);\n  }\n\n  _updatePropertyValue(propertyName: string, value: string): void {\n    this.dispatchEventToListeners(Events.FontChanged, {propertyName, value});\n  }\n\n  _resizePopout(): void {\n    this.dispatchEventToListeners(Events.FontEditorResized);\n  }\n}\n\nnamespace FontEditor {\n  export interface PropertyInfo {\n    value: string|null;\n    units: string|null;\n  }\n\n  export interface FontSelectorObject {\n    label: Element;\n    input: HTMLSelectElement;\n    deleteButton: UI.Toolbar.ToolbarButton;\n    index: number;\n  }\n\n  export interface PropertyRange {\n    min: number;\n    max: number;\n    step: number;\n  }\n\n  export interface FontPropertyInputStaticParams {\n    regex: RegExp;\n    units: Set<string>|null;\n    keyValues: Set<string>;\n    rangeMap: Map<string, FontEditor.PropertyRange>;\n    defaultUnit: string|null;\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  FontChanged = 'FontChanged',\n  FontEditorResized = 'FontEditorResized',\n}\n\nclass FontPropertyInputs {\n  _showSliderMode: boolean;\n  _errorText: HTMLElement;\n  _propertyInfo: FontEditor.PropertyInfo;\n  _propertyName: string;\n  _staticParams: FontEditor.FontPropertyInputStaticParams;\n  _hasUnits: boolean|undefined;\n  _units: string;\n  _addedUnit: boolean|undefined;\n  _initialRange: FontEditor.PropertyRange;\n  _boundUpdateCallback: (arg0: string, arg1: string) => void;\n  _boundResizeCallback: () => void;\n  _selectedNode: SDK.DOMModel.DOMNode|null;\n  _sliderInput: UI.UIUtils.DevToolsSlider;\n  _textBoxInput: HTMLInputElement;\n  _unitInput: HTMLSelectElement;\n  _selectorInput: HTMLSelectElement;\n  _applyNextInput: boolean;\n\n  constructor(\n      propertyName: string, label: string, field: Element, propertyInfo: FontEditor.PropertyInfo,\n      staticParams: FontEditor.FontPropertyInputStaticParams, updateCallback: (arg0: string, arg1: string) => void,\n      resizeCallback: () => void, hasUnits?: boolean) {\n    this._showSliderMode = true;\n    const propertyField = field.createChild('div', 'shadow-editor-field shadow-editor-flex-field');\n    this._errorText = (field.createChild('div', 'error-text') as HTMLElement);\n    this._errorText.textContent = i18nString(UIStrings.PleaseEnterAValidValueForSText, {PH1: propertyName});\n    this._errorText.hidden = true;\n    UI.ARIAUtils.markAsAlert(this._errorText);\n    this._propertyInfo = propertyInfo;\n    this._propertyName = propertyName;\n    this._staticParams = staticParams;\n\n    // Unit handling\n    this._hasUnits = hasUnits;\n    if (this._hasUnits && this._staticParams.units && this._staticParams.defaultUnit !== null) {\n      const defaultUnits = this._staticParams.defaultUnit;\n      this._units = propertyInfo.units !== null ? propertyInfo.units : defaultUnits;\n      this._addedUnit = !this._staticParams.units.has(this._units);\n    } else if (this._hasUnits) {\n      throw new Error(i18nString(UIStrings.thisPropertyIsSetToContainUnits, {PH1: propertyName}));\n    } else {\n      this._units = '';\n    }\n    this._initialRange = this._getUnitRange();\n\n    this._boundUpdateCallback = updateCallback;\n    this._boundResizeCallback = resizeCallback;\n    this._selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    const propertyLabel = UI.UIUtils.createLabel(label, 'shadow-editor-label');\n    propertyField.append(propertyLabel);\n    this._sliderInput = this._createSliderInput(propertyField, label);\n    this._textBoxInput = this._createTextBoxInput(propertyField);\n    UI.ARIAUtils.bindLabelToControl(propertyLabel, this._textBoxInput);\n    this._unitInput = this._createUnitInput(propertyField);\n    this._selectorInput = this._createSelectorInput(propertyField);\n    this._createTypeToggle(propertyField);\n    this._checkSelectorValueAndToggle();\n    this._applyNextInput = false;\n  }\n\n  _setInvalidTextBoxInput(invalid: boolean): void {\n    if (invalid) {\n      if (this._errorText.hidden) {\n        this._errorText.hidden = false;\n        this._textBoxInput.classList.add('error-input');\n        this._boundResizeCallback();\n      }\n    } else {\n      if (!this._errorText.hidden) {\n        this._errorText.hidden = true;\n        this._textBoxInput.classList.remove('error-input');\n        this._boundResizeCallback();\n      }\n    }\n  }\n\n  _checkSelectorValueAndToggle(): boolean {\n    if (this._staticParams.keyValues && this._propertyInfo.value !== null &&\n        (this._staticParams.keyValues.has(this._propertyInfo.value))) {\n      this._toggleInputType();\n      return true;\n    }\n    return false;\n  }\n\n  _getUnitRange(): FontEditor.PropertyRange {\n    let min = 0;\n    let max = 100;\n    let step = 1;\n    if (this._propertyInfo.value !== null && /\\d/.test(this._propertyInfo.value)) {\n      if (this._staticParams.rangeMap.get(this._units)) {\n        const unitRangeMap = this._staticParams.rangeMap.get(this._units);\n        if (unitRangeMap) {\n          min = Math.min(unitRangeMap.min, parseFloat(this._propertyInfo.value));\n          max = Math.max(unitRangeMap.max, parseFloat(this._propertyInfo.value));\n          step = unitRangeMap.step;\n        }\n      } else {\n        const unitRangeMap = this._staticParams.rangeMap.get('px');\n        if (unitRangeMap) {\n          min = Math.min(unitRangeMap.min, parseFloat(this._propertyInfo.value));\n          max = Math.max(unitRangeMap.max, parseFloat(this._propertyInfo.value));\n          step = unitRangeMap.step;\n        }\n      }\n    } else {\n      const unitRangeMap = this._staticParams.rangeMap.get(this._units);\n      if (unitRangeMap) {\n        min = unitRangeMap.min;\n        max = unitRangeMap.max;\n        step = unitRangeMap.step;\n      }\n    }\n    return {min, max, step};\n  }\n\n  _createSliderInput(field: Element, _label: string): UI.UIUtils.DevToolsSlider {\n    const min = this._initialRange.min;\n    const max = this._initialRange.max;\n    const step = this._initialRange.step;\n\n    const slider = (UI.UIUtils.createSlider(min, max, -1) as UI.UIUtils.DevToolsSlider);\n    slider.sliderElement.step = step.toString();\n    slider.sliderElement.tabIndex = 0;\n    if (this._propertyInfo.value) {\n      slider.value = parseFloat(this._propertyInfo.value);\n    } else {\n      const newValue = (min + max) / 2;\n      slider.value = newValue;\n    }\n    slider.addEventListener('input', event => {\n      this._onSliderInput(event, /** apply= */ false);\n    });\n\n    slider.addEventListener('mouseup', event => {\n      this._onSliderInput(event, /** apply= */ true);\n    });\n    slider.addEventListener('keydown', event => {\n      if (event.key === 'ArrowUp' || event.key === 'ArrowDown' || event.key === 'ArrowLeft' ||\n          event.key === 'ArrowRight') {\n        // Pressing an arrow key will trigger two events for the slider: A keyboard event and an input event\n        // The keyboard event will come before the slider value has changed and the subsequent input event will cause\n        // the value to change.  We use the _applyNextInput boolean to tell _onSliderInput that the next input event\n        // is coming because of the keyboard event and that it should be applied to the section.\n        this._applyNextInput = true;\n      }\n    });\n    field.appendChild(slider);\n    UI.ARIAUtils.setAccessibleName(slider.sliderElement, i18nString(UIStrings.sSliderInput, {PH1: this._propertyName}));\n    return slider;\n  }\n\n  _createTextBoxInput(field: Element): HTMLInputElement {\n    const textBoxInput: HTMLInputElement = UI.UIUtils.createInput('shadow-editor-text-input', 'number');\n\n    textBoxInput.step = this._initialRange.step.toString();\n    textBoxInput.classList.add('font-editor-text-input');\n    if (this._propertyInfo.value !== null) {\n      if (this._propertyInfo.value.charAt(0) === '+') {\n        this._propertyInfo.value = this._propertyInfo.value.substr(1);\n      }\n      textBoxInput.value = this._propertyInfo.value;\n    }\n    textBoxInput.step = 'any';\n    textBoxInput.addEventListener('input', this._onTextBoxInput.bind(this), false);\n    field.appendChild(textBoxInput);\n    UI.ARIAUtils.setAccessibleName(textBoxInput, i18nString(UIStrings.sTextInput, {PH1: this._propertyName}));\n    return textBoxInput;\n  }\n\n  _createUnitInput(field: Element): HTMLSelectElement {\n    let unitInput;\n    if (this._hasUnits && this._staticParams.units) {\n      const currentValue = this._propertyInfo.units;\n      const options = this._staticParams.units;\n      unitInput = UI.UIUtils.createSelect(i18nString(UIStrings.units), options);\n      unitInput.classList.add('font-editor-select');\n      if (this._addedUnit && currentValue) {\n        unitInput.add(new Option(currentValue, currentValue));\n      }\n      if (currentValue) {\n        unitInput.value = currentValue;\n      }\n      unitInput.addEventListener('change', this._onUnitInput.bind(this), false);\n    } else {\n      unitInput = UI.UIUtils.createSelect(i18nString(UIStrings.units), []);\n      unitInput.classList.add('font-editor-select');\n      unitInput.disabled = true;\n    }\n    // We want to prevent the Enter key from propagating to the SwatchPopoverHelper which will close the editor.\n    unitInput.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        event.consume();\n      }\n    }, false);\n    field.appendChild(unitInput);\n    UI.ARIAUtils.setAccessibleName(unitInput, i18nString(UIStrings.sUnitInput, {PH1: this._propertyName}));\n\n    return unitInput;\n  }\n\n  _createSelectorInput(field: Element): HTMLSelectElement {\n    const selectInput: HTMLSelectElement = UI.UIUtils.createSelect(\n        i18nString(UIStrings.sKeyValueSelector, {PH1: this._propertyName}), this._staticParams.keyValues);\n    selectInput.classList.add('font-selector-input');\n    if (this._propertyInfo.value) {\n      selectInput.value = this._propertyInfo.value;\n    }\n    selectInput.addEventListener('input', this._onSelectorInput.bind(this), false);\n    // We want to prevent the Enter key from propagating to the SwatchPopoverHelper which will close the editor.\n    selectInput.addEventListener('keydown', (event: KeyboardEvent) => {\n      if (event.key === 'Enter') {\n        event.consume();\n      }\n    }, false);\n    field.appendChild(selectInput);\n    selectInput.hidden = true;\n    return selectInput;\n  }\n\n  _onSelectorInput(event: Event): void {\n    if (event.currentTarget) {\n      const value = (event.currentTarget as HTMLInputElement).value;\n      this._textBoxInput.value = '';\n      const newValue =\n          (parseFloat(this._sliderInput.sliderElement.min) + parseFloat(this._sliderInput.sliderElement.max)) / 2;\n      this._sliderInput.value = newValue;\n      this._setInvalidTextBoxInput(false);\n      this._boundUpdateCallback(this._propertyName, value);\n    }\n  }\n\n  _onSliderInput(event: Event, apply: boolean): void {\n    const target = (event.currentTarget as HTMLInputElement);\n    if (target) {\n      const value = target.value;\n      this._textBoxInput.value = value;\n      this._selectorInput.value = '';\n      const valueString = this._hasUnits ? value + this._unitInput.value : value.toString();\n      this._setInvalidTextBoxInput(false);\n      if (apply || this._applyNextInput) {\n        this._boundUpdateCallback(this._propertyName, valueString);\n        this._applyNextInput = false;\n      }\n    }\n  }\n\n  _onTextBoxInput(event: Event): void {\n    const target = (event.currentTarget as HTMLInputElement);\n    if (target) {\n      const value = target.value;\n      const units = value === '' ? '' : this._unitInput.value;\n      const valueString = value + units;\n      if (this._staticParams.regex.test(valueString) || (value === '' && !target.validationMessage.length)) {\n        if (parseFloat(value) > parseFloat(this._sliderInput.sliderElement.max)) {\n          this._sliderInput.sliderElement.max = value;\n        } else if (parseFloat(value) < parseFloat(this._sliderInput.sliderElement.min)) {\n          this._sliderInput.sliderElement.min = value;\n        }\n        this._sliderInput.value = parseFloat(value);\n        this._selectorInput.value = '';\n        this._setInvalidTextBoxInput(false);\n        this._boundUpdateCallback(this._propertyName, valueString);\n      } else {\n        this._setInvalidTextBoxInput(true);\n      }\n    }\n  }\n\n  async _onUnitInput(event: Event): Promise<void> {\n    const unitInput = (event.currentTarget as HTMLInputElement);\n    const hasFocus = unitInput.hasFocus();\n    const newUnit = unitInput.value;\n    unitInput.disabled = true;\n    const prevUnit = this._units;\n    const conversionMultiplier = await FontEditorUnitConverter.getUnitConversionMultiplier(\n        prevUnit, newUnit, this._propertyName === 'font-size');\n    this._setInputUnits(conversionMultiplier, newUnit);\n    if (this._textBoxInput.value) {\n      this._boundUpdateCallback(this._propertyName, this._textBoxInput.value + newUnit);\n    }\n    this._units = newUnit;\n    unitInput.disabled = false;\n    if (hasFocus) {\n      unitInput.focus();\n    }\n  }\n\n  _createTypeToggle(field: Element): void {\n    const displaySwitcher = field.createChild('div', 'spectrum-switcher') as HTMLDivElement;\n    const icon = new IconButton.Icon.Icon();\n    icon.data = {iconName: 'switcherIcon', color: 'var(--color-text-primary)', width: '16px', height: '16px'};\n    displaySwitcher.appendChild(icon);\n    UI.UIUtils.setTitle(displaySwitcher, i18nString(UIStrings.sToggleInputType, {PH1: this._propertyName}));\n    displaySwitcher.tabIndex = 0;\n    self.onInvokeElement(displaySwitcher, this._toggleInputType.bind(this));\n    UI.ARIAUtils.markAsButton(displaySwitcher);\n  }\n\n  _toggleInputType(event?: Event): void {\n    if (event && (event as KeyboardEvent).key === 'Enter') {\n      event.consume();\n    }\n    if (this._showSliderMode) {\n      // Show selector input type\n      this._sliderInput.hidden = true;\n      this._textBoxInput.hidden = true;\n      this._unitInput.hidden = true;\n      this._selectorInput.hidden = false;\n      this._showSliderMode = false;\n      UI.ARIAUtils.alert(i18nString(UIStrings.selectorInputMode));\n    } else {\n      // Show sliderinput type\n      this._sliderInput.hidden = false;\n      this._textBoxInput.hidden = false;\n      this._unitInput.hidden = false;\n      this._selectorInput.hidden = true;\n      this._showSliderMode = true;\n      UI.ARIAUtils.alert(i18nString(UIStrings.sliderInputMode));\n    }\n  }\n\n  _setInputUnits(multiplier: number, newUnit: string): void {\n    const newRangeMap = this._staticParams.rangeMap.get(newUnit);\n    let newMin, newMax, newStep;\n    if (newRangeMap) {\n      newMin = newRangeMap.min;\n      newMax = newRangeMap.max;\n      newStep = newRangeMap.step;\n    } else {\n      newMin = 0;\n      newMax = 100;\n      newStep = 1;\n    }\n    let hasValue = false;\n    const roundingPrecision = FontEditorUtils.getRoundingPrecision(newStep);\n    let newValue: number = (newMin + newMax) / 2;\n    if (this._textBoxInput.value) {\n      hasValue = true;\n      newValue = parseFloat((parseFloat(this._textBoxInput.value) * multiplier).toFixed(roundingPrecision));\n    }\n    this._sliderInput.sliderElement.min = Math.min(newValue, newMin).toString();\n    this._sliderInput.sliderElement.max = Math.max(newValue, newMax).toString();\n    this._sliderInput.sliderElement.step = newStep.toString();\n    this._textBoxInput.step = newStep.toString();\n    if (hasValue) {\n      this._textBoxInput.value = newValue.toString();\n    }\n    this._sliderInput.value = newValue;\n  }\n}\n"]}