{"version":3,"file":"TextEditorAutocompleteController.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/text_editor/TextEditorAutocompleteController.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nimport type {CodeMirrorTextEditor} from './CodeMirrorTextEditor.js';\n\nexport class TextEditorAutocompleteController implements UI.SuggestBox.SuggestBoxDelegate {\n  _textEditor: CodeMirrorTextEditor;\n  _codeMirror: any;\n  _config: UI.TextEditor.AutocompleteConfig;\n  _initialized: boolean;\n  _mouseDown: () => void;\n  _lastHintText: string;\n  _suggestBox: UI.SuggestBox.SuggestBox|null;\n  _currentSuggestion: UI.SuggestBox.Suggestion|null;\n  _hintElement: HTMLSpanElement;\n  _tooltipGlassPane: UI.GlassPane.GlassPane;\n  _tooltipElement: HTMLDivElement;\n  _queryRange: TextUtils.TextRange.TextRange|null;\n  _dictionary?: Common.TextDictionary.TextDictionary;\n  _updatedLines?: any;\n  _hintMarker?: any|null;\n  _anchorBox?: AnchorBox|null;\n\n  // https://crbug.com/1151919 * = CodeMirror.Editor\n  constructor(textEditor: CodeMirrorTextEditor, codeMirror: any, config: UI.TextEditor.AutocompleteConfig) {\n    this._textEditor = textEditor;\n    this._codeMirror = codeMirror;\n    this._config = config;\n    this._initialized = false;\n\n    this._onScroll = this._onScroll.bind(this);\n    this._onCursorActivity = this._onCursorActivity.bind(this);\n    this._changes = this._changes.bind(this);\n    this._blur = this._blur.bind(this);\n    this._beforeChange = this._beforeChange.bind(this);\n    this._mouseDown = (): void => {\n      this.clearAutocomplete();\n      this._tooltipGlassPane.hide();\n    };\n    // @ts-ignore CodeMirror types are wrong.\n    this._codeMirror.on('changes', this._changes);\n    this._lastHintText = '';\n    this._suggestBox = null;\n    this._currentSuggestion = null;\n    this._hintElement = document.createElement('span');\n    this._hintElement.classList.add('auto-complete-text');\n\n    this._tooltipGlassPane = new UI.GlassPane.GlassPane();\n    this._tooltipGlassPane.setSizeBehavior(UI.GlassPane.SizeBehavior.MeasureContent);\n    this._tooltipGlassPane.setOutsideClickCallback(this._tooltipGlassPane.hide.bind(this._tooltipGlassPane));\n    this._tooltipElement = document.createElement('div');\n    this._tooltipElement.classList.add('autocomplete-tooltip');\n    const shadowRoot = UI.Utils.createShadowRootWithCoreStyles(this._tooltipGlassPane.contentElement, {\n      cssFile: 'ui/legacy/components/text_editor/autocompleteTooltip.css',\n      enableLegacyPatching: false,\n      delegatesFocus: undefined,\n    });\n    shadowRoot.appendChild(this._tooltipElement);\n\n    this._queryRange = null;\n  }\n\n  _initializeIfNeeded(): void {\n    if (this._initialized) {\n      return;\n    }\n    this._initialized = true;\n    // @ts-ignore CodeMirror types are wrong.\n    this._codeMirror.on('scroll', this._onScroll);\n    // @ts-ignore CodeMirror types are wrong.\n    this._codeMirror.on('cursorActivity', this._onCursorActivity);\n    // @ts-ignore CodeMirror types are wrong.\n    this._codeMirror.on('mousedown', this._mouseDown);\n    // @ts-ignore CodeMirror types are wrong.\n    this._codeMirror.on('blur', this._blur);\n    if (this._config.isWordChar) {\n      // @ts-ignore CodeMirror types are wrong.\n      this._codeMirror.on('beforeChange', this._beforeChange);\n      this._dictionary = new Common.TextDictionary.TextDictionary();\n      // @ts-ignore CodeMirror types are wrong.\n      this._addWordsFromText(this._codeMirror.getValue());\n    }\n    UI.ARIAUtils.setAutocomplete(this._textEditor.element, UI.ARIAUtils.AutocompleteInteractionModel.both);\n    UI.ARIAUtils.setHasPopup(this._textEditor.element, UI.ARIAUtils.PopupRole.ListBox);\n  }\n\n  dispose(): void {\n    // @ts-ignore CodeMirror types are wrong.\n    this._codeMirror.off('changes', this._changes);\n    if (this._initialized) {\n      // @ts-ignore CodeMirror types are wrong.\n      this._codeMirror.off('scroll', this._onScroll);\n      // @ts-ignore CodeMirror types are wrong.\n      this._codeMirror.off('cursorActivity', this._onCursorActivity);\n      // @ts-ignore CodeMirror types are wrong.\n      this._codeMirror.off('mousedown', this._mouseDown);\n      // @ts-ignore CodeMirror types are wrong.\n      this._codeMirror.off('blur', this._blur);\n    }\n    if (this._dictionary) {\n      // @ts-ignore CodeMirror types are wrong.\n      this._codeMirror.off('beforeChange', this._beforeChange);\n      this._dictionary.reset();\n    }\n    UI.ARIAUtils.clearAutocomplete(this._textEditor.element);\n    UI.ARIAUtils.setHasPopup(this._textEditor.element, UI.ARIAUtils.PopupRole.False);\n  }\n\n  _beforeChange(codeMirror: typeof CodeMirror, changeObject: any): void {\n    this._updatedLines = this._updatedLines || {};\n    for (let i = changeObject.from.line; i <= changeObject.to.line; ++i) {\n      if (this._updatedLines[i] === undefined) {\n        // @ts-ignore CodeMirror types are wrong.\n        this._updatedLines[i] = this._codeMirror.getLine(i);\n      }\n    }\n  }\n\n  _addWordsFromText(text: string): void {\n    TextUtils.TextUtils.Utils.textToWords(\n        text, this._config.isWordChar as (arg0: string) => boolean, addWord.bind(this));\n\n    function addWord(this: TextEditorAutocompleteController, word: string): void {\n      if (this._dictionary && word.length && (word[0] < '0' || word[0] > '9')) {\n        this._dictionary.addWord(word);\n      }\n    }\n  }\n\n  _removeWordsFromText(text: string): void {\n    TextUtils.TextUtils.Utils.textToWords(\n        text, this._config.isWordChar as (arg0: string) => boolean,\n        word => this._dictionary && this._dictionary.removeWord(word));\n  }\n\n  _substituteRange(lineNumber: number, columnNumber: number): TextUtils.TextRange.TextRange|null {\n    let range: TextUtils.TextRange.TextRange|(TextUtils.TextRange.TextRange | null) =\n        this._config.substituteRangeCallback ? this._config.substituteRangeCallback(lineNumber, columnNumber) : null;\n    if (!range && this._config.isWordChar) {\n      range = this._textEditor.wordRangeForCursorPosition(lineNumber, columnNumber, this._config.isWordChar);\n    }\n    return range;\n  }\n\n  _wordsWithQuery(\n      queryRange: TextUtils.TextRange.TextRange, substituteRange: TextUtils.TextRange.TextRange,\n      force?: boolean): Promise<UI.SuggestBox.Suggestions> {\n    const external =\n        this._config.suggestionsCallback ? this._config.suggestionsCallback(queryRange, substituteRange, force) : null;\n    if (external) {\n      return external;\n    }\n\n    if (!this._dictionary || (!force && queryRange.isEmpty())) {\n      return Promise.resolve([]);\n    }\n\n    let completions = this._dictionary.wordsWithPrefix(this._textEditor.text(queryRange));\n    const substituteWord = this._textEditor.text(substituteRange);\n    if (this._dictionary.wordCount(substituteWord) === 1) {\n      completions = completions.filter(word => word !== substituteWord);\n    }\n    const dictionary = this._dictionary;\n    completions.sort((a, b) => dictionary.wordCount(b) - dictionary.wordCount(a) || a.length - b.length);\n    return Promise.resolve(completions.map(item => ({\n                                             text: item,\n                                             title: undefined,\n                                             subtitle: undefined,\n                                             iconType: undefined,\n                                             priority: undefined,\n                                             isSecondary: undefined,\n                                             subtitleRenderer: undefined,\n                                             selectionRange: undefined,\n                                             hideGhostText: undefined,\n                                             iconElement: undefined,\n                                           })));\n  }\n\n  _changes(codeMirror: typeof CodeMirror, changes: any[]): void {\n    if (!changes.length) {\n      return;\n    }\n\n    if (this._dictionary && this._updatedLines) {\n      for (const lineNumber in this._updatedLines) {\n        this._removeWordsFromText(this._updatedLines[lineNumber]);\n      }\n      delete this._updatedLines;\n\n      const linesToUpdate: {\n        [x: string]: string,\n      } = {};\n      for (let changeIndex = 0; changeIndex < changes.length; ++changeIndex) {\n        const changeObject = changes[changeIndex];\n        const editInfo = TextUtils.CodeMirrorUtils.changeObjectToEditOperation(changeObject);\n        for (let i = editInfo.newRange.startLine; i <= editInfo.newRange.endLine; ++i) {\n          // @ts-ignore CodeMirror types are wrong.\n          linesToUpdate[String(i)] = this._codeMirror.getLine(i);\n        }\n      }\n      for (const lineNumber in linesToUpdate) {\n        this._addWordsFromText(linesToUpdate[lineNumber]);\n      }\n    }\n\n    let singleCharInput = false;\n    let singleCharDelete = false;\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this._codeMirror.getCursor('head');\n    for (let changeIndex = 0; changeIndex < changes.length; ++changeIndex) {\n      const changeObject = changes[changeIndex];\n      if (changeObject.origin === '+input' && changeObject.text.length === 1 && changeObject.text[0].length === 1 &&\n          changeObject.to.line === cursor.line && changeObject.to.ch + 1 === cursor.ch) {\n        singleCharInput = true;\n        break;\n      }\n      if (changeObject.origin === '+delete' && changeObject.removed.length === 1 &&\n          changeObject.removed[0].length === 1 && changeObject.to.line === cursor.line &&\n          changeObject.to.ch - 1 === cursor.ch) {\n        singleCharDelete = true;\n        break;\n      }\n    }\n    if (this._queryRange) {\n      if (singleCharInput) {\n        this._queryRange.endColumn++;\n      } else if (singleCharDelete) {\n        this._queryRange.endColumn--;\n      }\n      if (singleCharDelete || singleCharInput) {\n        this._setHint(this._lastHintText);\n      }\n    }\n\n    if (singleCharInput || singleCharDelete) {\n      queueMicrotask(() => {\n        this.autocomplete();\n      });\n    } else {\n      this.clearAutocomplete();\n    }\n  }\n\n  _blur(): void {\n    this.clearAutocomplete();\n  }\n\n  _validateSelectionsContexts(mainSelection: TextUtils.TextRange.TextRange): boolean {\n    // @ts-ignore CodeMirror types are wrong.\n    const selections = this._codeMirror.listSelections();\n    if (selections.length <= 1) {\n      return true;\n    }\n    const mainSelectionContext = this._textEditor.text(mainSelection);\n    for (let i = 0; i < selections.length; ++i) {\n      const wordRange = this._substituteRange(selections[i].head.line, selections[i].head.ch);\n      if (!wordRange) {\n        return false;\n      }\n      const context = this._textEditor.text(wordRange);\n      if (context !== mainSelectionContext) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  autocomplete(force?: boolean): void {\n    this._initializeIfNeeded();\n    // @ts-ignore CodeMirror types are wrong.\n    if (this._codeMirror.somethingSelected()) {\n      this._hideSuggestBox();\n      return;\n    }\n\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this._codeMirror.getCursor('head');\n    const substituteRange = this._substituteRange(cursor.line, cursor.ch);\n    if (!substituteRange || !this._validateSelectionsContexts(substituteRange)) {\n      this._hideSuggestBox();\n      return;\n    }\n\n    const queryRange = substituteRange.clone();\n    queryRange.endColumn = cursor.ch;\n    const query = this._textEditor.text(queryRange);\n    let hadSuggestBox = false;\n    if (this._suggestBox) {\n      hadSuggestBox = true;\n    }\n    this._wordsWithQuery(queryRange, substituteRange, force).then(wordsWithQuery => {\n      return wordsAcquired(wordsWithQuery);\n    });\n\n    const wordsAcquired = (wordsWithQuery: UI.SuggestBox.Suggestions): void => {\n      if (!wordsWithQuery.length || (wordsWithQuery.length === 1 && query === wordsWithQuery[0].text) ||\n          (!this._suggestBox && hadSuggestBox)) {\n        this._hideSuggestBox();\n        this._onSuggestionsShownForTest([]);\n        return;\n      }\n      if (!this._suggestBox) {\n        this._suggestBox = new UI.SuggestBox.SuggestBox(this, 20);\n        if (this._config.anchorBehavior) {\n          this._suggestBox.setAnchorBehavior(this._config.anchorBehavior);\n        }\n      }\n\n      const oldQueryRange = this._queryRange;\n      this._queryRange = queryRange;\n      if (!oldQueryRange || queryRange.startLine !== oldQueryRange.startLine ||\n          queryRange.startColumn !== oldQueryRange.startColumn) {\n        this._updateAnchorBox();\n      }\n      this._anchorBox &&\n          this._suggestBox.updateSuggestions(\n              this._anchorBox, wordsWithQuery, true, !this._isCursorAtEndOfLine(), query);\n      if (this._suggestBox.visible()) {\n        this._tooltipGlassPane.hide();\n      }\n      this._onSuggestionsShownForTest(wordsWithQuery);\n    };\n  }\n\n  _setHint(hint: string): void {\n    if (this._queryRange === null) {\n      return;\n    }\n    const query = this._textEditor.text(this._queryRange);\n    if (!hint || !this._isCursorAtEndOfLine() || !hint.startsWith(query)) {\n      this._clearHint();\n      return;\n    }\n    const suffix = hint.substring(query.length).split('\\n')[0];\n    this._hintElement.textContent = Platform.StringUtilities.trimEndWithMaxLength(suffix, 10000);\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this._codeMirror.getCursor('to');\n    if (this._hintMarker) {\n      const position = this._hintMarker.position();\n      if (!position || !position.equal(TextUtils.TextRange.TextRange.createFromLocation(cursor.line, cursor.ch))) {\n        this._hintMarker.clear();\n        this._hintMarker = null;\n      }\n    }\n\n    if (!this._hintMarker) {\n      this._hintMarker = this._textEditor.addBookmark(\n          cursor.line, cursor.ch, this._hintElement as HTMLElement, TextEditorAutocompleteController.HintBookmark,\n          true);\n    } else if (this._lastHintText !== hint) {\n      this._hintMarker.refresh();\n    }\n    this._lastHintText = hint;\n  }\n\n  _clearHint(): void {\n    if (!this._hintElement.textContent) {\n      return;\n    }\n    this._lastHintText = '';\n    this._hintElement.textContent = '';\n    if (this._hintMarker) {\n      this._hintMarker.refresh();\n    }\n  }\n\n  _onSuggestionsShownForTest(_suggestions: UI.SuggestBox.Suggestions): void {\n  }\n\n  _onSuggestionsHiddenForTest(): void {\n  }\n\n  clearAutocomplete(): void {\n    this._tooltipGlassPane.hide();\n    this._hideSuggestBox();\n  }\n\n  _hideSuggestBox(): void {\n    if (!this._suggestBox) {\n      return;\n    }\n    this._suggestBox.hide();\n    this._suggestBox = null;\n    this._queryRange = null;\n    this._anchorBox = null;\n    this._currentSuggestion = null;\n    this._textEditor.dispatchEventToListeners(UI.TextEditor.Events.SuggestionChanged);\n    this._clearHint();\n    this._onSuggestionsHiddenForTest();\n  }\n\n  keyDown(event: KeyboardEvent): boolean {\n    if (this._tooltipGlassPane.isShowing() && event.keyCode === UI.KeyboardShortcut.Keys.Esc.code) {\n      this._tooltipGlassPane.hide();\n      return true;\n    }\n    if (!this._suggestBox) {\n      return false;\n    }\n    switch (event.keyCode) {\n      case UI.KeyboardShortcut.Keys.Tab.code:\n        this._suggestBox.acceptSuggestion();\n        this.clearAutocomplete();\n        return true;\n      case UI.KeyboardShortcut.Keys.End.code:\n      case UI.KeyboardShortcut.Keys.Right.code:\n        if (this._isCursorAtEndOfLine()) {\n          this._suggestBox.acceptSuggestion();\n          this.clearAutocomplete();\n          return true;\n        }\n        this.clearAutocomplete();\n        return false;\n      case UI.KeyboardShortcut.Keys.Left.code:\n      case UI.KeyboardShortcut.Keys.Home.code:\n        this.clearAutocomplete();\n        return false;\n      case UI.KeyboardShortcut.Keys.Esc.code:\n        this.clearAutocomplete();\n        return true;\n    }\n    return this._suggestBox.keyPressed(event);\n  }\n\n  _isCursorAtEndOfLine(): boolean {\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this._codeMirror.getCursor('to');\n    // @ts-ignore CodeMirror types are wrong.\n    return cursor.ch === this._codeMirror.getLine(cursor.line).length;\n  }\n\n  applySuggestion(suggestion: UI.SuggestBox.Suggestion|null, _isIntermediateSuggestion?: boolean): void {\n    const oldSuggestion = this._currentSuggestion;\n    this._currentSuggestion = suggestion;\n    this._setHint(suggestion ? suggestion.text : '');\n    if ((oldSuggestion ? oldSuggestion.text : '') !== (suggestion ? suggestion.text : '')) {\n      this._textEditor.dispatchEventToListeners(UI.TextEditor.Events.SuggestionChanged);\n    }\n  }\n\n  acceptSuggestion(): void {\n    if (this._currentSuggestion === null || this._queryRange === null) {\n      return;\n    }\n    // @ts-ignore CodeMirror types are wrong.\n    const selections = this._codeMirror.listSelections().slice();\n    const queryLength = this._queryRange.endColumn - this._queryRange.startColumn;\n    const suggestion = this._currentSuggestion.text;\n    // @ts-ignore CodeMirror types are wrong.\n    this._codeMirror.operation(() => {\n      for (let i = selections.length - 1; i >= 0; --i) {\n        const start = selections[i].head;\n        const end = new CodeMirror.Pos(start.line, start.ch - queryLength);\n        // @ts-ignore CodeMirror types are wrong.\n        this._codeMirror.replaceRange(suggestion, start, end, '+autocomplete');\n      }\n    });\n  }\n\n  ariaControlledBy(): Element {\n    return this._textEditor.element;\n  }\n\n  textWithCurrentSuggestion(): string {\n    if (!this._queryRange || this._currentSuggestion === null) {\n      // @ts-ignore CodeMirror types are wrong.\n      return this._codeMirror.getValue();\n    }\n\n    // @ts-ignore CodeMirror types are wrong.\n    const selections = this._codeMirror.listSelections().slice();\n    let last: {\n      line: any,\n      column: any,\n    }|{\n      line: number,\n      column: number,\n    } = {line: 0, column: 0};\n    let text = '';\n    const queryLength = this._queryRange.endColumn - this._queryRange.startColumn;\n    for (const selection of selections) {\n      const range = new TextUtils.TextRange.TextRange(\n          last.line, last.column, selection.head.line, selection.head.ch - queryLength);\n      text += this._textEditor.text(range);\n      text += this._currentSuggestion.text;\n      last = {line: selection.head.line, column: selection.head.ch};\n    }\n    const range = new TextUtils.TextRange.TextRange(last.line, last.column, Infinity, Infinity);\n    text += this._textEditor.text(range);\n    return text;\n  }\n\n  _onScroll(): void {\n    this._tooltipGlassPane.hide();\n    if (!this._suggestBox) {\n      return;\n    }\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this._codeMirror.getCursor();\n    // @ts-ignore CodeMirror types are wrong.\n    const scrollInfo = this._codeMirror.getScrollInfo();\n    // @ts-ignore CodeMirror types are wrong.\n    const topmostLineNumber = this._codeMirror.lineAtHeight(scrollInfo.top, 'local');\n    // @ts-ignore CodeMirror types are wrong.\n    const bottomLine = this._codeMirror.lineAtHeight(scrollInfo.top + scrollInfo.clientHeight, 'local');\n    if (cursor.line < topmostLineNumber || cursor.line > bottomLine) {\n      this.clearAutocomplete();\n    } else {\n      this._updateAnchorBox();\n      this._anchorBox && this._suggestBox.setPosition(this._anchorBox);\n    }\n  }\n\n  async _updateTooltip(): Promise<void> {\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this._codeMirror.getCursor();\n    const tooltip = this._config.tooltipCallback ? await this._config.tooltipCallback(cursor.line, cursor.ch) : null;\n    // @ts-ignore CodeMirror types are wrong.\n    const newCursor = this._codeMirror.getCursor();\n\n    if (newCursor.line !== cursor.line && newCursor.ch !== cursor.ch) {\n      return;\n    }\n    if (this._suggestBox && this._suggestBox.visible) {\n      return;\n    }\n\n    if (!tooltip) {\n      this._tooltipGlassPane.hide();\n      return;\n    }\n    const metrics = this._textEditor.cursorPositionToCoordinates(cursor.line, cursor.ch);\n    if (!metrics) {\n      this._tooltipGlassPane.hide();\n      return;\n    }\n\n    this._tooltipGlassPane.setContentAnchorBox(new AnchorBox(metrics.x, metrics.y, 0, metrics.height));\n    this._tooltipElement.removeChildren();\n    this._tooltipElement.appendChild(tooltip);\n    this._tooltipGlassPane.show(this._textEditor.element.ownerDocument as Document);\n  }\n\n  _onCursorActivity(): void {\n    this._updateTooltip();\n    if (!this._suggestBox || this._queryRange === null) {\n      return;\n    }\n    // @ts-ignore CodeMirror types are wrong.\n    const cursor = this._codeMirror.getCursor();\n    let shouldCloseAutocomplete: boolean =\n        !(cursor.line === this._queryRange.startLine && this._queryRange.startColumn <= cursor.ch &&\n          cursor.ch <= this._queryRange.endColumn);\n    // Try not to hide autocomplete when user types in.\n    if (cursor.line === this._queryRange.startLine && cursor.ch === this._queryRange.endColumn + 1) {\n      // @ts-ignore CodeMirror types are wrong.\n      const line = this._codeMirror.getLine(cursor.line);\n      shouldCloseAutocomplete = this._config.isWordChar ? !this._config.isWordChar(line.charAt(cursor.ch - 1)) : false;\n    }\n    if (shouldCloseAutocomplete) {\n      this.clearAutocomplete();\n    }\n    this._onCursorActivityHandledForTest();\n  }\n\n  _onCursorActivityHandledForTest(): void {\n  }\n\n  _updateAnchorBox(): void {\n    if (this._queryRange === null) {\n      return;\n    }\n    const line = this._queryRange.startLine;\n    const column = this._queryRange.startColumn;\n    const metrics = this._textEditor.cursorPositionToCoordinates(line, column);\n    this._anchorBox = metrics ? new AnchorBox(metrics.x, metrics.y, 0, metrics.height) : null;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly HintBookmark = Symbol('hint');\n}\n"]}