{"version":3,"file":"ContrastOverlay.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/color_picker/ContrastOverlay.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../../../core/common/common.js';\nimport * as Root from '../../../../core/root/root.js';\nimport * as UI from '../../legacy.js';\n\nimport type {ContrastInfo} from './ContrastInfo.js';\nimport {Events} from './ContrastInfo.js';\n\nexport class ContrastOverlay {\n  _contrastInfo: ContrastInfo;\n  _visible: boolean;\n  _contrastRatioSVG: Element;\n  _contrastRatioLines: Map<string, Element>;\n  _width: number;\n  _height: number;\n  _contrastRatioLineBuilder: ContrastRatioLineBuilder;\n  _contrastRatioLinesThrottler: Common.Throttler.Throttler;\n  _drawContrastRatioLinesBound: () => Promise<void>;\n  constructor(contrastInfo: ContrastInfo, colorElement: Element) {\n    this._contrastInfo = contrastInfo;\n\n    this._visible = false;\n\n    this._contrastRatioSVG = UI.UIUtils.createSVGChild(colorElement, 'svg', 'spectrum-contrast-container fill');\n    this._contrastRatioLines = new Map();\n    if (Root.Runtime.experiments.isEnabled('APCA')) {\n      this._contrastRatioLines.set(\n          'APCA', UI.UIUtils.createSVGChild(this._contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n    } else {\n      this._contrastRatioLines.set(\n          'aa', UI.UIUtils.createSVGChild(this._contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n      this._contrastRatioLines.set(\n          'aaa', UI.UIUtils.createSVGChild(this._contrastRatioSVG, 'path', 'spectrum-contrast-line'));\n    }\n\n    this._width = 0;\n    this._height = 0;\n\n    this._contrastRatioLineBuilder = new ContrastRatioLineBuilder(this._contrastInfo);\n\n    this._contrastRatioLinesThrottler = new Common.Throttler.Throttler(0);\n    this._drawContrastRatioLinesBound = this._drawContrastRatioLines.bind(this);\n\n    this._contrastInfo.addEventListener(Events.ContrastInfoUpdated, this._update.bind(this));\n  }\n\n  _update(): void {\n    if (!this._visible || this._contrastInfo.isNull()) {\n      return;\n    }\n    if (Root.Runtime.experiments.isEnabled('APCA') && this._contrastInfo.contrastRatioAPCA() === null) {\n      return;\n    }\n    if (!this._contrastInfo.contrastRatio()) {\n      return;\n    }\n    this._contrastRatioLinesThrottler.schedule(this._drawContrastRatioLinesBound);\n  }\n\n  setDimensions(width: number, height: number): void {\n    this._width = width;\n    this._height = height;\n    this._update();\n  }\n\n  setVisible(visible: boolean): void {\n    this._visible = visible;\n    this._contrastRatioSVG.classList.toggle('hidden', !visible);\n    this._update();\n  }\n\n  async _drawContrastRatioLines(): Promise<void> {\n    for (const [level, element] of this._contrastRatioLines) {\n      const path = this._contrastRatioLineBuilder.drawContrastRatioLine(this._width, this._height, level as string);\n      if (path) {\n        element.setAttribute('d', path);\n      } else {\n        element.removeAttribute('d');\n      }\n    }\n  }\n}\n\nexport class ContrastRatioLineBuilder {\n  _contrastInfo: ContrastInfo;\n  constructor(contrastInfo: ContrastInfo) {\n    this._contrastInfo = contrastInfo;\n  }\n\n  drawContrastRatioLine(width: number, height: number, level: string): string|null {\n    const isAPCA = Root.Runtime.experiments.isEnabled('APCA');\n    const requiredContrast =\n        isAPCA ? this._contrastInfo.contrastRatioAPCAThreshold() : this._contrastInfo.contrastRatioThreshold(level);\n    if (!width || !height || requiredContrast === null) {\n      return null;\n    }\n\n    const dS = 0.02;\n    const H = 0;\n    const S = 1;\n    const V = 2;\n    const A = 3;\n\n    const color = this._contrastInfo.color();\n    const bgColor = this._contrastInfo.bgColor();\n    if (!color || !bgColor) {\n      return null;\n    }\n\n    const fgRGBA = color.rgba();\n    const fgHSVA = color.hsva();\n    const bgRGBA = bgColor.rgba();\n    const bgLuminance = Common.ColorUtils.luminance(bgRGBA);\n    let blendedRGBA: number[] = Common.ColorUtils.blendColors(fgRGBA, bgRGBA);\n    const fgLuminance = Common.ColorUtils.luminance(blendedRGBA);\n    const fgIsLighter = fgLuminance > bgLuminance;\n    const desiredLuminance = isAPCA ?\n        Common.ColorUtils.desiredLuminanceAPCA(bgLuminance, requiredContrast, fgIsLighter) :\n        Common.Color.Color.desiredLuminance(bgLuminance, requiredContrast, fgIsLighter);\n\n    if (isAPCA &&\n        Math.abs(Math.round(Common.ColorUtils.contrastRatioByLuminanceAPCA(desiredLuminance, bgLuminance))) <\n            requiredContrast) {\n      return null;\n    }\n\n    let lastV: number = fgHSVA[V];\n    let currentSlope = 0;\n    const candidateHSVA = [fgHSVA[H], 0, 0, fgHSVA[A]];\n    let pathBuilder: string[] = [];\n    const candidateRGBA: number[] = [];\n    Common.Color.Color.hsva2rgba(candidateHSVA, candidateRGBA);\n    blendedRGBA = Common.ColorUtils.blendColors(candidateRGBA, bgRGBA);\n\n    let candidateLuminance: ((candidateHSVA: number[]) => number)|((candidateHSVA: number[]) => number) =\n        (candidateHSVA: number[]): number => {\n          return Common.ColorUtils.luminance(\n              Common.ColorUtils.blendColors(Common.Color.Color.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n        };\n\n    if (Root.Runtime.experiments.isEnabled('APCA')) {\n      candidateLuminance = (candidateHSVA: number[]): number => {\n        return Common.ColorUtils.luminanceAPCA(\n            Common.ColorUtils.blendColors(Common.Color.Color.fromHSVA(candidateHSVA).rgba(), bgRGBA));\n      };\n    }\n\n    // Plot V for values of S such that the computed luminance approximates\n    // `desiredLuminance`, until no suitable value for V can be found, or the\n    // current value of S goes of out bounds.\n    let s;\n    for (s = 0; s < 1 + dS; s += dS) {\n      s = Math.min(1, s);\n      candidateHSVA[S] = s;\n\n      // Extrapolate the approximate next value for `v` using the approximate\n      // gradient of the curve.\n      candidateHSVA[V] = lastV + currentSlope * dS;\n\n      const v = Common.Color.Color.approachColorValue(candidateHSVA, bgRGBA, V, desiredLuminance, candidateLuminance);\n      if (v === null) {\n        break;\n      }\n\n      // Approximate the current gradient of the curve.\n      currentSlope = s === 0 ? 0 : (v - lastV) / dS;\n      lastV = v;\n\n      pathBuilder.push(pathBuilder.length ? 'L' : 'M');\n      pathBuilder.push((s * width).toFixed(2));\n      pathBuilder.push(((1 - v) * height).toFixed(2));\n    }\n\n    // If no suitable V value for an in-bounds S value was found, find the value\n    // of S such that V === 1 and add that to the path.\n    if (s < 1 + dS) {\n      s -= dS;\n      candidateHSVA[V] = 1;\n      s = Common.Color.Color.approachColorValue(candidateHSVA, bgRGBA, S, desiredLuminance, candidateLuminance);\n      if (s !== null) {\n        pathBuilder = pathBuilder.concat(['L', (s * width).toFixed(2), '-0.1']);\n      }\n    }\n    if (pathBuilder.length === 0) {\n      return null;\n    }\n    return pathBuilder.join(' ');\n  }\n}\n"]}