{"version":3,"file":"FontEditorUnitConverter.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/inline_editor/FontEditorUnitConverter.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as CssOverviewModule from '../../../../panels/css_overview/css_overview.js';\nimport * as UI from '../../legacy.js';\n\nconst computedArrayFontSizeIndex = 6;\n\nfunction getPxMultiplier(): number {\n  return 1;\n}\nasync function getEmMultiplier(isFontSizeProperty?: boolean): Promise<number> {\n  const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n  let currentFontSize;\n  if (selectedNode && selectedNode.parentNode && selectedNode.nodeName() !== 'HTML') {\n    const [model] =\n        SDK.TargetManager.TargetManager.instance().models(CssOverviewModule.CSSOverviewModel.CSSOverviewModel);\n    const fontSizeNodeId = isFontSizeProperty ? selectedNode.parentNode.id : selectedNode.id;\n    const computedFontSize = await model.getComputedStyleForNode(fontSizeNodeId).then(findFontSizeValue);\n    const computedFontSizeValue = computedFontSize.replace(/[a-z]/g, '');\n    currentFontSize = parseFloat(computedFontSizeValue);\n  } else {\n    currentFontSize = 16;\n  }\n  return currentFontSize;\n}\n\nasync function getRemMultiplier(): Promise<number> {\n  const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n  const htmlNode = findHtmlNode(selectedNode);\n  if (!htmlNode || !htmlNode.id) {\n    return 16;\n  }\n  const [model] =\n      SDK.TargetManager.TargetManager.instance().models(CssOverviewModule.CSSOverviewModel.CSSOverviewModel);\n  const computedRootFontSize = await model.getComputedStyleForNode(htmlNode.id).then(findFontSizeValue);\n  const rootFontSizeValue = computedRootFontSize.replace(/[a-z]/g, '');\n  const rootFontSize = parseFloat(rootFontSizeValue);\n  return rootFontSize;\n}\n\nasync function getPercentMultiplier(isFontSizeProperty?: boolean): Promise<number> {\n  const emMultiplier = await getEmMultiplier(isFontSizeProperty);\n  const percMultiplier = emMultiplier / 100;\n  return percMultiplier;\n}\n\nasync function getVhMultiplier(): Promise<number> {\n  const viewportObject = await getViewportObject();\n  if (!viewportObject) {\n    return 1;\n  }\n  const viewportHeight = viewportObject.height;\n  const vhMultiplier = viewportHeight / 100;\n  return vhMultiplier;\n}\n\nasync function getVwMultiplier(): Promise<number> {\n  const viewportObject = await getViewportObject();\n  if (!viewportObject) {\n    return 1;\n  }\n  const viewportWidth = viewportObject.width;\n  const vwMultiplier = viewportWidth / 100;\n  return vwMultiplier;\n}\n\nasync function getVminMultiplier(): Promise<number> {\n  const viewportObject = await getViewportObject();\n  if (!viewportObject) {\n    return 1;\n  }\n  const viewportWidth = viewportObject.width;\n  const viewportHeight = viewportObject.height;\n  const minViewportSize = Math.min(viewportWidth, viewportHeight);\n  const vminMultiplier = minViewportSize / 100;\n  return vminMultiplier;\n}\n\nasync function getVmaxMultiplier(): Promise<number> {\n  const viewportObject = await getViewportObject();\n  if (!viewportObject) {\n    return 1;\n  }\n  const viewportWidth = viewportObject.width;\n  const viewportHeight = viewportObject.height;\n  const maxViewportSize = Math.max(viewportWidth, viewportHeight);\n  const vmaxMultiplier = maxViewportSize / 100;\n  return vmaxMultiplier;\n}\n\nfunction getCmMultiplier(): number {\n  return 37.795;\n}\n\nfunction getMmMultiplier(): number {\n  return 3.7795;\n}\n\nfunction getInMultiplier(): number {\n  return 96;\n}\n\nfunction getPtMultiplier(): number {\n  return 4 / 3;\n}\n\nfunction getPcMultiplier(): number {\n  return 16;\n}\n\nfunction findFontSizeValue(computedObject: {\n  computedStyle: Array<{\n    name: string,\n    value: string,\n  }>,\n  getError: () => void,\n}): string {\n  const computedArray: {\n    name: string,\n    value: string,\n  }[] = computedObject.computedStyle;\n  let index = computedArrayFontSizeIndex;\n  if (computedArray[index].name && computedArray[index].name !== 'font-size') {\n    for (let i = 0; i < computedArray.length; i++) {\n      if (computedArray[i].name === 'font-size') {\n        index = i;\n        break;\n      }\n    }\n  }\n  return computedArray[index].value;\n}\n\nfunction findHtmlNode(selectedNode: SDK.DOMModel.DOMNode|null): SDK.DOMModel.DOMNode|null {\n  let node: SDK.DOMModel.DOMNode|(SDK.DOMModel.DOMNode | null) = selectedNode;\n  while (node && node.nodeName() !== 'HTML') {\n    if (node.parentNode) {\n      node = node.parentNode;\n    } else {\n      break;\n    }\n  }\n  return node;\n}\n\nconst widthEvaluateParams = {\n  expression: 'window.innerWidth',\n  objectGroup: undefined,\n  includeCommandLineAPI: false,\n  silent: true,\n  contextId: undefined,\n  returnByValue: false,\n  generatePreview: false,\n  userGesture: false,\n  awaitPromise: true,\n  throwOnSideEffect: false,\n  timeout: undefined,\n  disableBreaks: true,\n  replMode: false,\n  allowUnsafeEvalBlockedByCSP: false,\n};\n\nconst heightEvaluateParams = {\n  expression: 'window.innerHeight',\n  objectGroup: undefined,\n  includeCommandLineAPI: false,\n  silent: true,\n  contextId: undefined,\n  returnByValue: false,\n  generatePreview: false,\n  userGesture: false,\n  awaitPromise: true,\n  throwOnSideEffect: false,\n  timeout: undefined,\n  disableBreaks: true,\n  replMode: false,\n  allowUnsafeEvalBlockedByCSP: false,\n};\n\nasync function getViewportObject(): Promise<{\n  width: number,\n  height: number,\n}|null> {\n  const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n  let width, height;\n  if (currentExecutionContext) {\n    const widthObject = await currentExecutionContext.evaluate(widthEvaluateParams, false, false);\n    const heightObject = await currentExecutionContext.evaluate(heightEvaluateParams, false, false);\n    if ('error' in widthObject || 'error' in heightObject) {\n      return null;\n    }\n    if (widthObject.object) {\n      width = widthObject.object.value;\n    }\n    if (heightObject.object) {\n      height = heightObject.object.value;\n    }\n  }\n  if (width === undefined || height === undefined) {\n    const selectedNode = UI.Context.Context.instance().flavor(SDK.DOMModel.DOMNode);\n    if (!selectedNode) {\n      return null;\n    }\n    const pageLayout = await selectedNode.domModel().target().pageAgent().invoke_getLayoutMetrics();\n    const zoom = pageLayout.visualViewport.zoom ? pageLayout.visualViewport.zoom : 1;\n    height = pageLayout.visualViewport.clientHeight / zoom;\n    width = pageLayout.visualViewport.clientWidth / zoom;\n  }\n  return {width, height};\n}\n\nconst unitConversionMap = new Map<string, (isFontSize?: boolean) => number | Promise<number>>();\nunitConversionMap.set('px', getPxMultiplier);\nunitConversionMap.set('em', getEmMultiplier);\nunitConversionMap.set('rem', getRemMultiplier);\nunitConversionMap.set('%', getPercentMultiplier);\nunitConversionMap.set('vh', getVhMultiplier);\nunitConversionMap.set('vw', getVwMultiplier);\nunitConversionMap.set('vmin', getVminMultiplier);\nunitConversionMap.set('vmax', getVmaxMultiplier);\nunitConversionMap.set('cm', getCmMultiplier);\nunitConversionMap.set('mm', getMmMultiplier);\nunitConversionMap.set('in', getInMultiplier);\nunitConversionMap.set('pt', getPtMultiplier);\nunitConversionMap.set('pc', getPcMultiplier);\n\nexport async function getUnitConversionMultiplier(\n    prevUnit: string, newUnit: string, isFontSize?: boolean): Promise<number> {\n  if (prevUnit === '') {\n    prevUnit = 'em';\n  }\n  if (newUnit === '') {\n    newUnit = 'em';\n  }\n  let prevUnitMultiplier, newUnitMultiplier;\n  const prevUnitFunction = unitConversionMap.get(prevUnit);\n  const newUnitFunction = unitConversionMap.get(newUnit);\n  if (prevUnitFunction && newUnitFunction) {\n    if (prevUnit === 'em' || prevUnit === '%') {\n      prevUnitMultiplier = await prevUnitFunction(isFontSize);\n    } else {\n      prevUnitMultiplier = await prevUnitFunction();\n    }\n    if (newUnit === 'em' || newUnit === '%') {\n      newUnitMultiplier = await newUnitFunction(isFontSize);\n    } else {\n      newUnitMultiplier = await newUnitFunction();\n    }\n  } else {\n    return 1;\n  }\n  return prevUnitMultiplier / newUnitMultiplier;\n}\n"]}