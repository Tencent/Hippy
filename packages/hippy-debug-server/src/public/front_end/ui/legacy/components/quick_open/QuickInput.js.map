{"version":3,"file":"QuickInput.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/quick_open/QuickInput.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,IAAI,MAAM,+BAA+B,CAAC;AAEtD,OAAO,EAAC,kBAAkB,EAAE,QAAQ,EAAC,MAAM,yBAAyB,CAAC;AAErE,MAAM,SAAS,GAAG;IAChB;;;MAGE;IACF,6BAA6B,EAAE,6DAA6D;CAC7F,CAAC;AACF,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,+CAA+C,EAAE,SAAS,CAAC,CAAC;AACrG,MAAM,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAQtE,MAAM,OAAO,UAAU;IACrB;QACE,MAAM,IAAI,cAAc,CAAC,gCAAgC,CAAC,CAAC;IAC7D,CAAC;IAED,MAAM,CAAC,IAAI,CAAC,OAA0B;QACpC,IAAI,eAAe,GACf,IAAI,OAAO,CAAY,EAAE,CAAC,EAAE,GAAE,CAAC,CAAC,CAAC,CAAE,8CAA8C;QACrF,MAAM,gBAAgB,GAAG,IAAI,OAAO,CAAS,OAAO,CAAC,EAAE;YACrD,MAAM,QAAQ,GAAG,IAAI,kBAAkB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;YAC1D,MAAM,MAAM,GAAG,IAAI,kBAAkB,CAAC,QAAQ,CAAC,CAAC;YAEhD,IAAI,OAAO,CAAC,WAAW,EAAE;gBACvB,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;aAC5C;YAED,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC,WAAW,IAAI,OAAO,CAAC,MAAM,CAAC,CAAC;YAC7D,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACpC,eAAe,GAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAwB,CAAC;YAEhE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC;YACrC,IAAI,OAAO,CAAC,cAAc,EAAE;gBAC1B,MAAM,CAAC,qBAAqB,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC;aACpF;QACH,CAAC,CAAC,CAAC;QAEH,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YACrE,wDAAwD;YACxD,uDAAuD;YACvD,6CAA6C;YAC7C,OAAO,MAAM,CAAC;QAChB,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AAED,MAAM,kBAAmB,SAAQ,QAAQ;IACvC,QAAQ,CAAoB;IAC5B,QAAQ,CAAW;IACnB,YAAY,OAA0B,EAAE,OAAiB;QACvD,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;IAC1B,CAAC;IAED,YAAY;QACV,OAAO,UAAU,CAAC,SAAS,CAAC,6BAA6B,EAAE,EAAC,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAC,CAAC,CAAC;IAC1F,CAAC;IAED,UAAU,CAAC,UAAuB,EAAE,WAAmB;QACrD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAC7B,CAAC;CACF","sourcesContent":["// Copyright 2020 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\n\nimport {FilteredListWidget, Provider} from './FilteredListWidget.js';\n\nconst UIStrings = {\n  /**\n  * @description Prompt for free-form input in the QuickInput dialog; Enter and Escape here are keyboard buttons and should be localized as appropriate.\n  * @example {Provide some information.} PH1\n  */\n  pressEnterToConfirmOrEscapeTo: '{PH1} (Press \\'Enter\\' to confirm or \\'Escape\\' to cancel.)',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/quick_open/QuickInput.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport interface QuickInputOptions {\n  prompt: string;\n  placeHolder?: string;\n  value?: string;\n  valueSelection?: number[];\n}\n\nexport class QuickInput {\n  private constructor() {\n    throw new ReferenceError('Instance type not implemented.');\n  }\n\n  static show(options: QuickInputOptions): Promise<string|undefined> {\n    let canceledPromise: Promise<undefined> =\n        new Promise<undefined>(_r => {});  // Intentionally creates an unresolved promise\n    const fulfilledPromise = new Promise<string>(resolve => {\n      const provider = new QuickInputProvider(options, resolve);\n      const widget = new FilteredListWidget(provider);\n\n      if (options.placeHolder) {\n        widget.setPlaceholder(options.placeHolder);\n      }\n\n      widget.setPromptTitle(options.placeHolder || options.prompt);\n      widget.showAsDialog(options.prompt);\n      canceledPromise = (widget.once('hidden') as Promise<undefined>);\n\n      widget.setQuery(options.value || '');\n      if (options.valueSelection) {\n        widget.setQuerySelectedRange(options.valueSelection[0], options.valueSelection[1]);\n      }\n    });\n\n    return Promise.race([fulfilledPromise, canceledPromise]).then(values => {\n      // If it was fulfilled, then `result` will have a value.\n      // If it was canceled, then `result` will be undefined.\n      // Either way, it has the value that we want.\n      return values;\n    });\n  }\n}\n\nclass QuickInputProvider extends Provider {\n  _options: QuickInputOptions;\n  _resolve: Function;\n  constructor(options: QuickInputOptions, resolve: Function) {\n    super();\n    this._options = options;\n    this._resolve = resolve;\n  }\n\n  notFoundText(): string {\n    return i18nString(UIStrings.pressEnterToConfirmOrEscapeTo, {PH1: this._options.prompt});\n  }\n\n  selectItem(_itemIndex: number|null, promptValue: string): void {\n    this._resolve(promptValue);\n  }\n}\n"]}