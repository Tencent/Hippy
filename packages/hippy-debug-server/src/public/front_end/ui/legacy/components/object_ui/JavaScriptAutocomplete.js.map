{"version":3,"file":"JavaScriptAutocomplete.js","sourceRoot":"","sources":["../../../../../../../../front_end/ui/legacy/components/object_ui/JavaScriptAutocomplete.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as i18n from '../../../../core/i18n/i18n.js';\nimport * as Platform from '../../../../core/platform/platform.js';\nimport * as SDK from '../../../../core/sdk/sdk.js';\nimport * as Formatter from '../../../../models/formatter/formatter.js';\nimport * as JavaScriptMetaData from '../../../../models/javascript_metadata/javascript_metadata.js';\nimport * as TextUtils from '../../../../models/text_utils/text_utils.js';\nimport * as UI from '../../legacy.js';\n\nconst UIStrings = {\n  /**\n  *@description 0 of suggestions in Java Script Autocomplete\n  */\n  keys: 'Keys',\n  /**\n  *@description Text in Java Script Autocomplete\n  */\n  lexicalScopeVariables: 'Lexical scope variables',\n  /**\n  *@description Text in Java Script Autocomplete\n  */\n  keywords: 'keywords',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/components/object_ui/JavaScriptAutocomplete.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nconst DEFAULT_TIMEOUT = 500;\n\nlet javaScriptAutocompleteInstance: JavaScriptAutocomplete;\n\nexport class JavaScriptAutocomplete {\n  _expressionCache: Map<string, {\n    date: number,\n    value: Promise<Array<CompletionGroup>>,\n  }>;\n  private constructor() {\n    this._expressionCache = new Map();\n    SDK.ConsoleModel.ConsoleModel.instance().addEventListener(\n        SDK.ConsoleModel.Events.CommandEvaluated, this._clearCache, this);\n    UI.Context.Context.instance().addFlavorChangeListener(SDK.RuntimeModel.ExecutionContext, this._clearCache, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerResumed, this._clearCache, this);\n    SDK.TargetManager.TargetManager.instance().addModelListener(\n        SDK.DebuggerModel.DebuggerModel, SDK.DebuggerModel.Events.DebuggerPaused, this._clearCache, this);\n  }\n\n  static instance(): JavaScriptAutocomplete {\n    if (!javaScriptAutocompleteInstance) {\n      javaScriptAutocompleteInstance = new JavaScriptAutocomplete();\n    }\n    return javaScriptAutocompleteInstance;\n  }\n\n  _clearCache(): void {\n    this._expressionCache.clear();\n  }\n\n  async completionsForTextInCurrentContext(fullText: string, query: string, force?: boolean):\n      Promise<UI.SuggestBox.Suggestions> {\n    const trimmedText = fullText.trim();\n\n    const [mapCompletions, expressionCompletions] = await Promise.all(\n        [this._mapCompletions(trimmedText, query), this._completionsForExpression(trimmedText, query, force)]);\n    return mapCompletions.concat(expressionCompletions);\n  }\n\n  async argumentsHint(fullText: string): Promise<{\n    args: Array<Array<string>>,\n    argumentIndex: number,\n  }|null|undefined> {\n    const functionCall = await Formatter.FormatterWorkerPool.formatterWorkerPool().findLastFunctionCall(fullText);\n    if (!functionCall) {\n      return null;\n    }\n    const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    if (!executionContext) {\n      return null;\n    }\n    const result = await executionContext.evaluate(\n        {\n          expression: functionCall.baseExpression,\n          objectGroup: 'argumentsHint',\n          includeCommandLineAPI: true,\n          silent: true,\n          returnByValue: false,\n          generatePreview: false,\n          throwOnSideEffect: true,\n          timeout: DEFAULT_TIMEOUT,\n          allowUnsafeEvalBlockedByCSP: undefined,\n          disableBreaks: undefined,\n          replMode: undefined,\n        },\n        /* userGesture */ false, /* awaitPromise */ false);\n    if (!result || 'error' in result || result.exceptionDetails ||\n        ('object' in result && (!result.object || result.object.type !== 'function'))) {\n      executionContext.runtimeModel.releaseObjectGroup('argumentsHint');\n      return null;\n    }\n\n    const args = await this._argumentsForFunction(result.object, async () => {\n      const result = await executionContext.evaluate(\n          {\n            expression: functionCall.receiver,\n            objectGroup: 'argumentsHint',\n            includeCommandLineAPI: true,\n            silent: true,\n            returnByValue: false,\n            generatePreview: false,\n            throwOnSideEffect: true,\n            timeout: DEFAULT_TIMEOUT,\n            allowUnsafeEvalBlockedByCSP: undefined,\n            disableBreaks: undefined,\n            replMode: undefined,\n          },\n          /* userGesture */ false, /* awaitPromise */ false);\n      return (result && !('error' in result) && !result.exceptionDetails && result.object) ? result.object : null;\n    }, functionCall.functionName);\n    executionContext.runtimeModel.releaseObjectGroup('argumentsHint');\n    if (!args.length || (args.length === 1 && (!args[0] || !args[0].length))) {\n      return null;\n    }\n    return {args, argumentIndex: functionCall.argumentIndex};\n  }\n\n  async _argumentsForFunction(\n      functionObject: SDK.RemoteObject.RemoteObject,\n      receiverObjGetter: () => Promise<SDK.RemoteObject.RemoteObject|null>,\n      parsedFunctionName?: string): Promise<string[][]> {\n    const description = functionObject.description;\n    if (!description) {\n      return [];\n    }\n    if (!description.endsWith('{ [native code] }')) {\n      return [await Formatter.FormatterWorkerPool.formatterWorkerPool().argumentsList(description)];\n    }\n\n    // Check if this is a bound function.\n    if (description === 'function () { [native code] }') {\n      const properties = await functionObject.getOwnProperties(false);\n      const internalProperties = properties.internalProperties || [];\n      const targetProperty = internalProperties.find(property => property.name === '[[TargetFunction]]');\n      const argsProperty = internalProperties.find(property => property.name === '[[BoundArgs]]');\n      const thisProperty = internalProperties.find(property => property.name === '[[BoundThis]]');\n      if (thisProperty && targetProperty && argsProperty && targetProperty.value && thisProperty.value &&\n          argsProperty.value) {\n        const thisValue = thisProperty.value;\n        const originalSignatures =\n            await this._argumentsForFunction(targetProperty.value, () => Promise.resolve(thisValue));\n        const boundArgsLength = SDK.RemoteObject.RemoteObject.arrayLength(argsProperty.value);\n        const clippedArgs = [];\n        for (const signature of originalSignatures) {\n          const restIndex = signature.slice(0, boundArgsLength).findIndex(arg => arg.startsWith('...'));\n          if (restIndex !== -1) {\n            clippedArgs.push(signature.slice(restIndex));\n          } else {\n            clippedArgs.push(signature.slice(boundArgsLength));\n          }\n        }\n        return clippedArgs;\n      }\n    }\n\n    const javaScriptMetadata = JavaScriptMetaData.JavaScriptMetadata.JavaScriptMetadataImpl.instance();\n\n    const descriptionRegexResult = /^function ([^(]*)\\(/.exec(description);\n    const name = descriptionRegexResult && descriptionRegexResult[1] || parsedFunctionName;\n    if (!name) {\n      return [];\n    }\n    const uniqueSignatures = javaScriptMetadata.signaturesForNativeFunction(name);\n    if (uniqueSignatures) {\n      return uniqueSignatures;\n    }\n    const receiverObj = await receiverObjGetter();\n    if (!receiverObj) {\n      return [];\n    }\n    const className = receiverObj.className;\n    if (className) {\n      const instanceMethods = javaScriptMetadata.signaturesForInstanceMethod(name, className);\n      if (instanceMethods) {\n        return instanceMethods;\n      }\n    }\n\n    // Check for static methods on a constructor.\n    if (receiverObj.description && receiverObj.type === 'function' &&\n        receiverObj.description.endsWith('{ [native code] }')) {\n      const receiverDescriptionRegexResult = /^function ([^(]*)\\(/.exec(receiverObj.description);\n      if (receiverDescriptionRegexResult) {\n        const receiverName = receiverDescriptionRegexResult[1];\n        const staticSignatures = javaScriptMetadata.signaturesForStaticMethod(name, receiverName);\n        if (staticSignatures) {\n          return staticSignatures;\n        }\n      }\n    }\n\n    let protoNames: string[];\n    if (receiverObj.type === 'number') {\n      protoNames = ['Number', 'Object'];\n    } else if (receiverObj.type === 'string') {\n      protoNames = ['String', 'Object'];\n    } else if (receiverObj.type === 'symbol') {\n      protoNames = ['Symbol', 'Object'];\n    } else if (receiverObj.type === 'bigint') {\n      protoNames = ['BigInt', 'Object'];\n    } else if (receiverObj.type === 'boolean') {\n      protoNames = ['Boolean', 'Object'];\n    } else if (receiverObj.type === 'undefined' || receiverObj.subtype === 'null') {\n      protoNames = [];\n    } else {\n      protoNames = await receiverObj.callFunctionJSON(function() {\n        const result = [];\n        for (let object: Object = this; object; object = Object.getPrototypeOf(object)) {\n          if (typeof object === 'object' && object.constructor && object.constructor.name) {\n            result[result.length] = object.constructor.name;\n          }\n        }\n        return result;\n      }, []);\n    }\n\n    if (!protoNames) {\n      return [];\n    }\n\n    for (const proto of protoNames) {\n      const instanceSignatures = javaScriptMetadata.signaturesForInstanceMethod(name, proto);\n      if (instanceSignatures) {\n        return instanceSignatures;\n      }\n    }\n    return [];\n  }\n\n  async _mapCompletions(text: string, query: string): Promise<UI.SuggestBox.Suggestions> {\n    const mapMatch = text.match(/\\.\\s*(get|set|delete)\\s*\\(\\s*$/);\n    const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    if (!executionContext || !mapMatch) {\n      return [];\n    }\n\n    const expression =\n        await Formatter.FormatterWorkerPool.formatterWorkerPool().findLastExpression(text.substring(0, mapMatch.index));\n    if (!expression) {\n      return [];\n    }\n\n    const result = await executionContext.evaluate(\n        {\n          expression,\n          objectGroup: 'mapCompletion',\n          includeCommandLineAPI: true,\n          silent: true,\n          returnByValue: false,\n          generatePreview: false,\n          throwOnSideEffect: true,\n          timeout: DEFAULT_TIMEOUT,\n          allowUnsafeEvalBlockedByCSP: undefined,\n          disableBreaks: undefined,\n          replMode: undefined,\n        },\n        /* userGesture */ false, /* awaitPromise */ false);\n    if ('error' in result || Boolean(result.exceptionDetails) || result.object.subtype !== 'map') {\n      return [];\n    }\n    const properties = await result.object.getOwnProperties(false);\n    const internalProperties = properties.internalProperties || [];\n    const entriesProperty = internalProperties.find(property => property.name === '[[Entries]]');\n    if (!entriesProperty || !entriesProperty.value) {\n      return [];\n    }\n    const keysObj = await entriesProperty.value.callFunctionJSON(function() {\n      const actualThis = (this as {\n        // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        key: any,\n      }[]);\n      const result: {\n        [x: string]: boolean|null,\n      } = {__proto__: null};\n      for (let i = 0; i < actualThis.length; i++) {\n        if (typeof actualThis[i].key === 'string') {\n          result[actualThis[i].key] = true;\n        }\n      }\n      return result;\n    }, []);\n    executionContext.runtimeModel.releaseObjectGroup('mapCompletion');\n    const rawKeys = Object.keys(keysObj);\n\n    const caseSensitivePrefix: UI.SuggestBox.Suggestions = [];\n    const caseInsensitivePrefix: UI.SuggestBox.Suggestions = [];\n    const caseSensitiveAnywhere: UI.SuggestBox.Suggestions = [];\n    const caseInsensitiveAnywhere: UI.SuggestBox.Suggestions = [];\n    let quoteChar = '\"';\n    if (query.startsWith('\\'')) {\n      quoteChar = '\\'';\n    }\n    let endChar = ')';\n    if (mapMatch[0].indexOf('set') !== -1) {\n      endChar = ', ';\n    }\n\n    const sorter = rawKeys.length < 1000 ? Platform.StringUtilities.naturalOrderComparator : undefined;\n    const keys = rawKeys.sort(sorter).map(key => quoteChar + key + quoteChar);\n\n    for (const key of keys) {\n      if (key.length < query.length) {\n        continue;\n      }\n      if (query.length && key.toLowerCase().indexOf(query.toLowerCase()) === -1) {\n        continue;\n      }\n      // Substitute actual newlines with newline characters. @see crbug.com/498421\n      const title = key.split('\\n').join('\\\\n');\n      const text = title + endChar;\n\n      if (key.startsWith(query)) {\n        caseSensitivePrefix.push(({text: text, title: title, priority: 4} as UI.SuggestBox.Suggestion));\n      } else if (key.toLowerCase().startsWith(query.toLowerCase())) {\n        caseInsensitivePrefix.push(({text: text, title: title, priority: 3} as UI.SuggestBox.Suggestion));\n      } else if (key.indexOf(query) !== -1) {\n        caseSensitiveAnywhere.push(({text: text, title: title, priority: 2} as UI.SuggestBox.Suggestion));\n      } else {\n        caseInsensitiveAnywhere.push(({text: text, title: title, priority: 1} as UI.SuggestBox.Suggestion));\n      }\n    }\n    const suggestions =\n        caseSensitivePrefix.concat(caseInsensitivePrefix, caseSensitiveAnywhere, caseInsensitiveAnywhere);\n    if (suggestions.length) {\n      suggestions[0].subtitle = i18nString(UIStrings.keys);\n    }\n    return suggestions;\n  }\n\n  async _completionsForExpression(fullText: string, query: string, force?: boolean):\n      Promise<UI.SuggestBox.Suggestions> {\n    const executionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    if (!executionContext) {\n      return [];\n    }\n    let expression;\n    if (fullText.endsWith('?.')) {\n      expression = await Formatter.FormatterWorkerPool.formatterWorkerPool().findLastExpression(\n          fullText.substring(0, fullText.length - 2));\n    } else if (fullText.endsWith('.') || fullText.endsWith('[')) {\n      expression = await Formatter.FormatterWorkerPool.formatterWorkerPool().findLastExpression(\n          fullText.substring(0, fullText.length - 1));\n    }\n    if (!expression) {\n      if (fullText.endsWith('.')) {\n        return [];\n      }\n      expression = '';\n    }\n\n    const expressionString = expression;\n    const dotNotation = fullText.endsWith('.');\n    const bracketNotation = Boolean(expressionString) && fullText.endsWith('[');\n\n    // User is entering float value, do not suggest anything.\n    if ((expressionString && !isNaN(Number(expressionString))) ||\n        (!expressionString && query && !isNaN(Number(query)))) {\n      return [];\n    }\n\n    if (!query && !expressionString && !force) {\n      return [];\n    }\n    const selectedFrame = executionContext.debuggerModel.selectedCallFrame();\n    let completionGroups: CompletionGroup[]|null;\n    const TEN_SECONDS = 10000;\n    let cache = this._expressionCache.get(expressionString);\n    if (cache && cache.date + TEN_SECONDS > Date.now()) {\n      completionGroups = await cache.value;\n    } else if (!expressionString && selectedFrame) {\n      // Always complete 'this' for local Debug-Evaluate, and\n      // auto-complete 'arguments' whenever there's an Arguments\n      // object (which might not exist for real, but might also\n      // happen to be materialized by local Debug-Evaluate).\n      const items = ['this'];\n      const result = await executionContext.evaluate(\n          {\n            expression: 'arguments',\n            objectGroup: 'completion',\n            includeCommandLineAPI: false,\n            silent: true,\n            returnByValue: false,\n            generatePreview: false,\n            throwOnSideEffect: true,\n            timeout: DEFAULT_TIMEOUT,\n            allowUnsafeEvalBlockedByCSP: undefined,\n            disableBreaks: undefined,\n            replMode: undefined,\n          },\n          /* userGesture */ false, /* awaitPromise */ false);\n      if (!('error' in result) && !result.exceptionDetails && result.object?.type === 'object' &&\n          result.object?.className === 'Arguments') {\n        items.unshift('arguments');\n      }\n      const value: CompletionGroup[] = [{\n        items,\n        title: undefined,\n      }];\n      const scopeChain = selectedFrame.scopeChain();\n      const groupPromises = [];\n      for (const scope of scopeChain) {\n        groupPromises.push(scope.object()\n                               .getAllProperties(false /* accessorPropertiesOnly */, false /* generatePreview */)\n                               .then(result => ({properties: result.properties, name: scope.name()})));\n      }\n      const fullScopes = await Promise.all(groupPromises);\n      executionContext.runtimeModel.releaseObjectGroup('completion');\n      for (const scope of fullScopes) {\n        if (scope.properties) {\n          value.push({title: scope.name, items: scope.properties.map(property => property.name).sort()});\n        }\n      }\n      cache = {date: Date.now(), value: Promise.resolve(value)};\n      this._expressionCache.set(expressionString, cache);\n      completionGroups = await cache.value;\n    } else {\n      const resultPromise = executionContext.evaluate(\n          {\n            expression: expressionString,\n            objectGroup: 'completion',\n            includeCommandLineAPI: true,\n            silent: true,\n            returnByValue: false,\n            generatePreview: false,\n            throwOnSideEffect: true,\n            timeout: DEFAULT_TIMEOUT,\n            allowUnsafeEvalBlockedByCSP: undefined,\n            disableBreaks: undefined,\n            replMode: undefined,\n          },\n          /* userGesture */ false, /* awaitPromise */ false);\n      cache = {date: Date.now(), value: resultPromise.then(result => completionsOnGlobal.call(this, result))};\n      this._expressionCache.set(expressionString, cache);\n      completionGroups = await cache.value;\n    }\n    return this._receivedPropertyNames(\n        completionGroups.slice(0), dotNotation, bracketNotation, expressionString, query);\n\n    async function completionsOnGlobal(\n        this: JavaScriptAutocomplete, result: SDK.RuntimeModel.EvaluationResult): Promise<CompletionGroup[]> {\n      if ('error' in result || Boolean(result.exceptionDetails) || !result.object) {\n        return [];\n      }\n\n      if (!executionContext) {\n        return [];\n      }\n\n      let object: SDK.RemoteObject.RemoteObject = result.object;\n      while (object && object.type === 'object' && object.subtype === 'proxy') {\n        const propertiesObject: SDK.RemoteObject.GetPropertiesResult =\n            await object.getOwnProperties(false /* generatePreview */);\n        const internalProperties = propertiesObject.internalProperties || [];\n        const target = internalProperties.find(property => property.name === '[[Target]]');\n        if (target && target.value) {\n          object = target.value;\n        } else {\n          break;\n        }\n      }\n      if (!object) {\n        return [];\n      }\n      let completions: CompletionGroup[] = [];\n      if (object.type === 'object' || object.type === 'function') {\n        completions = (await object.callFunctionJSON(\n                           // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration)\n                           // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                           (getCompletions as (this: Object, ...arg1: any[]) => Object),\n                           [SDK.RemoteObject.RemoteObject.toCallArgument(object.subtype)]) as CompletionGroup[]) ||\n            [];\n      } else if (\n          object.type === 'string' || object.type === 'number' || object.type === 'boolean' ||\n          object.type === 'bigint') {\n        const evaluateResult = await executionContext.evaluate(\n            {\n              expression: '(' + getCompletions + ')(\"' + object.type + '\")',\n              objectGroup: 'completion',\n              includeCommandLineAPI: false,\n              silent: true,\n              returnByValue: true,\n              generatePreview: false,\n              allowUnsafeEvalBlockedByCSP: undefined,\n              disableBreaks: undefined,\n              replMode: undefined,\n              throwOnSideEffect: undefined,\n              timeout: undefined,\n            },\n            /* userGesture */ false,\n            /* awaitPromise */ false);\n        if (!('error' in evaluateResult) && evaluateResult.object && !evaluateResult.exceptionDetails) {\n          completions = (evaluateResult.object.value as CompletionGroup[]) || [];\n        }\n      }\n      executionContext.runtimeModel.releaseObjectGroup('completion');\n\n      if (!expressionString) {\n        const globalNames = await executionContext.globalLexicalScopeNames();\n        if (globalNames) {\n          // Merge lexical scope names with first completion group on global object: let a and let b should be in the same group.\n          if (completions.length) {\n            completions[0].items = completions[0].items.concat(globalNames);\n          } else {\n            completions.push({items: globalNames.sort(), title: i18nString(UIStrings.lexicalScopeVariables)});\n          }\n        }\n      }\n\n      for (const group of completions) {\n        for (let i = 0; i < group.items.length; i++) {\n          group.items[i] = group.items[i].replace(/\\n/g, '\\\\n');\n        }\n\n        group.items.sort(group.items.length < 1000 ? this._itemComparator : undefined);\n      }\n\n      return completions;\n\n      function getCompletions(this: Object, type?: string): Object {\n        let object;\n        if (type === 'string') {\n          object = new String('');\n        } else if (type === 'number') {\n          object = new Number(0);\n        }\n        // Object-wrapped BigInts cannot be constructed via `new BigInt`.\n        else if (type === 'bigint') {\n          object = Object(BigInt(0));\n        } else if (type === 'boolean') {\n          object = new Boolean(false);\n        } else {\n          object = this;\n        }\n\n        const result: CompletionGroup[] = [];\n        try {\n          for (let o = object; o; o = Object.getPrototypeOf(o)) {\n            if ((type === 'array' || type === 'typedarray') && o === object && o.length > 9999) {\n              continue;\n            }\n\n            const group = ({items: [], title: undefined, __proto__: null} as CompletionGroup);\n            try {\n              if (typeof o === 'object' && Object.prototype.hasOwnProperty.call(o, 'constructor') && o.constructor &&\n                  o.constructor.name) {\n                group.title = o.constructor.name;\n              }\n            } catch (ee) {\n              // we could break upon cross origin check.\n            }\n            result[result.length] = group;\n            const names = Object.getOwnPropertyNames(o);\n            const isArray = Array.isArray(o);\n            for (let i = 0; i < names.length && group.items.length < 10000; ++i) {\n              // Skip array elements indexes.\n              if (isArray && /^[0-9]/.test(names[i])) {\n                continue;\n              }\n              group.items[group.items.length] = names[i];\n            }\n          }\n        } catch (e) {\n        }\n        return result;\n      }\n    }\n  }\n\n  _receivedPropertyNames(\n      propertyGroups: CompletionGroup[]|null, dotNotation: boolean, bracketNotation: boolean, expressionString: string,\n      query: string): UI.SuggestBox.Suggestions {\n    if (!propertyGroups) {\n      return [];\n    }\n    const includeCommandLineAPI = (!dotNotation && !bracketNotation);\n    if (includeCommandLineAPI) {\n      const commandLineAPI = [\n        'dir',\n        'dirxml',\n        'keys',\n        'values',\n        'profile',\n        'profileEnd',\n        'monitorEvents',\n        'unmonitorEvents',\n        'inspect',\n        'copy',\n        'clear',\n        'getEventListeners',\n        'debug',\n        'undebug',\n        'monitor',\n        'unmonitor',\n        'table',\n        'queryObjects',\n        '$',\n        '$$',\n        '$x',\n        '$0',\n        '$_',\n      ];\n      propertyGroups.push({\n        items: commandLineAPI,\n        title: undefined,\n      });\n    }\n    return this._completionsForQuery(dotNotation, bracketNotation, expressionString, query, propertyGroups);\n  }\n\n  _completionsForQuery(\n      dotNotation: boolean, bracketNotation: boolean, expressionString: string, query: string,\n      propertyGroups: CompletionGroup[]): UI.SuggestBox.Suggestions {\n    const quoteUsed = (bracketNotation && query.startsWith('\\'')) ? '\\'' : '\"';\n\n    if (!expressionString) {\n      // See ES2017 spec: https://www.ecma-international.org/ecma-262/8.0/index.html\n      const keywords = [\n        // Section 11.6.2.1 Reserved keywords.\n        'await',\n        'break',\n        'case',\n        'catch',\n        'class',\n        'const',\n        'continue',\n        'debugger',\n        'default',\n        'delete',\n        'do',\n        'else',\n        'exports',\n        'extends',\n        'finally',\n        'for',\n        'function',\n        'if',\n        'import',\n        'in',\n        'instanceof',\n        'new',\n        'return',\n        'super',\n        'switch',\n        'this',\n        'throw',\n        'try',\n        'typeof',\n        'var',\n        'void',\n        'while',\n        'with',\n        'yield',\n\n        // Section 11.6.2.1's note mentions words treated as reserved in certain cases.\n        'let',\n        'static',\n\n        // Other keywords not explicitly reserved by spec.\n        'async',\n        'of',\n      ];\n      propertyGroups.push({title: i18nString(UIStrings.keywords), items: keywords.sort()});\n    }\n\n    const allProperties = new Set<string>();\n    let result: UI.SuggestBox.Suggestion[] = [];\n    let lastGroupTitle;\n    const regex = /^[a-zA-Z_$\\u008F-\\uFFFF][a-zA-Z0-9_$\\u008F-\\uFFFF]*$/;\n    const lowerCaseQuery = query.toLowerCase();\n    for (const group of propertyGroups) {\n      const caseSensitivePrefix: UI.SuggestBox.Suggestions = [];\n      const caseInsensitivePrefix: UI.SuggestBox.Suggestions = [];\n      const caseSensitiveAnywhere: UI.SuggestBox.Suggestions = [];\n      const caseInsensitiveAnywhere: UI.SuggestBox.Suggestions = [];\n\n      for (let i = 0; i < group.items.length; i++) {\n        let property: string = group.items[i];\n        // Assume that all non-ASCII characters are letters and thus can be used as part of identifier.\n        if (!bracketNotation && !regex.test(property)) {\n          continue;\n        }\n\n        if (bracketNotation) {\n          if (!/^[0-9]+$/.test(property)) {\n            property = quoteUsed + Platform.StringUtilities.escapeCharacters(property, quoteUsed + '\\\\') + quoteUsed;\n          }\n          property += ']';\n        }\n        if (allProperties.has(property)) {\n          continue;\n        }\n\n        if (property.length < query.length) {\n          continue;\n        }\n        const lowerCaseProperty = property.toLowerCase();\n        if (query.length && lowerCaseProperty.indexOf(lowerCaseQuery) === -1) {\n          continue;\n        }\n\n        allProperties.add(property);\n        if (property.startsWith(query)) {\n          caseSensitivePrefix.push(\n              ({text: property, priority: property === query ? 5 : 4} as UI.SuggestBox.Suggestion));\n        } else if (lowerCaseProperty.startsWith(lowerCaseQuery)) {\n          caseInsensitivePrefix.push(({text: property, priority: 3} as UI.SuggestBox.Suggestion));\n        } else if (property.indexOf(query) !== -1) {\n          caseSensitiveAnywhere.push(({text: property, priority: 2} as UI.SuggestBox.Suggestion));\n        } else {\n          caseInsensitiveAnywhere.push(({text: property, priority: 1} as UI.SuggestBox.Suggestion));\n        }\n      }\n      const structuredGroup =\n          caseSensitivePrefix.concat(caseInsensitivePrefix, caseSensitiveAnywhere, caseInsensitiveAnywhere);\n      if (structuredGroup.length && group.title !== lastGroupTitle) {\n        structuredGroup[0].subtitle = group.title;\n        lastGroupTitle = group.title;\n      }\n      result = result.concat(structuredGroup);\n      result.forEach(item => {\n        if (item.text.endsWith(']')) {\n          item.title = item.text.substring(0, item.text.length - 1);\n        }\n      });\n    }\n    return result;\n  }\n\n  _itemComparator(a: string, b: string): number {\n    const aStartsWithUnderscore = a.startsWith('_');\n    const bStartsWithUnderscore = b.startsWith('_');\n    if (aStartsWithUnderscore && !bStartsWithUnderscore) {\n      return 1;\n    }\n    if (bStartsWithUnderscore && !aStartsWithUnderscore) {\n      return -1;\n    }\n    return Platform.StringUtilities.naturalOrderComparator(a, b);\n  }\n\n  static async isExpressionComplete(expression: string): Promise<boolean> {\n    const currentExecutionContext = UI.Context.Context.instance().flavor(SDK.RuntimeModel.ExecutionContext);\n    if (!currentExecutionContext) {\n      return true;\n    }\n    const result =\n        await currentExecutionContext.runtimeModel.compileScript(expression, '', false, currentExecutionContext.id);\n    if (!result || !result.exceptionDetails || !result.exceptionDetails.exception) {\n      return true;\n    }\n    const description = result.exceptionDetails.exception.description;\n    if (description) {\n      return !description.startsWith('SyntaxError: Unexpected end of input') &&\n          !description.startsWith('SyntaxError: Unterminated template literal');\n    }\n    return false;\n  }\n}\n\nexport class JavaScriptAutocompleteConfig {\n  _editor: UI.TextEditor.TextEditor;\n  constructor(editor: UI.TextEditor.TextEditor) {\n    this._editor = editor;\n  }\n\n  static createConfigForEditor(editor: UI.TextEditor.TextEditor): UI.SuggestBox.AutocompleteConfig {\n    const autocomplete = new JavaScriptAutocompleteConfig(editor);\n    return {\n      substituteRangeCallback: autocomplete._substituteRange.bind(autocomplete),\n      suggestionsCallback: autocomplete._suggestionsCallback.bind(autocomplete),\n      tooltipCallback: autocomplete._tooltipCallback.bind(autocomplete),\n      anchorBehavior: undefined,\n      isWordChar: undefined,\n    };\n  }\n\n  _substituteRange(lineNumber: number, columnNumber: number): TextUtils.TextRange.TextRange|null {\n    const token = this._editor.tokenAtTextPosition(lineNumber, columnNumber);\n    if (token && token.type === 'js-string') {\n      return new TextUtils.TextRange.TextRange(lineNumber, token.startColumn, lineNumber, columnNumber);\n    }\n\n    const lineText = this._editor.line(lineNumber);\n    let index;\n    for (index = columnNumber - 1; index >= 0; index--) {\n      if (' =:[({;,!+-*/&|^<>.\\t\\r\\n'.indexOf(lineText.charAt(index)) !== -1) {\n        break;\n      }\n    }\n    return new TextUtils.TextRange.TextRange(lineNumber, index + 1, lineNumber, columnNumber);\n  }\n\n  async _suggestionsCallback(\n      queryRange: TextUtils.TextRange.TextRange, substituteRange: TextUtils.TextRange.TextRange,\n      force?: boolean): Promise<UI.SuggestBox.Suggestions> {\n    const query = this._editor.text(queryRange);\n    const before =\n        this._editor.text(new TextUtils.TextRange.TextRange(0, 0, queryRange.startLine, queryRange.startColumn));\n    const token = this._editor.tokenAtTextPosition(substituteRange.startLine, substituteRange.startColumn);\n    if (token) {\n      const excludedTokens = new Set<string>(['js-comment', 'js-string-2', 'js-def']);\n      const trimmedBefore = before.trim();\n      if (!trimmedBefore.endsWith('[') && !trimmedBefore.match(/\\.\\s*(get|set|delete)\\s*\\(\\s*$/)) {\n        excludedTokens.add('js-string');\n      }\n      if (!trimmedBefore.endsWith('.')) {\n        excludedTokens.add('js-property');\n      }\n      if (excludedTokens.has(token.type)) {\n        return [];\n      }\n    }\n    const queryAndAfter = this._editor.line(queryRange.startLine).substring(queryRange.startColumn);\n\n    const words = await JavaScriptAutocomplete.instance().completionsForTextInCurrentContext(before, query, force);\n    if (!force && queryAndAfter && queryAndAfter !== query &&\n        words.some(word => queryAndAfter.startsWith(word.text) && query.length !== word.text.length)) {\n      return [];\n    }\n    return words;\n  }\n\n  async _tooltipCallback(lineNumber: number, columnNumber: number): Promise<Element|null> {\n    const before = this._editor.text(new TextUtils.TextRange.TextRange(0, 0, lineNumber, columnNumber));\n    const result = await JavaScriptAutocomplete.instance().argumentsHint(before);\n    if (!result) {\n      return null;\n    }\n    const argumentIndex = result.argumentIndex;\n    const tooltip = document.createElement('div');\n    for (const args of result.args) {\n      const argumentsElement = document.createElement('span');\n      for (let i = 0; i < args.length; i++) {\n        if (i === argumentIndex || (i < argumentIndex && args[i].startsWith('...'))) {\n          argumentsElement.appendChild(UI.Fragment.html`<b>${args[i]}</b>`);\n        } else {\n          UI.UIUtils.createTextChild(argumentsElement, args[i]);\n        }\n        if (i < args.length - 1) {\n          UI.UIUtils.createTextChild(argumentsElement, ', ');\n        }\n      }\n      tooltip.appendChild(UI.Fragment.html`<div class='source-code'>\\u0192(${argumentsElement})</div>`);\n    }\n    return tooltip;\n  }\n}\nexport interface CompletionGroup {\n  title?: string;\n  items: string[];\n}\n"]}