{"version":3,"file":"DropTarget.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/DropTarget.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport {createShadowRootWithCoreStyles} from './utils/create-shadow-root-with-core-styles.js';\n\nexport class DropTarget {\n  _element: Element;\n  _transferTypes: {\n    kind: string,\n    type: RegExp,\n  }[];\n  _messageText: string;\n  _handleDrop: (arg0: DataTransfer) => void;\n  _enabled: boolean;\n  _dragMaskElement: Element|null;\n\n  constructor(\n      element: Element, transferTypes: {\n        kind: string,\n        type: RegExp,\n      }[],\n      messageText: string, handleDrop: (arg0: DataTransfer) => void) {\n    element.addEventListener('dragenter', this._onDragEnter.bind(this), true);\n    element.addEventListener('dragover', this._onDragOver.bind(this), true);\n    this._element = element;\n    this._transferTypes = transferTypes;\n    this._messageText = messageText;\n    this._handleDrop = handleDrop;\n    this._enabled = true;\n    this._dragMaskElement = null;\n  }\n\n  setEnabled(enabled: boolean): void {\n    this._enabled = enabled;\n  }\n\n  _onDragEnter(event: Event): void {\n    if (this._enabled && this._hasMatchingType(event)) {\n      event.consume(true);\n    }\n  }\n\n  _hasMatchingType(ev: Event): boolean {\n    const event = (ev as DragEvent);\n    if (!event.dataTransfer) {\n      return false;\n    }\n    for (const transferType of this._transferTypes) {\n      const found = Array.from(event.dataTransfer.items).find(item => {\n        return transferType.kind === item.kind && Boolean(transferType.type.exec(item.type));\n      });\n      if (found) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  _onDragOver(ev: Event): void {\n    const event = (ev as DragEvent);\n    if (!this._enabled || !this._hasMatchingType(event)) {\n      return;\n    }\n    if (event.dataTransfer) {\n      event.dataTransfer.dropEffect = 'copy';\n    }\n    event.consume(true);\n    if (this._dragMaskElement) {\n      return;\n    }\n    this._dragMaskElement = this._element.createChild('div', '');\n    const shadowRoot = createShadowRootWithCoreStyles(\n        this._dragMaskElement,\n        {cssFile: 'ui/legacy/dropTarget.css', enableLegacyPatching: false, delegatesFocus: undefined});\n    shadowRoot.createChild('div', 'drop-target-message').textContent = this._messageText;\n    this._dragMaskElement.addEventListener('drop', this._onDrop.bind(this), true);\n    this._dragMaskElement.addEventListener('dragleave', this._onDragLeave.bind(this), true);\n  }\n\n  _onDrop(ev: Event): void {\n    const event = (ev as DragEvent);\n    event.consume(true);\n    this._removeMask();\n    if (this._enabled && event.dataTransfer) {\n      this._handleDrop(event.dataTransfer);\n    }\n  }\n\n  _onDragLeave(event: Event): void {\n    event.consume(true);\n    this._removeMask();\n  }\n\n  _removeMask(): void {\n    if (this._dragMaskElement) {\n      this._dragMaskElement.remove();\n      this._dragMaskElement = null;\n    }\n  }\n}\n\nexport const Type = {\n  URI: {kind: 'string', type: /text\\/uri-list/},\n  Folder: {kind: 'file', type: /$^/},\n  File: {kind: 'file', type: /.*/},\n  WebFile: {kind: 'file', type: /[\\w]+/},\n  ImageFile: {kind: 'file', type: /image\\/.*/},\n};\n"]}