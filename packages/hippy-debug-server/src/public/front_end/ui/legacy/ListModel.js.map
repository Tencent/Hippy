{"version":3,"file":"ListModel.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ListModel.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2017 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as Platform from '../../core/platform/platform.js';\n\nexport class ListModel<T> extends Common.ObjectWrapper.ObjectWrapper implements Iterable<T> {\n  _items: T[];\n  constructor(items?: T[]) {\n    super();\n    this._items = items || [];\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  [Symbol.iterator](): Iterator<T, any, undefined> {\n    return this._items[Symbol.iterator]();\n  }\n\n  get length(): number {\n    return this._items.length;\n  }\n\n  at(index: number): T {\n    return this._items[index];\n  }\n\n  every(callback: (arg0: T) => boolean): boolean {\n    return this._items.every(callback);\n  }\n\n  filter(callback: (arg0: T) => boolean): T[] {\n    return this._items.filter(callback);\n  }\n\n  find(callback: (arg0: T) => boolean): T|undefined {\n    return this._items.find(callback);\n  }\n\n  findIndex(callback: (arg0: T) => boolean): number {\n    return this._items.findIndex(callback);\n  }\n\n  indexOf(value: T, fromIndex?: number): number {\n    return this._items.indexOf(value, fromIndex);\n  }\n\n  insert(index: number, value: T): void {\n    this._items.splice(index, 0, value);\n    this._replaced(index, [], 1);\n  }\n\n  insertWithComparator(value: T, comparator: (arg0: T, arg1: T) => number): void {\n    this.insert(Platform.ArrayUtilities.lowerBound(this._items, value, comparator), value);\n  }\n\n  join(separator?: string): string {\n    return this._items.join(separator);\n  }\n\n  remove(index: number): T {\n    const result = this._items[index];\n    this._items.splice(index, 1);\n    this._replaced(index, [result], 0);\n    return result;\n  }\n\n  replace(index: number, value: T, keepSelectedIndex?: boolean): T {\n    const oldValue = this._items[index];\n    this._items[index] = value;\n    this._replaced(index, [oldValue], 1, keepSelectedIndex);\n    return oldValue;\n  }\n\n  replaceRange(from: number, to: number, items: T[]): T[] {\n    let removed;\n    if (items.length < 10000) {\n      removed = this._items.splice(from, to - from, ...items);\n    } else {\n      removed = this._items.slice(from, to);\n      // Splice may fail with too many arguments.\n      const before = this._items.slice(0, from);\n      const after = this._items.slice(to);\n      this._items = [...before, ...items, ...after];\n    }\n    this._replaced(from, removed, items.length);\n    return removed;\n  }\n\n  replaceAll(items: T[]): T[] {\n    const oldItems = this._items.slice();\n    this._items = items;\n    this._replaced(0, oldItems, items.length);\n    return oldItems;\n  }\n\n  slice(from?: number, to?: number): T[] {\n    return this._items.slice(from, to);\n  }\n\n  some(callback: (arg0: T) => boolean): boolean {\n    return this._items.some(callback);\n  }\n\n  _replaced(index: number, removed: T[], inserted: number, keepSelectedIndex?: boolean): void {\n    this.dispatchEventToListeners(Events.ItemsReplaced, {index, removed, inserted, keepSelectedIndex});\n  }\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  ItemsReplaced = 'ItemsReplaced',\n}\n"]}