{"version":3,"file":"HistoryInput.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/HistoryInput.ts"],"names":[],"mappings":"AAAA,gEAAgE;AAChE,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,EAAC,IAAI,EAAC,MAAM,uBAAuB,CAAC;AAC3C,OAAO,EAAC,qBAAqB,EAAC,MAAM,oCAAoC,CAAC;AAEzE,mEAAmE;AACnE,gEAAgE;AAChE,IAAI,YAAY,GAAyB,IAAI,CAAC;AAE9C,MAAM,OAAO,YAAa,SAAQ,gBAAgB;IAChD,QAAQ,CAAW;IACnB,gBAAgB,CAAS;IAEzB;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,CAAC,CAAC;QACrB,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;QACpE,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,CAAC,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,MAAM;QACX,IAAI,CAAC,YAAY,EAAE;YACjB,YAAY,GAAG,qBAAqB,CAAC,OAAO,EAAE,eAAe,EAAE,YAAY,CAAC,CAAC;SAC9E;QAED,OAAO,YAAY,EAAkB,CAAC;IACxC,CAAC;IAED,QAAQ,CAAC,MAAa;QACpB,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE;YACtD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;SACtD;IACH,CAAC;IAED,UAAU,CAAC,EAAS;QAClB,MAAM,KAAK,GAAI,EAAoB,CAAC;QACpC,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE;YAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAC,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;YAC9E,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACrB;aAAM,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACtF,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;YAClD,IAAI,CAAC,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO,EAAE,EAAC,SAAS,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;YAC9E,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACrB;aAAM,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE;YAC5C,IAAI,CAAC,cAAc,EAAE,CAAC;SACvB;IACH,CAAC;IAED,cAAc;QACZ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,IAAI,CAAC,KAAK,EAAE;YACtF,OAAO;SACR;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACrD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACzB,CAAC;CACF","sourcesContent":["// Copyright (c) 2015 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport {Keys} from './KeyboardShortcut.js';\nimport {registerCustomElement} from './utils/register-custom-element.js';\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nlet _constructor: (() => Element)|null = null;\n\nexport class HistoryInput extends HTMLInputElement {\n  _history: string[];\n  _historyPosition: number;\n\n  constructor() {\n    super();\n    this._history = [''];\n    this._historyPosition = 0;\n    this.addEventListener('keydown', this._onKeyDown.bind(this), false);\n    this.addEventListener('input', this._onInput.bind(this), false);\n  }\n\n  static create(): HistoryInput {\n    if (!_constructor) {\n      _constructor = registerCustomElement('input', 'history-input', HistoryInput);\n    }\n\n    return _constructor() as HistoryInput;\n  }\n\n  _onInput(_event: Event): void {\n    if (this._history.length === this._historyPosition + 1) {\n      this._history[this._history.length - 1] = this.value;\n    }\n  }\n\n  _onKeyDown(ev: Event): void {\n    const event = (ev as KeyboardEvent);\n    if (event.keyCode === Keys.Up.code) {\n      this._historyPosition = Math.max(this._historyPosition - 1, 0);\n      this.value = this._history[this._historyPosition];\n      this.dispatchEvent(new Event('input', {'bubbles': true, 'cancelable': true}));\n      event.consume(true);\n    } else if (event.keyCode === Keys.Down.code) {\n      this._historyPosition = Math.min(this._historyPosition + 1, this._history.length - 1);\n      this.value = this._history[this._historyPosition];\n      this.dispatchEvent(new Event('input', {'bubbles': true, 'cancelable': true}));\n      event.consume(true);\n    } else if (event.keyCode === Keys.Enter.code) {\n      this._saveToHistory();\n    }\n  }\n\n  _saveToHistory(): void {\n    if (this._history.length > 1 && this._history[this._history.length - 2] === this.value) {\n      return;\n    }\n    this._history[this._history.length - 1] = this.value;\n    this._historyPosition = this._history.length - 1;\n    this._history.push('');\n  }\n}\n"]}