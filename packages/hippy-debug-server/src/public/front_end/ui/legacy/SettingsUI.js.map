{"version":3,"file":"SettingsUI.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/SettingsUI.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2014 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport * as i18n from '../../core/i18n/i18n.js';\n\nimport * as ARIAUtils from './ARIAUtils.js';\nimport {InspectorView} from './InspectorView.js';\nimport {Tooltip} from './Tooltip.js';\nimport {CheckboxLabel} from './UIUtils.js';\n\nconst UIStrings = {\n  /**\n  *@description Note when a setting change will require the user to reload DevTools\n  */\n  srequiresReload: '*Requires reload',\n  /**\n  *@description Message to display if a setting change requires a reload of DevTools\n  */\n  oneOrMoreSettingsHaveChanged: 'One or more settings have changed which requires a reload to take effect.',\n};\nconst str_ = i18n.i18n.registerUIStrings('ui/legacy/SettingsUI.ts', UIStrings);\nconst i18nString = i18n.i18n.getLocalizedString.bind(undefined, str_);\nexport const createSettingCheckbox = function(\n    name: string, setting: Common.Settings.Setting<boolean>, omitParagraphElement?: boolean,\n    tooltip?: string): Element {\n  const label = CheckboxLabel.create(name);\n  if (tooltip) {\n    Tooltip.install(label, tooltip);\n  }\n\n  const input = label.checkboxElement;\n  input.name = name;\n  bindCheckbox(input, setting);\n\n  if (omitParagraphElement) {\n    return label;\n  }\n\n  const p = document.createElement('p');\n  p.appendChild(label);\n  return p;\n};\n\nconst createSettingSelect = function(\n    name: string, options: Common.Settings.SimpleSettingOption[], requiresReload: boolean|null,\n    setting: Common.Settings.Setting<unknown>, subtitle?: string): Element {\n  const settingSelectElement = document.createElement('p');\n  const label = settingSelectElement.createChild('label');\n  const select = (settingSelectElement.createChild('select', 'chrome-select') as HTMLSelectElement);\n  label.textContent = name;\n  if (subtitle) {\n    settingSelectElement.classList.add('chrome-select-label');\n    label.createChild('p').textContent = subtitle;\n  }\n  ARIAUtils.bindLabelToControl(label, select);\n\n  for (const option of options) {\n    if (option.text && typeof option.value === 'string') {\n      select.add(new Option(option.text, option.value));\n    }\n  }\n\n  let reloadWarning: HTMLElement|(Element | null) = (null as Element | null);\n  if (requiresReload) {\n    reloadWarning = settingSelectElement.createChild('span', 'reload-warning hidden');\n    reloadWarning.textContent = i18nString(UIStrings.srequiresReload);\n    ARIAUtils.markAsAlert(reloadWarning);\n  }\n\n  setting.addChangeListener(settingChanged);\n  settingChanged();\n  select.addEventListener('change', selectChanged, false);\n  return settingSelectElement;\n\n  function settingChanged(): void {\n    const newValue = setting.get();\n    for (let i = 0; i < options.length; i++) {\n      if (options[i].value === newValue) {\n        select.selectedIndex = i;\n      }\n    }\n  }\n\n  function selectChanged(): void {\n    // Don't use event.target.value to avoid conversion of the value to string.\n    setting.set(options[select.selectedIndex].value);\n    if (reloadWarning) {\n      reloadWarning.classList.remove('hidden');\n      InspectorView.instance().displayReloadRequiredWarning(i18nString(UIStrings.oneOrMoreSettingsHaveChanged));\n    }\n  }\n};\n\nexport const bindCheckbox = function(inputElement: Element, setting: Common.Settings.Setting<boolean>): void {\n  const input = (inputElement as HTMLInputElement);\n  function settingChanged(): void {\n    if (input.checked !== setting.get()) {\n      input.checked = setting.get();\n    }\n  }\n  setting.addChangeListener(settingChanged);\n  settingChanged();\n\n  function inputChanged(): void {\n    if (setting.get() !== input.checked) {\n      setting.set(input.checked);\n    }\n  }\n  input.addEventListener('change', inputChanged, false);\n};\n\nexport const createCustomSetting = function(name: string, element: Element): Element {\n  const p = document.createElement('p');\n  const fieldsetElement = p.createChild('fieldset');\n  const label = fieldsetElement.createChild('label');\n  label.textContent = name;\n  ARIAUtils.bindLabelToControl(label, element);\n  fieldsetElement.appendChild(element);\n  return p;\n};\n\nexport const createControlForSetting = function(setting: Common.Settings.Setting<unknown>, subtitle?: string): Element|\n    null {\n      const uiTitle = setting.title();\n      switch (setting.type()) {\n        case Common.Settings.SettingType.BOOLEAN:\n          return createSettingCheckbox(uiTitle, (setting as Common.Settings.Setting<boolean>));\n        case Common.Settings.SettingType.ENUM:\n          if (Array.isArray(setting.options())) {\n            return createSettingSelect(uiTitle, setting.options(), setting.reloadRequired(), setting, subtitle);\n          }\n          console.error('Enum setting defined without options');\n          return null;\n        default:\n          console.error('Invalid setting type: ' + setting.type());\n          return null;\n      }\n    };\n\nexport interface SettingUI {\n  settingElement(): Element|null;\n}\n"]}