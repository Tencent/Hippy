{"version":3,"file":"TextEditor.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/TextEditor.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAwC7B,wDAAwD;AACxD,+CAA+C;AAC/C,MAAM,CAAN,IAAY,MAIX;AAJD,WAAY,MAAM;IAChB,yCAA+B,CAAA;IAC/B,qCAA2B,CAAA;IAC3B,iDAAuC,CAAA;AACzC,CAAC,EAJW,MAAM,KAAN,MAAM,QAIjB","sourcesContent":["// Copyright 2016 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js';\nimport type * as TextUtils from '../../models/text_utils/text_utils.js'; // eslint-disable-line no-unused-vars\n\nimport type {AnchorBehavior} from './GlassPane.js';\nimport type {Suggestion} from './SuggestBox.js'; // eslint-disable-line no-unused-vars\nimport type {Widget} from './Widget.js';         // eslint-disable-line no-unused-vars\n\nexport interface TextEditorFactory {\n  createEditor(options: Options): TextEditor;\n}\n\nexport interface TextEditor extends Common.EventTarget.EventTarget {\n  widget(): Widget;\n  fullRange(): TextUtils.TextRange.TextRange;\n  selection(): TextUtils.TextRange.TextRange;\n  setSelection(selection: TextUtils.TextRange.TextRange): void;\n  text(textRange?: TextUtils.TextRange.TextRange): string;\n  textWithCurrentSuggestion(): string;\n  setText(text: string): void;\n  line(lineNumber: number): string;\n  newlineAndIndent(): void;\n  addKeyDownHandler(handler: (arg0: KeyboardEvent) => void): void;\n  configureAutocomplete(config: AutocompleteConfig|null): void;\n  clearAutocomplete(): void;\n  visualCoordinates(lineNumber: number, columnNumber: number): {\n    x: number,\n    y: number,\n  };\n  tokenAtTextPosition(lineNumber: number, columnNumber: number): {\n    startColumn: number,\n    endColumn: number,\n    type: string,\n  }|null;\n  setPlaceholder(placeholder: string): void;\n}\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Events {\n  CursorChanged = 'CursorChanged',\n  TextChanged = 'TextChanged',\n  SuggestionChanged = 'SuggestionChanged',\n}\n\nexport interface Options {\n  bracketMatchingSetting?: Common.Settings.Setting<boolean>;\n  devtoolsAccessibleName?: string;\n  lineNumbers: boolean;\n  lineWrapping: boolean;\n  mimeType?: string;\n  autoHeight?: boolean;\n  padBottom?: boolean;\n  maxHighlightLength?: number;\n  placeholder?: string;\n  lineWiseCopyCut?: boolean;\n  inputStyle?: string;\n}\n\nexport interface AutocompleteConfig {\n  substituteRangeCallback?: ((arg0: number, arg1: number) => TextUtils.TextRange.TextRange | null);\n  tooltipCallback?: ((arg0: number, arg1: number) => Promise<Element|null>);\n  suggestionsCallback?:\n      ((arg0: TextUtils.TextRange.TextRange, arg1: TextUtils.TextRange.TextRange,\n        arg2?: boolean|undefined) => Promise<Suggestion[]>| null);\n  isWordChar?: ((arg0: string) => boolean);\n  anchorBehavior?: AnchorBehavior;\n}\n"]}