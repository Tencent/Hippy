{"version":3,"file":"KeyboardShortcut.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/KeyboardShortcut.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright 2021 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/*\n * Copyright (C) 2009 Apple Inc. All rights reserved.\n * Copyright (C) 2009 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n *\n * 1.  Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n * 2.  Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n * 3.  Neither the name of Apple Computer, Inc. (\"Apple\") nor the names of\n *     its contributors may be used to endorse or promote products derived\n *     from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY APPLE AND ITS CONTRIBUTORS \"AS IS\" AND ANY\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL APPLE OR ITS CONTRIBUTORS BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Host from '../../core/host/host.js';\nimport {DefaultShortcutSetting} from './ShortcutRegistry.js';\n\nexport class KeyboardShortcut {\n  descriptors: Descriptor[];\n  action: string;\n  type: Type;\n  keybindSets: Set<string>;\n\n  constructor(descriptors: Descriptor[], action: string, type: Type, keybindSets?: Set<string>) {\n    this.descriptors = descriptors;\n    this.action = action;\n    this.type = type;\n    this.keybindSets = keybindSets || new Set();\n  }\n\n  title(): string {\n    return this.descriptors.map(descriptor => descriptor.name).join(' ');\n  }\n\n  isDefault(): boolean {\n    return this.type === Type.DefaultShortcut || this.type === Type.DisabledDefault ||\n        (this.type === Type.KeybindSetShortcut && this.keybindSets.has(DefaultShortcutSetting));\n  }\n\n  changeType(type: Type): KeyboardShortcut {\n    return new KeyboardShortcut(this.descriptors, this.action, type);\n  }\n\n  changeKeys(descriptors: Descriptor[]): KeyboardShortcut {\n    this.descriptors = descriptors;\n    return this;\n  }\n\n  descriptorsMatch(descriptors: Descriptor[]): boolean {\n    if (descriptors.length !== this.descriptors.length) {\n      return false;\n    }\n    return descriptors.every((descriptor, index) => descriptor.key === this.descriptors[index].key);\n  }\n\n  hasKeybindSet(keybindSet: string): boolean {\n    return !this.keybindSets || this.keybindSets.has(keybindSet);\n  }\n\n  equals(shortcut: KeyboardShortcut): boolean {\n    return this.descriptorsMatch(shortcut.descriptors) && this.type === shortcut.type &&\n        this.action === shortcut.action;\n  }\n\n  static createShortcutFromSettingObject(settingObject: {\n    action: string,\n    descriptors: Array<Descriptor>,\n    type: Type,\n  }): KeyboardShortcut {\n    return new KeyboardShortcut(settingObject.descriptors, settingObject.action, settingObject.type);\n  }\n\n  /**\n   * Creates a number encoding keyCode in the lower 8 bits and modifiers mask in the higher 8 bits.\n   * It is useful for matching pressed keys.\n   */\n  static makeKey(keyCode: string|number, modifiers?: number): number {\n    if (typeof keyCode === 'string') {\n      keyCode = keyCode.charCodeAt(0) - (/^[a-z]/.test(keyCode) ? 32 : 0);\n    }\n    modifiers = modifiers || Modifiers.None;\n    return KeyboardShortcut._makeKeyFromCodeAndModifiers(keyCode, modifiers);\n  }\n\n  static makeKeyFromEvent(keyboardEvent: KeyboardEvent): number {\n    let modifiers = Modifiers.None;\n    if (keyboardEvent.shiftKey) {\n      modifiers |= Modifiers.Shift;\n    }\n    if (keyboardEvent.ctrlKey) {\n      modifiers |= Modifiers.Ctrl;\n    }\n    if (keyboardEvent.altKey) {\n      modifiers |= Modifiers.Alt;\n    }\n    if (keyboardEvent.metaKey) {\n      modifiers |= Modifiers.Meta;\n    }\n\n    // Use either a real or a synthetic keyCode (for events originating from extensions).\n    // @ts-ignore ExtensionServer.js installs '__keyCode' on some events.\n    const keyCode = keyboardEvent.keyCode || keyboardEvent['__keyCode'];\n    return KeyboardShortcut._makeKeyFromCodeAndModifiers(keyCode, modifiers);\n  }\n\n  static makeKeyFromEventIgnoringModifiers(keyboardEvent: KeyboardEvent): number {\n    // @ts-ignore ExtensionServer.js installs '__keyCode' on some events.\n    const keyCode = keyboardEvent.keyCode || keyboardEvent['__keyCode'];\n    return KeyboardShortcut._makeKeyFromCodeAndModifiers(keyCode, Modifiers.None);\n  }\n\n  static eventHasCtrlOrMeta(event: KeyboardEvent|MouseEvent): boolean {\n    return Host.Platform.isMac() ? event.metaKey && !event.ctrlKey : event.ctrlKey && !event.metaKey;\n  }\n\n  static hasNoModifiers(event: Event): boolean {\n    const keyboardEvent = (event as KeyboardEvent);\n    return !keyboardEvent.ctrlKey && !keyboardEvent.shiftKey && !keyboardEvent.altKey && !keyboardEvent.metaKey;\n  }\n\n  static makeDescriptor(key: string|Key, modifiers?: number): Descriptor {\n    return {\n      key: KeyboardShortcut.makeKey(typeof key === 'string' ? key : key.code, modifiers),\n      name: KeyboardShortcut.shortcutToString(key, modifiers),\n    };\n  }\n\n  static makeDescriptorFromBindingShortcut(shortcut: string): Descriptor {\n    const [keyString, ...modifierStrings] = shortcut.split(/\\+(?!$)/).reverse();\n    let modifiers = 0;\n    for (const modifierString of modifierStrings) {\n      const modifier = Modifiers[modifierString];\n      console.assert(\n          typeof modifier !== 'undefined', `Only one key other than modifier is allowed in shortcut <${shortcut}>`);\n      modifiers |= modifier;\n    }\n    console.assert(keyString.length > 0, `Modifiers-only shortcuts are not allowed (encountered <${shortcut}>)`);\n\n    const key = Keys[keyString] || KeyBindings[keyString];\n    if (key && 'shiftKey' in key && key.shiftKey) {\n      modifiers |= Modifiers.Shift;\n    }\n    return KeyboardShortcut.makeDescriptor(key ? key : keyString, modifiers);\n  }\n\n  static shortcutToString(key: string|Key, modifiers?: number): string {\n    if (typeof key !== 'string' && KeyboardShortcut.isModifier(key.code)) {\n      return KeyboardShortcut._modifiersToString(modifiers);\n    }\n    return KeyboardShortcut._modifiersToString(modifiers) + KeyboardShortcut._keyName(key);\n  }\n\n  static _keyName(key: string|Key): string {\n    if (typeof key === 'string') {\n      return key.toUpperCase();\n    }\n    if (typeof key.name === 'string') {\n      return key.name;\n    }\n    return key.name[Host.Platform.platform()] || key.name.other || '';\n  }\n\n  static _makeKeyFromCodeAndModifiers(keyCode: number, modifiers: number|null): number {\n    return (keyCode & 255) | ((modifiers || 0) << 8);\n  }\n\n  static keyCodeAndModifiersFromKey(key: number): {\n    keyCode: number,\n    modifiers: number,\n  } {\n    return {keyCode: key & 255, modifiers: key >> 8};\n  }\n\n  static isModifier(key: number): boolean {\n    const {keyCode} = KeyboardShortcut.keyCodeAndModifiersFromKey(key);\n    return keyCode === Keys.Shift.code || keyCode === Keys.Ctrl.code || keyCode === Keys.Alt.code ||\n        keyCode === Keys.Meta.code;\n  }\n\n  static _modifiersToString(modifiers: number|undefined): string {\n    const isMac = Host.Platform.isMac();\n    const m = Modifiers;\n    const modifierNames = new Map([\n      [m.Ctrl, isMac ? 'Ctrl\\u2004' : 'Ctrl\\u200A+\\u200A'],\n      [m.Alt, isMac ? '\\u2325\\u2004' : 'Alt\\u200A+\\u200A'],\n      [m.Shift, isMac ? '\\u21e7\\u2004' : 'Shift\\u200A+\\u200A'],\n      [m.Meta, isMac ? '\\u2318\\u2004' : 'Win\\u200A+\\u200A'],\n    ]);\n    return [m.Meta, m.Ctrl, m.Alt, m.Shift].map(mapModifiers).join('');\n\n    function mapModifiers(m: number): string {\n      return (modifiers || 0) & m ? /** @type {string} */ modifierNames.get(m) as string : '';\n    }\n  }\n}\n\n/**\n * Constants for encoding modifier key set as a bit mask.\n * see #_makeKeyFromCodeAndModifiers\n */\nexport const Modifiers: {\n  [x: string]: number,\n} = {\n  None: 0,\n  Shift: 1,\n  Ctrl: 2,\n  Alt: 4,\n  Meta: 8,\n  // \"default\" command/ctrl key for platform, Command on Mac, Ctrl on other platforms\n  CtrlOrMeta: Host.Platform.isMac() ? 8 /* Meta */ : 2 /* Ctrl */,\n  // Option on Mac, Shift on other platforms\n  ShiftOrOption: Host.Platform.isMac() ? 4 /* Alt */ : 1 /* Shift */,\n};\n\nconst leftKey = {\n  code: 37,\n  name: '←',\n};\nconst upKey = {\n  code: 38,\n  name: '↑',\n};\nconst rightKey = {\n  code: 39,\n  name: '→',\n};\nconst downKey = {\n  code: 40,\n  name: '↓',\n};\nconst ctrlKey = {\n  code: 17,\n  name: 'Ctrl',\n};\nconst escKey = {\n  code: 27,\n  name: 'Esc',\n};\nconst spaceKey = {\n  code: 32,\n  name: 'Space',\n};\nconst plusKey = {\n  code: 187,\n  name: '+',\n};\nconst backquoteKey = {\n  code: 192,\n  name: '`',\n};\nconst quoteKey = {\n  code: 222,\n  name: '\\'',\n};\n\nexport const Keys: {\n  [x: string]: Key,\n} = {\n  Backspace: {code: 8, name: '\\u21a4'},\n  Tab: {code: 9, name: {mac: '\\u21e5', other: 'Tab'}},\n  Enter: {code: 13, name: {mac: '\\u21a9', other: 'Enter'}},\n  Shift: {code: 16, name: {mac: '\\u21e7', other: 'Shift'}},\n  Ctrl: ctrlKey,\n  Control: ctrlKey,\n  Alt: {code: 18, name: 'Alt'},\n  Esc: escKey,\n  Escape: escKey,\n  Space: spaceKey,\n  ' ': spaceKey,\n  PageUp: {code: 33, name: {mac: '\\u21de', other: 'PageUp'}},      // also NUM_NORTH_EAST\n  PageDown: {code: 34, name: {mac: '\\u21df', other: 'PageDown'}},  // also NUM_SOUTH_EAST\n  End: {code: 35, name: {mac: '\\u2197', other: 'End'}},            // also NUM_SOUTH_WEST\n  Home: {code: 36, name: {mac: '\\u2196', other: 'Home'}},          // also NUM_NORTH_WEST\n  Left: leftKey,                                                   // also NUM_WEST\n  Up: upKey,                                                       // also NUM_NORTH\n  Right: rightKey,                                                 // also NUM_EAST\n  Down: downKey,                                                   // also NUM_SOUTH\n  ArrowLeft: leftKey,\n  ArrowUp: upKey,\n  ArrowRight: rightKey,\n  ArrowDown: downKey,\n  Delete: {code: 46, name: 'Del'},\n  Zero: {code: 48, name: '0'},\n  H: {code: 72, name: 'H'},\n  N: {code: 78, name: 'N'},\n  P: {code: 80, name: 'P'},\n  Meta: {code: 91, name: 'Meta'},\n  F1: {code: 112, name: 'F1'},\n  F2: {code: 113, name: 'F2'},\n  F3: {code: 114, name: 'F3'},\n  F4: {code: 115, name: 'F4'},\n  F5: {code: 116, name: 'F5'},\n  F6: {code: 117, name: 'F6'},\n  F7: {code: 118, name: 'F7'},\n  F8: {code: 119, name: 'F8'},\n  F9: {code: 120, name: 'F9'},\n  F10: {code: 121, name: 'F10'},\n  F11: {code: 122, name: 'F11'},\n  F12: {code: 123, name: 'F12'},\n  Semicolon: {code: 186, name: ';'},\n  NumpadPlus: {code: 107, name: 'Numpad +'},\n  NumpadMinus: {code: 109, name: 'Numpad -'},\n  Numpad0: {code: 96, name: 'Numpad 0'},\n  Plus: plusKey,\n  Equal: plusKey,\n  Comma: {code: 188, name: ','},\n  Minus: {code: 189, name: '-'},\n  Period: {code: 190, name: '.'},\n  Slash: {code: 191, name: '/'},\n  QuestionMark: {code: 191, name: '?'},\n  Apostrophe: backquoteKey,\n  Tilde: {code: 192, name: 'Tilde'},\n  Backquote: backquoteKey,\n  IntlBackslash: backquoteKey,\n  LeftSquareBracket: {code: 219, name: '['},\n  RightSquareBracket: {code: 221, name: ']'},\n  Backslash: {code: 220, name: '\\\\'},\n  SingleQuote: quoteKey,\n  Quote: quoteKey,\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  get CtrlOrMeta() {\n    // \"default\" command/ctrl key for platform, Command on Mac, Ctrl on other platforms\n    return Host.Platform.isMac() ? this.Meta : this.Ctrl;\n  },\n};\n\n// TODO(crbug.com/1167717): Make this a const enum again\n// eslint-disable-next-line rulesdir/const_enum\nexport enum Type {\n  UserShortcut = 'UserShortcut',\n  DefaultShortcut = 'DefaultShortcut',\n  DisabledDefault = 'DisabledDefault',\n  UnsetShortcut = 'UnsetShortcut',\n  KeybindSetShortcut = 'KeybindSetShortcut',\n}\n\n\nexport const KeyBindings: {\n  [x: string]: Key,\n} = {};\n\n(function(): void {\nfor (const key in Keys) {\n  const descriptor = Keys[key];\n  if (typeof descriptor === 'object' && descriptor['code']) {\n    const name = typeof descriptor['name'] === 'string' ? descriptor['name'] : key;\n    KeyBindings[name] = descriptor;\n  }\n}\n})();\nexport interface Key {\n  code: number;\n  name: string|{\n    [x: string]: string,\n  };\n  shiftKey?: boolean;\n}\nexport interface Descriptor {\n  key: number;\n  name: string;\n}\n"]}