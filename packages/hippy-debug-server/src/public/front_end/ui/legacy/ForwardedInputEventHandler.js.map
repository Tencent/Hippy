{"version":3,"file":"ForwardedInputEventHandler.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ForwardedInputEventHandler.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAK7B,OAAO,KAAK,IAAI,MAAM,yBAAyB,CAAC;AAEhD,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC,CAAE,qCAAqC;AAC5E,OAAO,EAAC,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AACvD,OAAO,EAAC,iBAAiB,EAAE,gBAAgB,EAAC,MAAM,uBAAuB,CAAC,CAAE,qCAAqC;AAEjH,MAAM,OAAO,0BAA0B;IACrC;QACE,IAAI,CAAC,qBAAqB,CAAC,6BAA6B,CAAC,MAAM,CAAC,gBAAgB,CAC5E,IAAI,CAAC,wBAAwB,CAAC,MAAM,CAAC,iBAAiB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;IAC/F,CAAC;IAED,oBAAoB,CAAC,KAA0C;QAC7D,MAAM,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;QACxB,MAAM,IAAI,GAAI,IAAI,CAAC,IAAe,CAAC;QACnC,MAAM,GAAG,GAAI,IAAI,CAAC,GAAc,CAAC;QACjC,MAAM,OAAO,GAAI,IAAI,CAAC,OAAkB,CAAC;QACzC,MAAM,SAAS,GAAI,IAAI,CAAC,SAAoB,CAAC;QAE7C,IAAI,IAAI,KAAK,SAAS,EAAE;YACtB,OAAO;SACR;QAED,MAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;QACnC,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,QAAQ,EAAE,CAAC;QAErD,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC;QACjE,gBAAgB,CAAC,SAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE,GAAG,CAAC,CAAC;QAC9E,OAAO,CAAC,SAAS,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC7C,CAAC;CACF;AAED,IAAI,0BAA0B,EAAE,CAAC","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport type * as Common from '../../core/common/common.js'; // eslint-disable-line no-unused-vars\nimport * as Host from '../../core/host/host.js';\n\nimport {Context} from './Context.js';  // eslint-disable-line no-unused-vars\nimport {KeyboardShortcut} from './KeyboardShortcut.js';\nimport {ForwardedShortcut, ShortcutRegistry} from './ShortcutRegistry.js';  // eslint-disable-line no-unused-vars\n\nexport class ForwardedInputEventHandler {\n  constructor() {\n    Host.InspectorFrontendHost.InspectorFrontendHostInstance.events.addEventListener(\n        Host.InspectorFrontendHostAPI.Events.KeyEventUnhandled, this._onKeyEventUnhandled, this);\n  }\n\n  _onKeyEventUnhandled(event: Common.EventTarget.EventTargetEvent): void {\n    const data = event.data;\n    const type = (data.type as string);\n    const key = (data.key as string);\n    const keyCode = (data.keyCode as number);\n    const modifiers = (data.modifiers as number);\n\n    if (type !== 'keydown') {\n      return;\n    }\n\n    const context = Context.instance();\n    const shortcutRegistry = ShortcutRegistry.instance();\n\n    context.setFlavor(ForwardedShortcut, ForwardedShortcut.instance);\n    shortcutRegistry.handleKey(KeyboardShortcut.makeKey(keyCode, modifiers), key);\n    context.setFlavor(ForwardedShortcut, null);\n  }\n}\n\nnew ForwardedInputEventHandler();\n"]}