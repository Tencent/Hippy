{"version":3,"file":"Geometry.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/Geometry.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright (C) 2013 Google Inc. All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *     * Redistributions of source code must retain the above copyright\n * notice, this list of conditions and the following disclaimer.\n *     * Redistributions in binary form must reproduce the above\n * copyright notice, this list of conditions and the following disclaimer\n * in the documentation and/or other materials provided with the\n * distribution.\n *     * Neither the name of Google Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\n// TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport const _Eps: number = 1e-5;\n\nexport class Vector {\n  x: number;\n  y: number;\n  z: number;\n\n  constructor(x: number, y: number, z: number) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n  }\n\n  length(): number {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  }\n\n  normalize(): void {\n    const length = this.length();\n    if (length <= _Eps) {\n      return;\n    }\n\n    this.x /= length;\n    this.y /= length;\n    this.z /= length;\n  }\n}\n\nexport class Point {\n  x: number;\n  y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  distanceTo(p: Point): number {\n    return Math.sqrt(Math.pow(p.x - this.x, 2) + Math.pow(p.y - this.y, 2));\n  }\n\n  projectOn(line: Point): Point {\n    if (line.x === 0 && line.y === 0) {\n      return new Point(0, 0);\n    }\n    return line.scale((this.x * line.x + this.y * line.y) / (Math.pow(line.x, 2) + Math.pow(line.y, 2)));\n  }\n\n  scale(scalar: number): Point {\n    return new Point(this.x * scalar, this.y * scalar);\n  }\n\n  toString(): string {\n    return Math.round(this.x * 100) / 100 + ', ' + Math.round(this.y * 100) / 100;\n  }\n}\n\nexport class CubicBezier {\n  controlPoints: Point[];\n  constructor(point1: Point, point2: Point) {\n    this.controlPoints = [point1, point2];\n  }\n\n  static parse(text: string): CubicBezier|null {\n    const keywordValues = CubicBezier.KeywordValues;\n    const value = text.toLowerCase().replace(/\\s+/g, '');\n    if (keywordValues.has(value)) {\n      return CubicBezier.parse((keywordValues.get(value) as string));\n    }\n    const bezierRegex = /^cubic-bezier\\(([^,]+),([^,]+),([^,]+),([^,]+)\\)$/;\n    const match = value.match(bezierRegex);\n    if (match) {\n      const control1 = new Point(parseFloat(match[1]), parseFloat(match[2]));\n      const control2 = new Point(parseFloat(match[3]), parseFloat(match[4]));\n      return new CubicBezier(control1, control2);\n    }\n    return null;\n  }\n\n  evaluateAt(t: number): Point {\n    function evaluate(v1: number, v2: number, t: number): number {\n      return 3 * (1 - t) * (1 - t) * t * v1 + 3 * (1 - t) * t * t * v2 + Math.pow(t, 3);\n    }\n\n    const x = evaluate(this.controlPoints[0].x, this.controlPoints[1].x, t);\n    const y = evaluate(this.controlPoints[0].y, this.controlPoints[1].y, t);\n    return new Point(x, y);\n  }\n\n  asCSSText(): string {\n    const raw = 'cubic-bezier(' + this.controlPoints.join(', ') + ')';\n    const keywordValues = CubicBezier.KeywordValues;\n    for (const [keyword, value] of keywordValues) {\n      if (raw === value) {\n        return keyword;\n      }\n    }\n    return raw;\n  }\n\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly Regex = /((cubic-bezier\\([^)]+\\))|\\b(linear(?!-)|ease-in-out|ease-in|ease-out|ease)\\b)/g;\n  // TODO(crbug.com/1172300) Ignored during the jsdoc to ts migration\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  static readonly KeywordValues = new Map([\n    ['linear', 'cubic-bezier(0, 0, 1, 1)'],\n    ['ease', 'cubic-bezier(0.25, 0.1, 0.25, 1)'],\n    ['ease-in', 'cubic-bezier(0.42, 0, 1, 1)'],\n    ['ease-in-out', 'cubic-bezier(0.42, 0, 0.58, 1)'],\n    ['ease-out', 'cubic-bezier(0, 0, 0.58, 1)'],\n  ]);\n}\n\nexport class EulerAngles {\n  alpha: number;\n  beta: number;\n  gamma: number;\n\n  constructor(alpha: number, beta: number, gamma: number) {\n    this.alpha = alpha;\n    this.beta = beta;\n    this.gamma = gamma;\n  }\n\n  /**\n   * Derives orientation angles from a rotation matrix.\n   *\n   * The angles alpha, beta and gamma are in the [0, 360), [-180, 180) and\n   * [-90, 90) intervals respectively, as specified in the Device Orientation\n   * spec (https://w3c.github.io/deviceorientation/#deviceorientation).\n   *\n   * The Euler angles derived here follow a Z-X'-Y'' sequence.\n   *\n   * In particular we compute the decomposition of a given rotation matrix r\n   * such that\n   *    r = rz(alpha) * rx(beta) * ry(gamma)\n   * where rz, rx and ry are rotation matrices around z, x and y axes in the\n   * world coordinate reference frame respectively. The reference frame\n   * consists of three orthogonal axes x, y, z where x points East, y points\n   * north and z points upwards perpendicular to the ground plane. The computed\n   * angles alpha, beta and gamma are in degrees and clockwise-positive when\n   * viewed along the positive direction of the corresponding axis. Except for\n   * the special case when the beta angle is +-90 these angles uniquely\n   * define the orientation of a mobile device in 3D space. The\n   * alpha-beta-gamma representation resembles the yaw-pitch-roll convention\n   * used in vehicle dynamics, however it does not exactly match it. One of the\n   * differences is that the 'pitch' angle beta is allowed to be within [-180,\n   * 180). A mobile device with pitch angle greater than 90 could\n   * correspond to a user lying down and looking upward at the screen.\n   */\n  static fromDeviceOrientationRotationMatrix(rotationMatrix: DOMMatrixReadOnly): EulerAngles {\n    let alpha, beta, gamma;\n\n    // A few implementation notes:\n    // - This code has been ported from Chromium's\n    //   //services/device/generic_sensor/orientation_util.cc at commit\n    //   1be837b6f142.\n    //\n    // - Since |rotationMatrix| contains non-integer numbers, directly\n    //   comparing them to 0 will not be accurate, so we use |_Eps| to check if\n    //   some numbers are close enough to 0.\n    //\n    // - The C++ code in Chromium uses a std::vector<double> to represent a 3x3\n    //   rotation matrix in row-major order. |rotationMatrix| is a 4x4 matrix\n    //   defined in column-major order, so |rotationMatrix.m13| here\n    //   corresponds to |r[8]| in the original C++ code.\n    //\n    // - There are rounding errors and approximations in the floating-point\n    //   arithmetics below, but it does not interfere with the use cases in\n    //   DevTools (i.e. angles that are mostly within the allowed intervals). A\n    //   rotation around the Z axis by 360 degrees will correctly return\n    //   alpha=0, but a rotation around the Z axis by 360 * 20000000000000000\n    //   will return alpha=~75 degrees, for example.\n    if (Math.abs(rotationMatrix.m33) < _Eps) {    // m33 == 0\n      if (Math.abs(rotationMatrix.m13) < _Eps) {  // m13 == 0, cos(beta) == 0\n        // Gimbal lock discontinuity: in the Z-X'-Y'' angle system used here, a\n        // rotation of 90 or -90 degrees around the X axis (beta) causes a\n        // Gimbal lock, which we handle by always setting gamma = 0 and\n        // handling the rotation in alpha.\n        alpha = Math.atan2(rotationMatrix.m12, rotationMatrix.m11);\n        beta = (rotationMatrix.m23 > 0) ? (Math.PI / 2) : -(Math.PI / 2);  // beta = +-pi/2\n        gamma = 0;                                                         // gamma = 0\n      } else if (rotationMatrix.m13 > 0) {                                 // cos(gamma) == 0, cos(beta) > 0\n        alpha = Math.atan2(-rotationMatrix.m21, rotationMatrix.m22);\n        beta = Math.asin(rotationMatrix.m23);  // beta [-pi/2, pi/2]\n        gamma = -(Math.PI / 2);                // gamma = -pi/2\n      } else {                                 // cos(gamma) == 0, cos(beta) < 0\n        alpha = Math.atan2(rotationMatrix.m21, -rotationMatrix.m22);\n        beta = -Math.asin(rotationMatrix.m23);\n        beta += (beta > 0 || Math.abs(beta) < _Eps) ? -Math.PI : Math.PI;  // beta [-pi,-pi/2) U (pi/2,pi)\n        gamma = -(Math.PI / 2);                                            // gamma = -pi/2\n      }\n    } else if (rotationMatrix.m33 > 0) {  // cos(beta) > 0\n      alpha = Math.atan2(-rotationMatrix.m21, rotationMatrix.m22);\n      beta = Math.asin(rotationMatrix.m23);                         // beta (-pi/2, pi/2)\n      gamma = Math.atan2(-rotationMatrix.m13, rotationMatrix.m33);  // gamma (-pi/2, pi/2)\n    } else {                                                        // cos(beta) < 0\n      alpha = Math.atan2(rotationMatrix.m21, -rotationMatrix.m22);\n      beta = -Math.asin(rotationMatrix.m23);\n      beta += (beta > 0 || Math.abs(beta) < _Eps) ? -Math.PI : Math.PI;  // beta [-pi,-pi/2) U (pi/2,pi)\n      gamma = Math.atan2(rotationMatrix.m13, -rotationMatrix.m33);       // gamma (-pi/2, pi/2)\n    }\n\n    // alpha is in [-pi, pi], make sure it is in [0, 2*pi).\n    if (alpha < -_Eps) {\n      alpha += 2 * Math.PI;  // alpha [0, 2*pi)\n    }\n\n    // We do not need a lot of precision in degrees. Arbitrarily set it to 6\n    // digits after the decimal point. In most use cases, this may be rounded\n    // even further in SensorsView and when passing these degrees to CSS.\n    alpha = Number(radiansToDegrees(alpha).toFixed(6));\n    beta = Number(radiansToDegrees(beta).toFixed(6));\n    gamma = Number(radiansToDegrees(gamma).toFixed(6));\n\n    return new EulerAngles(alpha, beta, gamma);\n  }\n}\n\nexport const scalarProduct = function(u: Vector, v: Vector): number {\n  return u.x * v.x + u.y * v.y + u.z * v.z;\n};\n\nexport const crossProduct = function(u: Vector, v: Vector): Vector {\n  const x = u.y * v.z - u.z * v.y;\n  const y = u.z * v.x - u.x * v.z;\n  const z = u.x * v.y - u.y * v.x;\n  return new Vector(x, y, z);\n};\n\nexport const subtract = function(u: Vector, v: Vector): Vector {\n  const x = u.x - v.x;\n  const y = u.y - v.y;\n  const z = u.z - v.z;\n  return new Vector(x, y, z);\n};\n\nexport const multiplyVectorByMatrixAndNormalize = function(v: Vector, m: DOMMatrix): Vector {\n  const t = v.x * m.m14 + v.y * m.m24 + v.z * m.m34 + m.m44;\n  const x = (v.x * m.m11 + v.y * m.m21 + v.z * m.m31 + m.m41) / t;\n  const y = (v.x * m.m12 + v.y * m.m22 + v.z * m.m32 + m.m42) / t;\n  const z = (v.x * m.m13 + v.y * m.m23 + v.z * m.m33 + m.m43) / t;\n  return new Vector(x, y, z);\n};\n\nexport const calculateAngle = function(u: Vector, v: Vector): number {\n  const uLength = u.length();\n  const vLength = v.length();\n  if (uLength <= _Eps || vLength <= _Eps) {\n    return 0;\n  }\n  const cos = scalarProduct(u, v) / uLength / vLength;\n  if (Math.abs(cos) > 1) {\n    return 0;\n  }\n  return radiansToDegrees(Math.acos(cos));\n};\n\nexport const degreesToRadians = function(deg: number): number {\n  return deg * Math.PI / 180;\n};\n\nexport const degreesToGradians = function(deg: number): number {\n  return deg / 9 * 10;\n};\n\nexport const degreesToTurns = function(deg: number): number {\n  return deg / 360;\n};\n\nexport const radiansToDegrees = function(rad: number): number {\n  return rad * 180 / Math.PI;\n};\n\nexport const radiansToGradians = function(rad: number): number {\n  return rad * 200 / Math.PI;\n};\n\nexport const radiansToTurns = function(rad: number): number {\n  return rad / (2 * Math.PI);\n};\n\nexport const gradiansToRadians = function(grad: number): number {\n  return grad * Math.PI / 200;\n};\n\nexport const turnsToRadians = function(turns: number): number {\n  return turns * 2 * Math.PI;\n};\n\nexport const boundsForTransformedPoints = function(matrix: DOMMatrix, points: number[], aggregateBounds?: {\n  minX: number,\n  maxX: number,\n  minY: number,\n  maxY: number,\n}): {\n  minX: number,\n  maxX: number,\n  minY: number,\n  maxY: number,\n} {\n  if (!aggregateBounds) {\n    aggregateBounds = {minX: Infinity, maxX: -Infinity, minY: Infinity, maxY: -Infinity};\n  }\n  if (points.length % 3) {\n    console.warn('Invalid size of points array');\n  }\n  for (let p = 0; p < points.length; p += 3) {\n    let vector: Vector = new Vector(points[p], points[p + 1], points[p + 2]);\n    vector = multiplyVectorByMatrixAndNormalize(vector, matrix);\n    aggregateBounds.minX = Math.min(aggregateBounds.minX, vector.x);\n    aggregateBounds.maxX = Math.max(aggregateBounds.maxX, vector.x);\n    aggregateBounds.minY = Math.min(aggregateBounds.minY, vector.y);\n    aggregateBounds.maxY = Math.max(aggregateBounds.maxY, vector.y);\n  }\n  return aggregateBounds;\n};\n\nexport class Size {\n  width: number;\n  height: number;\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  clipTo(size?: Size|null): Size {\n    if (!size) {\n      return this;\n    }\n    return new Size(Math.min(this.width, size.width), Math.min(this.height, size.height));\n  }\n\n  scale(scale: number): Size {\n    return new Size(this.width * scale, this.height * scale);\n  }\n\n  isEqual(size: Size|null): boolean {\n    return size !== null && this.width === size.width && this.height === size.height;\n  }\n\n  widthToMax(size: number|Size): Size {\n    return new Size(Math.max(this.width, (typeof size === 'number' ? size : size.width)), this.height);\n  }\n\n  addWidth(size: number|Size): Size {\n    return new Size(this.width + (typeof size === 'number' ? size : size.width), this.height);\n  }\n\n  heightToMax(size: number|Size): Size {\n    return new Size(this.width, Math.max(this.height, (typeof size === 'number' ? size : size.height)));\n  }\n\n  addHeight(size: number|Size): Size {\n    return new Size(this.width, this.height + (typeof size === 'number' ? size : size.height));\n  }\n}\n\nexport class Insets {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n  constructor(left: number, top: number, right: number, bottom: number) {\n    this.left = left;\n    this.top = top;\n    this.right = right;\n    this.bottom = bottom;\n  }\n\n  isEqual(insets: Insets|null): boolean {\n    return insets !== null && this.left === insets.left && this.top === insets.top && this.right === insets.right &&\n        this.bottom === insets.bottom;\n  }\n}\n\nexport class Rect {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n  constructor(left: number, top: number, width: number, height: number) {\n    this.left = left;\n    this.top = top;\n    this.width = width;\n    this.height = height;\n  }\n\n  isEqual(rect: Rect|null): boolean {\n    return rect !== null && this.left === rect.left && this.top === rect.top && this.width === rect.width &&\n        this.height === rect.height;\n  }\n\n  scale(scale: number): Rect {\n    return new Rect(this.left * scale, this.top * scale, this.width * scale, this.height * scale);\n  }\n\n  size(): Size {\n    return new Size(this.width, this.height);\n  }\n\n  relativeTo(origin: Rect): Rect {\n    return new Rect(this.left - origin.left, this.top - origin.top, this.width, this.height);\n  }\n\n  rebaseTo(origin: Rect): Rect {\n    return new Rect(this.left + origin.left, this.top + origin.top, this.width, this.height);\n  }\n}\n\nexport class Constraints {\n  minimum: Size;\n  preferred: Size;\n  constructor(minimum?: Size, preferred?: Size|null) {\n    this.minimum = minimum || new Size(0, 0);\n\n    this.preferred = preferred || this.minimum;\n\n    if (this.minimum.width > this.preferred.width || this.minimum.height > this.preferred.height) {\n      throw new Error('Minimum size is greater than preferred.');\n    }\n  }\n\n  isEqual(constraints: Constraints|null): boolean {\n    return constraints !== null && this.minimum.isEqual(constraints.minimum) &&\n        this.preferred.isEqual(constraints.preferred);\n  }\n\n  widthToMax(value: number|Constraints): Constraints {\n    if (typeof value === 'number') {\n      return new Constraints(this.minimum.widthToMax(value), this.preferred.widthToMax(value));\n    }\n    return new Constraints(this.minimum.widthToMax(value.minimum), this.preferred.widthToMax(value.preferred));\n  }\n\n  addWidth(value: number|Constraints): Constraints {\n    if (typeof value === 'number') {\n      return new Constraints(this.minimum.addWidth(value), this.preferred.addWidth(value));\n    }\n    return new Constraints(this.minimum.addWidth(value.minimum), this.preferred.addWidth(value.preferred));\n  }\n\n  heightToMax(value: number|Constraints): Constraints {\n    if (typeof value === 'number') {\n      return new Constraints(this.minimum.heightToMax(value), this.preferred.heightToMax(value));\n    }\n    return new Constraints(this.minimum.heightToMax(value.minimum), this.preferred.heightToMax(value.preferred));\n  }\n\n  addHeight(value: number|Constraints): Constraints {\n    if (typeof value === 'number') {\n      return new Constraints(this.minimum.addHeight(value), this.preferred.addHeight(value));\n    }\n    return new Constraints(this.minimum.addHeight(value.minimum), this.preferred.addHeight(value.preferred));\n  }\n}\n"]}