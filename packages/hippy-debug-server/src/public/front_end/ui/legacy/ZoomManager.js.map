{"version":3,"file":"ZoomManager.js","sourceRoot":"","sources":["../../../../../../front_end/ui/legacy/ZoomManager.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,uDAAuD;AAEvD,OAAO,KAAK,MAAM,MAAM,6BAA6B,CAAC;AAGtD,IAAI,mBAA0C,CAAC;AAE/C,MAAM,OAAO,WAAY,SAAQ,MAAM,CAAC,aAAa,CAAC,aAAa;IACjE,aAAa,CAAyD;IACtE,WAAW,CAAS;IAEpB,YAAoB,MAAc,EAAE,YAAoE;QACtG,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QACnD,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC;IAC3E,CAAC;IAED,MAAM,CAAC,QAAQ,CAAC,OAIZ,EAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,IAAI,EAAC;QACjD,MAAM,EAAC,QAAQ,EAAE,GAAG,EAAE,YAAY,EAAC,GAAG,IAAI,CAAC;QAC3C,IAAI,CAAC,mBAAmB,IAAI,QAAQ,EAAE;YACpC,IAAI,CAAC,GAAG,IAAI,CAAC,YAAY,EAAE;gBACzB,MAAM,IAAI,KAAK,CACX,4EAA4E,IAAI,KAAK,EAAE,CAAC,KAAK,EAAE,CAAC,CAAC;aACtG;YAED,mBAAmB,GAAG,IAAI,WAAW,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;SAC1D;QAED,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAED,MAAM,CAAC,cAAc;QACnB,mBAAmB,GAAG,SAAS,CAAC;IAClC,CAAC;IAED,UAAU;QACR,OAAO,IAAI,CAAC,WAAW,CAAC;IAC1B,CAAC;IAED,QAAQ,CAAC,KAAa;QACpB,OAAO,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC;IAClC,CAAC;IAED,QAAQ,CAAC,QAAgB;QACvB,OAAO,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;IACrC,CAAC;IAED,eAAe;QACb,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QACnD,IAAI,aAAa,KAAK,IAAI,CAAC,WAAW,EAAE;YACtC,IAAI,CAAC,wBAAwB,kCAAqB,EAAC,IAAI,EAAE,aAAa,EAAE,EAAE,EAAE,IAAI,CAAC,WAAW,EAAC,CAAC,CAAC;SAChG;IACH,CAAC;CACF","sourcesContent":["// Copyright 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\n/* eslint-disable rulesdir/no_underscored_properties */\n\nimport * as Common from '../../core/common/common.js';\nimport type * as Host from '../../core/host/host.js'; // eslint-disable-line no-unused-vars\n\nlet zoomManagerInstance: ZoomManager|undefined;\n\nexport class ZoomManager extends Common.ObjectWrapper.ObjectWrapper {\n  _frontendHost: Host.InspectorFrontendHostAPI.InspectorFrontendHostAPI;\n  _zoomFactor: number;\n\n  private constructor(window: Window, frontendHost: Host.InspectorFrontendHostAPI.InspectorFrontendHostAPI) {\n    super();\n    this._frontendHost = frontendHost;\n    this._zoomFactor = this._frontendHost.zoomFactor();\n    window.addEventListener('resize', this._onWindowResize.bind(this), true);\n  }\n\n  static instance(opts: {\n    forceNew: boolean|null,\n    win: Window|null,\n    frontendHost: Host.InspectorFrontendHostAPI.InspectorFrontendHostAPI|null,\n  } = {forceNew: null, win: null, frontendHost: null}): ZoomManager {\n    const {forceNew, win, frontendHost} = opts;\n    if (!zoomManagerInstance || forceNew) {\n      if (!win || !frontendHost) {\n        throw new Error(\n            `Unable to create zoom manager: window and frontendHost must be provided: ${new Error().stack}`);\n      }\n\n      zoomManagerInstance = new ZoomManager(win, frontendHost);\n    }\n\n    return zoomManagerInstance;\n  }\n\n  static removeInstance(): void {\n    zoomManagerInstance = undefined;\n  }\n\n  zoomFactor(): number {\n    return this._zoomFactor;\n  }\n\n  cssToDIP(value: number): number {\n    return value * this._zoomFactor;\n  }\n\n  dipToCSS(valueDIP: number): number {\n    return valueDIP / this._zoomFactor;\n  }\n\n  _onWindowResize(): void {\n    const oldZoomFactor = this._zoomFactor;\n    this._zoomFactor = this._frontendHost.zoomFactor();\n    if (oldZoomFactor !== this._zoomFactor) {\n      this.dispatchEventToListeners(Events.ZoomChanged, {from: oldZoomFactor, to: this._zoomFactor});\n    }\n  }\n}\n\nexport const enum Events {\n  ZoomChanged = 'ZoomChanged',\n}\n"]}