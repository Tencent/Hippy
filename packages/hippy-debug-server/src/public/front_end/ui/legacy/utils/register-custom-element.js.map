{"version":3,"file":"register-custom-element.js","sourceRoot":"","sources":["../../../../../../../front_end/ui/legacy/utils/register-custom-element.ts"],"names":[],"mappings":"AAAA,4DAA4D;AAC5D,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,UAAU,qBAAqB,CACjC,SAAiB,EAAE,aAAqB,EAAE,UAAiC;IAC7E,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,aAAa,EAAE,KAAM,SAAQ,UAAU;QAChE;YACE,uEAAuE;YACvE,0EAA0E;YAC1E,oEAAoE;YACpE,KAAK,EAAE,CAAC;YACR,6DAA6D;YAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;QACzC,CAAC;KACF,EAAE,EAAC,OAAO,EAAE,SAAS,EAAC,CAAC,CAAC;IACzB,OAAO,GAAY,EAAE,CAAC,QAAQ,CAAC,aAAa,CAAC,SAAS,EAAE,EAAC,EAAE,EAAE,aAAa,EAAC,CAAC,CAAC;AAC/E,CAAC","sourcesContent":["// Copyright 2019 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n\nexport function registerCustomElement(\n    localName: string, typeExtension: string, definition: new () => HTMLElement): () => Element {\n  self.customElements.define(typeExtension, class extends definition {\n    constructor() {\n      // The JSDoc above does not allow the super call to have no params, but\n      // it seems to be the nearest to something both Closure and TS understand.\n      // @ts-ignore crbug.com/1011811: Fix after Closure has been removed.\n      super();\n      // TODO(einbinder) convert to classes and custom element tags\n      this.setAttribute('is', typeExtension);\n    }\n  }, {extends: localName});\n  return (): Element => document.createElement(localName, {is: typeExtension});\n}\n"]}