#! /bin/bash
#following three variables should be set depend on your enviroment.
#if you use git bash in windows, should use path like linux, such as use /d for D:/ 
ANDROID_SDK_CMAKE_BIN=/home/ianwang/Android/Sdk/cmake/3.6.4111459/bin
ANDROID_NDK=/home/ianwang/Android/Sdk/ndk-bundle
#for windows strip 
#ANDROID_SO_STRIP=${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.9/prebuilt/windows-x86_64/bin/arm-linux-androideabi-strip
#for mac strip
#ANDROID_SO_STRIP=${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-strip
#for linux strip
ANDROID_SO_STRIP=${ANDROID_NDK}/toolchains/arm-linux-androideabi-4.9/prebuilt/linux-x86_64/bin/arm-linux-androideabi-strip

#set cmake and ninja path
export PATH="${ANDROID_SDK_CMAKE_BIN}":$PATH
ANDROID_CMAKE="${ANDROID_SDK_CMAKE_BIN}"/cmake
ANDROID_NINJA="${ANDROID_SDK_CMAKE_BIN}"/ninja


BASH_SOURCE_DIR=$(cd `dirname "${BASH_SOURCE[0]}"` && pwd)
CMAKE_TOOLCHAIN_FILE="${ANDROID_NDK}"/build/cmake/android.toolchain.cmake
BUILD_DIR="${BASH_SOURCE_DIR}"/../out


#1.armeabi
#cmake generate android gradle ninja file: build.ninja
ANDROID_ABI=armeabi-v7a;
rm -rf "${BUILD_DIR}"/android/${ANDROID_ABI}
mkdir -p "${BUILD_DIR}"/android/${ANDROID_ABI}
cd "${BUILD_DIR}"/android/${ANDROID_ABI}

"${ANDROID_CMAKE}"\
 -DANDROID_ABI="${ANDROID_ABI}"\
 -DANDROID_TOOLCHAIN=clang\
 -DANDROID_NDK="${ANDROID_NDK}" \
 -DANDROID_PLATFORM=android-14\
 -DCMAKE_TOOLCHAIN_FILE="${CMAKE_TOOLCHAIN_FILE}"\
 -G"Android Gradle - Ninja" ../../../android/

echo "Start ninja build in directory: `pwd` for ${ANDROID_ABI}"
#ninja compile the build.ninja that generated by previous cmake
#libflexbox.so will be get in  "${BUILD_DIR}"/android
${ANDROID_NINJA}

#strip so
${ANDROID_SO_STRIP} --strip-all -x libflexbox.so -o libflexbox_strip.so

cp ./libflexbox_strip.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox_strip.so
cp ./libflexbox.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox.so

#2.arm64
#cmake generate android gradle ninja file: build.ninja
ANDROID_ABI=arm64-v8a;
rm -rf "${BUILD_DIR}"/android/${ANDROID_ABI}
mkdir -p "${BUILD_DIR}"/android/${ANDROID_ABI}
cd "${BUILD_DIR}"/android/${ANDROID_ABI}

"${ANDROID_CMAKE}"\
 -DANDROID_ABI="${ANDROID_ABI}"\
 -DANDROID_TOOLCHAIN=clang\
 -DANDROID_NDK="${ANDROID_NDK}" \
 -DANDROID_PLATFORM=android-14\
 -DCMAKE_TOOLCHAIN_FILE="${CMAKE_TOOLCHAIN_FILE}"\
 -G"Android Gradle - Ninja" ../../../android/

echo "Start ninja build in directory: `pwd` for ${ANDROID_ABI}"
#ninja compile the build.ninja that generated by previous cmake
#libflexbox.so will be get in  "${BUILD_DIR}"/android
${ANDROID_NINJA}

#strip so
#for arm64 linux strip
ANDROID_SO_STRIP=${ANDROID_NDK}/toolchains/aarch64-linux-android-4.9/prebuilt/linux-x86_64/bin/aarch64-linux-android-strip
${ANDROID_SO_STRIP} --strip-all -x libflexbox.so -o libflexbox_strip.so

cp ./libflexbox_strip.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox_strip.so
cp ./libflexbox.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox.so

#3.x86
#cmake generate android gradle ninja file: build.ninja
ANDROID_ABI=x86;
rm -rf "${BUILD_DIR}"/android/${ANDROID_ABI}
mkdir -p "${BUILD_DIR}"/android/${ANDROID_ABI}
cd "${BUILD_DIR}"/android/${ANDROID_ABI}

"${ANDROID_CMAKE}"\
 -DANDROID_ABI="${ANDROID_ABI}"\
 -DANDROID_TOOLCHAIN=clang\
 -DANDROID_NDK="${ANDROID_NDK}" \
 -DANDROID_PLATFORM=android-14\
 -DCMAKE_TOOLCHAIN_FILE="${CMAKE_TOOLCHAIN_FILE}"\
 -G"Android Gradle - Ninja" ../../../android/

echo "Start ninja build in directory: `pwd` for ${ANDROID_ABI}"
#ninja compile the build.ninja that generated by previous cmake
#libflexbox.so will be get in  "${BUILD_DIR}"/android
${ANDROID_NINJA}

#strip so
#for x86 linux strip
ANDROID_SO_STRIP=${ANDROID_NDK}/toolchains/x86-4.9/prebuilt/linux-x86_64/bin/i686-linux-android-strip
${ANDROID_SO_STRIP} --strip-all -x libflexbox.so -o libflexbox_strip.so

cp ./libflexbox_strip.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox_strip.so
cp ./libflexbox.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox.so


#4.x86_64
#cmake generate android gradle ninja file: build.ninja
ANDROID_ABI=x86_64;
rm -rf "${BUILD_DIR}"/android/${ANDROID_ABI}
mkdir -p "${BUILD_DIR}"/android/${ANDROID_ABI}
cd "${BUILD_DIR}"/android/${ANDROID_ABI}

"${ANDROID_CMAKE}"\
 -DANDROID_ABI="${ANDROID_ABI}"\
 -DANDROID_TOOLCHAIN=clang\
 -DANDROID_NDK="${ANDROID_NDK}" \
 -DANDROID_PLATFORM=android-14\
 -DCMAKE_TOOLCHAIN_FILE="${CMAKE_TOOLCHAIN_FILE}"\
 -G"Android Gradle - Ninja" ../../../android/

echo "Start ninja build in directory: `pwd` for ${ANDROID_ABI}"
#ninja compile the build.ninja that generated by previous cmake
#libflexbox.so will be get in  "${BUILD_DIR}"/android
${ANDROID_NINJA}

#strip so
#for x86 linux strip
ANDROID_SO_STRIP=${ANDROID_NDK}/toolchains/x86_64-4.9/prebuilt/linux-x86_64/bin/x86_64-linux-android-strip
${ANDROID_SO_STRIP} --strip-all -x libflexbox.so -o libflexbox_strip.so

cp ./libflexbox_strip.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox_strip.so
cp ./libflexbox.so ${BASH_SOURCE_DIR}/libs/${ANDROID_ABI}/libflexbox.so