apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

def gitUrl = "https://github.com/Tencent/Hippy"
def groupIdDefined  = "com.tencent.hippy"
//def artifactIdDefined = "hippy-release"
def artifactIdDefined  = "hippy-snapshot"
def versionDefined = "0.0.5"

Properties properties = new Properties()
InputStream inputStream = project.rootProject.file('local.properties').newDataInputStream()
properties.load( inputStream )

bintray {
    user = properties.getProperty('bintrayUser')
    key = properties.getProperty('bintrayKey')
    println("===============bintray: user=" + user + ", key=" + key)
    publications = ['HippyPublication'] // 'HippyPublication'与下面的publishing闭包里的名称对应
    publish = true // 上传后立即发布到Bintray平台
    pkg {
        repo = "Hippy"  // 必填。bintray平台仓库名，必须已经创建过。
        name = "$artifactIdDefined"  // 必填。仓库里包package的名称，没有的话会自动创建。
        userOrg = "hippy"
        licenses = ["Apache-2.0"] // 首次创建package则必须，否则选填。
        vcsUrl = "$gitUrl" // 首次创建package则必须，否则选填。
        version {
            name = "$versionDefined"
            desc = "Hippy library for Android"
        }
    }
}

// 构件文件和POM信息配置
publishing {
    publications {
        HippyPublication(MavenPublication) {
            artifact("$buildDir/outputs/aar/android-sdk-release.aar")
            groupId "$groupIdDefined"
            artifactId "$artifactIdDefined"
            version "$versionDefined"
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                // Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.implementation.allDependencies.each {
                    // Ensure dependencies such as fileTree are not included in the pom.
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}